(function(){const o=document.createElement("link").relList;if(o&&o.supports&&o.supports("modulepreload"))return;for(const i of document.querySelectorAll('link[rel="modulepreload"]'))c(i);new MutationObserver(i=>{for(const g of i)if(g.type==="childList")for(const h of g.addedNodes)h.tagName==="LINK"&&h.rel==="modulepreload"&&c(h)}).observe(document,{childList:!0,subtree:!0});function s(i){const g={};return i.integrity&&(g.integrity=i.integrity),i.referrerPolicy&&(g.referrerPolicy=i.referrerPolicy),i.crossOrigin==="use-credentials"?g.credentials="include":i.crossOrigin==="anonymous"?g.credentials="omit":g.credentials="same-origin",g}function c(i){if(i.ep)return;i.ep=!0;const g=s(i);fetch(i.href,g)}})();function getDefaultExportFromCjs(e){return e&&e.__esModule&&Object.prototype.hasOwnProperty.call(e,"default")?e.default:e}var jsxRuntime={exports:{}},reactJsxRuntime_production_min={},react={exports:{}},react_production_min={};/**
 * @license React
 * react.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var l$1=Symbol.for("react.element"),n$1=Symbol.for("react.portal"),p$3=Symbol.for("react.fragment"),q$1=Symbol.for("react.strict_mode"),r=Symbol.for("react.profiler"),t=Symbol.for("react.provider"),u=Symbol.for("react.context"),v$1=Symbol.for("react.forward_ref"),w$1=Symbol.for("react.suspense"),x=Symbol.for("react.memo"),y=Symbol.for("react.lazy"),z$1=Symbol.iterator;function A$1(e){return e===null||typeof e!="object"?null:(e=z$1&&e[z$1]||e["@@iterator"],typeof e=="function"?e:null)}var B$1={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},C$1=Object.assign,D$1={};function E$1(e,o,s){this.props=e,this.context=o,this.refs=D$1,this.updater=s||B$1}E$1.prototype.isReactComponent={};E$1.prototype.setState=function(e,o){if(typeof e!="object"&&typeof e!="function"&&e!=null)throw Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");this.updater.enqueueSetState(this,e,o,"setState")};E$1.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")};function F(){}F.prototype=E$1.prototype;function G$1(e,o,s){this.props=e,this.context=o,this.refs=D$1,this.updater=s||B$1}var H$1=G$1.prototype=new F;H$1.constructor=G$1;C$1(H$1,E$1.prototype);H$1.isPureReactComponent=!0;var I$1=Array.isArray,J=Object.prototype.hasOwnProperty,K$1={current:null},L$1={key:!0,ref:!0,__self:!0,__source:!0};function M$1(e,o,s){var c,i={},g=null,h=null;if(o!=null)for(c in o.ref!==void 0&&(h=o.ref),o.key!==void 0&&(g=""+o.key),o)J.call(o,c)&&!L$1.hasOwnProperty(c)&&(i[c]=o[c]);var $=arguments.length-2;if($===1)i.children=s;else if(1<$){for(var j=Array($),_=0;_<$;_++)j[_]=arguments[_+2];i.children=j}if(e&&e.defaultProps)for(c in $=e.defaultProps,$)i[c]===void 0&&(i[c]=$[c]);return{$$typeof:l$1,type:e,key:g,ref:h,props:i,_owner:K$1.current}}function N$1(e,o){return{$$typeof:l$1,type:e.type,key:o,ref:e.ref,props:e.props,_owner:e._owner}}function O$1(e){return typeof e=="object"&&e!==null&&e.$$typeof===l$1}function escape(e){var o={"=":"=0",":":"=2"};return"$"+e.replace(/[=:]/g,function(s){return o[s]})}var P$1=/\/+/g;function Q$1(e,o){return typeof e=="object"&&e!==null&&e.key!=null?escape(""+e.key):o.toString(36)}function R$1(e,o,s,c,i){var g=typeof e;(g==="undefined"||g==="boolean")&&(e=null);var h=!1;if(e===null)h=!0;else switch(g){case"string":case"number":h=!0;break;case"object":switch(e.$$typeof){case l$1:case n$1:h=!0}}if(h)return h=e,i=i(h),e=c===""?"."+Q$1(h,0):c,I$1(i)?(s="",e!=null&&(s=e.replace(P$1,"$&/")+"/"),R$1(i,o,s,"",function(_){return _})):i!=null&&(O$1(i)&&(i=N$1(i,s+(!i.key||h&&h.key===i.key?"":(""+i.key).replace(P$1,"$&/")+"/")+e)),o.push(i)),1;if(h=0,c=c===""?".":c+":",I$1(e))for(var $=0;$<e.length;$++){g=e[$];var j=c+Q$1(g,$);h+=R$1(g,o,s,j,i)}else if(j=A$1(e),typeof j=="function")for(e=j.call(e),$=0;!(g=e.next()).done;)g=g.value,j=c+Q$1(g,$++),h+=R$1(g,o,s,j,i);else if(g==="object")throw o=String(e),Error("Objects are not valid as a React child (found: "+(o==="[object Object]"?"object with keys {"+Object.keys(e).join(", ")+"}":o)+"). If you meant to render a collection of children, use an array instead.");return h}function S$1(e,o,s){if(e==null)return e;var c=[],i=0;return R$1(e,c,"","",function(g){return o.call(s,g,i++)}),c}function T$1(e){if(e._status===-1){var o=e._result;o=o(),o.then(function(s){(e._status===0||e._status===-1)&&(e._status=1,e._result=s)},function(s){(e._status===0||e._status===-1)&&(e._status=2,e._result=s)}),e._status===-1&&(e._status=0,e._result=o)}if(e._status===1)return e._result.default;throw e._result}var U$1={current:null},V$1={transition:null},W$1={ReactCurrentDispatcher:U$1,ReactCurrentBatchConfig:V$1,ReactCurrentOwner:K$1};function X$1(){throw Error("act(...) is not supported in production builds of React.")}react_production_min.Children={map:S$1,forEach:function(e,o,s){S$1(e,function(){o.apply(this,arguments)},s)},count:function(e){var o=0;return S$1(e,function(){o++}),o},toArray:function(e){return S$1(e,function(o){return o})||[]},only:function(e){if(!O$1(e))throw Error("React.Children.only expected to receive a single React element child.");return e}};react_production_min.Component=E$1;react_production_min.Fragment=p$3;react_production_min.Profiler=r;react_production_min.PureComponent=G$1;react_production_min.StrictMode=q$1;react_production_min.Suspense=w$1;react_production_min.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=W$1;react_production_min.act=X$1;react_production_min.cloneElement=function(e,o,s){if(e==null)throw Error("React.cloneElement(...): The argument must be a React element, but you passed "+e+".");var c=C$1({},e.props),i=e.key,g=e.ref,h=e._owner;if(o!=null){if(o.ref!==void 0&&(g=o.ref,h=K$1.current),o.key!==void 0&&(i=""+o.key),e.type&&e.type.defaultProps)var $=e.type.defaultProps;for(j in o)J.call(o,j)&&!L$1.hasOwnProperty(j)&&(c[j]=o[j]===void 0&&$!==void 0?$[j]:o[j])}var j=arguments.length-2;if(j===1)c.children=s;else if(1<j){$=Array(j);for(var _=0;_<j;_++)$[_]=arguments[_+2];c.children=$}return{$$typeof:l$1,type:e.type,key:i,ref:g,props:c,_owner:h}};react_production_min.createContext=function(e){return e={$$typeof:u,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null,_defaultValue:null,_globalName:null},e.Provider={$$typeof:t,_context:e},e.Consumer=e};react_production_min.createElement=M$1;react_production_min.createFactory=function(e){var o=M$1.bind(null,e);return o.type=e,o};react_production_min.createRef=function(){return{current:null}};react_production_min.forwardRef=function(e){return{$$typeof:v$1,render:e}};react_production_min.isValidElement=O$1;react_production_min.lazy=function(e){return{$$typeof:y,_payload:{_status:-1,_result:e},_init:T$1}};react_production_min.memo=function(e,o){return{$$typeof:x,type:e,compare:o===void 0?null:o}};react_production_min.startTransition=function(e){var o=V$1.transition;V$1.transition={};try{e()}finally{V$1.transition=o}};react_production_min.unstable_act=X$1;react_production_min.useCallback=function(e,o){return U$1.current.useCallback(e,o)};react_production_min.useContext=function(e){return U$1.current.useContext(e)};react_production_min.useDebugValue=function(){};react_production_min.useDeferredValue=function(e){return U$1.current.useDeferredValue(e)};react_production_min.useEffect=function(e,o){return U$1.current.useEffect(e,o)};react_production_min.useId=function(){return U$1.current.useId()};react_production_min.useImperativeHandle=function(e,o,s){return U$1.current.useImperativeHandle(e,o,s)};react_production_min.useInsertionEffect=function(e,o){return U$1.current.useInsertionEffect(e,o)};react_production_min.useLayoutEffect=function(e,o){return U$1.current.useLayoutEffect(e,o)};react_production_min.useMemo=function(e,o){return U$1.current.useMemo(e,o)};react_production_min.useReducer=function(e,o,s){return U$1.current.useReducer(e,o,s)};react_production_min.useRef=function(e){return U$1.current.useRef(e)};react_production_min.useState=function(e){return U$1.current.useState(e)};react_production_min.useSyncExternalStore=function(e,o,s){return U$1.current.useSyncExternalStore(e,o,s)};react_production_min.useTransition=function(){return U$1.current.useTransition()};react_production_min.version="18.3.1";react.exports=react_production_min;var reactExports=react.exports;const React=getDefaultExportFromCjs(reactExports);/**
 * @license React
 * react-jsx-runtime.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var f=reactExports,k=Symbol.for("react.element"),l=Symbol.for("react.fragment"),m$1=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p$2={key:!0,ref:!0,__self:!0,__source:!0};function q(e,o,s){var c,i={},g=null,h=null;s!==void 0&&(g=""+s),o.key!==void 0&&(g=""+o.key),o.ref!==void 0&&(h=o.ref);for(c in o)m$1.call(o,c)&&!p$2.hasOwnProperty(c)&&(i[c]=o[c]);if(e&&e.defaultProps)for(c in o=e.defaultProps,o)i[c]===void 0&&(i[c]=o[c]);return{$$typeof:k,type:e,key:g,ref:h,props:i,_owner:n.current}}reactJsxRuntime_production_min.Fragment=l;reactJsxRuntime_production_min.jsx=q;reactJsxRuntime_production_min.jsxs=q;jsxRuntime.exports=reactJsxRuntime_production_min;var jsxRuntimeExports=jsxRuntime.exports,client={},reactDom={exports:{}},reactDom_production_min={},scheduler={exports:{}},scheduler_production_min={};/**
 * @license React
 * scheduler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */(function(e){function o(bt,Rt){var Zt=bt.length;bt.push(Rt);e:for(;0<Zt;){var yt=Zt-1>>>1,Gt=bt[yt];if(0<i(Gt,Rt))bt[yt]=Rt,bt[Zt]=Gt,Zt=yt;else break e}}function s(bt){return bt.length===0?null:bt[0]}function c(bt){if(bt.length===0)return null;var Rt=bt[0],Zt=bt.pop();if(Zt!==Rt){bt[0]=Zt;e:for(var yt=0,Gt=bt.length,Yt=Gt>>>1;yt<Yt;){var Jt=2*(yt+1)-1,Tt=bt[Jt],vt=Jt+1,Nt=bt[vt];if(0>i(Tt,Zt))vt<Gt&&0>i(Nt,Tt)?(bt[yt]=Nt,bt[vt]=Zt,yt=vt):(bt[yt]=Tt,bt[Jt]=Zt,yt=Jt);else if(vt<Gt&&0>i(Nt,Zt))bt[yt]=Nt,bt[vt]=Zt,yt=vt;else break e}}return Rt}function i(bt,Rt){var Zt=bt.sortIndex-Rt.sortIndex;return Zt!==0?Zt:bt.id-Rt.id}if(typeof performance=="object"&&typeof performance.now=="function"){var g=performance;e.unstable_now=function(){return g.now()}}else{var h=Date,$=h.now();e.unstable_now=function(){return h.now()-$}}var j=[],_=[],_e=1,et=null,tt=3,at=!1,rt=!1,dt=!1,mt=typeof setTimeout=="function"?setTimeout:null,st=typeof clearTimeout=="function"?clearTimeout:null,ot=typeof setImmediate<"u"?setImmediate:null;typeof navigator<"u"&&navigator.scheduling!==void 0&&navigator.scheduling.isInputPending!==void 0&&navigator.scheduling.isInputPending.bind(navigator.scheduling);function nt(bt){for(var Rt=s(_);Rt!==null;){if(Rt.callback===null)c(_);else if(Rt.startTime<=bt)c(_),Rt.sortIndex=Rt.expirationTime,o(j,Rt);else break;Rt=s(_)}}function lt(bt){if(dt=!1,nt(bt),!rt)if(s(j)!==null)rt=!0,St(ct);else{var Rt=s(_);Rt!==null&&Xt(lt,Rt.startTime-bt)}}function ct(bt,Rt){rt=!1,dt&&(dt=!1,st(gt),gt=-1),at=!0;var Zt=tt;try{for(nt(Rt),et=s(j);et!==null&&(!(et.expirationTime>Rt)||bt&&!Wt());){var yt=et.callback;if(typeof yt=="function"){et.callback=null,tt=et.priorityLevel;var Gt=yt(et.expirationTime<=Rt);Rt=e.unstable_now(),typeof Gt=="function"?et.callback=Gt:et===s(j)&&c(j),nt(Rt)}else c(j);et=s(j)}if(et!==null)var Yt=!0;else{var Jt=s(_);Jt!==null&&Xt(lt,Jt.startTime-Rt),Yt=!1}return Yt}finally{et=null,tt=Zt,at=!1}}var it=!1,ut=null,gt=-1,pt=5,ft=-1;function Wt(){return!(e.unstable_now()-ft<pt)}function Vt(){if(ut!==null){var bt=e.unstable_now();ft=bt;var Rt=!0;try{Rt=ut(!0,bt)}finally{Rt?kt():(it=!1,ut=null)}}else it=!1}var kt;if(typeof ot=="function")kt=function(){ot(Vt)};else if(typeof MessageChannel<"u"){var ht=new MessageChannel,$t=ht.port2;ht.port1.onmessage=Vt,kt=function(){$t.postMessage(null)}}else kt=function(){mt(Vt,0)};function St(bt){ut=bt,it||(it=!0,kt())}function Xt(bt,Rt){gt=mt(function(){bt(e.unstable_now())},Rt)}e.unstable_IdlePriority=5,e.unstable_ImmediatePriority=1,e.unstable_LowPriority=4,e.unstable_NormalPriority=3,e.unstable_Profiling=null,e.unstable_UserBlockingPriority=2,e.unstable_cancelCallback=function(bt){bt.callback=null},e.unstable_continueExecution=function(){rt||at||(rt=!0,St(ct))},e.unstable_forceFrameRate=function(bt){0>bt||125<bt?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):pt=0<bt?Math.floor(1e3/bt):5},e.unstable_getCurrentPriorityLevel=function(){return tt},e.unstable_getFirstCallbackNode=function(){return s(j)},e.unstable_next=function(bt){switch(tt){case 1:case 2:case 3:var Rt=3;break;default:Rt=tt}var Zt=tt;tt=Rt;try{return bt()}finally{tt=Zt}},e.unstable_pauseExecution=function(){},e.unstable_requestPaint=function(){},e.unstable_runWithPriority=function(bt,Rt){switch(bt){case 1:case 2:case 3:case 4:case 5:break;default:bt=3}var Zt=tt;tt=bt;try{return Rt()}finally{tt=Zt}},e.unstable_scheduleCallback=function(bt,Rt,Zt){var yt=e.unstable_now();switch(typeof Zt=="object"&&Zt!==null?(Zt=Zt.delay,Zt=typeof Zt=="number"&&0<Zt?yt+Zt:yt):Zt=yt,bt){case 1:var Gt=-1;break;case 2:Gt=250;break;case 5:Gt=1073741823;break;case 4:Gt=1e4;break;default:Gt=5e3}return Gt=Zt+Gt,bt={id:_e++,callback:Rt,priorityLevel:bt,startTime:Zt,expirationTime:Gt,sortIndex:-1},Zt>yt?(bt.sortIndex=Zt,o(_,bt),s(j)===null&&bt===s(_)&&(dt?(st(gt),gt=-1):dt=!0,Xt(lt,Zt-yt))):(bt.sortIndex=Gt,o(j,bt),rt||at||(rt=!0,St(ct))),bt},e.unstable_shouldYield=Wt,e.unstable_wrapCallback=function(bt){var Rt=tt;return function(){var Zt=tt;tt=Rt;try{return bt.apply(this,arguments)}finally{tt=Zt}}}})(scheduler_production_min);scheduler.exports=scheduler_production_min;var schedulerExports=scheduler.exports;/**
 * @license React
 * react-dom.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var aa=reactExports,ca=schedulerExports;function p$1(e){for(var o="https://reactjs.org/docs/error-decoder.html?invariant="+e,s=1;s<arguments.length;s++)o+="&args[]="+encodeURIComponent(arguments[s]);return"Minified React error #"+e+"; visit "+o+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var da=new Set,ea={};function fa(e,o){ha(e,o),ha(e+"Capture",o)}function ha(e,o){for(ea[e]=o,e=0;e<o.length;e++)da.add(o[e])}var ia=!(typeof window>"u"||typeof window.document>"u"||typeof window.document.createElement>"u"),ja=Object.prototype.hasOwnProperty,ka=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,la={},ma={};function oa(e){return ja.call(ma,e)?!0:ja.call(la,e)?!1:ka.test(e)?ma[e]=!0:(la[e]=!0,!1)}function pa(e,o,s,c){if(s!==null&&s.type===0)return!1;switch(typeof o){case"function":case"symbol":return!0;case"boolean":return c?!1:s!==null?!s.acceptsBooleans:(e=e.toLowerCase().slice(0,5),e!=="data-"&&e!=="aria-");default:return!1}}function qa(e,o,s,c){if(o===null||typeof o>"u"||pa(e,o,s,c))return!0;if(c)return!1;if(s!==null)switch(s.type){case 3:return!o;case 4:return o===!1;case 5:return isNaN(o);case 6:return isNaN(o)||1>o}return!1}function v(e,o,s,c,i,g,h){this.acceptsBooleans=o===2||o===3||o===4,this.attributeName=c,this.attributeNamespace=i,this.mustUseProperty=s,this.propertyName=e,this.type=o,this.sanitizeURL=g,this.removeEmptyString=h}var z={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach(function(e){z[e]=new v(e,0,!1,e,null,!1,!1)});[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach(function(e){var o=e[0];z[o]=new v(o,1,!1,e[1],null,!1,!1)});["contentEditable","draggable","spellCheck","value"].forEach(function(e){z[e]=new v(e,2,!1,e.toLowerCase(),null,!1,!1)});["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach(function(e){z[e]=new v(e,2,!1,e,null,!1,!1)});"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach(function(e){z[e]=new v(e,3,!1,e.toLowerCase(),null,!1,!1)});["checked","multiple","muted","selected"].forEach(function(e){z[e]=new v(e,3,!0,e,null,!1,!1)});["capture","download"].forEach(function(e){z[e]=new v(e,4,!1,e,null,!1,!1)});["cols","rows","size","span"].forEach(function(e){z[e]=new v(e,6,!1,e,null,!1,!1)});["rowSpan","start"].forEach(function(e){z[e]=new v(e,5,!1,e.toLowerCase(),null,!1,!1)});var ra=/[\-:]([a-z])/g;function sa(e){return e[1].toUpperCase()}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach(function(e){var o=e.replace(ra,sa);z[o]=new v(o,1,!1,e,null,!1,!1)});"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach(function(e){var o=e.replace(ra,sa);z[o]=new v(o,1,!1,e,"http://www.w3.org/1999/xlink",!1,!1)});["xml:base","xml:lang","xml:space"].forEach(function(e){var o=e.replace(ra,sa);z[o]=new v(o,1,!1,e,"http://www.w3.org/XML/1998/namespace",!1,!1)});["tabIndex","crossOrigin"].forEach(function(e){z[e]=new v(e,1,!1,e.toLowerCase(),null,!1,!1)});z.xlinkHref=new v("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0,!1);["src","href","action","formAction"].forEach(function(e){z[e]=new v(e,1,!1,e.toLowerCase(),null,!0,!0)});function ta(e,o,s,c){var i=z.hasOwnProperty(o)?z[o]:null;(i!==null?i.type!==0:c||!(2<o.length)||o[0]!=="o"&&o[0]!=="O"||o[1]!=="n"&&o[1]!=="N")&&(qa(o,s,i,c)&&(s=null),c||i===null?oa(o)&&(s===null?e.removeAttribute(o):e.setAttribute(o,""+s)):i.mustUseProperty?e[i.propertyName]=s===null?i.type===3?!1:"":s:(o=i.attributeName,c=i.attributeNamespace,s===null?e.removeAttribute(o):(i=i.type,s=i===3||i===4&&s===!0?"":""+s,c?e.setAttributeNS(c,o,s):e.setAttribute(o,s))))}var ua=aa.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,va=Symbol.for("react.element"),wa=Symbol.for("react.portal"),ya=Symbol.for("react.fragment"),za=Symbol.for("react.strict_mode"),Aa=Symbol.for("react.profiler"),Ba=Symbol.for("react.provider"),Ca=Symbol.for("react.context"),Da=Symbol.for("react.forward_ref"),Ea=Symbol.for("react.suspense"),Fa=Symbol.for("react.suspense_list"),Ga=Symbol.for("react.memo"),Ha=Symbol.for("react.lazy"),Ia=Symbol.for("react.offscreen"),Ja=Symbol.iterator;function Ka(e){return e===null||typeof e!="object"?null:(e=Ja&&e[Ja]||e["@@iterator"],typeof e=="function"?e:null)}var A=Object.assign,La;function Ma(e){if(La===void 0)try{throw Error()}catch(s){var o=s.stack.trim().match(/\n( *(at )?)/);La=o&&o[1]||""}return`
`+La+e}var Na=!1;function Oa(e,o){if(!e||Na)return"";Na=!0;var s=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(o)if(o=function(){throw Error()},Object.defineProperty(o.prototype,"props",{set:function(){throw Error()}}),typeof Reflect=="object"&&Reflect.construct){try{Reflect.construct(o,[])}catch(_){var c=_}Reflect.construct(e,[],o)}else{try{o.call()}catch(_){c=_}e.call(o.prototype)}else{try{throw Error()}catch(_){c=_}e()}}catch(_){if(_&&c&&typeof _.stack=="string"){for(var i=_.stack.split(`
`),g=c.stack.split(`
`),h=i.length-1,$=g.length-1;1<=h&&0<=$&&i[h]!==g[$];)$--;for(;1<=h&&0<=$;h--,$--)if(i[h]!==g[$]){if(h!==1||$!==1)do if(h--,$--,0>$||i[h]!==g[$]){var j=`
`+i[h].replace(" at new "," at ");return e.displayName&&j.includes("<anonymous>")&&(j=j.replace("<anonymous>",e.displayName)),j}while(1<=h&&0<=$);break}}}finally{Na=!1,Error.prepareStackTrace=s}return(e=e?e.displayName||e.name:"")?Ma(e):""}function Pa(e){switch(e.tag){case 5:return Ma(e.type);case 16:return Ma("Lazy");case 13:return Ma("Suspense");case 19:return Ma("SuspenseList");case 0:case 2:case 15:return e=Oa(e.type,!1),e;case 11:return e=Oa(e.type.render,!1),e;case 1:return e=Oa(e.type,!0),e;default:return""}}function Qa(e){if(e==null)return null;if(typeof e=="function")return e.displayName||e.name||null;if(typeof e=="string")return e;switch(e){case ya:return"Fragment";case wa:return"Portal";case Aa:return"Profiler";case za:return"StrictMode";case Ea:return"Suspense";case Fa:return"SuspenseList"}if(typeof e=="object")switch(e.$$typeof){case Ca:return(e.displayName||"Context")+".Consumer";case Ba:return(e._context.displayName||"Context")+".Provider";case Da:var o=e.render;return e=e.displayName,e||(e=o.displayName||o.name||"",e=e!==""?"ForwardRef("+e+")":"ForwardRef"),e;case Ga:return o=e.displayName||null,o!==null?o:Qa(e.type)||"Memo";case Ha:o=e._payload,e=e._init;try{return Qa(e(o))}catch{}}return null}function Ra(e){var o=e.type;switch(e.tag){case 24:return"Cache";case 9:return(o.displayName||"Context")+".Consumer";case 10:return(o._context.displayName||"Context")+".Provider";case 18:return"DehydratedFragment";case 11:return e=o.render,e=e.displayName||e.name||"",o.displayName||(e!==""?"ForwardRef("+e+")":"ForwardRef");case 7:return"Fragment";case 5:return o;case 4:return"Portal";case 3:return"Root";case 6:return"Text";case 16:return Qa(o);case 8:return o===za?"StrictMode":"Mode";case 22:return"Offscreen";case 12:return"Profiler";case 21:return"Scope";case 13:return"Suspense";case 19:return"SuspenseList";case 25:return"TracingMarker";case 1:case 0:case 17:case 2:case 14:case 15:if(typeof o=="function")return o.displayName||o.name||null;if(typeof o=="string")return o}return null}function Sa(e){switch(typeof e){case"boolean":case"number":case"string":case"undefined":return e;case"object":return e;default:return""}}function Ta(e){var o=e.type;return(e=e.nodeName)&&e.toLowerCase()==="input"&&(o==="checkbox"||o==="radio")}function Ua(e){var o=Ta(e)?"checked":"value",s=Object.getOwnPropertyDescriptor(e.constructor.prototype,o),c=""+e[o];if(!e.hasOwnProperty(o)&&typeof s<"u"&&typeof s.get=="function"&&typeof s.set=="function"){var i=s.get,g=s.set;return Object.defineProperty(e,o,{configurable:!0,get:function(){return i.call(this)},set:function(h){c=""+h,g.call(this,h)}}),Object.defineProperty(e,o,{enumerable:s.enumerable}),{getValue:function(){return c},setValue:function(h){c=""+h},stopTracking:function(){e._valueTracker=null,delete e[o]}}}}function Va(e){e._valueTracker||(e._valueTracker=Ua(e))}function Wa(e){if(!e)return!1;var o=e._valueTracker;if(!o)return!0;var s=o.getValue(),c="";return e&&(c=Ta(e)?e.checked?"true":"false":e.value),e=c,e!==s?(o.setValue(e),!0):!1}function Xa(e){if(e=e||(typeof document<"u"?document:void 0),typeof e>"u")return null;try{return e.activeElement||e.body}catch{return e.body}}function Ya(e,o){var s=o.checked;return A({},o,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:s??e._wrapperState.initialChecked})}function Za(e,o){var s=o.defaultValue==null?"":o.defaultValue,c=o.checked!=null?o.checked:o.defaultChecked;s=Sa(o.value!=null?o.value:s),e._wrapperState={initialChecked:c,initialValue:s,controlled:o.type==="checkbox"||o.type==="radio"?o.checked!=null:o.value!=null}}function ab(e,o){o=o.checked,o!=null&&ta(e,"checked",o,!1)}function bb(e,o){ab(e,o);var s=Sa(o.value),c=o.type;if(s!=null)c==="number"?(s===0&&e.value===""||e.value!=s)&&(e.value=""+s):e.value!==""+s&&(e.value=""+s);else if(c==="submit"||c==="reset"){e.removeAttribute("value");return}o.hasOwnProperty("value")?cb(e,o.type,s):o.hasOwnProperty("defaultValue")&&cb(e,o.type,Sa(o.defaultValue)),o.checked==null&&o.defaultChecked!=null&&(e.defaultChecked=!!o.defaultChecked)}function db(e,o,s){if(o.hasOwnProperty("value")||o.hasOwnProperty("defaultValue")){var c=o.type;if(!(c!=="submit"&&c!=="reset"||o.value!==void 0&&o.value!==null))return;o=""+e._wrapperState.initialValue,s||o===e.value||(e.value=o),e.defaultValue=o}s=e.name,s!==""&&(e.name=""),e.defaultChecked=!!e._wrapperState.initialChecked,s!==""&&(e.name=s)}function cb(e,o,s){(o!=="number"||Xa(e.ownerDocument)!==e)&&(s==null?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+s&&(e.defaultValue=""+s))}var eb=Array.isArray;function fb(e,o,s,c){if(e=e.options,o){o={};for(var i=0;i<s.length;i++)o["$"+s[i]]=!0;for(s=0;s<e.length;s++)i=o.hasOwnProperty("$"+e[s].value),e[s].selected!==i&&(e[s].selected=i),i&&c&&(e[s].defaultSelected=!0)}else{for(s=""+Sa(s),o=null,i=0;i<e.length;i++){if(e[i].value===s){e[i].selected=!0,c&&(e[i].defaultSelected=!0);return}o!==null||e[i].disabled||(o=e[i])}o!==null&&(o.selected=!0)}}function gb(e,o){if(o.dangerouslySetInnerHTML!=null)throw Error(p$1(91));return A({},o,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function hb(e,o){var s=o.value;if(s==null){if(s=o.children,o=o.defaultValue,s!=null){if(o!=null)throw Error(p$1(92));if(eb(s)){if(1<s.length)throw Error(p$1(93));s=s[0]}o=s}o==null&&(o=""),s=o}e._wrapperState={initialValue:Sa(s)}}function ib(e,o){var s=Sa(o.value),c=Sa(o.defaultValue);s!=null&&(s=""+s,s!==e.value&&(e.value=s),o.defaultValue==null&&e.defaultValue!==s&&(e.defaultValue=s)),c!=null&&(e.defaultValue=""+c)}function jb(e){var o=e.textContent;o===e._wrapperState.initialValue&&o!==""&&o!==null&&(e.value=o)}function kb(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function lb(e,o){return e==null||e==="http://www.w3.org/1999/xhtml"?kb(o):e==="http://www.w3.org/2000/svg"&&o==="foreignObject"?"http://www.w3.org/1999/xhtml":e}var mb,nb=function(e){return typeof MSApp<"u"&&MSApp.execUnsafeLocalFunction?function(o,s,c,i){MSApp.execUnsafeLocalFunction(function(){return e(o,s,c,i)})}:e}(function(e,o){if(e.namespaceURI!=="http://www.w3.org/2000/svg"||"innerHTML"in e)e.innerHTML=o;else{for(mb=mb||document.createElement("div"),mb.innerHTML="<svg>"+o.valueOf().toString()+"</svg>",o=mb.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;o.firstChild;)e.appendChild(o.firstChild)}});function ob(e,o){if(o){var s=e.firstChild;if(s&&s===e.lastChild&&s.nodeType===3){s.nodeValue=o;return}}e.textContent=o}var pb={animationIterationCount:!0,aspectRatio:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},qb=["Webkit","ms","Moz","O"];Object.keys(pb).forEach(function(e){qb.forEach(function(o){o=o+e.charAt(0).toUpperCase()+e.substring(1),pb[o]=pb[e]})});function rb(e,o,s){return o==null||typeof o=="boolean"||o===""?"":s||typeof o!="number"||o===0||pb.hasOwnProperty(e)&&pb[e]?(""+o).trim():o+"px"}function sb(e,o){e=e.style;for(var s in o)if(o.hasOwnProperty(s)){var c=s.indexOf("--")===0,i=rb(s,o[s],c);s==="float"&&(s="cssFloat"),c?e.setProperty(s,i):e[s]=i}}var tb=A({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function ub(e,o){if(o){if(tb[e]&&(o.children!=null||o.dangerouslySetInnerHTML!=null))throw Error(p$1(137,e));if(o.dangerouslySetInnerHTML!=null){if(o.children!=null)throw Error(p$1(60));if(typeof o.dangerouslySetInnerHTML!="object"||!("__html"in o.dangerouslySetInnerHTML))throw Error(p$1(61))}if(o.style!=null&&typeof o.style!="object")throw Error(p$1(62))}}function vb(e,o){if(e.indexOf("-")===-1)return typeof o.is=="string";switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}var wb=null;function xb(e){return e=e.target||e.srcElement||window,e.correspondingUseElement&&(e=e.correspondingUseElement),e.nodeType===3?e.parentNode:e}var yb=null,zb=null,Ab=null;function Bb(e){if(e=Cb(e)){if(typeof yb!="function")throw Error(p$1(280));var o=e.stateNode;o&&(o=Db(o),yb(e.stateNode,e.type,o))}}function Eb(e){zb?Ab?Ab.push(e):Ab=[e]:zb=e}function Fb(){if(zb){var e=zb,o=Ab;if(Ab=zb=null,Bb(e),o)for(e=0;e<o.length;e++)Bb(o[e])}}function Gb(e,o){return e(o)}function Hb(){}var Ib=!1;function Jb(e,o,s){if(Ib)return e(o,s);Ib=!0;try{return Gb(e,o,s)}finally{Ib=!1,(zb!==null||Ab!==null)&&(Hb(),Fb())}}function Kb(e,o){var s=e.stateNode;if(s===null)return null;var c=Db(s);if(c===null)return null;s=c[o];e:switch(o){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(c=!c.disabled)||(e=e.type,c=!(e==="button"||e==="input"||e==="select"||e==="textarea")),e=!c;break e;default:e=!1}if(e)return null;if(s&&typeof s!="function")throw Error(p$1(231,o,typeof s));return s}var Lb=!1;if(ia)try{var Mb={};Object.defineProperty(Mb,"passive",{get:function(){Lb=!0}}),window.addEventListener("test",Mb,Mb),window.removeEventListener("test",Mb,Mb)}catch{Lb=!1}function Nb(e,o,s,c,i,g,h,$,j){var _=Array.prototype.slice.call(arguments,3);try{o.apply(s,_)}catch(_e){this.onError(_e)}}var Ob=!1,Pb=null,Qb=!1,Rb=null,Sb={onError:function(e){Ob=!0,Pb=e}};function Tb(e,o,s,c,i,g,h,$,j){Ob=!1,Pb=null,Nb.apply(Sb,arguments)}function Ub(e,o,s,c,i,g,h,$,j){if(Tb.apply(this,arguments),Ob){if(Ob){var _=Pb;Ob=!1,Pb=null}else throw Error(p$1(198));Qb||(Qb=!0,Rb=_)}}function Vb(e){var o=e,s=e;if(e.alternate)for(;o.return;)o=o.return;else{e=o;do o=e,o.flags&4098&&(s=o.return),e=o.return;while(e)}return o.tag===3?s:null}function Wb(e){if(e.tag===13){var o=e.memoizedState;if(o===null&&(e=e.alternate,e!==null&&(o=e.memoizedState)),o!==null)return o.dehydrated}return null}function Xb(e){if(Vb(e)!==e)throw Error(p$1(188))}function Yb(e){var o=e.alternate;if(!o){if(o=Vb(e),o===null)throw Error(p$1(188));return o!==e?null:e}for(var s=e,c=o;;){var i=s.return;if(i===null)break;var g=i.alternate;if(g===null){if(c=i.return,c!==null){s=c;continue}break}if(i.child===g.child){for(g=i.child;g;){if(g===s)return Xb(i),e;if(g===c)return Xb(i),o;g=g.sibling}throw Error(p$1(188))}if(s.return!==c.return)s=i,c=g;else{for(var h=!1,$=i.child;$;){if($===s){h=!0,s=i,c=g;break}if($===c){h=!0,c=i,s=g;break}$=$.sibling}if(!h){for($=g.child;$;){if($===s){h=!0,s=g,c=i;break}if($===c){h=!0,c=g,s=i;break}$=$.sibling}if(!h)throw Error(p$1(189))}}if(s.alternate!==c)throw Error(p$1(190))}if(s.tag!==3)throw Error(p$1(188));return s.stateNode.current===s?e:o}function Zb(e){return e=Yb(e),e!==null?$b(e):null}function $b(e){if(e.tag===5||e.tag===6)return e;for(e=e.child;e!==null;){var o=$b(e);if(o!==null)return o;e=e.sibling}return null}var ac=ca.unstable_scheduleCallback,bc=ca.unstable_cancelCallback,cc=ca.unstable_shouldYield,dc=ca.unstable_requestPaint,B=ca.unstable_now,ec=ca.unstable_getCurrentPriorityLevel,fc=ca.unstable_ImmediatePriority,gc=ca.unstable_UserBlockingPriority,hc=ca.unstable_NormalPriority,ic=ca.unstable_LowPriority,jc=ca.unstable_IdlePriority,kc=null,lc=null;function mc(e){if(lc&&typeof lc.onCommitFiberRoot=="function")try{lc.onCommitFiberRoot(kc,e,void 0,(e.current.flags&128)===128)}catch{}}var oc=Math.clz32?Math.clz32:nc,pc=Math.log,qc=Math.LN2;function nc(e){return e>>>=0,e===0?32:31-(pc(e)/qc|0)|0}var rc=64,sc=4194304;function tc(e){switch(e&-e){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return e&4194240;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return e&130023424;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 1073741824;default:return e}}function uc(e,o){var s=e.pendingLanes;if(s===0)return 0;var c=0,i=e.suspendedLanes,g=e.pingedLanes,h=s&268435455;if(h!==0){var $=h&~i;$!==0?c=tc($):(g&=h,g!==0&&(c=tc(g)))}else h=s&~i,h!==0?c=tc(h):g!==0&&(c=tc(g));if(c===0)return 0;if(o!==0&&o!==c&&!(o&i)&&(i=c&-c,g=o&-o,i>=g||i===16&&(g&4194240)!==0))return o;if(c&4&&(c|=s&16),o=e.entangledLanes,o!==0)for(e=e.entanglements,o&=c;0<o;)s=31-oc(o),i=1<<s,c|=e[s],o&=~i;return c}function vc(e,o){switch(e){case 1:case 2:case 4:return o+250;case 8:case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return o+5e3;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return-1;case 134217728:case 268435456:case 536870912:case 1073741824:return-1;default:return-1}}function wc(e,o){for(var s=e.suspendedLanes,c=e.pingedLanes,i=e.expirationTimes,g=e.pendingLanes;0<g;){var h=31-oc(g),$=1<<h,j=i[h];j===-1?(!($&s)||$&c)&&(i[h]=vc($,o)):j<=o&&(e.expiredLanes|=$),g&=~$}}function xc(e){return e=e.pendingLanes&-1073741825,e!==0?e:e&1073741824?1073741824:0}function yc(){var e=rc;return rc<<=1,!(rc&4194240)&&(rc=64),e}function zc(e){for(var o=[],s=0;31>s;s++)o.push(e);return o}function Ac(e,o,s){e.pendingLanes|=o,o!==536870912&&(e.suspendedLanes=0,e.pingedLanes=0),e=e.eventTimes,o=31-oc(o),e[o]=s}function Bc(e,o){var s=e.pendingLanes&~o;e.pendingLanes=o,e.suspendedLanes=0,e.pingedLanes=0,e.expiredLanes&=o,e.mutableReadLanes&=o,e.entangledLanes&=o,o=e.entanglements;var c=e.eventTimes;for(e=e.expirationTimes;0<s;){var i=31-oc(s),g=1<<i;o[i]=0,c[i]=-1,e[i]=-1,s&=~g}}function Cc(e,o){var s=e.entangledLanes|=o;for(e=e.entanglements;s;){var c=31-oc(s),i=1<<c;i&o|e[c]&o&&(e[c]|=o),s&=~i}}var C=0;function Dc(e){return e&=-e,1<e?4<e?e&268435455?16:536870912:4:1}var Ec,Fc,Gc,Hc,Ic,Jc=!1,Kc=[],Lc=null,Mc=null,Nc=null,Oc=new Map,Pc=new Map,Qc=[],Rc="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");function Sc(e,o){switch(e){case"focusin":case"focusout":Lc=null;break;case"dragenter":case"dragleave":Mc=null;break;case"mouseover":case"mouseout":Nc=null;break;case"pointerover":case"pointerout":Oc.delete(o.pointerId);break;case"gotpointercapture":case"lostpointercapture":Pc.delete(o.pointerId)}}function Tc(e,o,s,c,i,g){return e===null||e.nativeEvent!==g?(e={blockedOn:o,domEventName:s,eventSystemFlags:c,nativeEvent:g,targetContainers:[i]},o!==null&&(o=Cb(o),o!==null&&Fc(o)),e):(e.eventSystemFlags|=c,o=e.targetContainers,i!==null&&o.indexOf(i)===-1&&o.push(i),e)}function Uc(e,o,s,c,i){switch(o){case"focusin":return Lc=Tc(Lc,e,o,s,c,i),!0;case"dragenter":return Mc=Tc(Mc,e,o,s,c,i),!0;case"mouseover":return Nc=Tc(Nc,e,o,s,c,i),!0;case"pointerover":var g=i.pointerId;return Oc.set(g,Tc(Oc.get(g)||null,e,o,s,c,i)),!0;case"gotpointercapture":return g=i.pointerId,Pc.set(g,Tc(Pc.get(g)||null,e,o,s,c,i)),!0}return!1}function Vc(e){var o=Wc(e.target);if(o!==null){var s=Vb(o);if(s!==null){if(o=s.tag,o===13){if(o=Wb(s),o!==null){e.blockedOn=o,Ic(e.priority,function(){Gc(s)});return}}else if(o===3&&s.stateNode.current.memoizedState.isDehydrated){e.blockedOn=s.tag===3?s.stateNode.containerInfo:null;return}}}e.blockedOn=null}function Xc(e){if(e.blockedOn!==null)return!1;for(var o=e.targetContainers;0<o.length;){var s=Yc(e.domEventName,e.eventSystemFlags,o[0],e.nativeEvent);if(s===null){s=e.nativeEvent;var c=new s.constructor(s.type,s);wb=c,s.target.dispatchEvent(c),wb=null}else return o=Cb(s),o!==null&&Fc(o),e.blockedOn=s,!1;o.shift()}return!0}function Zc(e,o,s){Xc(e)&&s.delete(o)}function $c(){Jc=!1,Lc!==null&&Xc(Lc)&&(Lc=null),Mc!==null&&Xc(Mc)&&(Mc=null),Nc!==null&&Xc(Nc)&&(Nc=null),Oc.forEach(Zc),Pc.forEach(Zc)}function ad(e,o){e.blockedOn===o&&(e.blockedOn=null,Jc||(Jc=!0,ca.unstable_scheduleCallback(ca.unstable_NormalPriority,$c)))}function bd(e){function o(i){return ad(i,e)}if(0<Kc.length){ad(Kc[0],e);for(var s=1;s<Kc.length;s++){var c=Kc[s];c.blockedOn===e&&(c.blockedOn=null)}}for(Lc!==null&&ad(Lc,e),Mc!==null&&ad(Mc,e),Nc!==null&&ad(Nc,e),Oc.forEach(o),Pc.forEach(o),s=0;s<Qc.length;s++)c=Qc[s],c.blockedOn===e&&(c.blockedOn=null);for(;0<Qc.length&&(s=Qc[0],s.blockedOn===null);)Vc(s),s.blockedOn===null&&Qc.shift()}var cd=ua.ReactCurrentBatchConfig,dd=!0;function ed(e,o,s,c){var i=C,g=cd.transition;cd.transition=null;try{C=1,fd(e,o,s,c)}finally{C=i,cd.transition=g}}function gd(e,o,s,c){var i=C,g=cd.transition;cd.transition=null;try{C=4,fd(e,o,s,c)}finally{C=i,cd.transition=g}}function fd(e,o,s,c){if(dd){var i=Yc(e,o,s,c);if(i===null)hd(e,o,c,id,s),Sc(e,c);else if(Uc(i,e,o,s,c))c.stopPropagation();else if(Sc(e,c),o&4&&-1<Rc.indexOf(e)){for(;i!==null;){var g=Cb(i);if(g!==null&&Ec(g),g=Yc(e,o,s,c),g===null&&hd(e,o,c,id,s),g===i)break;i=g}i!==null&&c.stopPropagation()}else hd(e,o,c,null,s)}}var id=null;function Yc(e,o,s,c){if(id=null,e=xb(c),e=Wc(e),e!==null)if(o=Vb(e),o===null)e=null;else if(s=o.tag,s===13){if(e=Wb(o),e!==null)return e;e=null}else if(s===3){if(o.stateNode.current.memoizedState.isDehydrated)return o.tag===3?o.stateNode.containerInfo:null;e=null}else o!==e&&(e=null);return id=e,null}function jd(e){switch(e){case"cancel":case"click":case"close":case"contextmenu":case"copy":case"cut":case"auxclick":case"dblclick":case"dragend":case"dragstart":case"drop":case"focusin":case"focusout":case"input":case"invalid":case"keydown":case"keypress":case"keyup":case"mousedown":case"mouseup":case"paste":case"pause":case"play":case"pointercancel":case"pointerdown":case"pointerup":case"ratechange":case"reset":case"resize":case"seeked":case"submit":case"touchcancel":case"touchend":case"touchstart":case"volumechange":case"change":case"selectionchange":case"textInput":case"compositionstart":case"compositionend":case"compositionupdate":case"beforeblur":case"afterblur":case"beforeinput":case"blur":case"fullscreenchange":case"focus":case"hashchange":case"popstate":case"select":case"selectstart":return 1;case"drag":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"mousemove":case"mouseout":case"mouseover":case"pointermove":case"pointerout":case"pointerover":case"scroll":case"toggle":case"touchmove":case"wheel":case"mouseenter":case"mouseleave":case"pointerenter":case"pointerleave":return 4;case"message":switch(ec()){case fc:return 1;case gc:return 4;case hc:case ic:return 16;case jc:return 536870912;default:return 16}default:return 16}}var kd=null,ld=null,md=null;function nd(){if(md)return md;var e,o=ld,s=o.length,c,i="value"in kd?kd.value:kd.textContent,g=i.length;for(e=0;e<s&&o[e]===i[e];e++);var h=s-e;for(c=1;c<=h&&o[s-c]===i[g-c];c++);return md=i.slice(e,1<c?1-c:void 0)}function od(e){var o=e.keyCode;return"charCode"in e?(e=e.charCode,e===0&&o===13&&(e=13)):e=o,e===10&&(e=13),32<=e||e===13?e:0}function pd(){return!0}function qd(){return!1}function rd(e){function o(s,c,i,g,h){this._reactName=s,this._targetInst=i,this.type=c,this.nativeEvent=g,this.target=h,this.currentTarget=null;for(var $ in e)e.hasOwnProperty($)&&(s=e[$],this[$]=s?s(g):g[$]);return this.isDefaultPrevented=(g.defaultPrevented!=null?g.defaultPrevented:g.returnValue===!1)?pd:qd,this.isPropagationStopped=qd,this}return A(o.prototype,{preventDefault:function(){this.defaultPrevented=!0;var s=this.nativeEvent;s&&(s.preventDefault?s.preventDefault():typeof s.returnValue!="unknown"&&(s.returnValue=!1),this.isDefaultPrevented=pd)},stopPropagation:function(){var s=this.nativeEvent;s&&(s.stopPropagation?s.stopPropagation():typeof s.cancelBubble!="unknown"&&(s.cancelBubble=!0),this.isPropagationStopped=pd)},persist:function(){},isPersistent:pd}),o}var sd={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},td=rd(sd),ud=A({},sd,{view:0,detail:0}),vd=rd(ud),wd,xd,yd,Ad=A({},ud,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:zd,button:0,buttons:0,relatedTarget:function(e){return e.relatedTarget===void 0?e.fromElement===e.srcElement?e.toElement:e.fromElement:e.relatedTarget},movementX:function(e){return"movementX"in e?e.movementX:(e!==yd&&(yd&&e.type==="mousemove"?(wd=e.screenX-yd.screenX,xd=e.screenY-yd.screenY):xd=wd=0,yd=e),wd)},movementY:function(e){return"movementY"in e?e.movementY:xd}}),Bd=rd(Ad),Cd=A({},Ad,{dataTransfer:0}),Dd=rd(Cd),Ed=A({},ud,{relatedTarget:0}),Fd=rd(Ed),Gd=A({},sd,{animationName:0,elapsedTime:0,pseudoElement:0}),Hd=rd(Gd),Id=A({},sd,{clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}}),Jd=rd(Id),Kd=A({},sd,{data:0}),Ld=rd(Kd),Md={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},Nd={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},Od={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function Pd(e){var o=this.nativeEvent;return o.getModifierState?o.getModifierState(e):(e=Od[e])?!!o[e]:!1}function zd(){return Pd}var Qd=A({},ud,{key:function(e){if(e.key){var o=Md[e.key]||e.key;if(o!=="Unidentified")return o}return e.type==="keypress"?(e=od(e),e===13?"Enter":String.fromCharCode(e)):e.type==="keydown"||e.type==="keyup"?Nd[e.keyCode]||"Unidentified":""},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:zd,charCode:function(e){return e.type==="keypress"?od(e):0},keyCode:function(e){return e.type==="keydown"||e.type==="keyup"?e.keyCode:0},which:function(e){return e.type==="keypress"?od(e):e.type==="keydown"||e.type==="keyup"?e.keyCode:0}}),Rd=rd(Qd),Sd=A({},Ad,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0}),Td=rd(Sd),Ud=A({},ud,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:zd}),Vd=rd(Ud),Wd=A({},sd,{propertyName:0,elapsedTime:0,pseudoElement:0}),Xd=rd(Wd),Yd=A({},Ad,{deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:0,deltaMode:0}),Zd=rd(Yd),$d=[9,13,27,32],ae=ia&&"CompositionEvent"in window,be=null;ia&&"documentMode"in document&&(be=document.documentMode);var ce=ia&&"TextEvent"in window&&!be,de=ia&&(!ae||be&&8<be&&11>=be),ee=" ",fe=!1;function ge(e,o){switch(e){case"keyup":return $d.indexOf(o.keyCode)!==-1;case"keydown":return o.keyCode!==229;case"keypress":case"mousedown":case"focusout":return!0;default:return!1}}function he(e){return e=e.detail,typeof e=="object"&&"data"in e?e.data:null}var ie=!1;function je(e,o){switch(e){case"compositionend":return he(o);case"keypress":return o.which!==32?null:(fe=!0,ee);case"textInput":return e=o.data,e===ee&&fe?null:e;default:return null}}function ke(e,o){if(ie)return e==="compositionend"||!ae&&ge(e,o)?(e=nd(),md=ld=kd=null,ie=!1,e):null;switch(e){case"paste":return null;case"keypress":if(!(o.ctrlKey||o.altKey||o.metaKey)||o.ctrlKey&&o.altKey){if(o.char&&1<o.char.length)return o.char;if(o.which)return String.fromCharCode(o.which)}return null;case"compositionend":return de&&o.locale!=="ko"?null:o.data;default:return null}}var le={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function me(e){var o=e&&e.nodeName&&e.nodeName.toLowerCase();return o==="input"?!!le[e.type]:o==="textarea"}function ne(e,o,s,c){Eb(c),o=oe(o,"onChange"),0<o.length&&(s=new td("onChange","change",null,s,c),e.push({event:s,listeners:o}))}var pe=null,qe=null;function re(e){se(e,0)}function te(e){var o=ue(e);if(Wa(o))return e}function ve(e,o){if(e==="change")return o}var we=!1;if(ia){var xe;if(ia){var ye="oninput"in document;if(!ye){var ze=document.createElement("div");ze.setAttribute("oninput","return;"),ye=typeof ze.oninput=="function"}xe=ye}else xe=!1;we=xe&&(!document.documentMode||9<document.documentMode)}function Ae(){pe&&(pe.detachEvent("onpropertychange",Be),qe=pe=null)}function Be(e){if(e.propertyName==="value"&&te(qe)){var o=[];ne(o,qe,e,xb(e)),Jb(re,o)}}function Ce(e,o,s){e==="focusin"?(Ae(),pe=o,qe=s,pe.attachEvent("onpropertychange",Be)):e==="focusout"&&Ae()}function De(e){if(e==="selectionchange"||e==="keyup"||e==="keydown")return te(qe)}function Ee(e,o){if(e==="click")return te(o)}function Fe(e,o){if(e==="input"||e==="change")return te(o)}function Ge(e,o){return e===o&&(e!==0||1/e===1/o)||e!==e&&o!==o}var He=typeof Object.is=="function"?Object.is:Ge;function Ie(e,o){if(He(e,o))return!0;if(typeof e!="object"||e===null||typeof o!="object"||o===null)return!1;var s=Object.keys(e),c=Object.keys(o);if(s.length!==c.length)return!1;for(c=0;c<s.length;c++){var i=s[c];if(!ja.call(o,i)||!He(e[i],o[i]))return!1}return!0}function Je(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function Ke(e,o){var s=Je(e);e=0;for(var c;s;){if(s.nodeType===3){if(c=e+s.textContent.length,e<=o&&c>=o)return{node:s,offset:o-e};e=c}e:{for(;s;){if(s.nextSibling){s=s.nextSibling;break e}s=s.parentNode}s=void 0}s=Je(s)}}function Le(e,o){return e&&o?e===o?!0:e&&e.nodeType===3?!1:o&&o.nodeType===3?Le(e,o.parentNode):"contains"in e?e.contains(o):e.compareDocumentPosition?!!(e.compareDocumentPosition(o)&16):!1:!1}function Me(){for(var e=window,o=Xa();o instanceof e.HTMLIFrameElement;){try{var s=typeof o.contentWindow.location.href=="string"}catch{s=!1}if(s)e=o.contentWindow;else break;o=Xa(e.document)}return o}function Ne(e){var o=e&&e.nodeName&&e.nodeName.toLowerCase();return o&&(o==="input"&&(e.type==="text"||e.type==="search"||e.type==="tel"||e.type==="url"||e.type==="password")||o==="textarea"||e.contentEditable==="true")}function Oe(e){var o=Me(),s=e.focusedElem,c=e.selectionRange;if(o!==s&&s&&s.ownerDocument&&Le(s.ownerDocument.documentElement,s)){if(c!==null&&Ne(s)){if(o=c.start,e=c.end,e===void 0&&(e=o),"selectionStart"in s)s.selectionStart=o,s.selectionEnd=Math.min(e,s.value.length);else if(e=(o=s.ownerDocument||document)&&o.defaultView||window,e.getSelection){e=e.getSelection();var i=s.textContent.length,g=Math.min(c.start,i);c=c.end===void 0?g:Math.min(c.end,i),!e.extend&&g>c&&(i=c,c=g,g=i),i=Ke(s,g);var h=Ke(s,c);i&&h&&(e.rangeCount!==1||e.anchorNode!==i.node||e.anchorOffset!==i.offset||e.focusNode!==h.node||e.focusOffset!==h.offset)&&(o=o.createRange(),o.setStart(i.node,i.offset),e.removeAllRanges(),g>c?(e.addRange(o),e.extend(h.node,h.offset)):(o.setEnd(h.node,h.offset),e.addRange(o)))}}for(o=[],e=s;e=e.parentNode;)e.nodeType===1&&o.push({element:e,left:e.scrollLeft,top:e.scrollTop});for(typeof s.focus=="function"&&s.focus(),s=0;s<o.length;s++)e=o[s],e.element.scrollLeft=e.left,e.element.scrollTop=e.top}}var Pe=ia&&"documentMode"in document&&11>=document.documentMode,Qe=null,Re=null,Se=null,Te=!1;function Ue(e,o,s){var c=s.window===s?s.document:s.nodeType===9?s:s.ownerDocument;Te||Qe==null||Qe!==Xa(c)||(c=Qe,"selectionStart"in c&&Ne(c)?c={start:c.selectionStart,end:c.selectionEnd}:(c=(c.ownerDocument&&c.ownerDocument.defaultView||window).getSelection(),c={anchorNode:c.anchorNode,anchorOffset:c.anchorOffset,focusNode:c.focusNode,focusOffset:c.focusOffset}),Se&&Ie(Se,c)||(Se=c,c=oe(Re,"onSelect"),0<c.length&&(o=new td("onSelect","select",null,o,s),e.push({event:o,listeners:c}),o.target=Qe)))}function Ve(e,o){var s={};return s[e.toLowerCase()]=o.toLowerCase(),s["Webkit"+e]="webkit"+o,s["Moz"+e]="moz"+o,s}var We={animationend:Ve("Animation","AnimationEnd"),animationiteration:Ve("Animation","AnimationIteration"),animationstart:Ve("Animation","AnimationStart"),transitionend:Ve("Transition","TransitionEnd")},Xe={},Ye={};ia&&(Ye=document.createElement("div").style,"AnimationEvent"in window||(delete We.animationend.animation,delete We.animationiteration.animation,delete We.animationstart.animation),"TransitionEvent"in window||delete We.transitionend.transition);function Ze(e){if(Xe[e])return Xe[e];if(!We[e])return e;var o=We[e],s;for(s in o)if(o.hasOwnProperty(s)&&s in Ye)return Xe[e]=o[s];return e}var $e=Ze("animationend"),af=Ze("animationiteration"),bf=Ze("animationstart"),cf=Ze("transitionend"),df=new Map,ef="abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel".split(" ");function ff(e,o){df.set(e,o),fa(o,[e])}for(var gf=0;gf<ef.length;gf++){var hf=ef[gf],jf=hf.toLowerCase(),kf=hf[0].toUpperCase()+hf.slice(1);ff(jf,"on"+kf)}ff($e,"onAnimationEnd");ff(af,"onAnimationIteration");ff(bf,"onAnimationStart");ff("dblclick","onDoubleClick");ff("focusin","onFocus");ff("focusout","onBlur");ff(cf,"onTransitionEnd");ha("onMouseEnter",["mouseout","mouseover"]);ha("onMouseLeave",["mouseout","mouseover"]);ha("onPointerEnter",["pointerout","pointerover"]);ha("onPointerLeave",["pointerout","pointerover"]);fa("onChange","change click focusin focusout input keydown keyup selectionchange".split(" "));fa("onSelect","focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" "));fa("onBeforeInput",["compositionend","keypress","textInput","paste"]);fa("onCompositionEnd","compositionend focusout keydown keypress keyup mousedown".split(" "));fa("onCompositionStart","compositionstart focusout keydown keypress keyup mousedown".split(" "));fa("onCompositionUpdate","compositionupdate focusout keydown keypress keyup mousedown".split(" "));var lf="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),mf=new Set("cancel close invalid load scroll toggle".split(" ").concat(lf));function nf(e,o,s){var c=e.type||"unknown-event";e.currentTarget=s,Ub(c,o,void 0,e),e.currentTarget=null}function se(e,o){o=(o&4)!==0;for(var s=0;s<e.length;s++){var c=e[s],i=c.event;c=c.listeners;e:{var g=void 0;if(o)for(var h=c.length-1;0<=h;h--){var $=c[h],j=$.instance,_=$.currentTarget;if($=$.listener,j!==g&&i.isPropagationStopped())break e;nf(i,$,_),g=j}else for(h=0;h<c.length;h++){if($=c[h],j=$.instance,_=$.currentTarget,$=$.listener,j!==g&&i.isPropagationStopped())break e;nf(i,$,_),g=j}}}if(Qb)throw e=Rb,Qb=!1,Rb=null,e}function D(e,o){var s=o[of];s===void 0&&(s=o[of]=new Set);var c=e+"__bubble";s.has(c)||(pf(o,e,2,!1),s.add(c))}function qf(e,o,s){var c=0;o&&(c|=4),pf(s,e,c,o)}var rf="_reactListening"+Math.random().toString(36).slice(2);function sf(e){if(!e[rf]){e[rf]=!0,da.forEach(function(s){s!=="selectionchange"&&(mf.has(s)||qf(s,!1,e),qf(s,!0,e))});var o=e.nodeType===9?e:e.ownerDocument;o===null||o[rf]||(o[rf]=!0,qf("selectionchange",!1,o))}}function pf(e,o,s,c){switch(jd(o)){case 1:var i=ed;break;case 4:i=gd;break;default:i=fd}s=i.bind(null,o,s,e),i=void 0,!Lb||o!=="touchstart"&&o!=="touchmove"&&o!=="wheel"||(i=!0),c?i!==void 0?e.addEventListener(o,s,{capture:!0,passive:i}):e.addEventListener(o,s,!0):i!==void 0?e.addEventListener(o,s,{passive:i}):e.addEventListener(o,s,!1)}function hd(e,o,s,c,i){var g=c;if(!(o&1)&&!(o&2)&&c!==null)e:for(;;){if(c===null)return;var h=c.tag;if(h===3||h===4){var $=c.stateNode.containerInfo;if($===i||$.nodeType===8&&$.parentNode===i)break;if(h===4)for(h=c.return;h!==null;){var j=h.tag;if((j===3||j===4)&&(j=h.stateNode.containerInfo,j===i||j.nodeType===8&&j.parentNode===i))return;h=h.return}for(;$!==null;){if(h=Wc($),h===null)return;if(j=h.tag,j===5||j===6){c=g=h;continue e}$=$.parentNode}}c=c.return}Jb(function(){var _=g,_e=xb(s),et=[];e:{var tt=df.get(e);if(tt!==void 0){var at=td,rt=e;switch(e){case"keypress":if(od(s)===0)break e;case"keydown":case"keyup":at=Rd;break;case"focusin":rt="focus",at=Fd;break;case"focusout":rt="blur",at=Fd;break;case"beforeblur":case"afterblur":at=Fd;break;case"click":if(s.button===2)break e;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":at=Bd;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":at=Dd;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":at=Vd;break;case $e:case af:case bf:at=Hd;break;case cf:at=Xd;break;case"scroll":at=vd;break;case"wheel":at=Zd;break;case"copy":case"cut":case"paste":at=Jd;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":at=Td}var dt=(o&4)!==0,mt=!dt&&e==="scroll",st=dt?tt!==null?tt+"Capture":null:tt;dt=[];for(var ot=_,nt;ot!==null;){nt=ot;var lt=nt.stateNode;if(nt.tag===5&&lt!==null&&(nt=lt,st!==null&&(lt=Kb(ot,st),lt!=null&&dt.push(tf(ot,lt,nt)))),mt)break;ot=ot.return}0<dt.length&&(tt=new at(tt,rt,null,s,_e),et.push({event:tt,listeners:dt}))}}if(!(o&7)){e:{if(tt=e==="mouseover"||e==="pointerover",at=e==="mouseout"||e==="pointerout",tt&&s!==wb&&(rt=s.relatedTarget||s.fromElement)&&(Wc(rt)||rt[uf]))break e;if((at||tt)&&(tt=_e.window===_e?_e:(tt=_e.ownerDocument)?tt.defaultView||tt.parentWindow:window,at?(rt=s.relatedTarget||s.toElement,at=_,rt=rt?Wc(rt):null,rt!==null&&(mt=Vb(rt),rt!==mt||rt.tag!==5&&rt.tag!==6)&&(rt=null)):(at=null,rt=_),at!==rt)){if(dt=Bd,lt="onMouseLeave",st="onMouseEnter",ot="mouse",(e==="pointerout"||e==="pointerover")&&(dt=Td,lt="onPointerLeave",st="onPointerEnter",ot="pointer"),mt=at==null?tt:ue(at),nt=rt==null?tt:ue(rt),tt=new dt(lt,ot+"leave",at,s,_e),tt.target=mt,tt.relatedTarget=nt,lt=null,Wc(_e)===_&&(dt=new dt(st,ot+"enter",rt,s,_e),dt.target=nt,dt.relatedTarget=mt,lt=dt),mt=lt,at&&rt)t:{for(dt=at,st=rt,ot=0,nt=dt;nt;nt=vf(nt))ot++;for(nt=0,lt=st;lt;lt=vf(lt))nt++;for(;0<ot-nt;)dt=vf(dt),ot--;for(;0<nt-ot;)st=vf(st),nt--;for(;ot--;){if(dt===st||st!==null&&dt===st.alternate)break t;dt=vf(dt),st=vf(st)}dt=null}else dt=null;at!==null&&wf(et,tt,at,dt,!1),rt!==null&&mt!==null&&wf(et,mt,rt,dt,!0)}}e:{if(tt=_?ue(_):window,at=tt.nodeName&&tt.nodeName.toLowerCase(),at==="select"||at==="input"&&tt.type==="file")var ct=ve;else if(me(tt))if(we)ct=Fe;else{ct=De;var it=Ce}else(at=tt.nodeName)&&at.toLowerCase()==="input"&&(tt.type==="checkbox"||tt.type==="radio")&&(ct=Ee);if(ct&&(ct=ct(e,_))){ne(et,ct,s,_e);break e}it&&it(e,tt,_),e==="focusout"&&(it=tt._wrapperState)&&it.controlled&&tt.type==="number"&&cb(tt,"number",tt.value)}switch(it=_?ue(_):window,e){case"focusin":(me(it)||it.contentEditable==="true")&&(Qe=it,Re=_,Se=null);break;case"focusout":Se=Re=Qe=null;break;case"mousedown":Te=!0;break;case"contextmenu":case"mouseup":case"dragend":Te=!1,Ue(et,s,_e);break;case"selectionchange":if(Pe)break;case"keydown":case"keyup":Ue(et,s,_e)}var ut;if(ae)e:{switch(e){case"compositionstart":var gt="onCompositionStart";break e;case"compositionend":gt="onCompositionEnd";break e;case"compositionupdate":gt="onCompositionUpdate";break e}gt=void 0}else ie?ge(e,s)&&(gt="onCompositionEnd"):e==="keydown"&&s.keyCode===229&&(gt="onCompositionStart");gt&&(de&&s.locale!=="ko"&&(ie||gt!=="onCompositionStart"?gt==="onCompositionEnd"&&ie&&(ut=nd()):(kd=_e,ld="value"in kd?kd.value:kd.textContent,ie=!0)),it=oe(_,gt),0<it.length&&(gt=new Ld(gt,e,null,s,_e),et.push({event:gt,listeners:it}),ut?gt.data=ut:(ut=he(s),ut!==null&&(gt.data=ut)))),(ut=ce?je(e,s):ke(e,s))&&(_=oe(_,"onBeforeInput"),0<_.length&&(_e=new Ld("onBeforeInput","beforeinput",null,s,_e),et.push({event:_e,listeners:_}),_e.data=ut))}se(et,o)})}function tf(e,o,s){return{instance:e,listener:o,currentTarget:s}}function oe(e,o){for(var s=o+"Capture",c=[];e!==null;){var i=e,g=i.stateNode;i.tag===5&&g!==null&&(i=g,g=Kb(e,s),g!=null&&c.unshift(tf(e,g,i)),g=Kb(e,o),g!=null&&c.push(tf(e,g,i))),e=e.return}return c}function vf(e){if(e===null)return null;do e=e.return;while(e&&e.tag!==5);return e||null}function wf(e,o,s,c,i){for(var g=o._reactName,h=[];s!==null&&s!==c;){var $=s,j=$.alternate,_=$.stateNode;if(j!==null&&j===c)break;$.tag===5&&_!==null&&($=_,i?(j=Kb(s,g),j!=null&&h.unshift(tf(s,j,$))):i||(j=Kb(s,g),j!=null&&h.push(tf(s,j,$)))),s=s.return}h.length!==0&&e.push({event:o,listeners:h})}var xf=/\r\n?/g,yf=/\u0000|\uFFFD/g;function zf(e){return(typeof e=="string"?e:""+e).replace(xf,`
`).replace(yf,"")}function Af(e,o,s){if(o=zf(o),zf(e)!==o&&s)throw Error(p$1(425))}function Bf(){}var Cf=null,Df=null;function Ef(e,o){return e==="textarea"||e==="noscript"||typeof o.children=="string"||typeof o.children=="number"||typeof o.dangerouslySetInnerHTML=="object"&&o.dangerouslySetInnerHTML!==null&&o.dangerouslySetInnerHTML.__html!=null}var Ff=typeof setTimeout=="function"?setTimeout:void 0,Gf=typeof clearTimeout=="function"?clearTimeout:void 0,Hf=typeof Promise=="function"?Promise:void 0,Jf=typeof queueMicrotask=="function"?queueMicrotask:typeof Hf<"u"?function(e){return Hf.resolve(null).then(e).catch(If)}:Ff;function If(e){setTimeout(function(){throw e})}function Kf(e,o){var s=o,c=0;do{var i=s.nextSibling;if(e.removeChild(s),i&&i.nodeType===8)if(s=i.data,s==="/$"){if(c===0){e.removeChild(i),bd(o);return}c--}else s!=="$"&&s!=="$?"&&s!=="$!"||c++;s=i}while(s);bd(o)}function Lf(e){for(;e!=null;e=e.nextSibling){var o=e.nodeType;if(o===1||o===3)break;if(o===8){if(o=e.data,o==="$"||o==="$!"||o==="$?")break;if(o==="/$")return null}}return e}function Mf(e){e=e.previousSibling;for(var o=0;e;){if(e.nodeType===8){var s=e.data;if(s==="$"||s==="$!"||s==="$?"){if(o===0)return e;o--}else s==="/$"&&o++}e=e.previousSibling}return null}var Nf=Math.random().toString(36).slice(2),Of="__reactFiber$"+Nf,Pf="__reactProps$"+Nf,uf="__reactContainer$"+Nf,of="__reactEvents$"+Nf,Qf="__reactListeners$"+Nf,Rf="__reactHandles$"+Nf;function Wc(e){var o=e[Of];if(o)return o;for(var s=e.parentNode;s;){if(o=s[uf]||s[Of]){if(s=o.alternate,o.child!==null||s!==null&&s.child!==null)for(e=Mf(e);e!==null;){if(s=e[Of])return s;e=Mf(e)}return o}e=s,s=e.parentNode}return null}function Cb(e){return e=e[Of]||e[uf],!e||e.tag!==5&&e.tag!==6&&e.tag!==13&&e.tag!==3?null:e}function ue(e){if(e.tag===5||e.tag===6)return e.stateNode;throw Error(p$1(33))}function Db(e){return e[Pf]||null}var Sf=[],Tf=-1;function Uf(e){return{current:e}}function E(e){0>Tf||(e.current=Sf[Tf],Sf[Tf]=null,Tf--)}function G(e,o){Tf++,Sf[Tf]=e.current,e.current=o}var Vf={},H=Uf(Vf),Wf=Uf(!1),Xf=Vf;function Yf(e,o){var s=e.type.contextTypes;if(!s)return Vf;var c=e.stateNode;if(c&&c.__reactInternalMemoizedUnmaskedChildContext===o)return c.__reactInternalMemoizedMaskedChildContext;var i={},g;for(g in s)i[g]=o[g];return c&&(e=e.stateNode,e.__reactInternalMemoizedUnmaskedChildContext=o,e.__reactInternalMemoizedMaskedChildContext=i),i}function Zf(e){return e=e.childContextTypes,e!=null}function $f(){E(Wf),E(H)}function ag(e,o,s){if(H.current!==Vf)throw Error(p$1(168));G(H,o),G(Wf,s)}function bg(e,o,s){var c=e.stateNode;if(o=o.childContextTypes,typeof c.getChildContext!="function")return s;c=c.getChildContext();for(var i in c)if(!(i in o))throw Error(p$1(108,Ra(e)||"Unknown",i));return A({},s,c)}function cg(e){return e=(e=e.stateNode)&&e.__reactInternalMemoizedMergedChildContext||Vf,Xf=H.current,G(H,e),G(Wf,Wf.current),!0}function dg(e,o,s){var c=e.stateNode;if(!c)throw Error(p$1(169));s?(e=bg(e,o,Xf),c.__reactInternalMemoizedMergedChildContext=e,E(Wf),E(H),G(H,e)):E(Wf),G(Wf,s)}var eg=null,fg=!1,gg=!1;function hg(e){eg===null?eg=[e]:eg.push(e)}function ig(e){fg=!0,hg(e)}function jg(){if(!gg&&eg!==null){gg=!0;var e=0,o=C;try{var s=eg;for(C=1;e<s.length;e++){var c=s[e];do c=c(!0);while(c!==null)}eg=null,fg=!1}catch(i){throw eg!==null&&(eg=eg.slice(e+1)),ac(fc,jg),i}finally{C=o,gg=!1}}return null}var kg=[],lg=0,mg=null,ng=0,og=[],pg=0,qg=null,rg=1,sg="";function tg(e,o){kg[lg++]=ng,kg[lg++]=mg,mg=e,ng=o}function ug(e,o,s){og[pg++]=rg,og[pg++]=sg,og[pg++]=qg,qg=e;var c=rg;e=sg;var i=32-oc(c)-1;c&=~(1<<i),s+=1;var g=32-oc(o)+i;if(30<g){var h=i-i%5;g=(c&(1<<h)-1).toString(32),c>>=h,i-=h,rg=1<<32-oc(o)+i|s<<i|c,sg=g+e}else rg=1<<g|s<<i|c,sg=e}function vg(e){e.return!==null&&(tg(e,1),ug(e,1,0))}function wg(e){for(;e===mg;)mg=kg[--lg],kg[lg]=null,ng=kg[--lg],kg[lg]=null;for(;e===qg;)qg=og[--pg],og[pg]=null,sg=og[--pg],og[pg]=null,rg=og[--pg],og[pg]=null}var xg=null,yg=null,I=!1,zg=null;function Ag(e,o){var s=Bg(5,null,null,0);s.elementType="DELETED",s.stateNode=o,s.return=e,o=e.deletions,o===null?(e.deletions=[s],e.flags|=16):o.push(s)}function Cg(e,o){switch(e.tag){case 5:var s=e.type;return o=o.nodeType!==1||s.toLowerCase()!==o.nodeName.toLowerCase()?null:o,o!==null?(e.stateNode=o,xg=e,yg=Lf(o.firstChild),!0):!1;case 6:return o=e.pendingProps===""||o.nodeType!==3?null:o,o!==null?(e.stateNode=o,xg=e,yg=null,!0):!1;case 13:return o=o.nodeType!==8?null:o,o!==null?(s=qg!==null?{id:rg,overflow:sg}:null,e.memoizedState={dehydrated:o,treeContext:s,retryLane:1073741824},s=Bg(18,null,null,0),s.stateNode=o,s.return=e,e.child=s,xg=e,yg=null,!0):!1;default:return!1}}function Dg(e){return(e.mode&1)!==0&&(e.flags&128)===0}function Eg(e){if(I){var o=yg;if(o){var s=o;if(!Cg(e,o)){if(Dg(e))throw Error(p$1(418));o=Lf(s.nextSibling);var c=xg;o&&Cg(e,o)?Ag(c,s):(e.flags=e.flags&-4097|2,I=!1,xg=e)}}else{if(Dg(e))throw Error(p$1(418));e.flags=e.flags&-4097|2,I=!1,xg=e}}}function Fg(e){for(e=e.return;e!==null&&e.tag!==5&&e.tag!==3&&e.tag!==13;)e=e.return;xg=e}function Gg(e){if(e!==xg)return!1;if(!I)return Fg(e),I=!0,!1;var o;if((o=e.tag!==3)&&!(o=e.tag!==5)&&(o=e.type,o=o!=="head"&&o!=="body"&&!Ef(e.type,e.memoizedProps)),o&&(o=yg)){if(Dg(e))throw Hg(),Error(p$1(418));for(;o;)Ag(e,o),o=Lf(o.nextSibling)}if(Fg(e),e.tag===13){if(e=e.memoizedState,e=e!==null?e.dehydrated:null,!e)throw Error(p$1(317));e:{for(e=e.nextSibling,o=0;e;){if(e.nodeType===8){var s=e.data;if(s==="/$"){if(o===0){yg=Lf(e.nextSibling);break e}o--}else s!=="$"&&s!=="$!"&&s!=="$?"||o++}e=e.nextSibling}yg=null}}else yg=xg?Lf(e.stateNode.nextSibling):null;return!0}function Hg(){for(var e=yg;e;)e=Lf(e.nextSibling)}function Ig(){yg=xg=null,I=!1}function Jg(e){zg===null?zg=[e]:zg.push(e)}var Kg=ua.ReactCurrentBatchConfig;function Lg(e,o,s){if(e=s.ref,e!==null&&typeof e!="function"&&typeof e!="object"){if(s._owner){if(s=s._owner,s){if(s.tag!==1)throw Error(p$1(309));var c=s.stateNode}if(!c)throw Error(p$1(147,e));var i=c,g=""+e;return o!==null&&o.ref!==null&&typeof o.ref=="function"&&o.ref._stringRef===g?o.ref:(o=function(h){var $=i.refs;h===null?delete $[g]:$[g]=h},o._stringRef=g,o)}if(typeof e!="string")throw Error(p$1(284));if(!s._owner)throw Error(p$1(290,e))}return e}function Mg(e,o){throw e=Object.prototype.toString.call(o),Error(p$1(31,e==="[object Object]"?"object with keys {"+Object.keys(o).join(", ")+"}":e))}function Ng(e){var o=e._init;return o(e._payload)}function Og(e){function o(st,ot){if(e){var nt=st.deletions;nt===null?(st.deletions=[ot],st.flags|=16):nt.push(ot)}}function s(st,ot){if(!e)return null;for(;ot!==null;)o(st,ot),ot=ot.sibling;return null}function c(st,ot){for(st=new Map;ot!==null;)ot.key!==null?st.set(ot.key,ot):st.set(ot.index,ot),ot=ot.sibling;return st}function i(st,ot){return st=Pg(st,ot),st.index=0,st.sibling=null,st}function g(st,ot,nt){return st.index=nt,e?(nt=st.alternate,nt!==null?(nt=nt.index,nt<ot?(st.flags|=2,ot):nt):(st.flags|=2,ot)):(st.flags|=1048576,ot)}function h(st){return e&&st.alternate===null&&(st.flags|=2),st}function $(st,ot,nt,lt){return ot===null||ot.tag!==6?(ot=Qg(nt,st.mode,lt),ot.return=st,ot):(ot=i(ot,nt),ot.return=st,ot)}function j(st,ot,nt,lt){var ct=nt.type;return ct===ya?_e(st,ot,nt.props.children,lt,nt.key):ot!==null&&(ot.elementType===ct||typeof ct=="object"&&ct!==null&&ct.$$typeof===Ha&&Ng(ct)===ot.type)?(lt=i(ot,nt.props),lt.ref=Lg(st,ot,nt),lt.return=st,lt):(lt=Rg(nt.type,nt.key,nt.props,null,st.mode,lt),lt.ref=Lg(st,ot,nt),lt.return=st,lt)}function _(st,ot,nt,lt){return ot===null||ot.tag!==4||ot.stateNode.containerInfo!==nt.containerInfo||ot.stateNode.implementation!==nt.implementation?(ot=Sg(nt,st.mode,lt),ot.return=st,ot):(ot=i(ot,nt.children||[]),ot.return=st,ot)}function _e(st,ot,nt,lt,ct){return ot===null||ot.tag!==7?(ot=Tg(nt,st.mode,lt,ct),ot.return=st,ot):(ot=i(ot,nt),ot.return=st,ot)}function et(st,ot,nt){if(typeof ot=="string"&&ot!==""||typeof ot=="number")return ot=Qg(""+ot,st.mode,nt),ot.return=st,ot;if(typeof ot=="object"&&ot!==null){switch(ot.$$typeof){case va:return nt=Rg(ot.type,ot.key,ot.props,null,st.mode,nt),nt.ref=Lg(st,null,ot),nt.return=st,nt;case wa:return ot=Sg(ot,st.mode,nt),ot.return=st,ot;case Ha:var lt=ot._init;return et(st,lt(ot._payload),nt)}if(eb(ot)||Ka(ot))return ot=Tg(ot,st.mode,nt,null),ot.return=st,ot;Mg(st,ot)}return null}function tt(st,ot,nt,lt){var ct=ot!==null?ot.key:null;if(typeof nt=="string"&&nt!==""||typeof nt=="number")return ct!==null?null:$(st,ot,""+nt,lt);if(typeof nt=="object"&&nt!==null){switch(nt.$$typeof){case va:return nt.key===ct?j(st,ot,nt,lt):null;case wa:return nt.key===ct?_(st,ot,nt,lt):null;case Ha:return ct=nt._init,tt(st,ot,ct(nt._payload),lt)}if(eb(nt)||Ka(nt))return ct!==null?null:_e(st,ot,nt,lt,null);Mg(st,nt)}return null}function at(st,ot,nt,lt,ct){if(typeof lt=="string"&&lt!==""||typeof lt=="number")return st=st.get(nt)||null,$(ot,st,""+lt,ct);if(typeof lt=="object"&&lt!==null){switch(lt.$$typeof){case va:return st=st.get(lt.key===null?nt:lt.key)||null,j(ot,st,lt,ct);case wa:return st=st.get(lt.key===null?nt:lt.key)||null,_(ot,st,lt,ct);case Ha:var it=lt._init;return at(st,ot,nt,it(lt._payload),ct)}if(eb(lt)||Ka(lt))return st=st.get(nt)||null,_e(ot,st,lt,ct,null);Mg(ot,lt)}return null}function rt(st,ot,nt,lt){for(var ct=null,it=null,ut=ot,gt=ot=0,pt=null;ut!==null&&gt<nt.length;gt++){ut.index>gt?(pt=ut,ut=null):pt=ut.sibling;var ft=tt(st,ut,nt[gt],lt);if(ft===null){ut===null&&(ut=pt);break}e&&ut&&ft.alternate===null&&o(st,ut),ot=g(ft,ot,gt),it===null?ct=ft:it.sibling=ft,it=ft,ut=pt}if(gt===nt.length)return s(st,ut),I&&tg(st,gt),ct;if(ut===null){for(;gt<nt.length;gt++)ut=et(st,nt[gt],lt),ut!==null&&(ot=g(ut,ot,gt),it===null?ct=ut:it.sibling=ut,it=ut);return I&&tg(st,gt),ct}for(ut=c(st,ut);gt<nt.length;gt++)pt=at(ut,st,gt,nt[gt],lt),pt!==null&&(e&&pt.alternate!==null&&ut.delete(pt.key===null?gt:pt.key),ot=g(pt,ot,gt),it===null?ct=pt:it.sibling=pt,it=pt);return e&&ut.forEach(function(Wt){return o(st,Wt)}),I&&tg(st,gt),ct}function dt(st,ot,nt,lt){var ct=Ka(nt);if(typeof ct!="function")throw Error(p$1(150));if(nt=ct.call(nt),nt==null)throw Error(p$1(151));for(var it=ct=null,ut=ot,gt=ot=0,pt=null,ft=nt.next();ut!==null&&!ft.done;gt++,ft=nt.next()){ut.index>gt?(pt=ut,ut=null):pt=ut.sibling;var Wt=tt(st,ut,ft.value,lt);if(Wt===null){ut===null&&(ut=pt);break}e&&ut&&Wt.alternate===null&&o(st,ut),ot=g(Wt,ot,gt),it===null?ct=Wt:it.sibling=Wt,it=Wt,ut=pt}if(ft.done)return s(st,ut),I&&tg(st,gt),ct;if(ut===null){for(;!ft.done;gt++,ft=nt.next())ft=et(st,ft.value,lt),ft!==null&&(ot=g(ft,ot,gt),it===null?ct=ft:it.sibling=ft,it=ft);return I&&tg(st,gt),ct}for(ut=c(st,ut);!ft.done;gt++,ft=nt.next())ft=at(ut,st,gt,ft.value,lt),ft!==null&&(e&&ft.alternate!==null&&ut.delete(ft.key===null?gt:ft.key),ot=g(ft,ot,gt),it===null?ct=ft:it.sibling=ft,it=ft);return e&&ut.forEach(function(Vt){return o(st,Vt)}),I&&tg(st,gt),ct}function mt(st,ot,nt,lt){if(typeof nt=="object"&&nt!==null&&nt.type===ya&&nt.key===null&&(nt=nt.props.children),typeof nt=="object"&&nt!==null){switch(nt.$$typeof){case va:e:{for(var ct=nt.key,it=ot;it!==null;){if(it.key===ct){if(ct=nt.type,ct===ya){if(it.tag===7){s(st,it.sibling),ot=i(it,nt.props.children),ot.return=st,st=ot;break e}}else if(it.elementType===ct||typeof ct=="object"&&ct!==null&&ct.$$typeof===Ha&&Ng(ct)===it.type){s(st,it.sibling),ot=i(it,nt.props),ot.ref=Lg(st,it,nt),ot.return=st,st=ot;break e}s(st,it);break}else o(st,it);it=it.sibling}nt.type===ya?(ot=Tg(nt.props.children,st.mode,lt,nt.key),ot.return=st,st=ot):(lt=Rg(nt.type,nt.key,nt.props,null,st.mode,lt),lt.ref=Lg(st,ot,nt),lt.return=st,st=lt)}return h(st);case wa:e:{for(it=nt.key;ot!==null;){if(ot.key===it)if(ot.tag===4&&ot.stateNode.containerInfo===nt.containerInfo&&ot.stateNode.implementation===nt.implementation){s(st,ot.sibling),ot=i(ot,nt.children||[]),ot.return=st,st=ot;break e}else{s(st,ot);break}else o(st,ot);ot=ot.sibling}ot=Sg(nt,st.mode,lt),ot.return=st,st=ot}return h(st);case Ha:return it=nt._init,mt(st,ot,it(nt._payload),lt)}if(eb(nt))return rt(st,ot,nt,lt);if(Ka(nt))return dt(st,ot,nt,lt);Mg(st,nt)}return typeof nt=="string"&&nt!==""||typeof nt=="number"?(nt=""+nt,ot!==null&&ot.tag===6?(s(st,ot.sibling),ot=i(ot,nt),ot.return=st,st=ot):(s(st,ot),ot=Qg(nt,st.mode,lt),ot.return=st,st=ot),h(st)):s(st,ot)}return mt}var Ug=Og(!0),Vg=Og(!1),Wg=Uf(null),Xg=null,Yg=null,Zg=null;function $g(){Zg=Yg=Xg=null}function ah(e){var o=Wg.current;E(Wg),e._currentValue=o}function bh(e,o,s){for(;e!==null;){var c=e.alternate;if((e.childLanes&o)!==o?(e.childLanes|=o,c!==null&&(c.childLanes|=o)):c!==null&&(c.childLanes&o)!==o&&(c.childLanes|=o),e===s)break;e=e.return}}function ch(e,o){Xg=e,Zg=Yg=null,e=e.dependencies,e!==null&&e.firstContext!==null&&(e.lanes&o&&(dh=!0),e.firstContext=null)}function eh(e){var o=e._currentValue;if(Zg!==e)if(e={context:e,memoizedValue:o,next:null},Yg===null){if(Xg===null)throw Error(p$1(308));Yg=e,Xg.dependencies={lanes:0,firstContext:e}}else Yg=Yg.next=e;return o}var fh=null;function gh(e){fh===null?fh=[e]:fh.push(e)}function hh(e,o,s,c){var i=o.interleaved;return i===null?(s.next=s,gh(o)):(s.next=i.next,i.next=s),o.interleaved=s,ih(e,c)}function ih(e,o){e.lanes|=o;var s=e.alternate;for(s!==null&&(s.lanes|=o),s=e,e=e.return;e!==null;)e.childLanes|=o,s=e.alternate,s!==null&&(s.childLanes|=o),s=e,e=e.return;return s.tag===3?s.stateNode:null}var jh=!1;function kh(e){e.updateQueue={baseState:e.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,interleaved:null,lanes:0},effects:null}}function lh(e,o){e=e.updateQueue,o.updateQueue===e&&(o.updateQueue={baseState:e.baseState,firstBaseUpdate:e.firstBaseUpdate,lastBaseUpdate:e.lastBaseUpdate,shared:e.shared,effects:e.effects})}function mh(e,o){return{eventTime:e,lane:o,tag:0,payload:null,callback:null,next:null}}function nh(e,o,s){var c=e.updateQueue;if(c===null)return null;if(c=c.shared,K&2){var i=c.pending;return i===null?o.next=o:(o.next=i.next,i.next=o),c.pending=o,ih(e,s)}return i=c.interleaved,i===null?(o.next=o,gh(c)):(o.next=i.next,i.next=o),c.interleaved=o,ih(e,s)}function oh(e,o,s){if(o=o.updateQueue,o!==null&&(o=o.shared,(s&4194240)!==0)){var c=o.lanes;c&=e.pendingLanes,s|=c,o.lanes=s,Cc(e,s)}}function ph(e,o){var s=e.updateQueue,c=e.alternate;if(c!==null&&(c=c.updateQueue,s===c)){var i=null,g=null;if(s=s.firstBaseUpdate,s!==null){do{var h={eventTime:s.eventTime,lane:s.lane,tag:s.tag,payload:s.payload,callback:s.callback,next:null};g===null?i=g=h:g=g.next=h,s=s.next}while(s!==null);g===null?i=g=o:g=g.next=o}else i=g=o;s={baseState:c.baseState,firstBaseUpdate:i,lastBaseUpdate:g,shared:c.shared,effects:c.effects},e.updateQueue=s;return}e=s.lastBaseUpdate,e===null?s.firstBaseUpdate=o:e.next=o,s.lastBaseUpdate=o}function qh(e,o,s,c){var i=e.updateQueue;jh=!1;var g=i.firstBaseUpdate,h=i.lastBaseUpdate,$=i.shared.pending;if($!==null){i.shared.pending=null;var j=$,_=j.next;j.next=null,h===null?g=_:h.next=_,h=j;var _e=e.alternate;_e!==null&&(_e=_e.updateQueue,$=_e.lastBaseUpdate,$!==h&&($===null?_e.firstBaseUpdate=_:$.next=_,_e.lastBaseUpdate=j))}if(g!==null){var et=i.baseState;h=0,_e=_=j=null,$=g;do{var tt=$.lane,at=$.eventTime;if((c&tt)===tt){_e!==null&&(_e=_e.next={eventTime:at,lane:0,tag:$.tag,payload:$.payload,callback:$.callback,next:null});e:{var rt=e,dt=$;switch(tt=o,at=s,dt.tag){case 1:if(rt=dt.payload,typeof rt=="function"){et=rt.call(at,et,tt);break e}et=rt;break e;case 3:rt.flags=rt.flags&-65537|128;case 0:if(rt=dt.payload,tt=typeof rt=="function"?rt.call(at,et,tt):rt,tt==null)break e;et=A({},et,tt);break e;case 2:jh=!0}}$.callback!==null&&$.lane!==0&&(e.flags|=64,tt=i.effects,tt===null?i.effects=[$]:tt.push($))}else at={eventTime:at,lane:tt,tag:$.tag,payload:$.payload,callback:$.callback,next:null},_e===null?(_=_e=at,j=et):_e=_e.next=at,h|=tt;if($=$.next,$===null){if($=i.shared.pending,$===null)break;tt=$,$=tt.next,tt.next=null,i.lastBaseUpdate=tt,i.shared.pending=null}}while(!0);if(_e===null&&(j=et),i.baseState=j,i.firstBaseUpdate=_,i.lastBaseUpdate=_e,o=i.shared.interleaved,o!==null){i=o;do h|=i.lane,i=i.next;while(i!==o)}else g===null&&(i.shared.lanes=0);rh|=h,e.lanes=h,e.memoizedState=et}}function sh(e,o,s){if(e=o.effects,o.effects=null,e!==null)for(o=0;o<e.length;o++){var c=e[o],i=c.callback;if(i!==null){if(c.callback=null,c=s,typeof i!="function")throw Error(p$1(191,i));i.call(c)}}}var th={},uh=Uf(th),vh=Uf(th),wh=Uf(th);function xh(e){if(e===th)throw Error(p$1(174));return e}function yh(e,o){switch(G(wh,o),G(vh,e),G(uh,th),e=o.nodeType,e){case 9:case 11:o=(o=o.documentElement)?o.namespaceURI:lb(null,"");break;default:e=e===8?o.parentNode:o,o=e.namespaceURI||null,e=e.tagName,o=lb(o,e)}E(uh),G(uh,o)}function zh(){E(uh),E(vh),E(wh)}function Ah(e){xh(wh.current);var o=xh(uh.current),s=lb(o,e.type);o!==s&&(G(vh,e),G(uh,s))}function Bh(e){vh.current===e&&(E(uh),E(vh))}var L=Uf(0);function Ch(e){for(var o=e;o!==null;){if(o.tag===13){var s=o.memoizedState;if(s!==null&&(s=s.dehydrated,s===null||s.data==="$?"||s.data==="$!"))return o}else if(o.tag===19&&o.memoizedProps.revealOrder!==void 0){if(o.flags&128)return o}else if(o.child!==null){o.child.return=o,o=o.child;continue}if(o===e)break;for(;o.sibling===null;){if(o.return===null||o.return===e)return null;o=o.return}o.sibling.return=o.return,o=o.sibling}return null}var Dh=[];function Eh(){for(var e=0;e<Dh.length;e++)Dh[e]._workInProgressVersionPrimary=null;Dh.length=0}var Fh=ua.ReactCurrentDispatcher,Gh=ua.ReactCurrentBatchConfig,Hh=0,M=null,N=null,O=null,Ih=!1,Jh=!1,Kh=0,Lh=0;function P(){throw Error(p$1(321))}function Mh(e,o){if(o===null)return!1;for(var s=0;s<o.length&&s<e.length;s++)if(!He(e[s],o[s]))return!1;return!0}function Nh(e,o,s,c,i,g){if(Hh=g,M=o,o.memoizedState=null,o.updateQueue=null,o.lanes=0,Fh.current=e===null||e.memoizedState===null?Oh:Ph,e=s(c,i),Jh){g=0;do{if(Jh=!1,Kh=0,25<=g)throw Error(p$1(301));g+=1,O=N=null,o.updateQueue=null,Fh.current=Qh,e=s(c,i)}while(Jh)}if(Fh.current=Rh,o=N!==null&&N.next!==null,Hh=0,O=N=M=null,Ih=!1,o)throw Error(p$1(300));return e}function Sh(){var e=Kh!==0;return Kh=0,e}function Th(){var e={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return O===null?M.memoizedState=O=e:O=O.next=e,O}function Uh(){if(N===null){var e=M.alternate;e=e!==null?e.memoizedState:null}else e=N.next;var o=O===null?M.memoizedState:O.next;if(o!==null)O=o,N=e;else{if(e===null)throw Error(p$1(310));N=e,e={memoizedState:N.memoizedState,baseState:N.baseState,baseQueue:N.baseQueue,queue:N.queue,next:null},O===null?M.memoizedState=O=e:O=O.next=e}return O}function Vh(e,o){return typeof o=="function"?o(e):o}function Wh(e){var o=Uh(),s=o.queue;if(s===null)throw Error(p$1(311));s.lastRenderedReducer=e;var c=N,i=c.baseQueue,g=s.pending;if(g!==null){if(i!==null){var h=i.next;i.next=g.next,g.next=h}c.baseQueue=i=g,s.pending=null}if(i!==null){g=i.next,c=c.baseState;var $=h=null,j=null,_=g;do{var _e=_.lane;if((Hh&_e)===_e)j!==null&&(j=j.next={lane:0,action:_.action,hasEagerState:_.hasEagerState,eagerState:_.eagerState,next:null}),c=_.hasEagerState?_.eagerState:e(c,_.action);else{var et={lane:_e,action:_.action,hasEagerState:_.hasEagerState,eagerState:_.eagerState,next:null};j===null?($=j=et,h=c):j=j.next=et,M.lanes|=_e,rh|=_e}_=_.next}while(_!==null&&_!==g);j===null?h=c:j.next=$,He(c,o.memoizedState)||(dh=!0),o.memoizedState=c,o.baseState=h,o.baseQueue=j,s.lastRenderedState=c}if(e=s.interleaved,e!==null){i=e;do g=i.lane,M.lanes|=g,rh|=g,i=i.next;while(i!==e)}else i===null&&(s.lanes=0);return[o.memoizedState,s.dispatch]}function Xh(e){var o=Uh(),s=o.queue;if(s===null)throw Error(p$1(311));s.lastRenderedReducer=e;var c=s.dispatch,i=s.pending,g=o.memoizedState;if(i!==null){s.pending=null;var h=i=i.next;do g=e(g,h.action),h=h.next;while(h!==i);He(g,o.memoizedState)||(dh=!0),o.memoizedState=g,o.baseQueue===null&&(o.baseState=g),s.lastRenderedState=g}return[g,c]}function Yh(){}function Zh(e,o){var s=M,c=Uh(),i=o(),g=!He(c.memoizedState,i);if(g&&(c.memoizedState=i,dh=!0),c=c.queue,$h(ai.bind(null,s,c,e),[e]),c.getSnapshot!==o||g||O!==null&&O.memoizedState.tag&1){if(s.flags|=2048,bi(9,ci.bind(null,s,c,i,o),void 0,null),Q===null)throw Error(p$1(349));Hh&30||di(s,o,i)}return i}function di(e,o,s){e.flags|=16384,e={getSnapshot:o,value:s},o=M.updateQueue,o===null?(o={lastEffect:null,stores:null},M.updateQueue=o,o.stores=[e]):(s=o.stores,s===null?o.stores=[e]:s.push(e))}function ci(e,o,s,c){o.value=s,o.getSnapshot=c,ei(o)&&fi(e)}function ai(e,o,s){return s(function(){ei(o)&&fi(e)})}function ei(e){var o=e.getSnapshot;e=e.value;try{var s=o();return!He(e,s)}catch{return!0}}function fi(e){var o=ih(e,1);o!==null&&gi(o,e,1,-1)}function hi(e){var o=Th();return typeof e=="function"&&(e=e()),o.memoizedState=o.baseState=e,e={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:Vh,lastRenderedState:e},o.queue=e,e=e.dispatch=ii.bind(null,M,e),[o.memoizedState,e]}function bi(e,o,s,c){return e={tag:e,create:o,destroy:s,deps:c,next:null},o=M.updateQueue,o===null?(o={lastEffect:null,stores:null},M.updateQueue=o,o.lastEffect=e.next=e):(s=o.lastEffect,s===null?o.lastEffect=e.next=e:(c=s.next,s.next=e,e.next=c,o.lastEffect=e)),e}function ji(){return Uh().memoizedState}function ki(e,o,s,c){var i=Th();M.flags|=e,i.memoizedState=bi(1|o,s,void 0,c===void 0?null:c)}function li(e,o,s,c){var i=Uh();c=c===void 0?null:c;var g=void 0;if(N!==null){var h=N.memoizedState;if(g=h.destroy,c!==null&&Mh(c,h.deps)){i.memoizedState=bi(o,s,g,c);return}}M.flags|=e,i.memoizedState=bi(1|o,s,g,c)}function mi(e,o){return ki(8390656,8,e,o)}function $h(e,o){return li(2048,8,e,o)}function ni(e,o){return li(4,2,e,o)}function oi(e,o){return li(4,4,e,o)}function pi(e,o){if(typeof o=="function")return e=e(),o(e),function(){o(null)};if(o!=null)return e=e(),o.current=e,function(){o.current=null}}function qi(e,o,s){return s=s!=null?s.concat([e]):null,li(4,4,pi.bind(null,o,e),s)}function ri(){}function si(e,o){var s=Uh();o=o===void 0?null:o;var c=s.memoizedState;return c!==null&&o!==null&&Mh(o,c[1])?c[0]:(s.memoizedState=[e,o],e)}function ti(e,o){var s=Uh();o=o===void 0?null:o;var c=s.memoizedState;return c!==null&&o!==null&&Mh(o,c[1])?c[0]:(e=e(),s.memoizedState=[e,o],e)}function ui(e,o,s){return Hh&21?(He(s,o)||(s=yc(),M.lanes|=s,rh|=s,e.baseState=!0),o):(e.baseState&&(e.baseState=!1,dh=!0),e.memoizedState=s)}function vi(e,o){var s=C;C=s!==0&&4>s?s:4,e(!0);var c=Gh.transition;Gh.transition={};try{e(!1),o()}finally{C=s,Gh.transition=c}}function wi(){return Uh().memoizedState}function xi(e,o,s){var c=yi(e);if(s={lane:c,action:s,hasEagerState:!1,eagerState:null,next:null},zi(e))Ai(o,s);else if(s=hh(e,o,s,c),s!==null){var i=R();gi(s,e,c,i),Bi(s,o,c)}}function ii(e,o,s){var c=yi(e),i={lane:c,action:s,hasEagerState:!1,eagerState:null,next:null};if(zi(e))Ai(o,i);else{var g=e.alternate;if(e.lanes===0&&(g===null||g.lanes===0)&&(g=o.lastRenderedReducer,g!==null))try{var h=o.lastRenderedState,$=g(h,s);if(i.hasEagerState=!0,i.eagerState=$,He($,h)){var j=o.interleaved;j===null?(i.next=i,gh(o)):(i.next=j.next,j.next=i),o.interleaved=i;return}}catch{}finally{}s=hh(e,o,i,c),s!==null&&(i=R(),gi(s,e,c,i),Bi(s,o,c))}}function zi(e){var o=e.alternate;return e===M||o!==null&&o===M}function Ai(e,o){Jh=Ih=!0;var s=e.pending;s===null?o.next=o:(o.next=s.next,s.next=o),e.pending=o}function Bi(e,o,s){if(s&4194240){var c=o.lanes;c&=e.pendingLanes,s|=c,o.lanes=s,Cc(e,s)}}var Rh={readContext:eh,useCallback:P,useContext:P,useEffect:P,useImperativeHandle:P,useInsertionEffect:P,useLayoutEffect:P,useMemo:P,useReducer:P,useRef:P,useState:P,useDebugValue:P,useDeferredValue:P,useTransition:P,useMutableSource:P,useSyncExternalStore:P,useId:P,unstable_isNewReconciler:!1},Oh={readContext:eh,useCallback:function(e,o){return Th().memoizedState=[e,o===void 0?null:o],e},useContext:eh,useEffect:mi,useImperativeHandle:function(e,o,s){return s=s!=null?s.concat([e]):null,ki(4194308,4,pi.bind(null,o,e),s)},useLayoutEffect:function(e,o){return ki(4194308,4,e,o)},useInsertionEffect:function(e,o){return ki(4,2,e,o)},useMemo:function(e,o){var s=Th();return o=o===void 0?null:o,e=e(),s.memoizedState=[e,o],e},useReducer:function(e,o,s){var c=Th();return o=s!==void 0?s(o):o,c.memoizedState=c.baseState=o,e={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:e,lastRenderedState:o},c.queue=e,e=e.dispatch=xi.bind(null,M,e),[c.memoizedState,e]},useRef:function(e){var o=Th();return e={current:e},o.memoizedState=e},useState:hi,useDebugValue:ri,useDeferredValue:function(e){return Th().memoizedState=e},useTransition:function(){var e=hi(!1),o=e[0];return e=vi.bind(null,e[1]),Th().memoizedState=e,[o,e]},useMutableSource:function(){},useSyncExternalStore:function(e,o,s){var c=M,i=Th();if(I){if(s===void 0)throw Error(p$1(407));s=s()}else{if(s=o(),Q===null)throw Error(p$1(349));Hh&30||di(c,o,s)}i.memoizedState=s;var g={value:s,getSnapshot:o};return i.queue=g,mi(ai.bind(null,c,g,e),[e]),c.flags|=2048,bi(9,ci.bind(null,c,g,s,o),void 0,null),s},useId:function(){var e=Th(),o=Q.identifierPrefix;if(I){var s=sg,c=rg;s=(c&~(1<<32-oc(c)-1)).toString(32)+s,o=":"+o+"R"+s,s=Kh++,0<s&&(o+="H"+s.toString(32)),o+=":"}else s=Lh++,o=":"+o+"r"+s.toString(32)+":";return e.memoizedState=o},unstable_isNewReconciler:!1},Ph={readContext:eh,useCallback:si,useContext:eh,useEffect:$h,useImperativeHandle:qi,useInsertionEffect:ni,useLayoutEffect:oi,useMemo:ti,useReducer:Wh,useRef:ji,useState:function(){return Wh(Vh)},useDebugValue:ri,useDeferredValue:function(e){var o=Uh();return ui(o,N.memoizedState,e)},useTransition:function(){var e=Wh(Vh)[0],o=Uh().memoizedState;return[e,o]},useMutableSource:Yh,useSyncExternalStore:Zh,useId:wi,unstable_isNewReconciler:!1},Qh={readContext:eh,useCallback:si,useContext:eh,useEffect:$h,useImperativeHandle:qi,useInsertionEffect:ni,useLayoutEffect:oi,useMemo:ti,useReducer:Xh,useRef:ji,useState:function(){return Xh(Vh)},useDebugValue:ri,useDeferredValue:function(e){var o=Uh();return N===null?o.memoizedState=e:ui(o,N.memoizedState,e)},useTransition:function(){var e=Xh(Vh)[0],o=Uh().memoizedState;return[e,o]},useMutableSource:Yh,useSyncExternalStore:Zh,useId:wi,unstable_isNewReconciler:!1};function Ci(e,o){if(e&&e.defaultProps){o=A({},o),e=e.defaultProps;for(var s in e)o[s]===void 0&&(o[s]=e[s]);return o}return o}function Di(e,o,s,c){o=e.memoizedState,s=s(c,o),s=s==null?o:A({},o,s),e.memoizedState=s,e.lanes===0&&(e.updateQueue.baseState=s)}var Ei={isMounted:function(e){return(e=e._reactInternals)?Vb(e)===e:!1},enqueueSetState:function(e,o,s){e=e._reactInternals;var c=R(),i=yi(e),g=mh(c,i);g.payload=o,s!=null&&(g.callback=s),o=nh(e,g,i),o!==null&&(gi(o,e,i,c),oh(o,e,i))},enqueueReplaceState:function(e,o,s){e=e._reactInternals;var c=R(),i=yi(e),g=mh(c,i);g.tag=1,g.payload=o,s!=null&&(g.callback=s),o=nh(e,g,i),o!==null&&(gi(o,e,i,c),oh(o,e,i))},enqueueForceUpdate:function(e,o){e=e._reactInternals;var s=R(),c=yi(e),i=mh(s,c);i.tag=2,o!=null&&(i.callback=o),o=nh(e,i,c),o!==null&&(gi(o,e,c,s),oh(o,e,c))}};function Fi(e,o,s,c,i,g,h){return e=e.stateNode,typeof e.shouldComponentUpdate=="function"?e.shouldComponentUpdate(c,g,h):o.prototype&&o.prototype.isPureReactComponent?!Ie(s,c)||!Ie(i,g):!0}function Gi(e,o,s){var c=!1,i=Vf,g=o.contextType;return typeof g=="object"&&g!==null?g=eh(g):(i=Zf(o)?Xf:H.current,c=o.contextTypes,g=(c=c!=null)?Yf(e,i):Vf),o=new o(s,g),e.memoizedState=o.state!==null&&o.state!==void 0?o.state:null,o.updater=Ei,e.stateNode=o,o._reactInternals=e,c&&(e=e.stateNode,e.__reactInternalMemoizedUnmaskedChildContext=i,e.__reactInternalMemoizedMaskedChildContext=g),o}function Hi(e,o,s,c){e=o.state,typeof o.componentWillReceiveProps=="function"&&o.componentWillReceiveProps(s,c),typeof o.UNSAFE_componentWillReceiveProps=="function"&&o.UNSAFE_componentWillReceiveProps(s,c),o.state!==e&&Ei.enqueueReplaceState(o,o.state,null)}function Ii(e,o,s,c){var i=e.stateNode;i.props=s,i.state=e.memoizedState,i.refs={},kh(e);var g=o.contextType;typeof g=="object"&&g!==null?i.context=eh(g):(g=Zf(o)?Xf:H.current,i.context=Yf(e,g)),i.state=e.memoizedState,g=o.getDerivedStateFromProps,typeof g=="function"&&(Di(e,o,g,s),i.state=e.memoizedState),typeof o.getDerivedStateFromProps=="function"||typeof i.getSnapshotBeforeUpdate=="function"||typeof i.UNSAFE_componentWillMount!="function"&&typeof i.componentWillMount!="function"||(o=i.state,typeof i.componentWillMount=="function"&&i.componentWillMount(),typeof i.UNSAFE_componentWillMount=="function"&&i.UNSAFE_componentWillMount(),o!==i.state&&Ei.enqueueReplaceState(i,i.state,null),qh(e,s,i,c),i.state=e.memoizedState),typeof i.componentDidMount=="function"&&(e.flags|=4194308)}function Ji(e,o){try{var s="",c=o;do s+=Pa(c),c=c.return;while(c);var i=s}catch(g){i=`
Error generating stack: `+g.message+`
`+g.stack}return{value:e,source:o,stack:i,digest:null}}function Ki(e,o,s){return{value:e,source:null,stack:s??null,digest:o??null}}function Li(e,o){try{console.error(o.value)}catch(s){setTimeout(function(){throw s})}}var Mi=typeof WeakMap=="function"?WeakMap:Map;function Ni(e,o,s){s=mh(-1,s),s.tag=3,s.payload={element:null};var c=o.value;return s.callback=function(){Oi||(Oi=!0,Pi=c),Li(e,o)},s}function Qi(e,o,s){s=mh(-1,s),s.tag=3;var c=e.type.getDerivedStateFromError;if(typeof c=="function"){var i=o.value;s.payload=function(){return c(i)},s.callback=function(){Li(e,o)}}var g=e.stateNode;return g!==null&&typeof g.componentDidCatch=="function"&&(s.callback=function(){Li(e,o),typeof c!="function"&&(Ri===null?Ri=new Set([this]):Ri.add(this));var h=o.stack;this.componentDidCatch(o.value,{componentStack:h!==null?h:""})}),s}function Si(e,o,s){var c=e.pingCache;if(c===null){c=e.pingCache=new Mi;var i=new Set;c.set(o,i)}else i=c.get(o),i===void 0&&(i=new Set,c.set(o,i));i.has(s)||(i.add(s),e=Ti.bind(null,e,o,s),o.then(e,e))}function Ui(e){do{var o;if((o=e.tag===13)&&(o=e.memoizedState,o=o!==null?o.dehydrated!==null:!0),o)return e;e=e.return}while(e!==null);return null}function Vi(e,o,s,c,i){return e.mode&1?(e.flags|=65536,e.lanes=i,e):(e===o?e.flags|=65536:(e.flags|=128,s.flags|=131072,s.flags&=-52805,s.tag===1&&(s.alternate===null?s.tag=17:(o=mh(-1,1),o.tag=2,nh(s,o,1))),s.lanes|=1),e)}var Wi=ua.ReactCurrentOwner,dh=!1;function Xi(e,o,s,c){o.child=e===null?Vg(o,null,s,c):Ug(o,e.child,s,c)}function Yi(e,o,s,c,i){s=s.render;var g=o.ref;return ch(o,i),c=Nh(e,o,s,c,g,i),s=Sh(),e!==null&&!dh?(o.updateQueue=e.updateQueue,o.flags&=-2053,e.lanes&=~i,Zi(e,o,i)):(I&&s&&vg(o),o.flags|=1,Xi(e,o,c,i),o.child)}function $i(e,o,s,c,i){if(e===null){var g=s.type;return typeof g=="function"&&!aj(g)&&g.defaultProps===void 0&&s.compare===null&&s.defaultProps===void 0?(o.tag=15,o.type=g,bj(e,o,g,c,i)):(e=Rg(s.type,null,c,o,o.mode,i),e.ref=o.ref,e.return=o,o.child=e)}if(g=e.child,!(e.lanes&i)){var h=g.memoizedProps;if(s=s.compare,s=s!==null?s:Ie,s(h,c)&&e.ref===o.ref)return Zi(e,o,i)}return o.flags|=1,e=Pg(g,c),e.ref=o.ref,e.return=o,o.child=e}function bj(e,o,s,c,i){if(e!==null){var g=e.memoizedProps;if(Ie(g,c)&&e.ref===o.ref)if(dh=!1,o.pendingProps=c=g,(e.lanes&i)!==0)e.flags&131072&&(dh=!0);else return o.lanes=e.lanes,Zi(e,o,i)}return cj(e,o,s,c,i)}function dj(e,o,s){var c=o.pendingProps,i=c.children,g=e!==null?e.memoizedState:null;if(c.mode==="hidden")if(!(o.mode&1))o.memoizedState={baseLanes:0,cachePool:null,transitions:null},G(ej,fj),fj|=s;else{if(!(s&1073741824))return e=g!==null?g.baseLanes|s:s,o.lanes=o.childLanes=1073741824,o.memoizedState={baseLanes:e,cachePool:null,transitions:null},o.updateQueue=null,G(ej,fj),fj|=e,null;o.memoizedState={baseLanes:0,cachePool:null,transitions:null},c=g!==null?g.baseLanes:s,G(ej,fj),fj|=c}else g!==null?(c=g.baseLanes|s,o.memoizedState=null):c=s,G(ej,fj),fj|=c;return Xi(e,o,i,s),o.child}function gj(e,o){var s=o.ref;(e===null&&s!==null||e!==null&&e.ref!==s)&&(o.flags|=512,o.flags|=2097152)}function cj(e,o,s,c,i){var g=Zf(s)?Xf:H.current;return g=Yf(o,g),ch(o,i),s=Nh(e,o,s,c,g,i),c=Sh(),e!==null&&!dh?(o.updateQueue=e.updateQueue,o.flags&=-2053,e.lanes&=~i,Zi(e,o,i)):(I&&c&&vg(o),o.flags|=1,Xi(e,o,s,i),o.child)}function hj(e,o,s,c,i){if(Zf(s)){var g=!0;cg(o)}else g=!1;if(ch(o,i),o.stateNode===null)ij(e,o),Gi(o,s,c),Ii(o,s,c,i),c=!0;else if(e===null){var h=o.stateNode,$=o.memoizedProps;h.props=$;var j=h.context,_=s.contextType;typeof _=="object"&&_!==null?_=eh(_):(_=Zf(s)?Xf:H.current,_=Yf(o,_));var _e=s.getDerivedStateFromProps,et=typeof _e=="function"||typeof h.getSnapshotBeforeUpdate=="function";et||typeof h.UNSAFE_componentWillReceiveProps!="function"&&typeof h.componentWillReceiveProps!="function"||($!==c||j!==_)&&Hi(o,h,c,_),jh=!1;var tt=o.memoizedState;h.state=tt,qh(o,c,h,i),j=o.memoizedState,$!==c||tt!==j||Wf.current||jh?(typeof _e=="function"&&(Di(o,s,_e,c),j=o.memoizedState),($=jh||Fi(o,s,$,c,tt,j,_))?(et||typeof h.UNSAFE_componentWillMount!="function"&&typeof h.componentWillMount!="function"||(typeof h.componentWillMount=="function"&&h.componentWillMount(),typeof h.UNSAFE_componentWillMount=="function"&&h.UNSAFE_componentWillMount()),typeof h.componentDidMount=="function"&&(o.flags|=4194308)):(typeof h.componentDidMount=="function"&&(o.flags|=4194308),o.memoizedProps=c,o.memoizedState=j),h.props=c,h.state=j,h.context=_,c=$):(typeof h.componentDidMount=="function"&&(o.flags|=4194308),c=!1)}else{h=o.stateNode,lh(e,o),$=o.memoizedProps,_=o.type===o.elementType?$:Ci(o.type,$),h.props=_,et=o.pendingProps,tt=h.context,j=s.contextType,typeof j=="object"&&j!==null?j=eh(j):(j=Zf(s)?Xf:H.current,j=Yf(o,j));var at=s.getDerivedStateFromProps;(_e=typeof at=="function"||typeof h.getSnapshotBeforeUpdate=="function")||typeof h.UNSAFE_componentWillReceiveProps!="function"&&typeof h.componentWillReceiveProps!="function"||($!==et||tt!==j)&&Hi(o,h,c,j),jh=!1,tt=o.memoizedState,h.state=tt,qh(o,c,h,i);var rt=o.memoizedState;$!==et||tt!==rt||Wf.current||jh?(typeof at=="function"&&(Di(o,s,at,c),rt=o.memoizedState),(_=jh||Fi(o,s,_,c,tt,rt,j)||!1)?(_e||typeof h.UNSAFE_componentWillUpdate!="function"&&typeof h.componentWillUpdate!="function"||(typeof h.componentWillUpdate=="function"&&h.componentWillUpdate(c,rt,j),typeof h.UNSAFE_componentWillUpdate=="function"&&h.UNSAFE_componentWillUpdate(c,rt,j)),typeof h.componentDidUpdate=="function"&&(o.flags|=4),typeof h.getSnapshotBeforeUpdate=="function"&&(o.flags|=1024)):(typeof h.componentDidUpdate!="function"||$===e.memoizedProps&&tt===e.memoizedState||(o.flags|=4),typeof h.getSnapshotBeforeUpdate!="function"||$===e.memoizedProps&&tt===e.memoizedState||(o.flags|=1024),o.memoizedProps=c,o.memoizedState=rt),h.props=c,h.state=rt,h.context=j,c=_):(typeof h.componentDidUpdate!="function"||$===e.memoizedProps&&tt===e.memoizedState||(o.flags|=4),typeof h.getSnapshotBeforeUpdate!="function"||$===e.memoizedProps&&tt===e.memoizedState||(o.flags|=1024),c=!1)}return jj(e,o,s,c,g,i)}function jj(e,o,s,c,i,g){gj(e,o);var h=(o.flags&128)!==0;if(!c&&!h)return i&&dg(o,s,!1),Zi(e,o,g);c=o.stateNode,Wi.current=o;var $=h&&typeof s.getDerivedStateFromError!="function"?null:c.render();return o.flags|=1,e!==null&&h?(o.child=Ug(o,e.child,null,g),o.child=Ug(o,null,$,g)):Xi(e,o,$,g),o.memoizedState=c.state,i&&dg(o,s,!0),o.child}function kj(e){var o=e.stateNode;o.pendingContext?ag(e,o.pendingContext,o.pendingContext!==o.context):o.context&&ag(e,o.context,!1),yh(e,o.containerInfo)}function lj(e,o,s,c,i){return Ig(),Jg(i),o.flags|=256,Xi(e,o,s,c),o.child}var mj={dehydrated:null,treeContext:null,retryLane:0};function nj(e){return{baseLanes:e,cachePool:null,transitions:null}}function oj(e,o,s){var c=o.pendingProps,i=L.current,g=!1,h=(o.flags&128)!==0,$;if(($=h)||($=e!==null&&e.memoizedState===null?!1:(i&2)!==0),$?(g=!0,o.flags&=-129):(e===null||e.memoizedState!==null)&&(i|=1),G(L,i&1),e===null)return Eg(o),e=o.memoizedState,e!==null&&(e=e.dehydrated,e!==null)?(o.mode&1?e.data==="$!"?o.lanes=8:o.lanes=1073741824:o.lanes=1,null):(h=c.children,e=c.fallback,g?(c=o.mode,g=o.child,h={mode:"hidden",children:h},!(c&1)&&g!==null?(g.childLanes=0,g.pendingProps=h):g=pj(h,c,0,null),e=Tg(e,c,s,null),g.return=o,e.return=o,g.sibling=e,o.child=g,o.child.memoizedState=nj(s),o.memoizedState=mj,e):qj(o,h));if(i=e.memoizedState,i!==null&&($=i.dehydrated,$!==null))return rj(e,o,h,c,$,i,s);if(g){g=c.fallback,h=o.mode,i=e.child,$=i.sibling;var j={mode:"hidden",children:c.children};return!(h&1)&&o.child!==i?(c=o.child,c.childLanes=0,c.pendingProps=j,o.deletions=null):(c=Pg(i,j),c.subtreeFlags=i.subtreeFlags&14680064),$!==null?g=Pg($,g):(g=Tg(g,h,s,null),g.flags|=2),g.return=o,c.return=o,c.sibling=g,o.child=c,c=g,g=o.child,h=e.child.memoizedState,h=h===null?nj(s):{baseLanes:h.baseLanes|s,cachePool:null,transitions:h.transitions},g.memoizedState=h,g.childLanes=e.childLanes&~s,o.memoizedState=mj,c}return g=e.child,e=g.sibling,c=Pg(g,{mode:"visible",children:c.children}),!(o.mode&1)&&(c.lanes=s),c.return=o,c.sibling=null,e!==null&&(s=o.deletions,s===null?(o.deletions=[e],o.flags|=16):s.push(e)),o.child=c,o.memoizedState=null,c}function qj(e,o){return o=pj({mode:"visible",children:o},e.mode,0,null),o.return=e,e.child=o}function sj(e,o,s,c){return c!==null&&Jg(c),Ug(o,e.child,null,s),e=qj(o,o.pendingProps.children),e.flags|=2,o.memoizedState=null,e}function rj(e,o,s,c,i,g,h){if(s)return o.flags&256?(o.flags&=-257,c=Ki(Error(p$1(422))),sj(e,o,h,c)):o.memoizedState!==null?(o.child=e.child,o.flags|=128,null):(g=c.fallback,i=o.mode,c=pj({mode:"visible",children:c.children},i,0,null),g=Tg(g,i,h,null),g.flags|=2,c.return=o,g.return=o,c.sibling=g,o.child=c,o.mode&1&&Ug(o,e.child,null,h),o.child.memoizedState=nj(h),o.memoizedState=mj,g);if(!(o.mode&1))return sj(e,o,h,null);if(i.data==="$!"){if(c=i.nextSibling&&i.nextSibling.dataset,c)var $=c.dgst;return c=$,g=Error(p$1(419)),c=Ki(g,c,void 0),sj(e,o,h,c)}if($=(h&e.childLanes)!==0,dh||$){if(c=Q,c!==null){switch(h&-h){case 4:i=2;break;case 16:i=8;break;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:i=32;break;case 536870912:i=268435456;break;default:i=0}i=i&(c.suspendedLanes|h)?0:i,i!==0&&i!==g.retryLane&&(g.retryLane=i,ih(e,i),gi(c,e,i,-1))}return tj(),c=Ki(Error(p$1(421))),sj(e,o,h,c)}return i.data==="$?"?(o.flags|=128,o.child=e.child,o=uj.bind(null,e),i._reactRetry=o,null):(e=g.treeContext,yg=Lf(i.nextSibling),xg=o,I=!0,zg=null,e!==null&&(og[pg++]=rg,og[pg++]=sg,og[pg++]=qg,rg=e.id,sg=e.overflow,qg=o),o=qj(o,c.children),o.flags|=4096,o)}function vj(e,o,s){e.lanes|=o;var c=e.alternate;c!==null&&(c.lanes|=o),bh(e.return,o,s)}function wj(e,o,s,c,i){var g=e.memoizedState;g===null?e.memoizedState={isBackwards:o,rendering:null,renderingStartTime:0,last:c,tail:s,tailMode:i}:(g.isBackwards=o,g.rendering=null,g.renderingStartTime=0,g.last=c,g.tail=s,g.tailMode=i)}function xj(e,o,s){var c=o.pendingProps,i=c.revealOrder,g=c.tail;if(Xi(e,o,c.children,s),c=L.current,c&2)c=c&1|2,o.flags|=128;else{if(e!==null&&e.flags&128)e:for(e=o.child;e!==null;){if(e.tag===13)e.memoizedState!==null&&vj(e,s,o);else if(e.tag===19)vj(e,s,o);else if(e.child!==null){e.child.return=e,e=e.child;continue}if(e===o)break e;for(;e.sibling===null;){if(e.return===null||e.return===o)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}c&=1}if(G(L,c),!(o.mode&1))o.memoizedState=null;else switch(i){case"forwards":for(s=o.child,i=null;s!==null;)e=s.alternate,e!==null&&Ch(e)===null&&(i=s),s=s.sibling;s=i,s===null?(i=o.child,o.child=null):(i=s.sibling,s.sibling=null),wj(o,!1,i,s,g);break;case"backwards":for(s=null,i=o.child,o.child=null;i!==null;){if(e=i.alternate,e!==null&&Ch(e)===null){o.child=i;break}e=i.sibling,i.sibling=s,s=i,i=e}wj(o,!0,s,null,g);break;case"together":wj(o,!1,null,null,void 0);break;default:o.memoizedState=null}return o.child}function ij(e,o){!(o.mode&1)&&e!==null&&(e.alternate=null,o.alternate=null,o.flags|=2)}function Zi(e,o,s){if(e!==null&&(o.dependencies=e.dependencies),rh|=o.lanes,!(s&o.childLanes))return null;if(e!==null&&o.child!==e.child)throw Error(p$1(153));if(o.child!==null){for(e=o.child,s=Pg(e,e.pendingProps),o.child=s,s.return=o;e.sibling!==null;)e=e.sibling,s=s.sibling=Pg(e,e.pendingProps),s.return=o;s.sibling=null}return o.child}function yj(e,o,s){switch(o.tag){case 3:kj(o),Ig();break;case 5:Ah(o);break;case 1:Zf(o.type)&&cg(o);break;case 4:yh(o,o.stateNode.containerInfo);break;case 10:var c=o.type._context,i=o.memoizedProps.value;G(Wg,c._currentValue),c._currentValue=i;break;case 13:if(c=o.memoizedState,c!==null)return c.dehydrated!==null?(G(L,L.current&1),o.flags|=128,null):s&o.child.childLanes?oj(e,o,s):(G(L,L.current&1),e=Zi(e,o,s),e!==null?e.sibling:null);G(L,L.current&1);break;case 19:if(c=(s&o.childLanes)!==0,e.flags&128){if(c)return xj(e,o,s);o.flags|=128}if(i=o.memoizedState,i!==null&&(i.rendering=null,i.tail=null,i.lastEffect=null),G(L,L.current),c)break;return null;case 22:case 23:return o.lanes=0,dj(e,o,s)}return Zi(e,o,s)}var zj,Aj,Bj,Cj;zj=function(e,o){for(var s=o.child;s!==null;){if(s.tag===5||s.tag===6)e.appendChild(s.stateNode);else if(s.tag!==4&&s.child!==null){s.child.return=s,s=s.child;continue}if(s===o)break;for(;s.sibling===null;){if(s.return===null||s.return===o)return;s=s.return}s.sibling.return=s.return,s=s.sibling}};Aj=function(){};Bj=function(e,o,s,c){var i=e.memoizedProps;if(i!==c){e=o.stateNode,xh(uh.current);var g=null;switch(s){case"input":i=Ya(e,i),c=Ya(e,c),g=[];break;case"select":i=A({},i,{value:void 0}),c=A({},c,{value:void 0}),g=[];break;case"textarea":i=gb(e,i),c=gb(e,c),g=[];break;default:typeof i.onClick!="function"&&typeof c.onClick=="function"&&(e.onclick=Bf)}ub(s,c);var h;s=null;for(_ in i)if(!c.hasOwnProperty(_)&&i.hasOwnProperty(_)&&i[_]!=null)if(_==="style"){var $=i[_];for(h in $)$.hasOwnProperty(h)&&(s||(s={}),s[h]="")}else _!=="dangerouslySetInnerHTML"&&_!=="children"&&_!=="suppressContentEditableWarning"&&_!=="suppressHydrationWarning"&&_!=="autoFocus"&&(ea.hasOwnProperty(_)?g||(g=[]):(g=g||[]).push(_,null));for(_ in c){var j=c[_];if($=i!=null?i[_]:void 0,c.hasOwnProperty(_)&&j!==$&&(j!=null||$!=null))if(_==="style")if($){for(h in $)!$.hasOwnProperty(h)||j&&j.hasOwnProperty(h)||(s||(s={}),s[h]="");for(h in j)j.hasOwnProperty(h)&&$[h]!==j[h]&&(s||(s={}),s[h]=j[h])}else s||(g||(g=[]),g.push(_,s)),s=j;else _==="dangerouslySetInnerHTML"?(j=j?j.__html:void 0,$=$?$.__html:void 0,j!=null&&$!==j&&(g=g||[]).push(_,j)):_==="children"?typeof j!="string"&&typeof j!="number"||(g=g||[]).push(_,""+j):_!=="suppressContentEditableWarning"&&_!=="suppressHydrationWarning"&&(ea.hasOwnProperty(_)?(j!=null&&_==="onScroll"&&D("scroll",e),g||$===j||(g=[])):(g=g||[]).push(_,j))}s&&(g=g||[]).push("style",s);var _=g;(o.updateQueue=_)&&(o.flags|=4)}};Cj=function(e,o,s,c){s!==c&&(o.flags|=4)};function Dj(e,o){if(!I)switch(e.tailMode){case"hidden":o=e.tail;for(var s=null;o!==null;)o.alternate!==null&&(s=o),o=o.sibling;s===null?e.tail=null:s.sibling=null;break;case"collapsed":s=e.tail;for(var c=null;s!==null;)s.alternate!==null&&(c=s),s=s.sibling;c===null?o||e.tail===null?e.tail=null:e.tail.sibling=null:c.sibling=null}}function S(e){var o=e.alternate!==null&&e.alternate.child===e.child,s=0,c=0;if(o)for(var i=e.child;i!==null;)s|=i.lanes|i.childLanes,c|=i.subtreeFlags&14680064,c|=i.flags&14680064,i.return=e,i=i.sibling;else for(i=e.child;i!==null;)s|=i.lanes|i.childLanes,c|=i.subtreeFlags,c|=i.flags,i.return=e,i=i.sibling;return e.subtreeFlags|=c,e.childLanes=s,o}function Ej(e,o,s){var c=o.pendingProps;switch(wg(o),o.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return S(o),null;case 1:return Zf(o.type)&&$f(),S(o),null;case 3:return c=o.stateNode,zh(),E(Wf),E(H),Eh(),c.pendingContext&&(c.context=c.pendingContext,c.pendingContext=null),(e===null||e.child===null)&&(Gg(o)?o.flags|=4:e===null||e.memoizedState.isDehydrated&&!(o.flags&256)||(o.flags|=1024,zg!==null&&(Fj(zg),zg=null))),Aj(e,o),S(o),null;case 5:Bh(o);var i=xh(wh.current);if(s=o.type,e!==null&&o.stateNode!=null)Bj(e,o,s,c,i),e.ref!==o.ref&&(o.flags|=512,o.flags|=2097152);else{if(!c){if(o.stateNode===null)throw Error(p$1(166));return S(o),null}if(e=xh(uh.current),Gg(o)){c=o.stateNode,s=o.type;var g=o.memoizedProps;switch(c[Of]=o,c[Pf]=g,e=(o.mode&1)!==0,s){case"dialog":D("cancel",c),D("close",c);break;case"iframe":case"object":case"embed":D("load",c);break;case"video":case"audio":for(i=0;i<lf.length;i++)D(lf[i],c);break;case"source":D("error",c);break;case"img":case"image":case"link":D("error",c),D("load",c);break;case"details":D("toggle",c);break;case"input":Za(c,g),D("invalid",c);break;case"select":c._wrapperState={wasMultiple:!!g.multiple},D("invalid",c);break;case"textarea":hb(c,g),D("invalid",c)}ub(s,g),i=null;for(var h in g)if(g.hasOwnProperty(h)){var $=g[h];h==="children"?typeof $=="string"?c.textContent!==$&&(g.suppressHydrationWarning!==!0&&Af(c.textContent,$,e),i=["children",$]):typeof $=="number"&&c.textContent!==""+$&&(g.suppressHydrationWarning!==!0&&Af(c.textContent,$,e),i=["children",""+$]):ea.hasOwnProperty(h)&&$!=null&&h==="onScroll"&&D("scroll",c)}switch(s){case"input":Va(c),db(c,g,!0);break;case"textarea":Va(c),jb(c);break;case"select":case"option":break;default:typeof g.onClick=="function"&&(c.onclick=Bf)}c=i,o.updateQueue=c,c!==null&&(o.flags|=4)}else{h=i.nodeType===9?i:i.ownerDocument,e==="http://www.w3.org/1999/xhtml"&&(e=kb(s)),e==="http://www.w3.org/1999/xhtml"?s==="script"?(e=h.createElement("div"),e.innerHTML="<script><\/script>",e=e.removeChild(e.firstChild)):typeof c.is=="string"?e=h.createElement(s,{is:c.is}):(e=h.createElement(s),s==="select"&&(h=e,c.multiple?h.multiple=!0:c.size&&(h.size=c.size))):e=h.createElementNS(e,s),e[Of]=o,e[Pf]=c,zj(e,o,!1,!1),o.stateNode=e;e:{switch(h=vb(s,c),s){case"dialog":D("cancel",e),D("close",e),i=c;break;case"iframe":case"object":case"embed":D("load",e),i=c;break;case"video":case"audio":for(i=0;i<lf.length;i++)D(lf[i],e);i=c;break;case"source":D("error",e),i=c;break;case"img":case"image":case"link":D("error",e),D("load",e),i=c;break;case"details":D("toggle",e),i=c;break;case"input":Za(e,c),i=Ya(e,c),D("invalid",e);break;case"option":i=c;break;case"select":e._wrapperState={wasMultiple:!!c.multiple},i=A({},c,{value:void 0}),D("invalid",e);break;case"textarea":hb(e,c),i=gb(e,c),D("invalid",e);break;default:i=c}ub(s,i),$=i;for(g in $)if($.hasOwnProperty(g)){var j=$[g];g==="style"?sb(e,j):g==="dangerouslySetInnerHTML"?(j=j?j.__html:void 0,j!=null&&nb(e,j)):g==="children"?typeof j=="string"?(s!=="textarea"||j!=="")&&ob(e,j):typeof j=="number"&&ob(e,""+j):g!=="suppressContentEditableWarning"&&g!=="suppressHydrationWarning"&&g!=="autoFocus"&&(ea.hasOwnProperty(g)?j!=null&&g==="onScroll"&&D("scroll",e):j!=null&&ta(e,g,j,h))}switch(s){case"input":Va(e),db(e,c,!1);break;case"textarea":Va(e),jb(e);break;case"option":c.value!=null&&e.setAttribute("value",""+Sa(c.value));break;case"select":e.multiple=!!c.multiple,g=c.value,g!=null?fb(e,!!c.multiple,g,!1):c.defaultValue!=null&&fb(e,!!c.multiple,c.defaultValue,!0);break;default:typeof i.onClick=="function"&&(e.onclick=Bf)}switch(s){case"button":case"input":case"select":case"textarea":c=!!c.autoFocus;break e;case"img":c=!0;break e;default:c=!1}}c&&(o.flags|=4)}o.ref!==null&&(o.flags|=512,o.flags|=2097152)}return S(o),null;case 6:if(e&&o.stateNode!=null)Cj(e,o,e.memoizedProps,c);else{if(typeof c!="string"&&o.stateNode===null)throw Error(p$1(166));if(s=xh(wh.current),xh(uh.current),Gg(o)){if(c=o.stateNode,s=o.memoizedProps,c[Of]=o,(g=c.nodeValue!==s)&&(e=xg,e!==null))switch(e.tag){case 3:Af(c.nodeValue,s,(e.mode&1)!==0);break;case 5:e.memoizedProps.suppressHydrationWarning!==!0&&Af(c.nodeValue,s,(e.mode&1)!==0)}g&&(o.flags|=4)}else c=(s.nodeType===9?s:s.ownerDocument).createTextNode(c),c[Of]=o,o.stateNode=c}return S(o),null;case 13:if(E(L),c=o.memoizedState,e===null||e.memoizedState!==null&&e.memoizedState.dehydrated!==null){if(I&&yg!==null&&o.mode&1&&!(o.flags&128))Hg(),Ig(),o.flags|=98560,g=!1;else if(g=Gg(o),c!==null&&c.dehydrated!==null){if(e===null){if(!g)throw Error(p$1(318));if(g=o.memoizedState,g=g!==null?g.dehydrated:null,!g)throw Error(p$1(317));g[Of]=o}else Ig(),!(o.flags&128)&&(o.memoizedState=null),o.flags|=4;S(o),g=!1}else zg!==null&&(Fj(zg),zg=null),g=!0;if(!g)return o.flags&65536?o:null}return o.flags&128?(o.lanes=s,o):(c=c!==null,c!==(e!==null&&e.memoizedState!==null)&&c&&(o.child.flags|=8192,o.mode&1&&(e===null||L.current&1?T===0&&(T=3):tj())),o.updateQueue!==null&&(o.flags|=4),S(o),null);case 4:return zh(),Aj(e,o),e===null&&sf(o.stateNode.containerInfo),S(o),null;case 10:return ah(o.type._context),S(o),null;case 17:return Zf(o.type)&&$f(),S(o),null;case 19:if(E(L),g=o.memoizedState,g===null)return S(o),null;if(c=(o.flags&128)!==0,h=g.rendering,h===null)if(c)Dj(g,!1);else{if(T!==0||e!==null&&e.flags&128)for(e=o.child;e!==null;){if(h=Ch(e),h!==null){for(o.flags|=128,Dj(g,!1),c=h.updateQueue,c!==null&&(o.updateQueue=c,o.flags|=4),o.subtreeFlags=0,c=s,s=o.child;s!==null;)g=s,e=c,g.flags&=14680066,h=g.alternate,h===null?(g.childLanes=0,g.lanes=e,g.child=null,g.subtreeFlags=0,g.memoizedProps=null,g.memoizedState=null,g.updateQueue=null,g.dependencies=null,g.stateNode=null):(g.childLanes=h.childLanes,g.lanes=h.lanes,g.child=h.child,g.subtreeFlags=0,g.deletions=null,g.memoizedProps=h.memoizedProps,g.memoizedState=h.memoizedState,g.updateQueue=h.updateQueue,g.type=h.type,e=h.dependencies,g.dependencies=e===null?null:{lanes:e.lanes,firstContext:e.firstContext}),s=s.sibling;return G(L,L.current&1|2),o.child}e=e.sibling}g.tail!==null&&B()>Gj&&(o.flags|=128,c=!0,Dj(g,!1),o.lanes=4194304)}else{if(!c)if(e=Ch(h),e!==null){if(o.flags|=128,c=!0,s=e.updateQueue,s!==null&&(o.updateQueue=s,o.flags|=4),Dj(g,!0),g.tail===null&&g.tailMode==="hidden"&&!h.alternate&&!I)return S(o),null}else 2*B()-g.renderingStartTime>Gj&&s!==1073741824&&(o.flags|=128,c=!0,Dj(g,!1),o.lanes=4194304);g.isBackwards?(h.sibling=o.child,o.child=h):(s=g.last,s!==null?s.sibling=h:o.child=h,g.last=h)}return g.tail!==null?(o=g.tail,g.rendering=o,g.tail=o.sibling,g.renderingStartTime=B(),o.sibling=null,s=L.current,G(L,c?s&1|2:s&1),o):(S(o),null);case 22:case 23:return Hj(),c=o.memoizedState!==null,e!==null&&e.memoizedState!==null!==c&&(o.flags|=8192),c&&o.mode&1?fj&1073741824&&(S(o),o.subtreeFlags&6&&(o.flags|=8192)):S(o),null;case 24:return null;case 25:return null}throw Error(p$1(156,o.tag))}function Ij(e,o){switch(wg(o),o.tag){case 1:return Zf(o.type)&&$f(),e=o.flags,e&65536?(o.flags=e&-65537|128,o):null;case 3:return zh(),E(Wf),E(H),Eh(),e=o.flags,e&65536&&!(e&128)?(o.flags=e&-65537|128,o):null;case 5:return Bh(o),null;case 13:if(E(L),e=o.memoizedState,e!==null&&e.dehydrated!==null){if(o.alternate===null)throw Error(p$1(340));Ig()}return e=o.flags,e&65536?(o.flags=e&-65537|128,o):null;case 19:return E(L),null;case 4:return zh(),null;case 10:return ah(o.type._context),null;case 22:case 23:return Hj(),null;case 24:return null;default:return null}}var Jj=!1,U=!1,Kj=typeof WeakSet=="function"?WeakSet:Set,V=null;function Lj(e,o){var s=e.ref;if(s!==null)if(typeof s=="function")try{s(null)}catch(c){W(e,o,c)}else s.current=null}function Mj(e,o,s){try{s()}catch(c){W(e,o,c)}}var Nj=!1;function Oj(e,o){if(Cf=dd,e=Me(),Ne(e)){if("selectionStart"in e)var s={start:e.selectionStart,end:e.selectionEnd};else e:{s=(s=e.ownerDocument)&&s.defaultView||window;var c=s.getSelection&&s.getSelection();if(c&&c.rangeCount!==0){s=c.anchorNode;var i=c.anchorOffset,g=c.focusNode;c=c.focusOffset;try{s.nodeType,g.nodeType}catch{s=null;break e}var h=0,$=-1,j=-1,_=0,_e=0,et=e,tt=null;t:for(;;){for(var at;et!==s||i!==0&&et.nodeType!==3||($=h+i),et!==g||c!==0&&et.nodeType!==3||(j=h+c),et.nodeType===3&&(h+=et.nodeValue.length),(at=et.firstChild)!==null;)tt=et,et=at;for(;;){if(et===e)break t;if(tt===s&&++_===i&&($=h),tt===g&&++_e===c&&(j=h),(at=et.nextSibling)!==null)break;et=tt,tt=et.parentNode}et=at}s=$===-1||j===-1?null:{start:$,end:j}}else s=null}s=s||{start:0,end:0}}else s=null;for(Df={focusedElem:e,selectionRange:s},dd=!1,V=o;V!==null;)if(o=V,e=o.child,(o.subtreeFlags&1028)!==0&&e!==null)e.return=o,V=e;else for(;V!==null;){o=V;try{var rt=o.alternate;if(o.flags&1024)switch(o.tag){case 0:case 11:case 15:break;case 1:if(rt!==null){var dt=rt.memoizedProps,mt=rt.memoizedState,st=o.stateNode,ot=st.getSnapshotBeforeUpdate(o.elementType===o.type?dt:Ci(o.type,dt),mt);st.__reactInternalSnapshotBeforeUpdate=ot}break;case 3:var nt=o.stateNode.containerInfo;nt.nodeType===1?nt.textContent="":nt.nodeType===9&&nt.documentElement&&nt.removeChild(nt.documentElement);break;case 5:case 6:case 4:case 17:break;default:throw Error(p$1(163))}}catch(lt){W(o,o.return,lt)}if(e=o.sibling,e!==null){e.return=o.return,V=e;break}V=o.return}return rt=Nj,Nj=!1,rt}function Pj(e,o,s){var c=o.updateQueue;if(c=c!==null?c.lastEffect:null,c!==null){var i=c=c.next;do{if((i.tag&e)===e){var g=i.destroy;i.destroy=void 0,g!==void 0&&Mj(o,s,g)}i=i.next}while(i!==c)}}function Qj(e,o){if(o=o.updateQueue,o=o!==null?o.lastEffect:null,o!==null){var s=o=o.next;do{if((s.tag&e)===e){var c=s.create;s.destroy=c()}s=s.next}while(s!==o)}}function Rj(e){var o=e.ref;if(o!==null){var s=e.stateNode;switch(e.tag){case 5:e=s;break;default:e=s}typeof o=="function"?o(e):o.current=e}}function Sj(e){var o=e.alternate;o!==null&&(e.alternate=null,Sj(o)),e.child=null,e.deletions=null,e.sibling=null,e.tag===5&&(o=e.stateNode,o!==null&&(delete o[Of],delete o[Pf],delete o[of],delete o[Qf],delete o[Rf])),e.stateNode=null,e.return=null,e.dependencies=null,e.memoizedProps=null,e.memoizedState=null,e.pendingProps=null,e.stateNode=null,e.updateQueue=null}function Tj(e){return e.tag===5||e.tag===3||e.tag===4}function Uj(e){e:for(;;){for(;e.sibling===null;){if(e.return===null||Tj(e.return))return null;e=e.return}for(e.sibling.return=e.return,e=e.sibling;e.tag!==5&&e.tag!==6&&e.tag!==18;){if(e.flags&2||e.child===null||e.tag===4)continue e;e.child.return=e,e=e.child}if(!(e.flags&2))return e.stateNode}}function Vj(e,o,s){var c=e.tag;if(c===5||c===6)e=e.stateNode,o?s.nodeType===8?s.parentNode.insertBefore(e,o):s.insertBefore(e,o):(s.nodeType===8?(o=s.parentNode,o.insertBefore(e,s)):(o=s,o.appendChild(e)),s=s._reactRootContainer,s!=null||o.onclick!==null||(o.onclick=Bf));else if(c!==4&&(e=e.child,e!==null))for(Vj(e,o,s),e=e.sibling;e!==null;)Vj(e,o,s),e=e.sibling}function Wj(e,o,s){var c=e.tag;if(c===5||c===6)e=e.stateNode,o?s.insertBefore(e,o):s.appendChild(e);else if(c!==4&&(e=e.child,e!==null))for(Wj(e,o,s),e=e.sibling;e!==null;)Wj(e,o,s),e=e.sibling}var X=null,Xj=!1;function Yj(e,o,s){for(s=s.child;s!==null;)Zj(e,o,s),s=s.sibling}function Zj(e,o,s){if(lc&&typeof lc.onCommitFiberUnmount=="function")try{lc.onCommitFiberUnmount(kc,s)}catch{}switch(s.tag){case 5:U||Lj(s,o);case 6:var c=X,i=Xj;X=null,Yj(e,o,s),X=c,Xj=i,X!==null&&(Xj?(e=X,s=s.stateNode,e.nodeType===8?e.parentNode.removeChild(s):e.removeChild(s)):X.removeChild(s.stateNode));break;case 18:X!==null&&(Xj?(e=X,s=s.stateNode,e.nodeType===8?Kf(e.parentNode,s):e.nodeType===1&&Kf(e,s),bd(e)):Kf(X,s.stateNode));break;case 4:c=X,i=Xj,X=s.stateNode.containerInfo,Xj=!0,Yj(e,o,s),X=c,Xj=i;break;case 0:case 11:case 14:case 15:if(!U&&(c=s.updateQueue,c!==null&&(c=c.lastEffect,c!==null))){i=c=c.next;do{var g=i,h=g.destroy;g=g.tag,h!==void 0&&(g&2||g&4)&&Mj(s,o,h),i=i.next}while(i!==c)}Yj(e,o,s);break;case 1:if(!U&&(Lj(s,o),c=s.stateNode,typeof c.componentWillUnmount=="function"))try{c.props=s.memoizedProps,c.state=s.memoizedState,c.componentWillUnmount()}catch($){W(s,o,$)}Yj(e,o,s);break;case 21:Yj(e,o,s);break;case 22:s.mode&1?(U=(c=U)||s.memoizedState!==null,Yj(e,o,s),U=c):Yj(e,o,s);break;default:Yj(e,o,s)}}function ak(e){var o=e.updateQueue;if(o!==null){e.updateQueue=null;var s=e.stateNode;s===null&&(s=e.stateNode=new Kj),o.forEach(function(c){var i=bk.bind(null,e,c);s.has(c)||(s.add(c),c.then(i,i))})}}function ck(e,o){var s=o.deletions;if(s!==null)for(var c=0;c<s.length;c++){var i=s[c];try{var g=e,h=o,$=h;e:for(;$!==null;){switch($.tag){case 5:X=$.stateNode,Xj=!1;break e;case 3:X=$.stateNode.containerInfo,Xj=!0;break e;case 4:X=$.stateNode.containerInfo,Xj=!0;break e}$=$.return}if(X===null)throw Error(p$1(160));Zj(g,h,i),X=null,Xj=!1;var j=i.alternate;j!==null&&(j.return=null),i.return=null}catch(_){W(i,o,_)}}if(o.subtreeFlags&12854)for(o=o.child;o!==null;)dk(o,e),o=o.sibling}function dk(e,o){var s=e.alternate,c=e.flags;switch(e.tag){case 0:case 11:case 14:case 15:if(ck(o,e),ek(e),c&4){try{Pj(3,e,e.return),Qj(3,e)}catch(dt){W(e,e.return,dt)}try{Pj(5,e,e.return)}catch(dt){W(e,e.return,dt)}}break;case 1:ck(o,e),ek(e),c&512&&s!==null&&Lj(s,s.return);break;case 5:if(ck(o,e),ek(e),c&512&&s!==null&&Lj(s,s.return),e.flags&32){var i=e.stateNode;try{ob(i,"")}catch(dt){W(e,e.return,dt)}}if(c&4&&(i=e.stateNode,i!=null)){var g=e.memoizedProps,h=s!==null?s.memoizedProps:g,$=e.type,j=e.updateQueue;if(e.updateQueue=null,j!==null)try{$==="input"&&g.type==="radio"&&g.name!=null&&ab(i,g),vb($,h);var _=vb($,g);for(h=0;h<j.length;h+=2){var _e=j[h],et=j[h+1];_e==="style"?sb(i,et):_e==="dangerouslySetInnerHTML"?nb(i,et):_e==="children"?ob(i,et):ta(i,_e,et,_)}switch($){case"input":bb(i,g);break;case"textarea":ib(i,g);break;case"select":var tt=i._wrapperState.wasMultiple;i._wrapperState.wasMultiple=!!g.multiple;var at=g.value;at!=null?fb(i,!!g.multiple,at,!1):tt!==!!g.multiple&&(g.defaultValue!=null?fb(i,!!g.multiple,g.defaultValue,!0):fb(i,!!g.multiple,g.multiple?[]:"",!1))}i[Pf]=g}catch(dt){W(e,e.return,dt)}}break;case 6:if(ck(o,e),ek(e),c&4){if(e.stateNode===null)throw Error(p$1(162));i=e.stateNode,g=e.memoizedProps;try{i.nodeValue=g}catch(dt){W(e,e.return,dt)}}break;case 3:if(ck(o,e),ek(e),c&4&&s!==null&&s.memoizedState.isDehydrated)try{bd(o.containerInfo)}catch(dt){W(e,e.return,dt)}break;case 4:ck(o,e),ek(e);break;case 13:ck(o,e),ek(e),i=e.child,i.flags&8192&&(g=i.memoizedState!==null,i.stateNode.isHidden=g,!g||i.alternate!==null&&i.alternate.memoizedState!==null||(fk=B())),c&4&&ak(e);break;case 22:if(_e=s!==null&&s.memoizedState!==null,e.mode&1?(U=(_=U)||_e,ck(o,e),U=_):ck(o,e),ek(e),c&8192){if(_=e.memoizedState!==null,(e.stateNode.isHidden=_)&&!_e&&e.mode&1)for(V=e,_e=e.child;_e!==null;){for(et=V=_e;V!==null;){switch(tt=V,at=tt.child,tt.tag){case 0:case 11:case 14:case 15:Pj(4,tt,tt.return);break;case 1:Lj(tt,tt.return);var rt=tt.stateNode;if(typeof rt.componentWillUnmount=="function"){c=tt,s=tt.return;try{o=c,rt.props=o.memoizedProps,rt.state=o.memoizedState,rt.componentWillUnmount()}catch(dt){W(c,s,dt)}}break;case 5:Lj(tt,tt.return);break;case 22:if(tt.memoizedState!==null){gk(et);continue}}at!==null?(at.return=tt,V=at):gk(et)}_e=_e.sibling}e:for(_e=null,et=e;;){if(et.tag===5){if(_e===null){_e=et;try{i=et.stateNode,_?(g=i.style,typeof g.setProperty=="function"?g.setProperty("display","none","important"):g.display="none"):($=et.stateNode,j=et.memoizedProps.style,h=j!=null&&j.hasOwnProperty("display")?j.display:null,$.style.display=rb("display",h))}catch(dt){W(e,e.return,dt)}}}else if(et.tag===6){if(_e===null)try{et.stateNode.nodeValue=_?"":et.memoizedProps}catch(dt){W(e,e.return,dt)}}else if((et.tag!==22&&et.tag!==23||et.memoizedState===null||et===e)&&et.child!==null){et.child.return=et,et=et.child;continue}if(et===e)break e;for(;et.sibling===null;){if(et.return===null||et.return===e)break e;_e===et&&(_e=null),et=et.return}_e===et&&(_e=null),et.sibling.return=et.return,et=et.sibling}}break;case 19:ck(o,e),ek(e),c&4&&ak(e);break;case 21:break;default:ck(o,e),ek(e)}}function ek(e){var o=e.flags;if(o&2){try{e:{for(var s=e.return;s!==null;){if(Tj(s)){var c=s;break e}s=s.return}throw Error(p$1(160))}switch(c.tag){case 5:var i=c.stateNode;c.flags&32&&(ob(i,""),c.flags&=-33);var g=Uj(e);Wj(e,g,i);break;case 3:case 4:var h=c.stateNode.containerInfo,$=Uj(e);Vj(e,$,h);break;default:throw Error(p$1(161))}}catch(j){W(e,e.return,j)}e.flags&=-3}o&4096&&(e.flags&=-4097)}function hk(e,o,s){V=e,ik(e)}function ik(e,o,s){for(var c=(e.mode&1)!==0;V!==null;){var i=V,g=i.child;if(i.tag===22&&c){var h=i.memoizedState!==null||Jj;if(!h){var $=i.alternate,j=$!==null&&$.memoizedState!==null||U;$=Jj;var _=U;if(Jj=h,(U=j)&&!_)for(V=i;V!==null;)h=V,j=h.child,h.tag===22&&h.memoizedState!==null?jk(i):j!==null?(j.return=h,V=j):jk(i);for(;g!==null;)V=g,ik(g),g=g.sibling;V=i,Jj=$,U=_}kk(e)}else i.subtreeFlags&8772&&g!==null?(g.return=i,V=g):kk(e)}}function kk(e){for(;V!==null;){var o=V;if(o.flags&8772){var s=o.alternate;try{if(o.flags&8772)switch(o.tag){case 0:case 11:case 15:U||Qj(5,o);break;case 1:var c=o.stateNode;if(o.flags&4&&!U)if(s===null)c.componentDidMount();else{var i=o.elementType===o.type?s.memoizedProps:Ci(o.type,s.memoizedProps);c.componentDidUpdate(i,s.memoizedState,c.__reactInternalSnapshotBeforeUpdate)}var g=o.updateQueue;g!==null&&sh(o,g,c);break;case 3:var h=o.updateQueue;if(h!==null){if(s=null,o.child!==null)switch(o.child.tag){case 5:s=o.child.stateNode;break;case 1:s=o.child.stateNode}sh(o,h,s)}break;case 5:var $=o.stateNode;if(s===null&&o.flags&4){s=$;var j=o.memoizedProps;switch(o.type){case"button":case"input":case"select":case"textarea":j.autoFocus&&s.focus();break;case"img":j.src&&(s.src=j.src)}}break;case 6:break;case 4:break;case 12:break;case 13:if(o.memoizedState===null){var _=o.alternate;if(_!==null){var _e=_.memoizedState;if(_e!==null){var et=_e.dehydrated;et!==null&&bd(et)}}}break;case 19:case 17:case 21:case 22:case 23:case 25:break;default:throw Error(p$1(163))}U||o.flags&512&&Rj(o)}catch(tt){W(o,o.return,tt)}}if(o===e){V=null;break}if(s=o.sibling,s!==null){s.return=o.return,V=s;break}V=o.return}}function gk(e){for(;V!==null;){var o=V;if(o===e){V=null;break}var s=o.sibling;if(s!==null){s.return=o.return,V=s;break}V=o.return}}function jk(e){for(;V!==null;){var o=V;try{switch(o.tag){case 0:case 11:case 15:var s=o.return;try{Qj(4,o)}catch(j){W(o,s,j)}break;case 1:var c=o.stateNode;if(typeof c.componentDidMount=="function"){var i=o.return;try{c.componentDidMount()}catch(j){W(o,i,j)}}var g=o.return;try{Rj(o)}catch(j){W(o,g,j)}break;case 5:var h=o.return;try{Rj(o)}catch(j){W(o,h,j)}}}catch(j){W(o,o.return,j)}if(o===e){V=null;break}var $=o.sibling;if($!==null){$.return=o.return,V=$;break}V=o.return}}var lk=Math.ceil,mk=ua.ReactCurrentDispatcher,nk=ua.ReactCurrentOwner,ok=ua.ReactCurrentBatchConfig,K=0,Q=null,Y=null,Z=0,fj=0,ej=Uf(0),T=0,pk=null,rh=0,qk=0,rk=0,sk=null,tk=null,fk=0,Gj=1/0,uk=null,Oi=!1,Pi=null,Ri=null,vk=!1,wk=null,xk=0,yk=0,zk=null,Ak=-1,Bk=0;function R(){return K&6?B():Ak!==-1?Ak:Ak=B()}function yi(e){return e.mode&1?K&2&&Z!==0?Z&-Z:Kg.transition!==null?(Bk===0&&(Bk=yc()),Bk):(e=C,e!==0||(e=window.event,e=e===void 0?16:jd(e.type)),e):1}function gi(e,o,s,c){if(50<yk)throw yk=0,zk=null,Error(p$1(185));Ac(e,s,c),(!(K&2)||e!==Q)&&(e===Q&&(!(K&2)&&(qk|=s),T===4&&Ck(e,Z)),Dk(e,c),s===1&&K===0&&!(o.mode&1)&&(Gj=B()+500,fg&&jg()))}function Dk(e,o){var s=e.callbackNode;wc(e,o);var c=uc(e,e===Q?Z:0);if(c===0)s!==null&&bc(s),e.callbackNode=null,e.callbackPriority=0;else if(o=c&-c,e.callbackPriority!==o){if(s!=null&&bc(s),o===1)e.tag===0?ig(Ek.bind(null,e)):hg(Ek.bind(null,e)),Jf(function(){!(K&6)&&jg()}),s=null;else{switch(Dc(c)){case 1:s=fc;break;case 4:s=gc;break;case 16:s=hc;break;case 536870912:s=jc;break;default:s=hc}s=Fk(s,Gk.bind(null,e))}e.callbackPriority=o,e.callbackNode=s}}function Gk(e,o){if(Ak=-1,Bk=0,K&6)throw Error(p$1(327));var s=e.callbackNode;if(Hk()&&e.callbackNode!==s)return null;var c=uc(e,e===Q?Z:0);if(c===0)return null;if(c&30||c&e.expiredLanes||o)o=Ik(e,c);else{o=c;var i=K;K|=2;var g=Jk();(Q!==e||Z!==o)&&(uk=null,Gj=B()+500,Kk(e,o));do try{Lk();break}catch($){Mk(e,$)}while(!0);$g(),mk.current=g,K=i,Y!==null?o=0:(Q=null,Z=0,o=T)}if(o!==0){if(o===2&&(i=xc(e),i!==0&&(c=i,o=Nk(e,i))),o===1)throw s=pk,Kk(e,0),Ck(e,c),Dk(e,B()),s;if(o===6)Ck(e,c);else{if(i=e.current.alternate,!(c&30)&&!Ok(i)&&(o=Ik(e,c),o===2&&(g=xc(e),g!==0&&(c=g,o=Nk(e,g))),o===1))throw s=pk,Kk(e,0),Ck(e,c),Dk(e,B()),s;switch(e.finishedWork=i,e.finishedLanes=c,o){case 0:case 1:throw Error(p$1(345));case 2:Pk(e,tk,uk);break;case 3:if(Ck(e,c),(c&130023424)===c&&(o=fk+500-B(),10<o)){if(uc(e,0)!==0)break;if(i=e.suspendedLanes,(i&c)!==c){R(),e.pingedLanes|=e.suspendedLanes&i;break}e.timeoutHandle=Ff(Pk.bind(null,e,tk,uk),o);break}Pk(e,tk,uk);break;case 4:if(Ck(e,c),(c&4194240)===c)break;for(o=e.eventTimes,i=-1;0<c;){var h=31-oc(c);g=1<<h,h=o[h],h>i&&(i=h),c&=~g}if(c=i,c=B()-c,c=(120>c?120:480>c?480:1080>c?1080:1920>c?1920:3e3>c?3e3:4320>c?4320:1960*lk(c/1960))-c,10<c){e.timeoutHandle=Ff(Pk.bind(null,e,tk,uk),c);break}Pk(e,tk,uk);break;case 5:Pk(e,tk,uk);break;default:throw Error(p$1(329))}}}return Dk(e,B()),e.callbackNode===s?Gk.bind(null,e):null}function Nk(e,o){var s=sk;return e.current.memoizedState.isDehydrated&&(Kk(e,o).flags|=256),e=Ik(e,o),e!==2&&(o=tk,tk=s,o!==null&&Fj(o)),e}function Fj(e){tk===null?tk=e:tk.push.apply(tk,e)}function Ok(e){for(var o=e;;){if(o.flags&16384){var s=o.updateQueue;if(s!==null&&(s=s.stores,s!==null))for(var c=0;c<s.length;c++){var i=s[c],g=i.getSnapshot;i=i.value;try{if(!He(g(),i))return!1}catch{return!1}}}if(s=o.child,o.subtreeFlags&16384&&s!==null)s.return=o,o=s;else{if(o===e)break;for(;o.sibling===null;){if(o.return===null||o.return===e)return!0;o=o.return}o.sibling.return=o.return,o=o.sibling}}return!0}function Ck(e,o){for(o&=~rk,o&=~qk,e.suspendedLanes|=o,e.pingedLanes&=~o,e=e.expirationTimes;0<o;){var s=31-oc(o),c=1<<s;e[s]=-1,o&=~c}}function Ek(e){if(K&6)throw Error(p$1(327));Hk();var o=uc(e,0);if(!(o&1))return Dk(e,B()),null;var s=Ik(e,o);if(e.tag!==0&&s===2){var c=xc(e);c!==0&&(o=c,s=Nk(e,c))}if(s===1)throw s=pk,Kk(e,0),Ck(e,o),Dk(e,B()),s;if(s===6)throw Error(p$1(345));return e.finishedWork=e.current.alternate,e.finishedLanes=o,Pk(e,tk,uk),Dk(e,B()),null}function Qk(e,o){var s=K;K|=1;try{return e(o)}finally{K=s,K===0&&(Gj=B()+500,fg&&jg())}}function Rk(e){wk!==null&&wk.tag===0&&!(K&6)&&Hk();var o=K;K|=1;var s=ok.transition,c=C;try{if(ok.transition=null,C=1,e)return e()}finally{C=c,ok.transition=s,K=o,!(K&6)&&jg()}}function Hj(){fj=ej.current,E(ej)}function Kk(e,o){e.finishedWork=null,e.finishedLanes=0;var s=e.timeoutHandle;if(s!==-1&&(e.timeoutHandle=-1,Gf(s)),Y!==null)for(s=Y.return;s!==null;){var c=s;switch(wg(c),c.tag){case 1:c=c.type.childContextTypes,c!=null&&$f();break;case 3:zh(),E(Wf),E(H),Eh();break;case 5:Bh(c);break;case 4:zh();break;case 13:E(L);break;case 19:E(L);break;case 10:ah(c.type._context);break;case 22:case 23:Hj()}s=s.return}if(Q=e,Y=e=Pg(e.current,null),Z=fj=o,T=0,pk=null,rk=qk=rh=0,tk=sk=null,fh!==null){for(o=0;o<fh.length;o++)if(s=fh[o],c=s.interleaved,c!==null){s.interleaved=null;var i=c.next,g=s.pending;if(g!==null){var h=g.next;g.next=i,c.next=h}s.pending=c}fh=null}return e}function Mk(e,o){do{var s=Y;try{if($g(),Fh.current=Rh,Ih){for(var c=M.memoizedState;c!==null;){var i=c.queue;i!==null&&(i.pending=null),c=c.next}Ih=!1}if(Hh=0,O=N=M=null,Jh=!1,Kh=0,nk.current=null,s===null||s.return===null){T=1,pk=o,Y=null;break}e:{var g=e,h=s.return,$=s,j=o;if(o=Z,$.flags|=32768,j!==null&&typeof j=="object"&&typeof j.then=="function"){var _=j,_e=$,et=_e.tag;if(!(_e.mode&1)&&(et===0||et===11||et===15)){var tt=_e.alternate;tt?(_e.updateQueue=tt.updateQueue,_e.memoizedState=tt.memoizedState,_e.lanes=tt.lanes):(_e.updateQueue=null,_e.memoizedState=null)}var at=Ui(h);if(at!==null){at.flags&=-257,Vi(at,h,$,g,o),at.mode&1&&Si(g,_,o),o=at,j=_;var rt=o.updateQueue;if(rt===null){var dt=new Set;dt.add(j),o.updateQueue=dt}else rt.add(j);break e}else{if(!(o&1)){Si(g,_,o),tj();break e}j=Error(p$1(426))}}else if(I&&$.mode&1){var mt=Ui(h);if(mt!==null){!(mt.flags&65536)&&(mt.flags|=256),Vi(mt,h,$,g,o),Jg(Ji(j,$));break e}}g=j=Ji(j,$),T!==4&&(T=2),sk===null?sk=[g]:sk.push(g),g=h;do{switch(g.tag){case 3:g.flags|=65536,o&=-o,g.lanes|=o;var st=Ni(g,j,o);ph(g,st);break e;case 1:$=j;var ot=g.type,nt=g.stateNode;if(!(g.flags&128)&&(typeof ot.getDerivedStateFromError=="function"||nt!==null&&typeof nt.componentDidCatch=="function"&&(Ri===null||!Ri.has(nt)))){g.flags|=65536,o&=-o,g.lanes|=o;var lt=Qi(g,$,o);ph(g,lt);break e}}g=g.return}while(g!==null)}Sk(s)}catch(ct){o=ct,Y===s&&s!==null&&(Y=s=s.return);continue}break}while(!0)}function Jk(){var e=mk.current;return mk.current=Rh,e===null?Rh:e}function tj(){(T===0||T===3||T===2)&&(T=4),Q===null||!(rh&268435455)&&!(qk&268435455)||Ck(Q,Z)}function Ik(e,o){var s=K;K|=2;var c=Jk();(Q!==e||Z!==o)&&(uk=null,Kk(e,o));do try{Tk();break}catch(i){Mk(e,i)}while(!0);if($g(),K=s,mk.current=c,Y!==null)throw Error(p$1(261));return Q=null,Z=0,T}function Tk(){for(;Y!==null;)Uk(Y)}function Lk(){for(;Y!==null&&!cc();)Uk(Y)}function Uk(e){var o=Vk(e.alternate,e,fj);e.memoizedProps=e.pendingProps,o===null?Sk(e):Y=o,nk.current=null}function Sk(e){var o=e;do{var s=o.alternate;if(e=o.return,o.flags&32768){if(s=Ij(s,o),s!==null){s.flags&=32767,Y=s;return}if(e!==null)e.flags|=32768,e.subtreeFlags=0,e.deletions=null;else{T=6,Y=null;return}}else if(s=Ej(s,o,fj),s!==null){Y=s;return}if(o=o.sibling,o!==null){Y=o;return}Y=o=e}while(o!==null);T===0&&(T=5)}function Pk(e,o,s){var c=C,i=ok.transition;try{ok.transition=null,C=1,Wk(e,o,s,c)}finally{ok.transition=i,C=c}return null}function Wk(e,o,s,c){do Hk();while(wk!==null);if(K&6)throw Error(p$1(327));s=e.finishedWork;var i=e.finishedLanes;if(s===null)return null;if(e.finishedWork=null,e.finishedLanes=0,s===e.current)throw Error(p$1(177));e.callbackNode=null,e.callbackPriority=0;var g=s.lanes|s.childLanes;if(Bc(e,g),e===Q&&(Y=Q=null,Z=0),!(s.subtreeFlags&2064)&&!(s.flags&2064)||vk||(vk=!0,Fk(hc,function(){return Hk(),null})),g=(s.flags&15990)!==0,s.subtreeFlags&15990||g){g=ok.transition,ok.transition=null;var h=C;C=1;var $=K;K|=4,nk.current=null,Oj(e,s),dk(s,e),Oe(Df),dd=!!Cf,Df=Cf=null,e.current=s,hk(s),dc(),K=$,C=h,ok.transition=g}else e.current=s;if(vk&&(vk=!1,wk=e,xk=i),g=e.pendingLanes,g===0&&(Ri=null),mc(s.stateNode),Dk(e,B()),o!==null)for(c=e.onRecoverableError,s=0;s<o.length;s++)i=o[s],c(i.value,{componentStack:i.stack,digest:i.digest});if(Oi)throw Oi=!1,e=Pi,Pi=null,e;return xk&1&&e.tag!==0&&Hk(),g=e.pendingLanes,g&1?e===zk?yk++:(yk=0,zk=e):yk=0,jg(),null}function Hk(){if(wk!==null){var e=Dc(xk),o=ok.transition,s=C;try{if(ok.transition=null,C=16>e?16:e,wk===null)var c=!1;else{if(e=wk,wk=null,xk=0,K&6)throw Error(p$1(331));var i=K;for(K|=4,V=e.current;V!==null;){var g=V,h=g.child;if(V.flags&16){var $=g.deletions;if($!==null){for(var j=0;j<$.length;j++){var _=$[j];for(V=_;V!==null;){var _e=V;switch(_e.tag){case 0:case 11:case 15:Pj(8,_e,g)}var et=_e.child;if(et!==null)et.return=_e,V=et;else for(;V!==null;){_e=V;var tt=_e.sibling,at=_e.return;if(Sj(_e),_e===_){V=null;break}if(tt!==null){tt.return=at,V=tt;break}V=at}}}var rt=g.alternate;if(rt!==null){var dt=rt.child;if(dt!==null){rt.child=null;do{var mt=dt.sibling;dt.sibling=null,dt=mt}while(dt!==null)}}V=g}}if(g.subtreeFlags&2064&&h!==null)h.return=g,V=h;else e:for(;V!==null;){if(g=V,g.flags&2048)switch(g.tag){case 0:case 11:case 15:Pj(9,g,g.return)}var st=g.sibling;if(st!==null){st.return=g.return,V=st;break e}V=g.return}}var ot=e.current;for(V=ot;V!==null;){h=V;var nt=h.child;if(h.subtreeFlags&2064&&nt!==null)nt.return=h,V=nt;else e:for(h=ot;V!==null;){if($=V,$.flags&2048)try{switch($.tag){case 0:case 11:case 15:Qj(9,$)}}catch(ct){W($,$.return,ct)}if($===h){V=null;break e}var lt=$.sibling;if(lt!==null){lt.return=$.return,V=lt;break e}V=$.return}}if(K=i,jg(),lc&&typeof lc.onPostCommitFiberRoot=="function")try{lc.onPostCommitFiberRoot(kc,e)}catch{}c=!0}return c}finally{C=s,ok.transition=o}}return!1}function Xk(e,o,s){o=Ji(s,o),o=Ni(e,o,1),e=nh(e,o,1),o=R(),e!==null&&(Ac(e,1,o),Dk(e,o))}function W(e,o,s){if(e.tag===3)Xk(e,e,s);else for(;o!==null;){if(o.tag===3){Xk(o,e,s);break}else if(o.tag===1){var c=o.stateNode;if(typeof o.type.getDerivedStateFromError=="function"||typeof c.componentDidCatch=="function"&&(Ri===null||!Ri.has(c))){e=Ji(s,e),e=Qi(o,e,1),o=nh(o,e,1),e=R(),o!==null&&(Ac(o,1,e),Dk(o,e));break}}o=o.return}}function Ti(e,o,s){var c=e.pingCache;c!==null&&c.delete(o),o=R(),e.pingedLanes|=e.suspendedLanes&s,Q===e&&(Z&s)===s&&(T===4||T===3&&(Z&130023424)===Z&&500>B()-fk?Kk(e,0):rk|=s),Dk(e,o)}function Yk(e,o){o===0&&(e.mode&1?(o=sc,sc<<=1,!(sc&130023424)&&(sc=4194304)):o=1);var s=R();e=ih(e,o),e!==null&&(Ac(e,o,s),Dk(e,s))}function uj(e){var o=e.memoizedState,s=0;o!==null&&(s=o.retryLane),Yk(e,s)}function bk(e,o){var s=0;switch(e.tag){case 13:var c=e.stateNode,i=e.memoizedState;i!==null&&(s=i.retryLane);break;case 19:c=e.stateNode;break;default:throw Error(p$1(314))}c!==null&&c.delete(o),Yk(e,s)}var Vk;Vk=function(e,o,s){if(e!==null)if(e.memoizedProps!==o.pendingProps||Wf.current)dh=!0;else{if(!(e.lanes&s)&&!(o.flags&128))return dh=!1,yj(e,o,s);dh=!!(e.flags&131072)}else dh=!1,I&&o.flags&1048576&&ug(o,ng,o.index);switch(o.lanes=0,o.tag){case 2:var c=o.type;ij(e,o),e=o.pendingProps;var i=Yf(o,H.current);ch(o,s),i=Nh(null,o,c,e,i,s);var g=Sh();return o.flags|=1,typeof i=="object"&&i!==null&&typeof i.render=="function"&&i.$$typeof===void 0?(o.tag=1,o.memoizedState=null,o.updateQueue=null,Zf(c)?(g=!0,cg(o)):g=!1,o.memoizedState=i.state!==null&&i.state!==void 0?i.state:null,kh(o),i.updater=Ei,o.stateNode=i,i._reactInternals=o,Ii(o,c,e,s),o=jj(null,o,c,!0,g,s)):(o.tag=0,I&&g&&vg(o),Xi(null,o,i,s),o=o.child),o;case 16:c=o.elementType;e:{switch(ij(e,o),e=o.pendingProps,i=c._init,c=i(c._payload),o.type=c,i=o.tag=Zk(c),e=Ci(c,e),i){case 0:o=cj(null,o,c,e,s);break e;case 1:o=hj(null,o,c,e,s);break e;case 11:o=Yi(null,o,c,e,s);break e;case 14:o=$i(null,o,c,Ci(c.type,e),s);break e}throw Error(p$1(306,c,""))}return o;case 0:return c=o.type,i=o.pendingProps,i=o.elementType===c?i:Ci(c,i),cj(e,o,c,i,s);case 1:return c=o.type,i=o.pendingProps,i=o.elementType===c?i:Ci(c,i),hj(e,o,c,i,s);case 3:e:{if(kj(o),e===null)throw Error(p$1(387));c=o.pendingProps,g=o.memoizedState,i=g.element,lh(e,o),qh(o,c,null,s);var h=o.memoizedState;if(c=h.element,g.isDehydrated)if(g={element:c,isDehydrated:!1,cache:h.cache,pendingSuspenseBoundaries:h.pendingSuspenseBoundaries,transitions:h.transitions},o.updateQueue.baseState=g,o.memoizedState=g,o.flags&256){i=Ji(Error(p$1(423)),o),o=lj(e,o,c,s,i);break e}else if(c!==i){i=Ji(Error(p$1(424)),o),o=lj(e,o,c,s,i);break e}else for(yg=Lf(o.stateNode.containerInfo.firstChild),xg=o,I=!0,zg=null,s=Vg(o,null,c,s),o.child=s;s;)s.flags=s.flags&-3|4096,s=s.sibling;else{if(Ig(),c===i){o=Zi(e,o,s);break e}Xi(e,o,c,s)}o=o.child}return o;case 5:return Ah(o),e===null&&Eg(o),c=o.type,i=o.pendingProps,g=e!==null?e.memoizedProps:null,h=i.children,Ef(c,i)?h=null:g!==null&&Ef(c,g)&&(o.flags|=32),gj(e,o),Xi(e,o,h,s),o.child;case 6:return e===null&&Eg(o),null;case 13:return oj(e,o,s);case 4:return yh(o,o.stateNode.containerInfo),c=o.pendingProps,e===null?o.child=Ug(o,null,c,s):Xi(e,o,c,s),o.child;case 11:return c=o.type,i=o.pendingProps,i=o.elementType===c?i:Ci(c,i),Yi(e,o,c,i,s);case 7:return Xi(e,o,o.pendingProps,s),o.child;case 8:return Xi(e,o,o.pendingProps.children,s),o.child;case 12:return Xi(e,o,o.pendingProps.children,s),o.child;case 10:e:{if(c=o.type._context,i=o.pendingProps,g=o.memoizedProps,h=i.value,G(Wg,c._currentValue),c._currentValue=h,g!==null)if(He(g.value,h)){if(g.children===i.children&&!Wf.current){o=Zi(e,o,s);break e}}else for(g=o.child,g!==null&&(g.return=o);g!==null;){var $=g.dependencies;if($!==null){h=g.child;for(var j=$.firstContext;j!==null;){if(j.context===c){if(g.tag===1){j=mh(-1,s&-s),j.tag=2;var _=g.updateQueue;if(_!==null){_=_.shared;var _e=_.pending;_e===null?j.next=j:(j.next=_e.next,_e.next=j),_.pending=j}}g.lanes|=s,j=g.alternate,j!==null&&(j.lanes|=s),bh(g.return,s,o),$.lanes|=s;break}j=j.next}}else if(g.tag===10)h=g.type===o.type?null:g.child;else if(g.tag===18){if(h=g.return,h===null)throw Error(p$1(341));h.lanes|=s,$=h.alternate,$!==null&&($.lanes|=s),bh(h,s,o),h=g.sibling}else h=g.child;if(h!==null)h.return=g;else for(h=g;h!==null;){if(h===o){h=null;break}if(g=h.sibling,g!==null){g.return=h.return,h=g;break}h=h.return}g=h}Xi(e,o,i.children,s),o=o.child}return o;case 9:return i=o.type,c=o.pendingProps.children,ch(o,s),i=eh(i),c=c(i),o.flags|=1,Xi(e,o,c,s),o.child;case 14:return c=o.type,i=Ci(c,o.pendingProps),i=Ci(c.type,i),$i(e,o,c,i,s);case 15:return bj(e,o,o.type,o.pendingProps,s);case 17:return c=o.type,i=o.pendingProps,i=o.elementType===c?i:Ci(c,i),ij(e,o),o.tag=1,Zf(c)?(e=!0,cg(o)):e=!1,ch(o,s),Gi(o,c,i),Ii(o,c,i,s),jj(null,o,c,!0,e,s);case 19:return xj(e,o,s);case 22:return dj(e,o,s)}throw Error(p$1(156,o.tag))};function Fk(e,o){return ac(e,o)}function $k(e,o,s,c){this.tag=e,this.key=s,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=o,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=c,this.subtreeFlags=this.flags=0,this.deletions=null,this.childLanes=this.lanes=0,this.alternate=null}function Bg(e,o,s,c){return new $k(e,o,s,c)}function aj(e){return e=e.prototype,!(!e||!e.isReactComponent)}function Zk(e){if(typeof e=="function")return aj(e)?1:0;if(e!=null){if(e=e.$$typeof,e===Da)return 11;if(e===Ga)return 14}return 2}function Pg(e,o){var s=e.alternate;return s===null?(s=Bg(e.tag,o,e.key,e.mode),s.elementType=e.elementType,s.type=e.type,s.stateNode=e.stateNode,s.alternate=e,e.alternate=s):(s.pendingProps=o,s.type=e.type,s.flags=0,s.subtreeFlags=0,s.deletions=null),s.flags=e.flags&14680064,s.childLanes=e.childLanes,s.lanes=e.lanes,s.child=e.child,s.memoizedProps=e.memoizedProps,s.memoizedState=e.memoizedState,s.updateQueue=e.updateQueue,o=e.dependencies,s.dependencies=o===null?null:{lanes:o.lanes,firstContext:o.firstContext},s.sibling=e.sibling,s.index=e.index,s.ref=e.ref,s}function Rg(e,o,s,c,i,g){var h=2;if(c=e,typeof e=="function")aj(e)&&(h=1);else if(typeof e=="string")h=5;else e:switch(e){case ya:return Tg(s.children,i,g,o);case za:h=8,i|=8;break;case Aa:return e=Bg(12,s,o,i|2),e.elementType=Aa,e.lanes=g,e;case Ea:return e=Bg(13,s,o,i),e.elementType=Ea,e.lanes=g,e;case Fa:return e=Bg(19,s,o,i),e.elementType=Fa,e.lanes=g,e;case Ia:return pj(s,i,g,o);default:if(typeof e=="object"&&e!==null)switch(e.$$typeof){case Ba:h=10;break e;case Ca:h=9;break e;case Da:h=11;break e;case Ga:h=14;break e;case Ha:h=16,c=null;break e}throw Error(p$1(130,e==null?e:typeof e,""))}return o=Bg(h,s,o,i),o.elementType=e,o.type=c,o.lanes=g,o}function Tg(e,o,s,c){return e=Bg(7,e,c,o),e.lanes=s,e}function pj(e,o,s,c){return e=Bg(22,e,c,o),e.elementType=Ia,e.lanes=s,e.stateNode={isHidden:!1},e}function Qg(e,o,s){return e=Bg(6,e,null,o),e.lanes=s,e}function Sg(e,o,s){return o=Bg(4,e.children!==null?e.children:[],e.key,o),o.lanes=s,o.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},o}function al(e,o,s,c,i){this.tag=o,this.containerInfo=e,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=-1,this.callbackNode=this.pendingContext=this.context=null,this.callbackPriority=0,this.eventTimes=zc(0),this.expirationTimes=zc(-1),this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=zc(0),this.identifierPrefix=c,this.onRecoverableError=i,this.mutableSourceEagerHydrationData=null}function bl(e,o,s,c,i,g,h,$,j){return e=new al(e,o,s,$,j),o===1?(o=1,g===!0&&(o|=8)):o=0,g=Bg(3,null,null,o),e.current=g,g.stateNode=e,g.memoizedState={element:c,isDehydrated:s,cache:null,transitions:null,pendingSuspenseBoundaries:null},kh(g),e}function cl(e,o,s){var c=3<arguments.length&&arguments[3]!==void 0?arguments[3]:null;return{$$typeof:wa,key:c==null?null:""+c,children:e,containerInfo:o,implementation:s}}function dl(e){if(!e)return Vf;e=e._reactInternals;e:{if(Vb(e)!==e||e.tag!==1)throw Error(p$1(170));var o=e;do{switch(o.tag){case 3:o=o.stateNode.context;break e;case 1:if(Zf(o.type)){o=o.stateNode.__reactInternalMemoizedMergedChildContext;break e}}o=o.return}while(o!==null);throw Error(p$1(171))}if(e.tag===1){var s=e.type;if(Zf(s))return bg(e,s,o)}return o}function el(e,o,s,c,i,g,h,$,j){return e=bl(s,c,!0,e,i,g,h,$,j),e.context=dl(null),s=e.current,c=R(),i=yi(s),g=mh(c,i),g.callback=o??null,nh(s,g,i),e.current.lanes=i,Ac(e,i,c),Dk(e,c),e}function fl(e,o,s,c){var i=o.current,g=R(),h=yi(i);return s=dl(s),o.context===null?o.context=s:o.pendingContext=s,o=mh(g,h),o.payload={element:e},c=c===void 0?null:c,c!==null&&(o.callback=c),e=nh(i,o,h),e!==null&&(gi(e,i,h,g),oh(e,i,h)),h}function gl(e){if(e=e.current,!e.child)return null;switch(e.child.tag){case 5:return e.child.stateNode;default:return e.child.stateNode}}function hl(e,o){if(e=e.memoizedState,e!==null&&e.dehydrated!==null){var s=e.retryLane;e.retryLane=s!==0&&s<o?s:o}}function il(e,o){hl(e,o),(e=e.alternate)&&hl(e,o)}function jl(){return null}var kl=typeof reportError=="function"?reportError:function(e){console.error(e)};function ll(e){this._internalRoot=e}ml.prototype.render=ll.prototype.render=function(e){var o=this._internalRoot;if(o===null)throw Error(p$1(409));fl(e,o,null,null)};ml.prototype.unmount=ll.prototype.unmount=function(){var e=this._internalRoot;if(e!==null){this._internalRoot=null;var o=e.containerInfo;Rk(function(){fl(null,e,null,null)}),o[uf]=null}};function ml(e){this._internalRoot=e}ml.prototype.unstable_scheduleHydration=function(e){if(e){var o=Hc();e={blockedOn:null,target:e,priority:o};for(var s=0;s<Qc.length&&o!==0&&o<Qc[s].priority;s++);Qc.splice(s,0,e),s===0&&Vc(e)}};function nl(e){return!(!e||e.nodeType!==1&&e.nodeType!==9&&e.nodeType!==11)}function ol(e){return!(!e||e.nodeType!==1&&e.nodeType!==9&&e.nodeType!==11&&(e.nodeType!==8||e.nodeValue!==" react-mount-point-unstable "))}function pl(){}function ql(e,o,s,c,i){if(i){if(typeof c=="function"){var g=c;c=function(){var _=gl(h);g.call(_)}}var h=el(o,c,e,0,null,!1,!1,"",pl);return e._reactRootContainer=h,e[uf]=h.current,sf(e.nodeType===8?e.parentNode:e),Rk(),h}for(;i=e.lastChild;)e.removeChild(i);if(typeof c=="function"){var $=c;c=function(){var _=gl(j);$.call(_)}}var j=bl(e,0,!1,null,null,!1,!1,"",pl);return e._reactRootContainer=j,e[uf]=j.current,sf(e.nodeType===8?e.parentNode:e),Rk(function(){fl(o,j,s,c)}),j}function rl(e,o,s,c,i){var g=s._reactRootContainer;if(g){var h=g;if(typeof i=="function"){var $=i;i=function(){var j=gl(h);$.call(j)}}fl(o,h,e,i)}else h=ql(s,o,e,i,c);return gl(h)}Ec=function(e){switch(e.tag){case 3:var o=e.stateNode;if(o.current.memoizedState.isDehydrated){var s=tc(o.pendingLanes);s!==0&&(Cc(o,s|1),Dk(o,B()),!(K&6)&&(Gj=B()+500,jg()))}break;case 13:Rk(function(){var c=ih(e,1);if(c!==null){var i=R();gi(c,e,1,i)}}),il(e,1)}};Fc=function(e){if(e.tag===13){var o=ih(e,134217728);if(o!==null){var s=R();gi(o,e,134217728,s)}il(e,134217728)}};Gc=function(e){if(e.tag===13){var o=yi(e),s=ih(e,o);if(s!==null){var c=R();gi(s,e,o,c)}il(e,o)}};Hc=function(){return C};Ic=function(e,o){var s=C;try{return C=e,o()}finally{C=s}};yb=function(e,o,s){switch(o){case"input":if(bb(e,s),o=s.name,s.type==="radio"&&o!=null){for(s=e;s.parentNode;)s=s.parentNode;for(s=s.querySelectorAll("input[name="+JSON.stringify(""+o)+'][type="radio"]'),o=0;o<s.length;o++){var c=s[o];if(c!==e&&c.form===e.form){var i=Db(c);if(!i)throw Error(p$1(90));Wa(c),bb(c,i)}}}break;case"textarea":ib(e,s);break;case"select":o=s.value,o!=null&&fb(e,!!s.multiple,o,!1)}};Gb=Qk;Hb=Rk;var sl={usingClientEntryPoint:!1,Events:[Cb,ue,Db,Eb,Fb,Qk]},tl={findFiberByHostInstance:Wc,bundleType:0,version:"18.3.1",rendererPackageName:"react-dom"},ul={bundleType:tl.bundleType,version:tl.version,rendererPackageName:tl.rendererPackageName,rendererConfig:tl.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setErrorHandler:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:ua.ReactCurrentDispatcher,findHostInstanceByFiber:function(e){return e=Zb(e),e===null?null:e.stateNode},findFiberByHostInstance:tl.findFiberByHostInstance||jl,findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null,reconcilerVersion:"18.3.1-next-f1338f8080-20240426"};if(typeof __REACT_DEVTOOLS_GLOBAL_HOOK__<"u"){var vl=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!vl.isDisabled&&vl.supportsFiber)try{kc=vl.inject(ul),lc=vl}catch{}}reactDom_production_min.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=sl;reactDom_production_min.createPortal=function(e,o){var s=2<arguments.length&&arguments[2]!==void 0?arguments[2]:null;if(!nl(o))throw Error(p$1(200));return cl(e,o,null,s)};reactDom_production_min.createRoot=function(e,o){if(!nl(e))throw Error(p$1(299));var s=!1,c="",i=kl;return o!=null&&(o.unstable_strictMode===!0&&(s=!0),o.identifierPrefix!==void 0&&(c=o.identifierPrefix),o.onRecoverableError!==void 0&&(i=o.onRecoverableError)),o=bl(e,1,!1,null,null,s,!1,c,i),e[uf]=o.current,sf(e.nodeType===8?e.parentNode:e),new ll(o)};reactDom_production_min.findDOMNode=function(e){if(e==null)return null;if(e.nodeType===1)return e;var o=e._reactInternals;if(o===void 0)throw typeof e.render=="function"?Error(p$1(188)):(e=Object.keys(e).join(","),Error(p$1(268,e)));return e=Zb(o),e=e===null?null:e.stateNode,e};reactDom_production_min.flushSync=function(e){return Rk(e)};reactDom_production_min.hydrate=function(e,o,s){if(!ol(o))throw Error(p$1(200));return rl(null,e,o,!0,s)};reactDom_production_min.hydrateRoot=function(e,o,s){if(!nl(e))throw Error(p$1(405));var c=s!=null&&s.hydratedSources||null,i=!1,g="",h=kl;if(s!=null&&(s.unstable_strictMode===!0&&(i=!0),s.identifierPrefix!==void 0&&(g=s.identifierPrefix),s.onRecoverableError!==void 0&&(h=s.onRecoverableError)),o=el(o,null,e,1,s??null,i,!1,g,h),e[uf]=o.current,sf(e),c)for(e=0;e<c.length;e++)s=c[e],i=s._getVersion,i=i(s._source),o.mutableSourceEagerHydrationData==null?o.mutableSourceEagerHydrationData=[s,i]:o.mutableSourceEagerHydrationData.push(s,i);return new ml(o)};reactDom_production_min.render=function(e,o,s){if(!ol(o))throw Error(p$1(200));return rl(null,e,o,!1,s)};reactDom_production_min.unmountComponentAtNode=function(e){if(!ol(e))throw Error(p$1(40));return e._reactRootContainer?(Rk(function(){rl(null,null,e,!1,function(){e._reactRootContainer=null,e[uf]=null})}),!0):!1};reactDom_production_min.unstable_batchedUpdates=Qk;reactDom_production_min.unstable_renderSubtreeIntoContainer=function(e,o,s,c){if(!ol(s))throw Error(p$1(200));if(e==null||e._reactInternals===void 0)throw Error(p$1(38));return rl(e,o,s,!1,c)};reactDom_production_min.version="18.3.1-next-f1338f8080-20240426";function checkDCE(){if(!(typeof __REACT_DEVTOOLS_GLOBAL_HOOK__>"u"||typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE!="function"))try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE)}catch(e){console.error(e)}}checkDCE(),reactDom.exports=reactDom_production_min;var reactDomExports=reactDom.exports,m=reactDomExports;client.createRoot=m.createRoot,client.hydrateRoot=m.hydrateRoot;var $jscomp=$jscomp||{};$jscomp.scope={};var COMPILED=!0,goog=goog||{};goog.global=self;goog.exportPath_=function(e,o,s,c){e=e.split("."),c=c||goog.global,e[0]in c||typeof c.execScript>"u"||c.execScript("var "+e[0]);for(var i;e.length&&(i=e.shift());)if(e.length||o===void 0)c=c[i]&&c[i]!==Object.prototype[i]?c[i]:c[i]={};else if(!s&&goog.isObject(o)&&goog.isObject(c[i]))for(var g in o)o.hasOwnProperty(g)&&(c[i][g]=o[g]);else c[i]=o};goog.define=function(e,o){return o};goog.FEATURESET_YEAR=2020;goog.DEBUG=!0;goog.LOCALE="en";goog.getLocale=function(){return goog.LOCALE};goog.TRUSTED_SITE=!0;goog.DISALLOW_TEST_ONLY_CODE=!goog.DEBUG;goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING=!1;goog.provide=function(e){if(goog.isInModuleLoader_())throw Error("goog.provide cannot be used within a module.");goog.constructNamespace_(e)};goog.constructNamespace_=function(e,o,s){goog.exportPath_(e,o,s)};goog.NONCE_PATTERN_=/^[\w+/_-]+[=]{0,2}$/;goog.getScriptNonce_=function(e){return e=(e||goog.global).document,(e=e.querySelector&&e.querySelector("script[nonce]"))&&(e=e.nonce||e.getAttribute("nonce"))&&goog.NONCE_PATTERN_.test(e)?e:""};goog.VALID_MODULE_RE_=/^[a-zA-Z_$][a-zA-Z0-9._$]*$/;goog.module=function(e){if(typeof e!="string"||!e||e.search(goog.VALID_MODULE_RE_)==-1)throw Error("Invalid module identifier");if(!goog.isInGoogModuleLoader_())throw Error("Module "+e+" has been loaded incorrectly. Note, modules cannot be loaded as normal scripts. They require some kind of pre-processing step. You're likely trying to load a module via a script tag or as a part of a concatenated bundle without rewriting the module. For more info see: https://github.com/google/closure-library/wiki/goog.module:-an-ES6-module-like-alternative-to-goog.provide.");if(goog.moduleLoaderState_.moduleName)throw Error("goog.module may only be called once per module.");goog.moduleLoaderState_.moduleName=e};goog.module.get=function(e){return goog.module.getInternal_(e)};goog.module.getInternal_=function(e){return null};goog.ModuleType={ES6:"es6",GOOG:"goog"};goog.moduleLoaderState_=null;goog.isInModuleLoader_=function(){return goog.isInGoogModuleLoader_()||goog.isInEs6ModuleLoader_()};goog.isInGoogModuleLoader_=function(){return!!goog.moduleLoaderState_&&goog.moduleLoaderState_.type==goog.ModuleType.GOOG};goog.isInEs6ModuleLoader_=function(){if(goog.moduleLoaderState_&&goog.moduleLoaderState_.type==goog.ModuleType.ES6)return!0;var e=goog.global.$jscomp;return e?typeof e.getCurrentModulePath!="function"?!1:!!e.getCurrentModulePath():!1};goog.module.declareLegacyNamespace=function(){goog.moduleLoaderState_.declareLegacyNamespace=!0};goog.declareModuleId=function(e){if(goog.moduleLoaderState_)goog.moduleLoaderState_.moduleName=e;else{var o=goog.global.$jscomp;if(!o||typeof o.getCurrentModulePath!="function")throw Error('Module with namespace "'+e+'" has been loaded incorrectly.');o=o.require(o.getCurrentModulePath()),goog.loadedModules_[e]={exports:o,type:goog.ModuleType.ES6,moduleId:e}}};goog.setTestOnly=function(e){if(goog.DISALLOW_TEST_ONLY_CODE)throw e=e||"",Error("Importing test-only code into non-debug environment"+(e?": "+e:"."))};goog.forwardDeclare=function(e){};goog.getObjectByName=function(e,o){e=e.split("."),o=o||goog.global;for(var s=0;s<e.length;s++)if(o=o[e[s]],o==null)return null;return o};goog.addDependency=function(e,o,s,c){};goog.ENABLE_DEBUG_LOADER=!0;goog.logToConsole_=function(e){goog.global.console&&goog.global.console.error(e)};goog.require=function(e){};goog.requireType=function(e){return{}};goog.basePath="";goog.abstractMethod=function(){throw Error("unimplemented abstract method")};goog.addSingletonGetter=function(e){e.instance_=void 0,e.getInstance=function(){return e.instance_?e.instance_:(goog.DEBUG&&(goog.instantiatedSingletons_[goog.instantiatedSingletons_.length]=e),e.instance_=new e)}};goog.instantiatedSingletons_=[];goog.LOAD_MODULE_USING_EVAL=!0;goog.SEAL_MODULE_EXPORTS=goog.DEBUG;goog.loadedModules_={};goog.DEPENDENCIES_ENABLED=!COMPILED;goog.TRANSPILE="detect";goog.ASSUME_ES_MODULES_TRANSPILED=!1;goog.TRUSTED_TYPES_POLICY_NAME="goog";goog.hasBadLetScoping=null;goog.loadModule=function(e){var o=goog.moduleLoaderState_;try{goog.moduleLoaderState_={moduleName:"",declareLegacyNamespace:!1,type:goog.ModuleType.GOOG};var s={},c=s;if(typeof e=="function")c=e.call(void 0,c);else if(typeof e=="string")c=goog.loadModuleFromSource_.call(void 0,c,e);else throw Error("Invalid module definition");var i=goog.moduleLoaderState_.moduleName;if(typeof i=="string"&&i)goog.moduleLoaderState_.declareLegacyNamespace?goog.constructNamespace_(i,c,s!==c):goog.SEAL_MODULE_EXPORTS&&Object.seal&&typeof c=="object"&&c!=null&&Object.seal(c),goog.loadedModules_[i]={exports:c,type:goog.ModuleType.GOOG,moduleId:goog.moduleLoaderState_.moduleName};else throw Error('Invalid module name "'+i+'"')}finally{goog.moduleLoaderState_=o}};goog.loadModuleFromSource_=function(a,b){return eval(goog.CLOSURE_EVAL_PREFILTER_.createScript(b)),a};goog.normalizePath_=function(e){e=e.split("/");for(var o=0;o<e.length;)e[o]=="."?e.splice(o,1):o&&e[o]==".."&&e[o-1]&&e[o-1]!=".."?e.splice(--o,2):o++;return e.join("/")};goog.loadFileSync_=function(e){if(goog.global.CLOSURE_LOAD_FILE_SYNC)return goog.global.CLOSURE_LOAD_FILE_SYNC(e);try{var o=new goog.global.XMLHttpRequest;return o.open("get",e,!1),o.send(),o.status==0||o.status==200?o.responseText:null}catch{return null}};goog.typeOf=function(e){var o=typeof e;return o!="object"?o:e?Array.isArray(e)?"array":o:"null"};goog.isArrayLike=function(e){var o=goog.typeOf(e);return o=="array"||o=="object"&&typeof e.length=="number"};goog.isDateLike=function(e){return goog.isObject(e)&&typeof e.getFullYear=="function"};goog.isObject=function(e){var o=typeof e;return o=="object"&&e!=null||o=="function"};goog.getUid=function(e){return Object.prototype.hasOwnProperty.call(e,goog.UID_PROPERTY_)&&e[goog.UID_PROPERTY_]||(e[goog.UID_PROPERTY_]=++goog.uidCounter_)};goog.hasUid=function(e){return!!e[goog.UID_PROPERTY_]};goog.removeUid=function(e){e!==null&&"removeAttribute"in e&&e.removeAttribute(goog.UID_PROPERTY_);try{delete e[goog.UID_PROPERTY_]}catch{}};goog.UID_PROPERTY_="closure_uid_"+(1e9*Math.random()>>>0);goog.uidCounter_=0;goog.cloneObject=function(e){var o=goog.typeOf(e);if(o=="object"||o=="array"){if(typeof e.clone=="function")return e.clone();if(typeof Map<"u"&&e instanceof Map)return new Map(e);if(typeof Set<"u"&&e instanceof Set)return new Set(e);o=o=="array"?[]:{};for(var s in e)o[s]=goog.cloneObject(e[s]);return o}return e};goog.bindNative_=function(e,o,s){return e.call.apply(e.bind,arguments)};goog.bindJs_=function(e,o,s){if(!e)throw Error();if(2<arguments.length){var c=Array.prototype.slice.call(arguments,2);return function(){var i=Array.prototype.slice.call(arguments);return Array.prototype.unshift.apply(i,c),e.apply(o,i)}}return function(){return e.apply(o,arguments)}};goog.bind=function(e,o,s){return Function.prototype.bind&&Function.prototype.bind.toString().indexOf("native code")!=-1?goog.bind=goog.bindNative_:goog.bind=goog.bindJs_,goog.bind.apply(null,arguments)};goog.partial=function(e,o){var s=Array.prototype.slice.call(arguments,1);return function(){var c=s.slice();return c.push.apply(c,arguments),e.apply(this,c)}};goog.now=function(){return Date.now()};goog.globalEval=function(e){(0,eval)(e)};goog.getCssName=function(e,o){if(String(e).charAt(0)==".")throw Error('className passed in goog.getCssName must not start with ".". You passed: '+e);var s=function(i){return goog.cssNameMapping_[i]||i},c=function(i){i=i.split("-");for(var g=[],h=0;h<i.length;h++)g.push(s(i[h]));return g.join("-")};return c=goog.cssNameMapping_?goog.cssNameMappingStyle_=="BY_WHOLE"?s:c:function(i){return i},e=o?e+"-"+c(o):c(e),goog.global.CLOSURE_CSS_NAME_MAP_FN?goog.global.CLOSURE_CSS_NAME_MAP_FN(e):e};goog.setCssNameMapping=function(e,o){goog.cssNameMapping_=e,goog.cssNameMappingStyle_=o};goog.GetMsgOptions=function(){};goog.getMsg=function(e,o,s){return s&&s.html&&(e=e.replace(/</g,"&lt;")),s&&s.unescapeHtmlEntities&&(e=e.replace(/&lt;/g,"<").replace(/&gt;/g,">").replace(/&apos;/g,"'").replace(/&quot;/g,'"').replace(/&amp;/g,"&")),o&&(e=e.replace(/\{\$([^}]+)}/g,function(c,i){return o!=null&&i in o?o[i]:c})),e};goog.getMsgWithFallback=function(e,o){return e};goog.exportSymbol=function(e,o,s){goog.exportPath_(e,o,!0,s)};goog.exportProperty=function(e,o,s){e[o]=s};goog.inherits=function(e,o){function s(){}s.prototype=o.prototype,e.superClass_=o.prototype,e.prototype=new s,e.prototype.constructor=e,e.base=function(c,i,g){for(var h=Array(arguments.length-2),$=2;$<arguments.length;$++)h[$-2]=arguments[$];return o.prototype[i].apply(c,h)}};goog.scope=function(e){if(goog.isInModuleLoader_())throw Error("goog.scope is not supported within a module.");e.call(goog.global)};goog.defineClass=function(e,o){var s=o.constructor,c=o.statics;return s&&s!=Object.prototype.constructor||(s=function(){throw Error("cannot instantiate an interface (no constructor defined).")}),s=goog.defineClass.createSealingConstructor_(s,e),e&&goog.inherits(s,e),delete o.constructor,delete o.statics,goog.defineClass.applyProperties_(s.prototype,o),c!=null&&(c instanceof Function?c(s):goog.defineClass.applyProperties_(s,c)),s};goog.defineClass.SEAL_CLASS_INSTANCES=goog.DEBUG;goog.defineClass.createSealingConstructor_=function(e,o){return goog.defineClass.SEAL_CLASS_INSTANCES?function(){var s=e.apply(this,arguments)||this;return s[goog.UID_PROPERTY_]=s[goog.UID_PROPERTY_],s}:e};goog.defineClass.OBJECT_PROTOTYPE_FIELDS_="constructor hasOwnProperty isPrototypeOf propertyIsEnumerable toLocaleString toString valueOf".split(" ");goog.defineClass.applyProperties_=function(e,o){for(var s in o)Object.prototype.hasOwnProperty.call(o,s)&&(e[s]=o[s]);for(var c=0;c<goog.defineClass.OBJECT_PROTOTYPE_FIELDS_.length;c++)s=goog.defineClass.OBJECT_PROTOTYPE_FIELDS_[c],Object.prototype.hasOwnProperty.call(o,s)&&(e[s]=o[s])};goog.identity_=function(e){return e};goog.createTrustedTypesPolicy=function(e){var o=null,s=goog.global.trustedTypes;if(!s||!s.createPolicy)return o;try{o=s.createPolicy(e,{createHTML:goog.identity_,createScript:goog.identity_,createScriptURL:goog.identity_})}catch(c){goog.logToConsole_(c.message)}return o};function atobPolyfill$$module$dist$__csound_wasm_inline(e){e=String(e).replace(/[=]+$/,""),e.length%4===1&&console.error("'atob' failed: The string to be decoded is not correctly encoded.");for(var o=0,s,c,i=0,g="";c=e.charAt(i++);~c&&(s=o%4?64*s+c:c,o++%4)&&(g+=String.fromCharCode(255&s>>(-2*o&6))))c="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=".indexOf(c);return g}function bufferFromBrowser$$module$dist$__csound_wasm_inline(e){return typeof AudioWorkletGlobalScope<"u"?atobPolyfill$$module$dist$__csound_wasm_inline(e):window.atob(e)}function __toArrayBuffer$$module$dist$__csound_wasm_inline(e){e=bufferFromBrowser$$module$dist$__csound_wasm_inline(e);for(var o=new Uint8Array(e.length),s=0;s<e.length;++s)o[s]=e.charCodeAt(s);return o.buffer}var $jscompDefaultExport$$module$dist$__csound_wasm_inline=()=>__toArrayBuffer$$module$dist$__csound_wasm_inline("");const proxyMarker$$module$node_modules$comlink$dist$esm$comlink_mjs=Symbol("Comlink.proxy"),createEndpoint$$module$node_modules$comlink$dist$esm$comlink_mjs=Symbol("Comlink.endpoint"),releaseProxy$$module$node_modules$comlink$dist$esm$comlink_mjs=Symbol("Comlink.releaseProxy"),throwMarker$$module$node_modules$comlink$dist$esm$comlink_mjs=Symbol("Comlink.thrown"),isObject$$module$node_modules$comlink$dist$esm$comlink_mjs=e=>typeof e=="object"&&e!==null||typeof e=="function",proxyTransferHandler$$module$node_modules$comlink$dist$esm$comlink_mjs={canHandle:e=>isObject$$module$node_modules$comlink$dist$esm$comlink_mjs(e)&&e[proxyMarker$$module$node_modules$comlink$dist$esm$comlink_mjs],serialize(e){const{port1:o,port2:s}=new MessageChannel;return expose$$module$node_modules$comlink$dist$esm$comlink_mjs(e,o),[s,[s]]},deserialize(e){return e.start(),wrap$$module$node_modules$comlink$dist$esm$comlink_mjs(e)}},throwTransferHandler$$module$node_modules$comlink$dist$esm$comlink_mjs={canHandle:e=>isObject$$module$node_modules$comlink$dist$esm$comlink_mjs(e)&&throwMarker$$module$node_modules$comlink$dist$esm$comlink_mjs in e,serialize({value:e}){return[e instanceof Error?{isError:!0,value:{message:e.message,name:e.name,stack:e.stack}}:{isError:!1,value:e},[]]},deserialize(e){throw e.isError?Object.assign(Error(e.value.message),e.value):e.value}},transferHandlers$$module$node_modules$comlink$dist$esm$comlink_mjs=new Map([["proxy",proxyTransferHandler$$module$node_modules$comlink$dist$esm$comlink_mjs],["throw",throwTransferHandler$$module$node_modules$comlink$dist$esm$comlink_mjs]]);function expose$$module$node_modules$comlink$dist$esm$comlink_mjs(e,o=self){o.addEventListener("message",function s(c){if(c&&c.data){var{id:i,type:g,path:h}=Object.assign({path:[]},c.data),$=(c.data.argumentList||[]).map(fromWireValue$$module$node_modules$comlink$dist$esm$comlink_mjs);try{const _=h.slice(0,-1).reduce((et,tt)=>et[tt],e),_e=h.reduce((et,tt)=>et[tt],e);switch(g){case"GET":var j=_e;break;case"SET":_[h.slice(-1)[0]]=fromWireValue$$module$node_modules$comlink$dist$esm$comlink_mjs(c.data.value),j=!0;break;case"APPLY":j=_e.apply(_,$);break;case"CONSTRUCT":const et=new _e(...$);j=proxy$$module$node_modules$comlink$dist$esm$comlink_mjs(et);break;case"ENDPOINT":const{port1:tt,port2:at}=new MessageChannel;expose$$module$node_modules$comlink$dist$esm$comlink_mjs(e,at),j=transfer$$module$node_modules$comlink$dist$esm$comlink_mjs(tt,[tt]);break;case"RELEASE":j=void 0;break;default:return}}catch(_){j={value:_,[throwMarker$$module$node_modules$comlink$dist$esm$comlink_mjs]:0}}Promise.resolve(j).catch(_=>({value:_,[throwMarker$$module$node_modules$comlink$dist$esm$comlink_mjs]:0})).then(_=>{const[_e,et]=toWireValue$$module$node_modules$comlink$dist$esm$comlink_mjs(_);o.postMessage(Object.assign(Object.assign({},_e),{id:i}),et),g==="RELEASE"&&(o.removeEventListener("message",s),closeEndPoint$$module$node_modules$comlink$dist$esm$comlink_mjs(o))})}}),o.start&&o.start()}function isMessagePort$$module$node_modules$comlink$dist$esm$comlink_mjs(e){return e.constructor.name==="MessagePort"}function closeEndPoint$$module$node_modules$comlink$dist$esm$comlink_mjs(e){isMessagePort$$module$node_modules$comlink$dist$esm$comlink_mjs(e)&&e.close()}function wrap$$module$node_modules$comlink$dist$esm$comlink_mjs(e,o){return createProxy$$module$node_modules$comlink$dist$esm$comlink_mjs(e,[],o)}function throwIfProxyReleased$$module$node_modules$comlink$dist$esm$comlink_mjs(e){if(e)throw Error("Proxy has been released and is not useable")}function createProxy$$module$node_modules$comlink$dist$esm$comlink_mjs(e,o=[],s=function(){}){let c=!1;const i=new Proxy(s,{get(g,h){return throwIfProxyReleased$$module$node_modules$comlink$dist$esm$comlink_mjs(c),h===releaseProxy$$module$node_modules$comlink$dist$esm$comlink_mjs?()=>requestResponseMessage$$module$node_modules$comlink$dist$esm$comlink_mjs(e,{type:"RELEASE",path:o.map($=>$.toString())}).then(()=>{closeEndPoint$$module$node_modules$comlink$dist$esm$comlink_mjs(e),c=!0}):h==="then"?o.length===0?{then:()=>i}:(g=requestResponseMessage$$module$node_modules$comlink$dist$esm$comlink_mjs(e,{type:"GET",path:o.map($=>$.toString())}).then(fromWireValue$$module$node_modules$comlink$dist$esm$comlink_mjs),g.then.bind(g)):createProxy$$module$node_modules$comlink$dist$esm$comlink_mjs(e,[...o,h])},set(g,h,$){throwIfProxyReleased$$module$node_modules$comlink$dist$esm$comlink_mjs(c);const[j,_]=toWireValue$$module$node_modules$comlink$dist$esm$comlink_mjs($);return requestResponseMessage$$module$node_modules$comlink$dist$esm$comlink_mjs(e,{type:"SET",path:[...o,h].map(_e=>_e.toString()),value:j},_).then(fromWireValue$$module$node_modules$comlink$dist$esm$comlink_mjs)},apply(g,h,$){if(throwIfProxyReleased$$module$node_modules$comlink$dist$esm$comlink_mjs(c),g=o[o.length-1],g===createEndpoint$$module$node_modules$comlink$dist$esm$comlink_mjs)return requestResponseMessage$$module$node_modules$comlink$dist$esm$comlink_mjs(e,{type:"ENDPOINT"}).then(fromWireValue$$module$node_modules$comlink$dist$esm$comlink_mjs);if(g==="bind")return createProxy$$module$node_modules$comlink$dist$esm$comlink_mjs(e,o.slice(0,-1));const[j,_]=processArguments$$module$node_modules$comlink$dist$esm$comlink_mjs($);return requestResponseMessage$$module$node_modules$comlink$dist$esm$comlink_mjs(e,{type:"APPLY",path:o.map(_e=>_e.toString()),argumentList:j},_).then(fromWireValue$$module$node_modules$comlink$dist$esm$comlink_mjs)},construct(g,h){throwIfProxyReleased$$module$node_modules$comlink$dist$esm$comlink_mjs(c);const[$,j]=processArguments$$module$node_modules$comlink$dist$esm$comlink_mjs(h);return requestResponseMessage$$module$node_modules$comlink$dist$esm$comlink_mjs(e,{type:"CONSTRUCT",path:o.map(_=>_.toString()),argumentList:$},j).then(fromWireValue$$module$node_modules$comlink$dist$esm$comlink_mjs)}});return i}function myFlat$$module$node_modules$comlink$dist$esm$comlink_mjs(e){return Array.prototype.concat.apply([],e)}function processArguments$$module$node_modules$comlink$dist$esm$comlink_mjs(e){return e=e.map(toWireValue$$module$node_modules$comlink$dist$esm$comlink_mjs),[e.map(o=>o[0]),myFlat$$module$node_modules$comlink$dist$esm$comlink_mjs(e.map(o=>o[1]))]}const transferCache$$module$node_modules$comlink$dist$esm$comlink_mjs=new WeakMap;function transfer$$module$node_modules$comlink$dist$esm$comlink_mjs(e,o){return transferCache$$module$node_modules$comlink$dist$esm$comlink_mjs.set(e,o),e}function proxy$$module$node_modules$comlink$dist$esm$comlink_mjs(e){return Object.assign(e,{[proxyMarker$$module$node_modules$comlink$dist$esm$comlink_mjs]:!0})}function windowEndpoint$$module$node_modules$comlink$dist$esm$comlink_mjs(e,o=self,s="*"){return{postMessage:(c,i)=>e.postMessage(c,s,i),addEventListener:o.addEventListener.bind(o),removeEventListener:o.removeEventListener.bind(o)}}function toWireValue$$module$node_modules$comlink$dist$esm$comlink_mjs(e){for(const[o,s]of transferHandlers$$module$node_modules$comlink$dist$esm$comlink_mjs)if(s.canHandle(e)){const[c,i]=s.serialize(e);return[{type:"HANDLER",name:o,value:c},i]}return[{type:"RAW",value:e},transferCache$$module$node_modules$comlink$dist$esm$comlink_mjs.get(e)||[]]}function fromWireValue$$module$node_modules$comlink$dist$esm$comlink_mjs(e){switch(e.type){case"HANDLER":return transferHandlers$$module$node_modules$comlink$dist$esm$comlink_mjs.get(e.name).deserialize(e.value);case"RAW":return e.value}}function requestResponseMessage$$module$node_modules$comlink$dist$esm$comlink_mjs(e,o,s){return new Promise(c=>{const i=generateUUID$$module$node_modules$comlink$dist$esm$comlink_mjs();e.addEventListener("message",function g(h){h.data&&h.data.id&&h.data.id===i&&(e.removeEventListener("message",g),c(h.data))}),e.start&&e.start(),e.postMessage(Object.assign({id:i},o),s)})}function generateUUID$$module$node_modules$comlink$dist$esm$comlink_mjs(){return Array(4).fill(0).map(()=>Math.floor(Math.random()*Number.MAX_SAFE_INTEGER).toString(16)).join("-")}var module$node_modules$lines_logger$lib$index={default:{}};module$node_modules$lines_logger$lib$index.default.__esModule=!0;module$node_modules$lines_logger$lib$index.default.LoggerFactory=module$node_modules$lines_logger$lib$index.default.logLevels=void 0;module$node_modules$lines_logger$lib$index.default.logLevels={log_raise_error:1,log_with_warnings:2,trace:3,debug:4,info:5,warn:6,error:7,disable:8};var LoggerFactory$$module$node_modules$lines_logger$lib$index=function(){function e(o,s){if(o===void 0&&(o="log_with_warnings"),s===void 0&&(s=null),this.logLevel=o,!module$node_modules$lines_logger$lib$index.default.logLevels[o])throw Error("Invalid log level "+o+" allowed: "+JSON.stringify(module$node_modules$lines_logger$lib$index.default.logLevels));this.mockConsole=s||console}return e.prototype.dummy=function(){},e.prototype.setLogWarnings=function(o){this.logLevel=o},e.prototype.getLogWarnings=function(){return this.logLevel},e.prototype.getSingleLoggerColor=function(o,s,c){return this.getSingleLoggerStyle(o,this.getColorStyle(s),c)},e.prototype.getSingleLogger=function(o,s){var c=this.getRandomColor(o);return this.getSingleLoggerStyle(o,this.getColorStyle(c),s)},e.prototype.getSingleLoggerStyle=function(o,s,c,i){var g=this;return i===void 0&&(i="log_with_warnings"),function(){for(var h=[],$=0;$<arguments.length;$++)h[$]=arguments[$];if(module$node_modules$lines_logger$lib$index.default.logLevels[g.logLevel]>module$node_modules$lines_logger$lib$index.default.logLevels[i])return g.dummy;h=Array.prototype.slice.call(h),$=h.shift().split("{}");for(var j=[g.mockConsole,"%c"+o,s],_=0;_<$.length;_++)j.push($[_]),h[_]!==void 0&&j.push(h[_]);if($.length-1!==h.length){if(g.logLevel==="log_with_warnings")g.mockConsole.error("MissMatch amount of arguments");else if(g.logLevel==="log_raise_error")throw Error("MissMatch amount of arguments")}return Function.prototype.bind.apply(c,j)}},e.prototype.getLoggerColor=function(o,s){return this.getLoggerStyle(o,this.getColorStyle(s))},e.prototype.getColorStyle=function(o){return"color: white; background-color: "+o+"; padding: 2px 6px; border-radius: 2px; font-size: 10px"},e.getHash=function(o,s){s===void 0&&(s=0);var c=3735928559^s;s^=1103547991;for(var i=0,g;i<o.length;i++)g=o.charCodeAt(i),c=Math.imul(c^g,2654435761),s=Math.imul(s^g,1597334677);return c=Math.imul(c^c>>>16,2246822507)^Math.imul(s^s>>>13,3266489909),4294967296*(2097151&(Math.imul(s^s>>>16,2246822507)^Math.imul(c^c>>>13,3266489909)))+(c>>>0)},e.prototype.getRandomColor=function(o){o===void 0&&(o=""),o=e.getHash(o);for(var s="#",c=0;3>c;c++)s+=("00"+(8+(o>>7*c&127)).toString(16)).substr(-2);return s},e.prototype.getLogger=function(o){return this.getLoggerColor(o,this.getRandomColor(o))},e.prototype.getLoggerStyle=function(o,s){return{trace:this.getSingleLoggerStyle(o,s,this.mockConsole.trace,"trace"),debug:this.getSingleLoggerStyle(o,s,this.mockConsole.debug,"debug"),log:this.getSingleLoggerStyle(o,s,this.mockConsole.log,"info"),warn:this.getSingleLoggerStyle(o,s,this.mockConsole.warn,"warn"),error:this.getSingleLoggerStyle(o,s,this.mockConsole.error,"error")}},e}();module$node_modules$lines_logger$lib$index.default.LoggerFactory=LoggerFactory$$module$node_modules$lines_logger$lib$index;let logWorkletMain$$module$src$logger,logSABMain$$module$src$logger,logVANMain$$module$src$logger,logOldSpnMain$$module$src$logger,logIndex$$module$src$logger,logSinglethreadWorkletMain$$module$src$logger,logWasmModule$$module$src$logger,logMidiRequest$$module$src$logger;logWorkletMain$$module$src$logger=e=>o=>{};logSABMain$$module$src$logger=e=>o=>{};logVANMain$$module$src$logger=e=>o=>{};logOldSpnMain$$module$src$logger=e=>o=>{};logIndex$$module$src$logger=e=>o=>{};logSinglethreadWorkletMain$$module$src$logger=e=>o=>{};logWasmModule$$module$src$logger=e=>o=>{};logMidiRequest$$module$src$logger=e=>o=>{};const csoundCreate$$module$src$modules$instantiation=e=>()=>e.exports.csoundCreateWasi();csoundCreate$$module$src$modules$instantiation.toString=()=>"create = async () => undefined;";const csoundDestroy$$module$src$modules$instantiation=e=>o=>e.exports.csoundDestroy(o);csoundDestroy$$module$src$modules$instantiation.toString=()=>"destroy = async () => undefined;";const csoundGetAPIVersion$$module$src$modules$instantiation=e=>()=>e.exports.csoundGetAPIVersion();csoundGetAPIVersion$$module$src$modules$instantiation.toString=()=>"getAPIVersion = async () => Number;";const csoundGetVersion$$module$src$modules$instantiation=e=>()=>e.exports.csoundGetVersion();csoundGetVersion$$module$src$modules$instantiation.toString=()=>"getVersion = async () => Number;";const csoundInitialize$$module$src$modules$instantiation=e=>(o,s)=>e.exports.csoundInitialize(s);csoundInitialize$$module$src$modules$instantiation.toString=()=>"initialize = async () => Number;";const decoder$$module$src$utils$text_encoders=new TextDecoder("utf8"),encoder$$module$src$utils$text_encoders=new TextEncoder("utf8"),uint2String$$module$src$utils$text_encoders=e=>decoder$$module$src$utils$text_encoders.decode(e),trimNull$$module$src$utils$trim_null=e=>{const o=e.indexOf("\0");return-1<o?e.substr(0,o):e},freeStringPtr$$module$src$utils$string_pointers=(e,o)=>{e.exports.freeStringMem(o)},ptr2string$$module$src$utils$string_pointers=(e,o)=>({buffer:e}=e.wasi.memory,o=new Uint8Array(e,o),o=uint2String$$module$src$utils$text_encoders(o),trimNull$$module$src$utils$trim_null(o)),string2ptr$$module$src$utils$string_pointers=(e,o)=>{if(typeof o!="string")console.error("Expected string but got",typeof o);else{o=encoder$$module$src$utils$text_encoders.encode(o);var s=e.exports.allocStringMem(o.length);return{buffer:e}=e.wasi.memory,new Uint8Array(e,s,o.length+1).set(o),s}},csoundParseOrc$$module$src$modules$performance=e=>(o,s)=>e.exports.csoundParseOrc(o,s);csoundParseOrc$$module$src$modules$performance.toString=()=>"parseOrc = async (orchestra) => Object;";const csoundCompileTree$$module$src$modules$performance=e=>(o,s)=>e.exports.csoundCompileTree(o,s);csoundCompileTree$$module$src$modules$performance.toString=()=>"compileTree = async (tree) => Number;";const csoundCompileOrc$$module$src$modules$performance=e=>(o,s)=>(s=string2ptr$$module$src$utils$string_pointers(e,s),o=e.exports.csoundCompileOrc(o,s),freeStringPtr$$module$src$utils$string_pointers(e,s),o);csoundCompileOrc$$module$src$modules$performance.toString=()=>"compileOrc = async (orchestra) => Number;";const csoundEvalCode$$module$src$modules$performance=e=>(o,s)=>(s=string2ptr$$module$src$utils$string_pointers(e,s),o=e.exports.csoundEvalCode(o,s),freeStringPtr$$module$src$utils$string_pointers(e,s),o);csoundEvalCode$$module$src$modules$performance.toString=()=>"csoundEvalCode = async (orchestra) => Number;";const csoundStart$$module$src$modules$performance=e=>o=>e.exports.csoundStartWasi(o);csoundStart$$module$src$modules$performance.toString=()=>"start = async () => Number;";const csoundCompileCsd$$module$src$modules$performance=e=>(o,s)=>{s=string2ptr$$module$src$utils$string_pointers(e,s);let c;try{c=e.exports.csoundCompileCsd(o,s)}catch(i){console.error(i)}return freeStringPtr$$module$src$utils$string_pointers(e,s),c};csoundCompileCsd$$module$src$modules$performance.toString=()=>"compileCsd = async (path) => Number;";const csoundCompileCsdText$$module$src$modules$performance=e=>(o,s)=>(s=string2ptr$$module$src$utils$string_pointers(e,s),o=e.exports.csoundCompileCsdText(o,s),freeStringPtr$$module$src$utils$string_pointers(e,s),o);csoundCompileCsdText$$module$src$modules$performance.toString=()=>"compileCsdText = async (csoundDocument) => Number;";const csoundPerform$$module$src$modules$performance=e=>o=>e.exports.csoundPerform(o);csoundPerform$$module$src$modules$performance.toString=()=>"perform = async () => Number;";const csoundPerformKsmps$$module$src$modules$performance=e=>o=>e.exports.csoundPerformKsmpsWasi(o);csoundPerformKsmps$$module$src$modules$performance.toString=()=>"performKsmps = async (csound) => Number;";const csoundPerformBuffer$$module$src$modules$performance=e=>o=>e.exports.csoundPerformBuffer(o);csoundPerformBuffer$$module$src$modules$performance.toString=()=>"performBuffer = async (csound) => Number;";const csoundStop$$module$src$modules$performance=e=>o=>e.exports.csoundStop(o);csoundStop$$module$src$modules$performance.toString=()=>"stop = async () => undefined;";const csoundCleanup$$module$src$modules$performance=e=>o=>e.exports.csoundCleanup(o);csoundCleanup$$module$src$modules$performance.toString=()=>"cleanup = async () => Number;";const csoundReset$$module$src$modules$performance=e=>o=>e.exports.csoundResetWasi(o);csoundReset$$module$src$modules$performance.toString=()=>"reset = async () => Number;";const sizeOfPrimitive$$module$src$utils$native_sizes={int:4,MYFLT:4,char:1},sizeofStruct$$module$src$utils$native_sizes=e=>e.reduce((o,[,s,...c])=>o+(s==="char"?sizeOfPrimitive$$module$src$utils$native_sizes[s]*c[0]:sizeOfPrimitive$$module$src$utils$native_sizes[s]),0),structBufferToObject$$module$src$utils$structure_buffer_to_object=(e,o)=>([e]=e.reduce(([s,c],[i,g,...h])=>(h=g==="char"?sizeOfPrimitive$$module$src$utils$native_sizes[g]*h[0]:sizeOfPrimitive$$module$src$utils$native_sizes[g],g=g==="char"?trimNull$$module$src$utils$trim_null(uint2String$$module$src$utils$text_encoders(o.subarray(c,h)))||"":o[c],s[i]=g,[s,c+h]),[{},0]),e),CSOUND_PARAMS$$module$src$structures=[["debug_mode","int"],["buffer_frames","int"],["hardware_buffer_frames","int"],["displays","int"],["ascii_graphs","int"],["postscript_graphs","int"],["message_level","int"],["tempo","int"],["ring_bell","int"],["use_cscore","int"],["terminate_on_midi","int"],["heartbeat","int"],["defer_gen01_load","int"],["midi_key","int"],["midi_key_cps","int"],["midi_key_oct","int"],["midi_key_pch","int"],["midi_velocity","int"],["midi_velocity_amp","int"],["no_default_paths","int"],["number_of_threads","int"],["syntax_check_only","int"],["csd_line_counts","int"],["compute_weights","int"],["realtime_mode","int"],["sample_accurate","int"],["sample_rate_override","MYFLT"],["control_rate_override","MYFLT"],["nchnls_override","int"],["nchnls_i_override","int"],["e0dbfs_override","MYFLT"],["daemon","int"],["ksmps_override","int"],["FFT_library","int"]],CS_MIDIDEVICE$$module$src$structures=[["device_name","char",64],["interface_name","char",64],["device_id","char",64],["midi_module","char",64],["isOutput","int"]],csoundGetSr$$module$src$modules$attributes=e=>o=>e.exports.csoundGetSr(o);csoundGetSr$$module$src$modules$attributes.toString=()=>"getSr = async () => Number;";const csoundGetKr$$module$src$modules$attributes=e=>o=>e.exports.csoundGetKr(o);csoundGetKr$$module$src$modules$attributes.toString=()=>"getKr = async () => Number;";const csoundGetKsmps$$module$src$modules$attributes=e=>o=>e.exports.csoundGetKsmps(o);csoundGetKsmps$$module$src$modules$attributes.toString=()=>"getKsmps = async () => Number;";const csoundGetNchnls$$module$src$modules$attributes=e=>o=>e.exports.csoundGetNchnls(o);csoundGetNchnls$$module$src$modules$attributes.toString=()=>"getNchnls = async () => Number;";const csoundGetNchnlsInput$$module$src$modules$attributes=e=>o=>e.exports.csoundGetNchnlsInput(o);csoundGetNchnlsInput$$module$src$modules$attributes.toString=()=>"getNchnlsInput = async () => Number;";const csoundGet0dBFS$$module$src$modules$attributes=e=>o=>e.exports.csoundGet0dBFS(o);csoundGet0dBFS$$module$src$modules$attributes.toString=()=>"get0dBFS = async () => Number;";const csoundGetA4$$module$src$modules$attributes=e=>o=>e.exports.csoundGetA4(o);csoundGetA4$$module$src$modules$attributes.toString=()=>"getA4 = async () => Number;";const csoundGetCurrentTimeSamples$$module$src$modules$attributes=e=>o=>e.exports.csoundGetCurrentTimeSamples(o);csoundGetCurrentTimeSamples$$module$src$modules$attributes.toString=()=>"getCurrentTimeSamples = async () => Number;";const csoundGetSizeOfMYFLT$$module$src$modules$attributes=e=>o=>e.exports.csoundGetSizeOfMYFLT(o);csoundGetSizeOfMYFLT$$module$src$modules$attributes.toString=()=>"getSizeOfMYFLT = async () => Number;";const csoundSetOption$$module$src$modules$attributes=e=>(o,s)=>(s=string2ptr$$module$src$utils$string_pointers(e,s),o=e.exports.csoundSetOption(o,s),freeStringPtr$$module$src$utils$string_pointers(e,s),o);csoundSetOption$$module$src$modules$attributes.toString=()=>"setOption = async (option) => Number;";const csoundSetParams$$module$src$modules$attributes=e=>(o,s)=>{e.exports.csoundSetParams(o,s)};csoundSetParams$$module$src$modules$attributes.toString=()=>"setParams = async (csoundParams) => undefined;";const csoundGetParams$$module$src$modules$attributes=e=>o=>{var{buffer:s}=e.wasi.memory;const c=sizeofStruct$$module$src$utils$native_sizes(CSOUND_PARAMS$$module$src$structures),i=e.exports.allocCsoundParamsStruct();return s=new Uint8Array(s,i,c),e.exports.csoundGetParams(o,i),o=structBufferToObject$$module$src$utils$structure_buffer_to_object(CSOUND_PARAMS$$module$src$structures,s),e.exports.freeCsoundParams(i),o};csoundGetParams$$module$src$modules$attributes.toString=()=>"getParams = async () => CSOUND_PARAMS;";const csoundGetDebug$$module$src$modules$attributes=e=>o=>e.exports.csoundGetDebug(o);csoundGetDebug$$module$src$modules$attributes.toString=()=>"getDebug = async () => Number;";const csoundSetDebug$$module$src$modules$attributes=e=>(o,s)=>{e.exports.csoundSetDebug(o,s)};csoundSetDebug$$module$src$modules$attributes.toString=()=>"setDebug = async (number) => undefined;";const csoundGetInputBufferSize$$module$src$modules$rtaudio=e=>o=>e.exports.csoundGetInputBufferSize(o);csoundGetInputBufferSize$$module$src$modules$rtaudio.toString=()=>"getInputBufferSize = async () => Number;";const csoundGetOutputBufferSize$$module$src$modules$rtaudio=e=>o=>e.exports.csoundGetOutputBufferSize(o);csoundGetOutputBufferSize$$module$src$modules$rtaudio.toString=()=>"getOutputBufferSize = async () => Number;";const csoundGetInputBuffer$$module$src$modules$rtaudio=e=>o=>e.exports.csoundGetInputBuffer(o);csoundGetInputBuffer$$module$src$modules$rtaudio.toString=()=>"getInputBuffer = async () => Number;";const csoundGetOutputBuffer$$module$src$modules$rtaudio=e=>o=>e.exports.csoundGetOutputBuffer(o);csoundGetOutputBuffer$$module$src$modules$rtaudio.toString=()=>"getOutputBuffer = async () => Number;";const csoundGetSpin$$module$src$modules$rtaudio=e=>o=>e.exports.csoundGetSpin(o);csoundGetSpin$$module$src$modules$rtaudio.toString=()=>"getSpin = async (csound) => Number;";const csoundGetSpout$$module$src$modules$rtaudio=e=>o=>e.exports.csoundGetSpout(o);csoundGetSpout$$module$src$modules$rtaudio.toString=()=>"getSpout = async () => Number;";function curry$$module$node_modules$rambda$dist$rambda_mjs(e,o=[]){return(...s)=>(s=[...o,...s],s.length>=e.length?e(...s):curry$$module$node_modules$rambda$dist$rambda_mjs(e,s))}const{isArray:isArray$$module$node_modules$rambda$dist$rambda_mjs}=Array;function assocFn$$module$node_modules$rambda$dist$rambda_mjs(e,o,s){return Object.assign({},s,{[e]:o})}const assoc$$module$node_modules$rambda$dist$rambda_mjs=curry$$module$node_modules$rambda$dist$rambda_mjs(assocFn$$module$node_modules$rambda$dist$rambda_mjs);class ReduceStopper$$module$node_modules$rambda$dist$rambda_mjs{constructor(o){this.value=o}}function reduceFn$$module$node_modules$rambda$dist$rambda_mjs(e,o,s){if(!isArray$$module$node_modules$rambda$dist$rambda_mjs(s))throw new TypeError("reduce: list must be array or iterable");let c=0;const i=s.length;for(;c<i;){if(o=e(o,s[c],c,s),o instanceof ReduceStopper$$module$node_modules$rambda$dist$rambda_mjs)return o.value;c++}return o}const reduce$$module$node_modules$rambda$dist$rambda_mjs=curry$$module$node_modules$rambda$dist$rambda_mjs(reduceFn$$module$node_modules$rambda$dist$rambda_mjs),{keys:keys$1$$module$node_modules$rambda$dist$rambda_mjs}=Object;function mapArray$$module$node_modules$rambda$dist$rambda_mjs(e,o,s=!1){let c=0;const i=Array(o.length);for(;c<o.length;)i[c]=s?e(o[c],c):e(o[c]),c++;return i}function mapObject$$module$node_modules$rambda$dist$rambda_mjs(e,o){if(arguments.length===1)return h=>mapObject$$module$node_modules$rambda$dist$rambda_mjs(e,h);let s=0;const c=keys$1$$module$node_modules$rambda$dist$rambda_mjs(o),i=c.length,g={};for(;s<i;){const h=c[s];g[h]=e(o[h],h,o),s++}return g}function map$$module$node_modules$rambda$dist$rambda_mjs(e,o){if(arguments.length===1)return s=>map$$module$node_modules$rambda$dist$rambda_mjs(e,s);if(!o)throw Error(INCORRECT_ITERABLE_INPUT);return isArray$$module$node_modules$rambda$dist$rambda_mjs(o)?mapArray$$module$node_modules$rambda$dist$rambda_mjs(e,o):mapObject$$module$node_modules$rambda$dist$rambda_mjs(e,o)}function type$$module$node_modules$rambda$dist$rambda_mjs(e){return e===null?"Null":e===void 0?"Undefined":Number.isNaN(e)?"NaN":(e=Object.prototype.toString.call(e).slice(8,-1),e==="AsyncFunction"?"Promise":e)}function _indexOf$$module$node_modules$rambda$dist$rambda_mjs(e,o){if(!isArray$$module$node_modules$rambda$dist$rambda_mjs(o))throw Error(`Cannot read property 'indexOf' of ${o}`);var s=type$$module$node_modules$rambda$dist$rambda_mjs(e);if(!["Object","Array","NaN","RegExp"].includes(s))return o.indexOf(e);let c=s=-1;const{length:i}=o;for(;++s<i&&c===-1;)equals$$module$node_modules$rambda$dist$rambda_mjs(o[s],e)&&(c=s);return c}function _arrayFromIterator$$module$node_modules$rambda$dist$rambda_mjs(e){const o=[];let s;for(;!(s=e.next()).done;)o.push(s.value);return o}function _equalsSets$$module$node_modules$rambda$dist$rambda_mjs(e,o){if(e.size!==o.size)return!1;e=_arrayFromIterator$$module$node_modules$rambda$dist$rambda_mjs(e.values());const s=_arrayFromIterator$$module$node_modules$rambda$dist$rambda_mjs(o.values());return e.filter(c=>_indexOf$$module$node_modules$rambda$dist$rambda_mjs(c,s)===-1).length===0}function parseError$$module$node_modules$rambda$dist$rambda_mjs(e){const o=e.__proto__.toString();return["Error","TypeError"].includes(o)?[o,e.message]:[]}function parseDate$$module$node_modules$rambda$dist$rambda_mjs(e){return e.toDateString?[!0,e.getTime()]:[!1]}function parseRegex$$module$node_modules$rambda$dist$rambda_mjs(e){return e.constructor!==RegExp?[!1]:[!0,e.toString()]}function equals$$module$node_modules$rambda$dist$rambda_mjs(e,o){if(arguments.length===1)return g=>equals$$module$node_modules$rambda$dist$rambda_mjs(e,g);var s=type$$module$node_modules$rambda$dist$rambda_mjs(e);if(s!==type$$module$node_modules$rambda$dist$rambda_mjs(o))return!1;if(s==="Function")return e.name===void 0?!1:e.name===o.name;if(["NaN","Undefined","Null"].includes(s))return!0;if(s==="Number")return Object.is(-0,e)!==Object.is(-0,o)?!1:e.toString()===o.toString();if(["String","Boolean"].includes(s))return e.toString()===o.toString();if(s==="Array"){s=Array.from(e);const g=Array.from(o);if(s.toString()!==g.toString())return!1;let h=!0;return s.forEach(($,j)=>{h&&($===g[j]||equals$$module$node_modules$rambda$dist$rambda_mjs($,g[j])||(h=!1))}),h}var c=parseRegex$$module$node_modules$rambda$dist$rambda_mjs(e),i=parseRegex$$module$node_modules$rambda$dist$rambda_mjs(o);if(c[0])return i[0]?c[1]===i[1]:!1;if(i[0])return!1;if(c=parseDate$$module$node_modules$rambda$dist$rambda_mjs(e),i=parseDate$$module$node_modules$rambda$dist$rambda_mjs(o),c[0])return i[0]?c[1]===i[1]:!1;if(i[0])return!1;if(c=parseError$$module$node_modules$rambda$dist$rambda_mjs(e),i=parseError$$module$node_modules$rambda$dist$rambda_mjs(o),c[0])return i[0]?c[0]===i[0]&&c[1]===i[1]:!1;if(s==="Set")return _equalsSets$$module$node_modules$rambda$dist$rambda_mjs(e,o);if(s==="Object"){if(s=Object.keys(e),s.length!==Object.keys(o).length)return!1;let g=!0;return s.forEach(h=>{if(g){const $=e[h];h=o[h],$===h||equals$$module$node_modules$rambda$dist$rambda_mjs($,h)||(g=!1)}}),g}return!1}function dissoc$$module$node_modules$rambda$dist$rambda_mjs(e,o){if(arguments.length===1)return c=>dissoc$$module$node_modules$rambda$dist$rambda_mjs(e,c);if(o==null)return{};const s={};for(const c in o)s[c]=o[c];return delete s[e],s}function filterObject$$module$node_modules$rambda$dist$rambda_mjs(e,o){const s={};for(const c in o)e(o[c],c,o)&&(s[c]=o[c]);return s}function filterArray$$module$node_modules$rambda$dist$rambda_mjs(e,o,s=!1){let c=0;const i=o.length,g=[];for(;c<i;)(s?e(o[c],c):e(o[c]))&&g.push(o[c]),c++;return g}function filter$$module$node_modules$rambda$dist$rambda_mjs(e,o){if(arguments.length===1)return s=>filter$$module$node_modules$rambda$dist$rambda_mjs(e,s);if(!o)throw Error("Incorrect iterable input");return isArray$$module$node_modules$rambda$dist$rambda_mjs(o)?filterArray$$module$node_modules$rambda$dist$rambda_mjs(e,o,!1):filterObject$$module$node_modules$rambda$dist$rambda_mjs(e,o)}function isEmpty$$module$node_modules$rambda$dist$rambda_mjs(e){const o=type$$module$node_modules$rambda$dist$rambda_mjs(e);return["Undefined","NaN","Number","Null"].includes(o)?!1:e?o==="Object"?Object.keys(e).length===0:o==="Array"?e.length===0:!1:!0}function keys$$module$node_modules$rambda$dist$rambda_mjs(e){return Object.keys(e)}function mergeRight$$module$node_modules$rambda$dist$rambda_mjs(e,o){return arguments.length===1?s=>mergeRight$$module$node_modules$rambda$dist$rambda_mjs(e,s):Object.assign({},e||{},o||{})}function mergeAll$$module$node_modules$rambda$dist$rambda_mjs(e){let o={};return map$$module$node_modules$rambda$dist$rambda_mjs(s=>{o=mergeRight$$module$node_modules$rambda$dist$rambda_mjs(o,s)},e),o}function multiply$$module$node_modules$rambda$dist$rambda_mjs(e,o){return arguments.length===1?s=>multiply$$module$node_modules$rambda$dist$rambda_mjs(e,s):e*o}reduce$$module$node_modules$rambda$dist$rambda_mjs(multiply$$module$node_modules$rambda$dist$rambda_mjs,1);function range$$module$node_modules$rambda$dist$rambda_mjs(e,o){if(arguments.length===1)return i=>range$$module$node_modules$rambda$dist$rambda_mjs(e,i);if(Number.isNaN(Number(e))||Number.isNaN(Number(o)))throw new TypeError("Both arguments to range must be numbers");if(o<e)return[];const s=o-e,c=Array(s);for(let i=0;i<s;i++)c[i]=e+i;return c}function reject$$module$node_modules$rambda$dist$rambda_mjs(e,o){return arguments.length===1?s=>reject$$module$node_modules$rambda$dist$rambda_mjs(e,s):filter$$module$node_modules$rambda$dist$rambda_mjs(s=>!e(s),o)}const csoundSetMidiCallbacks$$module$src$modules$rtmidi=e=>o=>{e.exports.csoundSetMidiCallbacks(o)},csoundGetMIDIDevList$$module$src$modules$rtmidi=e=>(o,s)=>{const{buffer:c}=e.wasi.memory,i=e.exports.csoundGetMIDIDevList(o,void 0,s?1:0);if(i===0)return[];const g=sizeofStruct$$module$src$utils$native_sizes(CS_MIDIDEVICE$$module$src$structures),h=e.exports.allocCsMidiDeviceStruct(i);e.exports.csoundGetMIDIDevList(o,h,s?1:0);const $=new Uint8Array(c,h,g*i);return o=range$$module$node_modules$rambda$dist$rambda_mjs(0,i).map(j=>structBufferToObject$$module$src$utils$structure_buffer_to_object(CS_MIDIDEVICE$$module$src$structures,$.subarray(j*g,g))),e.exports.freeCsMidiDeviceStruct(h),o};csoundGetMIDIDevList$$module$src$modules$rtmidi.toString=()=>"getMIDIDevList = async (isOutput) => Object;";const csoundGetRtMidiName$$module$src$modules$rtmidi=e=>o=>{var{buffer:s}=e.wasi.memory;return o=e.exports.getRtMidiName(o),s=new Uint8Array(s,o,128),trimNull$$module$src$utils$trim_null(uint2String$$module$src$utils$text_encoders(s))||""};csoundGetRtMidiName$$module$src$modules$rtmidi.toString=()=>"getRtMidiName = async () => String;";const csoundGetMidiOutFileName$$module$src$modules$rtmidi=e=>o=>{var{buffer:s}=e.wasi.memory;return o=e.exports.getMidiOutFileName(o),s=new Uint8Array(s,o,128),o&&0<o.length&&freeStringPtr$$module$src$utils$string_pointers(e,o),trimNull$$module$src$utils$trim_null(uint2String$$module$src$utils$text_encoders(s))||""},_isRequestingRtMidiInput$$module$src$modules$rtmidi=e=>o=>e.exports.isRequestingRtMidiInput(o),csoundPushMidiMessage$$module$src$modules$rtmidi=e=>(o,s,c,i)=>{e.exports.pushMidiMessage(o,s,c,i)};csoundPushMidiMessage$$module$src$modules$rtmidi.toString=()=>"midiMessage = async (status, data1, data2) => undefined;";const csoundInputMessage$$module$src$modules$control_events=e=>(o,s)=>(s=string2ptr$$module$src$utils$string_pointers(e,s),o=e.exports.csoundInputMessage(o,s),freeStringPtr$$module$src$utils$string_pointers(e,s),o);csoundInputMessage$$module$src$modules$control_events.toString=()=>"inputMessage = async (scoreEvent) => Number;";const csoundInputMessageAsync$$module$src$modules$control_events=e=>(o,s)=>(s=string2ptr$$module$src$utils$string_pointers(e,s),o=e.exports.csoundInputMessageAsync(o,s),freeStringPtr$$module$src$utils$string_pointers(e,s),o);csoundInputMessageAsync$$module$src$modules$control_events.toString=()=>"inputMessageAsync = async (scoreEvent) => Number;";const csoundGetControlChannel$$module$src$modules$control_events=e=>(o,s)=>(s=string2ptr$$module$src$utils$string_pointers(e,s),o=e.exports.csoundGetControlChannelWasi(o,s),freeStringPtr$$module$src$utils$string_pointers(e,s),o);csoundGetControlChannel$$module$src$modules$control_events.toString=()=>"getControlChannel = async (channelName) => Number;";const csoundSetControlChannel$$module$src$modules$control_events=e=>(o,s,c)=>{s=string2ptr$$module$src$utils$string_pointers(e,s),e.exports.csoundSetControlChannel(o,s,c),freeStringPtr$$module$src$utils$string_pointers(e,s)};csoundSetControlChannel$$module$src$modules$control_events.toString=()=>"setControlChannel = async (channelName, value) => void;";const csoundGetStringChannel$$module$src$modules$control_events=e=>(o,s)=>{s=string2ptr$$module$src$utils$string_pointers(e,s),o=e.exports.csoundGetStringChannelWasi(o,s);const c=ptr2string$$module$src$utils$string_pointers(e,o);return freeStringPtr$$module$src$utils$string_pointers(e,s),freeStringPtr$$module$src$utils$string_pointers(e,o),c};csoundGetStringChannel$$module$src$modules$control_events.toString=()=>"getStringChannel = async (channelName) => String;";const csoundSetStringChannel$$module$src$modules$control_events=e=>(o,s,c)=>{s=string2ptr$$module$src$utils$string_pointers(e,s),c=string2ptr$$module$src$utils$string_pointers(e,c),e.exports.csoundSetStringChannel(o,s,c),freeStringPtr$$module$src$utils$string_pointers(e,s),freeStringPtr$$module$src$utils$string_pointers(e,c)};csoundSetStringChannel$$module$src$modules$control_events.toString=()=>"setStringChannel = async (channelName, value) => void;";const csoundGetOutputName$$module$src$modules$general_io=e=>o=>{var{buffer:s}=e.wasi.memory;return o=e.exports.csoundGetOutputName(o),s=new Uint8Array(s,o,64),trimNull$$module$src$utils$trim_null(uint2String$$module$src$utils$text_encoders(s))||""};csoundGetOutputName$$module$src$modules$general_io.toString=()=>"getOutputName = async () => String;";const csoundGetInputName$$module$src$modules$general_io=e=>o=>{var{buffer:s}=e.wasi.memory;return o=e.exports.csoundGetInputName(o),s=new Uint8Array(s,o,64),trimNull$$module$src$utils$trim_null(uint2String$$module$src$utils$text_encoders(s))||""};csoundGetInputName$$module$src$modules$general_io.toString=()=>"getInputName = async (csound) => String;";const csoundAppendEnv$$module$src$modules$extra=e=>(o,s,c)=>(s=string2ptr$$module$src$utils$string_pointers(e,s),c=string2ptr$$module$src$utils$string_pointers(e,c),o=e.exports.csoundAppendEnv(o,s,c),freeStringPtr$$module$src$utils$string_pointers(e,s),freeStringPtr$$module$src$utils$string_pointers(e,c),o);csoundAppendEnv$$module$src$modules$extra.toString=()=>"appendEnv = async (csound, variable, value) => Number;";const csoundShouldDaemonize$$module$src$modules$extra=e=>o=>e.exports.csoundShouldDaemonize(o),csoundIsScorePending$$module$src$modules$score_handling=e=>o=>e.exports.csoundIsScorePending(o);csoundIsScorePending$$module$src$modules$score_handling.toString=()=>"isScorePending = async () => Number;";const csoundSetScorePending$$module$src$modules$score_handling=e=>(o,s)=>e.exports.csoundSetScorePending(o,s);csoundSetScorePending$$module$src$modules$score_handling.toString=()=>"setScorePending = async (pending) => Number;";const csoundReadScore$$module$src$modules$score_handling=e=>(o,s)=>(s=string2ptr$$module$src$utils$string_pointers(e,s),o=e.exports.csoundReadScore(o,s),freeStringPtr$$module$src$utils$string_pointers(e,s),o);csoundReadScore$$module$src$modules$score_handling.toString=()=>"readScore = async (score) => Number;";const csoundGetScoreTime$$module$src$modules$score_handling=e=>o=>e.exports.csoundGetScoreTime(o);csoundGetScoreTime$$module$src$modules$score_handling.toString=()=>"getScoreTime = async () => Number;";const csoundGetScoreOffsetSeconds$$module$src$modules$score_handling=e=>o=>e.exports.csoundGetScoreOffsetSeconds(o);csoundGetScoreOffsetSeconds$$module$src$modules$score_handling.toString=()=>"getScoreOffsetSeconds = async () => Number;";const csoundSetScoreOffsetSeconds$$module$src$modules$score_handling=e=>(o,s)=>e.exports.csoundSetScoreOffsetSeconds(o,s);csoundSetScoreOffsetSeconds$$module$src$modules$score_handling.toString=()=>"setScoreOffsetSeconds = async () => Number;";const csoundRewindScore$$module$src$modules$score_handling=e=>o=>e.exports.csoundRewindScore(o);csoundRewindScore$$module$src$modules$score_handling.toString=()=>"rewindScore = async () => undefined;";const csoundTableLength$$module$src$modules$table=e=>(o,s)=>e.exports.csoundTableLength(o,s);csoundTableLength$$module$src$modules$table.toString=()=>"tableLength = async (tableNum) => Number;";const csoundTableGet$$module$src$modules$table=e=>(o,s,c)=>e.exports.csoundTableGet(o,s,c);csoundTableGet$$module$src$modules$table.toString=()=>"tableGet = async (tableNum, tableIndex) => Number;";const csoundTableSet$$module$src$modules$table=e=>(o,s,c,i)=>e.exports.csoundTableSet(o,s,c,i);csoundTableSet$$module$src$modules$table.toString=()=>"tableSet = async (tableNum, tableIndex, value) => undefined;";const csoundTableCopyIn$$module$src$modules$table=e=>(o,s,c)=>{const i=e.exports.allocFloatArray(c.length);new Float64Array(e.wasi.memory.buffer,i,c.length).set(c),e.exports.csoundTableCopyIn(o,s,i),e.exports.freeFloatArrayMem(i)};csoundTableCopyIn$$module$src$modules$table.toString=()=>"tableCopyIn = async (tableNum, float64Array) => undefined;";const csoundTableCopyOut$$module$src$modules$table=e=>(o,s)=>{var c=e.exports.csoundTableLength(o,s);if(0<c){const i=e.exports.allocFloatArray(c);return e.exports.csoundTableCopyOut(o,s,i),{buffer:o}=e.wasi.memory,c=new Float64Array(o,i,c),e.exports.freeFloatArrayMem(i),Float64Array.from(c)}};csoundTableCopyOut$$module$src$modules$table.toString=()=>"tableCopyOut = async (tableNum) => ?Float64Array;";csoundTableCopyOut$$module$src$modules$table.toString=csoundTableCopyOut$$module$src$modules$table.toString;const csoundGetTableArgs$$module$src$modules$table=e=>(o,s)=>{const c=e.exports.allocFloatArray(1024);return e.exports.csoundGetTableArgs(o,c,s),{buffer:o}=e.wasi.memory,o=new Float64Array(o,c,1024),e.exports.freeFloatArrayMem(c),o};csoundGetTableArgs$$module$src$modules$table.toString=()=>"getTableArgs = async (tableNum) => ?Float64Array;";const csoundIsNamedGEN$$module$src$modules$table=e=>(o,s)=>e.exports.csoundIsNamedGEN(o,s);csoundIsNamedGEN$$module$src$modules$table.toString=()=>"isNamedGEN = async (tableNum) => number;";const csoundGetNamedGEN$$module$src$modules$table=e=>(o,s)=>{var c=e.exports.csoundIsNamedGEN(o,s);if(0<c){const i=e.exports.allocStringMem(c);return e.exports.csoundGetNamedGEN(o,i,s,c),{buffer:o}=e.wasi.memory,c=new Uint8Array(o,i,c),uint2String$$module$src$utils$text_encoders(c)}};csoundGetNamedGEN$$module$src$modules$table.toString=()=>"getNamedGEN = async (tableNum) => ?string;";function writeFile$$module$src$filesystem$worker_fs(e){return(o,s,c)=>{o=typeof c=="string"?encoder$$module$src$utils$text_encoders.encode(c):c,e.wasi.writeFile(s,o)}}writeFile$$module$src$filesystem$worker_fs.toString=()=>"async (path, data) => void";function appendFile$$module$src$filesystem$worker_fs(e){return(o,s,c)=>{o=typeof c=="string"?encoder$$module$src$utils$text_encoders.encode(c):c,e.wasi.appendFile(s,o)}}appendFile$$module$src$filesystem$worker_fs.toString=()=>"async (path, data) => void";function readFile$$module$src$filesystem$worker_fs(e){return(o,s)=>e.wasi.readFile(s)}readFile$$module$src$filesystem$worker_fs.toString=()=>"async (path) => ?Uint8Array";function unlink$$module$src$filesystem$worker_fs(e){return(o,s)=>e.wasi.unlink(s)}unlink$$module$src$filesystem$worker_fs.toString=()=>"async (path) => void";function readdir$$module$src$filesystem$worker_fs(e){return(o,s)=>e.wasi.readdir(s)}readdir$$module$src$filesystem$worker_fs.toString=()=>"async (path) => string[]";function mkdir$$module$src$filesystem$worker_fs(e){return(o,s)=>e.wasi.mkdir(s)}mkdir$$module$src$filesystem$worker_fs.toString=()=>"async (path) => void";var module$src$filesystem$worker_fs={};module$src$filesystem$worker_fs.appendFile=appendFile$$module$src$filesystem$worker_fs;module$src$filesystem$worker_fs.mkdir=mkdir$$module$src$filesystem$worker_fs;module$src$filesystem$worker_fs.readFile=readFile$$module$src$filesystem$worker_fs;module$src$filesystem$worker_fs.readdir=readdir$$module$src$filesystem$worker_fs;module$src$filesystem$worker_fs.unlink=unlink$$module$src$filesystem$worker_fs;module$src$filesystem$worker_fs.writeFile=writeFile$$module$src$filesystem$worker_fs;const api$$module$src$libcsound={csoundCreate:csoundCreate$$module$src$modules$instantiation,csoundDestroy:csoundDestroy$$module$src$modules$instantiation,csoundGetAPIVersion:csoundGetAPIVersion$$module$src$modules$instantiation,csoundGetVersion:csoundGetVersion$$module$src$modules$instantiation,csoundInitialize:csoundInitialize$$module$src$modules$instantiation,csoundParseOrc:csoundParseOrc$$module$src$modules$performance,csoundCompileTree:csoundCompileTree$$module$src$modules$performance,csoundCompileOrc:csoundCompileOrc$$module$src$modules$performance,csoundEvalCode:csoundEvalCode$$module$src$modules$performance,csoundStart:csoundStart$$module$src$modules$performance,csoundCompileCsd:csoundCompileCsd$$module$src$modules$performance,csoundCompileCsdText:csoundCompileCsdText$$module$src$modules$performance,csoundPerform:csoundPerform$$module$src$modules$performance,csoundPerformKsmps:csoundPerformKsmps$$module$src$modules$performance,csoundPerformBuffer:csoundPerformBuffer$$module$src$modules$performance,csoundStop:csoundStop$$module$src$modules$performance,csoundCleanup:csoundCleanup$$module$src$modules$performance,csoundReset:csoundReset$$module$src$modules$performance,csoundGetSr:csoundGetSr$$module$src$modules$attributes,csoundGetKr:csoundGetKr$$module$src$modules$attributes,csoundGetKsmps:csoundGetKsmps$$module$src$modules$attributes,csoundGetNchnls:csoundGetNchnls$$module$src$modules$attributes,csoundGetNchnlsInput:csoundGetNchnlsInput$$module$src$modules$attributes,csoundGet0dBFS:csoundGet0dBFS$$module$src$modules$attributes,csoundGetA4:csoundGetA4$$module$src$modules$attributes,csoundGetCurrentTimeSamples:csoundGetCurrentTimeSamples$$module$src$modules$attributes,csoundGetSizeOfMYFLT:csoundGetSizeOfMYFLT$$module$src$modules$attributes,csoundSetOption:csoundSetOption$$module$src$modules$attributes,csoundSetParams:csoundSetParams$$module$src$modules$attributes,csoundGetParams:csoundGetParams$$module$src$modules$attributes,csoundGetDebug:csoundGetDebug$$module$src$modules$attributes,csoundSetDebug:csoundSetDebug$$module$src$modules$attributes,csoundGetInputBufferSize:csoundGetInputBufferSize$$module$src$modules$rtaudio,csoundGetOutputBufferSize:csoundGetOutputBufferSize$$module$src$modules$rtaudio,csoundGetInputBuffer:csoundGetInputBuffer$$module$src$modules$rtaudio,csoundGetOutputBuffer:csoundGetOutputBuffer$$module$src$modules$rtaudio,csoundGetSpin:csoundGetSpin$$module$src$modules$rtaudio,csoundGetSpout:csoundGetSpout$$module$src$modules$rtaudio,csoundGetMIDIDevList:csoundGetMIDIDevList$$module$src$modules$rtmidi,csoundSetMidiCallbacks:csoundSetMidiCallbacks$$module$src$modules$rtmidi,csoundGetRtMidiName:csoundGetRtMidiName$$module$src$modules$rtmidi,csoundGetMidiOutFileName:csoundGetMidiOutFileName$$module$src$modules$rtmidi,csoundPushMidiMessage:csoundPushMidiMessage$$module$src$modules$rtmidi,_isRequestingRtMidiInput:_isRequestingRtMidiInput$$module$src$modules$rtmidi,csoundInputMessage:csoundInputMessage$$module$src$modules$control_events,csoundInputMessageAsync:csoundInputMessageAsync$$module$src$modules$control_events,csoundGetControlChannel:csoundGetControlChannel$$module$src$modules$control_events,csoundSetControlChannel:csoundSetControlChannel$$module$src$modules$control_events,csoundGetStringChannel:csoundGetStringChannel$$module$src$modules$control_events,csoundSetStringChannel:csoundSetStringChannel$$module$src$modules$control_events,csoundGetInputName:csoundGetInputName$$module$src$modules$general_io,csoundGetOutputName:csoundGetOutputName$$module$src$modules$general_io,csoundAppendEnv:csoundAppendEnv$$module$src$modules$extra,csoundShouldDaemonize:csoundShouldDaemonize$$module$src$modules$extra,csoundIsScorePending:csoundIsScorePending$$module$src$modules$score_handling,csoundSetScorePending:csoundSetScorePending$$module$src$modules$score_handling,csoundReadScore:csoundReadScore$$module$src$modules$score_handling,csoundGetScoreTime:csoundGetScoreTime$$module$src$modules$score_handling,csoundGetScoreOffsetSeconds:csoundGetScoreOffsetSeconds$$module$src$modules$score_handling,csoundSetScoreOffsetSeconds:csoundSetScoreOffsetSeconds$$module$src$modules$score_handling,csoundRewindScore:csoundRewindScore$$module$src$modules$score_handling,csoundTableLength:csoundTableLength$$module$src$modules$table,csoundTableGet:csoundTableGet$$module$src$modules$table,csoundTableSet:csoundTableSet$$module$src$modules$table,csoundTableCopyIn:csoundTableCopyIn$$module$src$modules$table,csoundTableCopyOut:csoundTableCopyOut$$module$src$modules$table,csoundGetTable:csoundTableCopyOut$$module$src$modules$table,csoundGetTableArgs:csoundGetTableArgs$$module$src$modules$table,csoundIsNamedGEN:csoundIsNamedGEN$$module$src$modules$table,csoundGetNamedGEN:csoundGetNamedGEN$$module$src$modules$table,fs:module$src$filesystem$worker_fs};var $jscompDefaultExport$$module$src$libcsound=function(e){return mergeAll$$module$node_modules$rambda$dist$rambda_mjs([reduce$$module$node_modules$rambda$dist$rambda_mjs((o,s)=>assoc$$module$node_modules$rambda$dist$rambda_mjs(s,api$$module$src$libcsound[s](e),o),{},keys$$module$node_modules$rambda$dist$rambda_mjs(dissoc$$module$node_modules$rambda$dist$rambda_mjs("fs")(api$$module$src$libcsound))),reduce$$module$node_modules$rambda$dist$rambda_mjs((o,s)=>assoc$$module$node_modules$rambda$dist$rambda_mjs(s,api$$module$src$libcsound.fs[s](e),o),{},keys$$module$node_modules$rambda$dist$rambda_mjs(module$src$filesystem$worker_fs))])};const isFirefox$$module$src$utils=()=>navigator.userAgent.toLowerCase().includes("firefox"),isSafari$$module$src$utils=()=>typeof navigator.vendor=="string"&&navigator.vendor.includes("Apple"),isSabSupported$$module$src$utils=()=>!isFirefox$$module$src$utils()&&window&&window.Atomics!==void 0&&window.SharedArrayBuffer!==void 0,areWorkletsSupported$$module$src$utils=()=>AudioNode!==void 0&&AudioWorkletNode!==void 0,WebkitAudioContext$$module$src$utils=()=>{if(window.webkitAudioContext!==void 0)return window.webkitAudioContext;if(window.AudioContext!==void 0)return window.AudioContext},isScriptProcessorNodeSupported$$module$src$utils=()=>{const e=WebkitAudioContext$$module$src$utils();return e!==void 0&&e.prototype.createScriptProcessor!==void 0},csoundApiRename$$module$src$utils=e=>{let o=e.replace(/^csound/i,"");return e==="csoundPushMidiMessage"&&(o="midiMessage"),o.charAt(0).toLowerCase()+o.slice(1)},stopableStates$$module$src$utils=new Set(["realtimePerformanceStarted","realtimePerformancePaused","realtimePerformanceResumed","renderStarted"]),makeProxyCallback$$module$src$utils=(e,o,s,c)=>async(...i)=>{if(!c||!stopableStates$$module$src$utils.has(c)){const g={};0<Object.values(g).length&&await e.callUncloned("syncWorkerFs",[o,g])}return await e.callUncloned(s,[o,...i])},makeSingleThreadCallback$$module$src$utils=(e,o)=>async(...s)=>await o.apply({},[e,...s]),fetchPlugins$$module$src$utils=async e=>await Promise.all(e.map(async o=>(await fetch(o)).arrayBuffer())),messageEventHandler$$module$src$mains$messages_main=e=>o=>{o.data.log?e&&e.publicEvents&&e.publicEvents.triggerMessage?e.publicEvents.triggerMessage(o.data.log):console.log(typeof o.data.log=="object"&&typeof o.data.log.log=="string"?o.data.log.log:o.data.log):o.data.playStateChange&&e&&e.onPlayStateChange&&e.onPlayStateChange(o.data.playStateChange)},iterableMessageChannel$$module$src$mains$messages_main=()=>{const{port1:e,port2:o}=new MessageChannel;return[e,o]},safelyClosePorts$$module$src$mains$messages_main=([e,o])=>{if(e.close!==void 0)try{e.close()}catch{}if(o.close!==void 0)try{o.close()}catch{}};class IPCMessagePorts$$module$src$mains$messages_main{constructor(){const{port1:o,port2:s}=new MessageChannel;this.mainMessagePort=o,this.workerMessagePort=s;const{port1:c,port2:i}=new MessageChannel;this.mainMessagePortAudio=c,this.workerMessagePortAudio=i;const{port1:g,port2:h}=new MessageChannel;this.csoundWorkerFrameRequestPort=g,this.audioWorkerFrameRequestPort=h;const{port1:$,port2:j}=new MessageChannel;this.csoundWorkerAudioInputPort=$,this.audioWorkerAudioInputPort=j;const{port1:_,port2:_e}=new MessageChannel;this.csoundWorkerRtMidiPort=_,this.csoundMainRtMidiPort=_e;const{port1:et,port2:tt}=new MessageChannel;this.sabWorkerCallbackReply=et,this.sabMainCallbackReply=tt;const{port1:at,port2:rt}=new MessageChannel;this.mainMessagePort2=at,this.workerMessagePort2=rt,this.restartAudioWorkerPorts=this.restartAudioWorkerPorts.bind(this)}restartAudioWorkerPorts(){safelyClosePorts$$module$src$mains$messages_main([this.csoundWorkerAudioInputPort,this.audioWorkerAudioInputPort]),[this.csoundWorkerAudioInputPort,this.audioWorkerAudioInputPort]=iterableMessageChannel$$module$src$mains$messages_main(),safelyClosePorts$$module$src$mains$messages_main([this.mainMessagePortAudio,this.workerMessagePortAudio]),[this.mainMessagePortAudio,this.workerMessagePortAudio]=iterableMessageChannel$$module$src$mains$messages_main(),safelyClosePorts$$module$src$mains$messages_main([this.csoundWorkerFrameRequestPort,this.audioWorkerFrameRequestPort]),[this.csoundWorkerFrameRequestPort,this.audioWorkerFrameRequestPort]=iterableMessageChannel$$module$src$mains$messages_main(),safelyClosePorts$$module$src$mains$messages_main([this.mainMessagePort2,this.workerMessagePort2]),[this.mainMessagePort2,this.workerMessagePort2]=iterableMessageChannel$$module$src$mains$messages_main()}}function clearArray$$module$src$utils$clear_array(e){for(;0<e.length;)e.pop()}class EventPromises$$module$src$utils$event_promises{constructor(){this.timeoutTimers=[],this.resumeResolver=this.resumePromise=this.pauseResolver=this.pausePromise=this.stopResolver=this.stopPromise=this.startResolver=this.startPromise=void 0,this.createStartPromise=this.createStartPromise.bind(this),this.releaseStartPromise=this.releaseStartPromise.bind(this),this.createStopPromise=this.createStopPromise.bind(this),this.releaseStopPromise=this.releaseStopPromise.bind(this),this.createPausePromise=this.createPausePromise.bind(this),this.releasePausePromise=this.releasePausePromise.bind(this),this.createResumePromise=this.createResumePromise.bind(this),this.releaseResumePromise=this.releaseResumePromise.bind(this),this.waitForStart=this.waitForStart.bind(this),this.waitForStop=this.waitForStop.bind(this),this.isWaitingToStart=this.isWaitingToStart.bind(this),this.isWaitingToStop=this.isWaitingToStop.bind(this)}isWaitingToStart(){return this.startPromise!==void 0}isWaitingToStop(){return this.stopPromise!==void 0}isWaiting(o){return this.startPromise!==void 0?(console.error(`cannot ${o} while starting, did you forget to 'await'?`),!0):this.stopPromise!==void 0?(console.error(`cannot ${o} while stopping, did you forget to 'await'?`),!0):this.pausePromise!==void 0?(console.error(`cannot ${o} while pausing, did you forget to 'await'?`),!0):this.resumePromise!==void 0?(console.error(`cannot ${o} while resuming, did you forget to 'await'?`),!0):!1}async waitForStart(){return this.startPromise?await this.startPromise:-1}async waitForStop(){let o;return(o=this.stopPromise)!=null?o:-1}async waitForPause(){let o;return(o=this.pausePromise)!=null?o:-1}async waitForResume(){let o;return(o=this.resumePromise)!=null?o:-1}createStartPromise(){this.startPromise||(this.startPromise=new Promise(o=>{this.startResolver=o;const s=setTimeout(()=>{this.timeoutTimers=reject$$module$node_modules$rambda$dist$rambda_mjs(equals$$module$node_modules$rambda$dist$rambda_mjs(s),this.timeoutTimers),this.startPromise&&(console.warn("start promise timed out"),this.startResolver(),delete this.startResolver,this.startPromise&&delete this.startPromise)},2e3);this.timeoutTimers.push(s)}))}releaseStartPromise(){try{this.timeoutTimers.forEach(clearTimeout),clearArray$$module$src$utils$clear_array(this.timeoutTimers)}catch(o){console.error(o)}this.startResolver&&(this.startResolver(),delete this.startResolver),this.startPromise&&delete this.startPromise}createStopPromise(){this.stopPromise||(this.stopPromise=new Promise(o=>{this.stopResolver=o;const s=setTimeout(()=>{this.timeoutTimers=reject$$module$node_modules$rambda$dist$rambda_mjs(equals$$module$node_modules$rambda$dist$rambda_mjs(s),this.timeoutTimers),this.stopPromise&&(console.warn("stop promise timed out"),this.stopResolver(),delete this.stopResolver,this.stopPromise&&delete this.stopPromise)},2e3);this.timeoutTimers.push(s)}))}releaseStopPromise(){try{this.timeoutTimers.forEach(clearTimeout),clearArray$$module$src$utils$clear_array(this.timeoutTimers)}catch(o){console.error(o)}this.stopResolver&&(this.stopResolver(),delete this.stopResolver),this.stopPromise&&delete this.stopPromise}createPausePromise(){this.pausePromise||(this.pausePromise=new Promise(o=>{this.pauseResolver=o;const s=setTimeout(()=>{this.timeoutTimers=reject$$module$node_modules$rambda$dist$rambda_mjs(equals$$module$node_modules$rambda$dist$rambda_mjs(s),this.timeoutTimers),this.pausePromise&&(console.warn("pause promise timed out"),this.pauseResolver(),delete this.pauseResolver,this.pausePromise&&delete this.pausePromise)},2e3);this.timeoutTimers.push(s)}))}releasePausePromise(){try{this.timeoutTimers.forEach(clearTimeout),clearArray$$module$src$utils$clear_array(this.timeoutTimers)}catch(o){console.error(o)}this.pauseResolver&&(this.pauseResolver(),delete this.pauseResolver),this.pausePromise&&delete this.pausePromise}createResumePromise(){this.resumePromise||(this.resumePromise=new Promise(o=>{this.resumeResolver=o;const s=setTimeout(()=>{this.timeoutTimers=reject$$module$node_modules$rambda$dist$rambda_mjs(equals$$module$node_modules$rambda$dist$rambda_mjs(s),this.timeoutTimers),this.resumePromise&&(console.warn("resume promise timed out"),this.resumeResolver(),delete this.resumeResolver,this.resumePromise&&delete this.resumePromise)},2e3);this.timeoutTimers.push(s)}))}releaseResumePromise(){try{this.timeoutTimers.forEach(clearTimeout),clearArray$$module$src$utils$clear_array(this.timeoutTimers)}catch(o){console.error(o)}this.resumeResolver&&(this.resumeResolver(),delete this.resumeResolver),this.resumePromise&&delete this.resumePromise}}var module$node_modules$eventemitter3$umd$eventemitter3_min={};module$node_modules$eventemitter3$umd$eventemitter3_min.default=function(){return function e(o,s,c){function i($,j){if(!s[$]){if(!o[$]){var _=typeof require=="function"&&require;if(!j&&_)return _($,!0);if(g)return g($,!0);throw j=Error("Cannot find module '"+$+"'"),j.code="MODULE_NOT_FOUND",j}j=s[$]={exports:{}},o[$][0].call(j.exports,function(_e){return i(o[$][1][_e]||_e)},j,j.exports,e,o,s,c)}return s[$].exports}for(var g=typeof require=="function"&&require,h=0;h<c.length;h++)i(c[h]);return i}({1:[function(e,o,s){function c(){}function i(_e,et,tt){this.fn=_e,this.context=et,this.once=tt||!1}function g(_e,et,tt,at,rt){if(typeof tt!="function")throw new TypeError("The listener must be a function");return tt=new i(tt,at||_e,rt),et=_?_+et:et,_e._events[et]?_e._events[et].fn?_e._events[et]=[_e._events[et],tt]:_e._events[et].push(tt):(_e._events[et]=tt,_e._eventsCount++),_e}function h(_e,et){--_e._eventsCount==0?_e._events=new c:delete _e._events[et]}function $(){this._events=new c,this._eventsCount=0}var j=Object.prototype.hasOwnProperty,_="~";Object.create&&(c.prototype=Object.create(null),new c().__proto__||(_=!1)),$.prototype.eventNames=function(){var _e,et,tt=[];if(this._eventsCount===0)return tt;for(et in _e=this._events)j.call(_e,et)&&tt.push(_?et.slice(1):et);return Object.getOwnPropertySymbols?tt.concat(Object.getOwnPropertySymbols(_e)):tt},$.prototype.listeners=function(_e){if(_e=this._events[_?_+_e:_e],!_e)return[];if(_e.fn)return[_e.fn];for(var et=0,tt=_e.length,at=Array(tt);et<tt;et++)at[et]=_e[et].fn;return at},$.prototype.listenerCount=function(_e){return(_e=this._events[_?_+_e:_e])?_e.fn?1:_e.length:0},$.prototype.emit=function(_e,et,tt,at,rt,dt){var mt=_?_+_e:_e;if(!this._events[mt])return!1;var st;mt=this._events[mt];var ot=arguments.length;if(mt.fn){switch(mt.once&&this.removeListener(_e,mt.fn,void 0,!0),ot){case 1:return mt.fn.call(mt.context),!0;case 2:return mt.fn.call(mt.context,et),!0;case 3:return mt.fn.call(mt.context,et,tt),!0;case 4:return mt.fn.call(mt.context,et,tt,at),!0;case 5:return mt.fn.call(mt.context,et,tt,at,rt),!0;case 6:return mt.fn.call(mt.context,et,tt,at,rt,dt),!0}for(ct=1,st=Array(ot-1);ct<ot;ct++)st[ct-1]=arguments[ct];mt.fn.apply(mt.context,st)}else for(var nt,lt=mt.length,ct=0;ct<lt;ct++)switch(mt[ct].once&&this.removeListener(_e,mt[ct].fn,void 0,!0),ot){case 1:mt[ct].fn.call(mt[ct].context);break;case 2:mt[ct].fn.call(mt[ct].context,et);break;case 3:mt[ct].fn.call(mt[ct].context,et,tt);break;case 4:mt[ct].fn.call(mt[ct].context,et,tt,at);break;default:if(!st)for(nt=1,st=Array(ot-1);nt<ot;nt++)st[nt-1]=arguments[nt];mt[ct].fn.apply(mt[ct].context,st)}return!0},$.prototype.on=function(_e,et,tt){return g(this,_e,et,tt,!1)},$.prototype.once=function(_e,et,tt){return g(this,_e,et,tt,!0)},$.prototype.removeListener=function(_e,et,tt,at){if(_e=_?_+_e:_e,!this._events[_e])return this;if(!et)return h(this,_e),this;var rt=this._events[_e];if(rt.fn)rt.fn!==et||at&&!rt.once||tt&&rt.context!==tt||h(this,_e);else{for(var dt=0,mt=[],st=rt.length;dt<st;dt++)(rt[dt].fn!==et||at&&!rt[dt].once||tt&&rt[dt].context!==tt)&&mt.push(rt[dt]);mt.length?this._events[_e]=mt.length===1?mt[0]:mt:h(this,_e)}return this},$.prototype.removeAllListeners=function(_e){var et;return _e?(et=_?_+_e:_e,this._events[et]&&h(this,et)):(this._events=new c,this._eventsCount=0),this},$.prototype.off=$.prototype.removeListener,$.prototype.addListener=$.prototype.on,$.prefixed=_,$.EventEmitter=$,o!==void 0&&(o.exports=$)},{}]},{},[1])(1)}();class PublicEventAPI$$module$src$events{constructor(o){this.parent=o,this.eventEmitter=new module$node_modules$eventemitter3$umd$eventemitter3_min.default,this.currentDerivedPlayState=void 0,this.decorateAPI=this.decorateAPI.bind(this),this.triggerRealtimePerformanceStarted=this.triggerRealtimePerformanceStarted.bind(this),this.triggerRealtimePerformancePaused=this.triggerRealtimePerformancePaused.bind(this),this.triggerRealtimePerformanceResumed=this.triggerRealtimePerformanceResumed.bind(this),this.triggerRealtimePerformanceEnded=this.triggerRealtimePerformanceEnded.bind(this),this.triggerRenderStarted=this.triggerRenderStarted.bind(this),this.triggerRenderEnded=this.triggerRenderEnded.bind(this),this.triggerOnAudioNodeCreated=this.triggerOnAudioNodeCreated.bind(this),this.terminateInstance=this.terminateInstance.bind(this)}terminateInstance(){this.eventEmitter.removeAllListeners("play pause stop realtimePerformanceStarted realtimePerformancePaused realtimePerformanceResumed realtimePerformanceEnded renderStarted renderEnded onAudioNodeCreated message".split(" ")),Object.keys(this).forEach(o=>delete this[o])}triggerRealtimePerformanceStarted(){this.eventEmitter.emit("realtimePerformanceStarted"),this.currentDerivedPlayState!=="play"&&(this.eventEmitter.emit("play"),this.currentDerivedPlayState="play")}triggerRealtimePerformancePaused(){this.eventEmitter.emit("realtimePerformancePaused"),this.currentDerivedPlayState!=="pause"&&(this.eventEmitter.emit("pause"),this.currentDerivedPlayState="pause")}triggerRealtimePerformanceResumed(){this.eventEmitter.emit("realtimePerformanceResumed"),this.currentDerivedPlayState!=="play"&&(this.eventEmitter.emit("play"),this.currentDerivedPlayState="play")}triggerRealtimePerformanceEnded(){this.eventEmitter.emit("realtimePerformanceEnded"),this.currentDerivedPlayState!=="stop"&&(this.eventEmitter.emit("stop"),this.currentDerivedPlayState="stop")}triggerRenderStarted(){this.eventEmitter.emit("renderStarted"),this.currentDerivedPlayState!=="stop"&&(this.eventEmitter.emit("stop"),this.currentDerivedPlayState="stop")}triggerRenderEnded(){this.eventEmitter.emit("renderEnded"),this.currentDerivedPlayState!=="stop"&&(this.eventEmitter.emit("stop"),this.currentDerivedPlayState="stop")}triggerOnAudioNodeCreated(o){this.eventEmitter.emit("onAudioNodeCreated",o)}triggerMessage({log:o}){this.eventEmitter.emit("message",o)}decorateAPI(o){return o.eventNames=this.eventEmitter.eventNames.bind(this.eventEmitter),o.listenerCount=this.eventEmitter.listenerCount.bind(this.eventEmitter),o.listeners=this.eventEmitter.listeners.bind(this.eventEmitter),o.off=this.eventEmitter.off.bind(this.eventEmitter),o.on=this.eventEmitter.on.bind(this.eventEmitter),o.addListener=this.eventEmitter.on.bind(this.eventEmitter),o.once=this.eventEmitter.once.bind(this.eventEmitter),o.removeAllListeners=this.eventEmitter.removeAllListeners.bind(this.eventEmitter),o.removeListener=this.eventEmitter.removeListener.bind(this.eventEmitter),o}}var $jscompDefaultExport$$module$dist$__compiled_vanilla_worker_inline=()=>(window.URL||window.webkitURL).createObjectURL(new Blob([`(function(){/*

 Copyright The Closure Library Authors.
 SPDX-License-Identifier: Apache-2.0
*/
var $jscomp=$jscomp||{};$jscomp.scope={};var COMPILED=!0,goog=goog||{};goog.global=this||self;goog.exportPath_=function(a,b,c,d){a=a.split(".");d=d||goog.global;a[0]in d||"undefined"==typeof d.execScript||d.execScript("var "+a[0]);for(var e;a.length&&(e=a.shift());)if(a.length||void 0===b)d=d[e]&&d[e]!==Object.prototype[e]?d[e]:d[e]={};else if(!c&&goog.isObject(b)&&goog.isObject(d[e]))for(var f in b)b.hasOwnProperty(f)&&(d[e][f]=b[f]);else d[e]=b};
goog.define=function(a,b){if(!COMPILED){var c=goog.global.CLOSURE_UNCOMPILED_DEFINES,d=goog.global.CLOSURE_DEFINES;c&&void 0===c.nodeType&&Object.prototype.hasOwnProperty.call(c,a)?b=c[a]:d&&void 0===d.nodeType&&Object.prototype.hasOwnProperty.call(d,a)&&(b=d[a])}return b};goog.FEATURESET_YEAR=2020;goog.DEBUG=!0;goog.LOCALE="en";goog.getLocale=function(){return goog.LOCALE};goog.TRUSTED_SITE=!0;goog.DISALLOW_TEST_ONLY_CODE=COMPILED&&!goog.DEBUG;goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING=!1;
goog.provide=function(a){if(goog.isInModuleLoader_())throw Error("goog.provide cannot be used within a module.");if(!COMPILED&&goog.isProvided_(a))throw Error('Namespace "'+a+'" already declared.');goog.constructNamespace_(a)};goog.constructNamespace_=function(a,b,c){if(!COMPILED){delete goog.implicitNamespaces_[a];for(var d=a;(d=d.substring(0,d.lastIndexOf(".")))&&!goog.getObjectByName(d);)goog.implicitNamespaces_[d]=!0}goog.exportPath_(a,b,c)};goog.NONCE_PATTERN_=/^[\\w+/_-]+[=]{0,2}$/;
goog.getScriptNonce_=function(a){a=(a||goog.global).document;return(a=a.querySelector&&a.querySelector("script[nonce]"))&&(a=a.nonce||a.getAttribute("nonce"))&&goog.NONCE_PATTERN_.test(a)?a:""};goog.VALID_MODULE_RE_=/^[a-zA-Z_$][a-zA-Z0-9._$]*$/;
goog.module=function(a){if("string"!==typeof a||!a||-1==a.search(goog.VALID_MODULE_RE_))throw Error("Invalid module identifier");if(!goog.isInGoogModuleLoader_())throw Error("Module "+a+" has been loaded incorrectly. Note, modules cannot be loaded as normal scripts. They require some kind of pre-processing step. You're likely trying to load a module via a script tag or as a part of a concatenated bundle without rewriting the module. For more info see: https://github.com/google/closure-library/wiki/goog.module:-an-ES6-module-like-alternative-to-goog.provide.");if(goog.moduleLoaderState_.moduleName)throw Error("goog.module may only be called once per module.");
goog.moduleLoaderState_.moduleName=a;if(!COMPILED){if(goog.isProvided_(a))throw Error('Namespace "'+a+'" already declared.');delete goog.implicitNamespaces_[a]}};goog.module.get=function(a){return goog.module.getInternal_(a)};goog.module.getInternal_=function(a){if(!COMPILED){if(a in goog.loadedModules_)return goog.loadedModules_[a].exports;if(!goog.implicitNamespaces_[a])return a=goog.getObjectByName(a),null!=a?a:null}return null};goog.ModuleType={ES6:"es6",GOOG:"goog"};goog.moduleLoaderState_=null;
goog.isInModuleLoader_=function(){return goog.isInGoogModuleLoader_()||goog.isInEs6ModuleLoader_()};goog.isInGoogModuleLoader_=function(){return!!goog.moduleLoaderState_&&goog.moduleLoaderState_.type==goog.ModuleType.GOOG};goog.isInEs6ModuleLoader_=function(){if(goog.moduleLoaderState_&&goog.moduleLoaderState_.type==goog.ModuleType.ES6)return!0;var a=goog.global.$jscomp;return a?"function"!=typeof a.getCurrentModulePath?!1:!!a.getCurrentModulePath():!1};
goog.module.declareLegacyNamespace=function(){if(!COMPILED&&!goog.isInGoogModuleLoader_())throw Error("goog.module.declareLegacyNamespace must be called from within a goog.module");if(!COMPILED&&!goog.moduleLoaderState_.moduleName)throw Error("goog.module must be called prior to goog.module.declareLegacyNamespace.");goog.moduleLoaderState_.declareLegacyNamespace=!0};
goog.declareModuleId=function(a){if(!COMPILED){if(!goog.isInEs6ModuleLoader_())throw Error("goog.declareModuleId may only be called from within an ES6 module");if(goog.moduleLoaderState_&&goog.moduleLoaderState_.moduleName)throw Error("goog.declareModuleId may only be called once per module.");if(a in goog.loadedModules_)throw Error('Module with namespace "'+a+'" already exists.');}if(goog.moduleLoaderState_)goog.moduleLoaderState_.moduleName=a;else{var b=goog.global.$jscomp;if(!b||"function"!=typeof b.getCurrentModulePath)throw Error('Module with namespace "'+
a+'" has been loaded incorrectly.');b=b.require(b.getCurrentModulePath());goog.loadedModules_[a]={exports:b,type:goog.ModuleType.ES6,moduleId:a}}};goog.setTestOnly=function(a){if(goog.DISALLOW_TEST_ONLY_CODE)throw a=a||"",Error("Importing test-only code into non-debug environment"+(a?": "+a:"."));};goog.forwardDeclare=function(a){};COMPILED||(goog.isProvided_=function(a){return a in goog.loadedModules_||!goog.implicitNamespaces_[a]&&null!=goog.getObjectByName(a)},goog.implicitNamespaces_={"goog.module":!0});
goog.getObjectByName=function(a,b){a=a.split(".");b=b||goog.global;for(var c=0;c<a.length;c++)if(b=b[a[c]],null==b)return null;return b};goog.addDependency=function(a,b,c,d){!COMPILED&&goog.DEPENDENCIES_ENABLED&&goog.debugLoader_.addDependency(a,b,c,d)};goog.ENABLE_DEBUG_LOADER=!0;goog.logToConsole_=function(a){goog.global.console&&goog.global.console.error(a)};
goog.require=function(a){if(!COMPILED){goog.ENABLE_DEBUG_LOADER&&goog.debugLoader_.requested(a);if(goog.isProvided_(a)){if(goog.isInModuleLoader_())return goog.module.getInternal_(a)}else if(goog.ENABLE_DEBUG_LOADER){var b=goog.moduleLoaderState_;goog.moduleLoaderState_=null;try{goog.debugLoader_.load_(a)}finally{goog.moduleLoaderState_=b}}return null}};goog.requireType=function(a){return{}};goog.basePath="";goog.abstractMethod=function(){throw Error("unimplemented abstract method");};
goog.addSingletonGetter=function(a){a.instance_=void 0;a.getInstance=function(){if(a.instance_)return a.instance_;goog.DEBUG&&(goog.instantiatedSingletons_[goog.instantiatedSingletons_.length]=a);return a.instance_=new a}};goog.instantiatedSingletons_=[];goog.LOAD_MODULE_USING_EVAL=!0;goog.SEAL_MODULE_EXPORTS=goog.DEBUG;goog.loadedModules_={};goog.DEPENDENCIES_ENABLED=!COMPILED&&goog.ENABLE_DEBUG_LOADER;goog.TRANSPILE="detect";goog.ASSUME_ES_MODULES_TRANSPILED=!1;goog.TRUSTED_TYPES_POLICY_NAME="goog";
goog.hasBadLetScoping=null;
goog.loadModule=function(a){var b=goog.moduleLoaderState_;try{goog.moduleLoaderState_={moduleName:"",declareLegacyNamespace:!1,type:goog.ModuleType.GOOG};var c={},d=c;if("function"===typeof a)d=a.call(void 0,d);else if("string"===typeof a)d=goog.loadModuleFromSource_.call(void 0,d,a);else throw Error("Invalid module definition");var e=goog.moduleLoaderState_.moduleName;if("string"===typeof e&&e)goog.moduleLoaderState_.declareLegacyNamespace?goog.constructNamespace_(e,d,c!==d):goog.SEAL_MODULE_EXPORTS&&
Object.seal&&"object"==typeof d&&null!=d&&Object.seal(d),goog.loadedModules_[e]={exports:d,type:goog.ModuleType.GOOG,moduleId:goog.moduleLoaderState_.moduleName};else throw Error('Invalid module name "'+e+'"');}finally{goog.moduleLoaderState_=b}};goog.loadModuleFromSource_=function(a,b){eval(goog.CLOSURE_EVAL_PREFILTER_.createScript(b));return a};goog.normalizePath_=function(a){a=a.split("/");for(var b=0;b<a.length;)"."==a[b]?a.splice(b,1):b&&".."==a[b]&&a[b-1]&&".."!=a[b-1]?a.splice(--b,2):b++;return a.join("/")};
goog.loadFileSync_=function(a){if(goog.global.CLOSURE_LOAD_FILE_SYNC)return goog.global.CLOSURE_LOAD_FILE_SYNC(a);try{var b=new goog.global.XMLHttpRequest;b.open("get",a,!1);b.send();return 0==b.status||200==b.status?b.responseText:null}catch(c){return null}};goog.typeOf=function(a){var b=typeof a;return"object"!=b?b:a?Array.isArray(a)?"array":b:"null"};goog.isArrayLike=function(a){var b=goog.typeOf(a);return"array"==b||"object"==b&&"number"==typeof a.length};
goog.isDateLike=function(a){return goog.isObject(a)&&"function"==typeof a.getFullYear};goog.isObject=function(a){var b=typeof a;return"object"==b&&null!=a||"function"==b};goog.getUid=function(a){return Object.prototype.hasOwnProperty.call(a,goog.UID_PROPERTY_)&&a[goog.UID_PROPERTY_]||(a[goog.UID_PROPERTY_]=++goog.uidCounter_)};goog.hasUid=function(a){return!!a[goog.UID_PROPERTY_]};goog.removeUid=function(a){null!==a&&"removeAttribute"in a&&a.removeAttribute(goog.UID_PROPERTY_);try{delete a[goog.UID_PROPERTY_]}catch(b){}};
goog.UID_PROPERTY_="closure_uid_"+(1E9*Math.random()>>>0);goog.uidCounter_=0;goog.cloneObject=function(a){var b=goog.typeOf(a);if("object"==b||"array"==b){if("function"===typeof a.clone)return a.clone();if("undefined"!==typeof Map&&a instanceof Map)return new Map(a);if("undefined"!==typeof Set&&a instanceof Set)return new Set(a);b="array"==b?[]:{};for(var c in a)b[c]=goog.cloneObject(a[c]);return b}return a};goog.bindNative_=function(a,b,c){return a.call.apply(a.bind,arguments)};
goog.bindJs_=function(a,b,c){if(!a)throw Error();if(2<arguments.length){var d=Array.prototype.slice.call(arguments,2);return function(){var e=Array.prototype.slice.call(arguments);Array.prototype.unshift.apply(e,d);return a.apply(b,e)}}return function(){return a.apply(b,arguments)}};goog.bind=function(a,b,c){Function.prototype.bind&&-1!=Function.prototype.bind.toString().indexOf("native code")?goog.bind=goog.bindNative_:goog.bind=goog.bindJs_;return goog.bind.apply(null,arguments)};
goog.partial=function(a,b){var c=Array.prototype.slice.call(arguments,1);return function(){var d=c.slice();d.push.apply(d,arguments);return a.apply(this,d)}};goog.now=function(){return Date.now()};goog.globalEval=function(a){(0,eval)(a)};
goog.getCssName=function(a,b){if("."==String(a).charAt(0))throw Error('className passed in goog.getCssName must not start with ".". You passed: '+a);var c=function(e){return goog.cssNameMapping_[e]||e},d=function(e){e=e.split("-");for(var f=[],g=0;g<e.length;g++)f.push(c(e[g]));return f.join("-")};d=goog.cssNameMapping_?"BY_WHOLE"==goog.cssNameMappingStyle_?c:d:function(e){return e};a=b?a+"-"+d(b):d(a);return goog.global.CLOSURE_CSS_NAME_MAP_FN?goog.global.CLOSURE_CSS_NAME_MAP_FN(a):a};
goog.setCssNameMapping=function(a,b){goog.cssNameMapping_=a;goog.cssNameMappingStyle_=b};!COMPILED&&goog.global.CLOSURE_CSS_NAME_MAPPING&&(goog.cssNameMapping_=goog.global.CLOSURE_CSS_NAME_MAPPING);goog.GetMsgOptions=function(){};
goog.getMsg=function(a,b,c){c&&c.html&&(a=a.replace(/</g,"&lt;"));c&&c.unescapeHtmlEntities&&(a=a.replace(/&lt;/g,"<").replace(/&gt;/g,">").replace(/&apos;/g,"'").replace(/&quot;/g,'"').replace(/&amp;/g,"&"));b&&(a=a.replace(/\\{\\$([^}]+)}/g,function(d,e){return null!=b&&e in b?b[e]:d}));return a};goog.getMsgWithFallback=function(a,b){return a};goog.exportSymbol=function(a,b,c){goog.exportPath_(a,b,!0,c)};goog.exportProperty=function(a,b,c){a[b]=c};
goog.inherits=function(a,b){function c(){}c.prototype=b.prototype;a.superClass_=b.prototype;a.prototype=new c;a.prototype.constructor=a;a.base=function(d,e,f){for(var g=Array(arguments.length-2),h=2;h<arguments.length;h++)g[h-2]=arguments[h];return b.prototype[e].apply(d,g)}};goog.scope=function(a){if(goog.isInModuleLoader_())throw Error("goog.scope is not supported within a module.");a.call(goog.global)};COMPILED||(goog.global.COMPILED=COMPILED);
goog.defineClass=function(a,b){var c=b.constructor,d=b.statics;c&&c!=Object.prototype.constructor||(c=function(){throw Error("cannot instantiate an interface (no constructor defined).");});c=goog.defineClass.createSealingConstructor_(c,a);a&&goog.inherits(c,a);delete b.constructor;delete b.statics;goog.defineClass.applyProperties_(c.prototype,b);null!=d&&(d instanceof Function?d(c):goog.defineClass.applyProperties_(c,d));return c};goog.defineClass.SEAL_CLASS_INSTANCES=goog.DEBUG;
goog.defineClass.createSealingConstructor_=function(a,b){return goog.defineClass.SEAL_CLASS_INSTANCES?function(){var c=a.apply(this,arguments)||this;c[goog.UID_PROPERTY_]=c[goog.UID_PROPERTY_];return c}:a};goog.defineClass.OBJECT_PROTOTYPE_FIELDS_="constructor hasOwnProperty isPrototypeOf propertyIsEnumerable toLocaleString toString valueOf".split(" ");
goog.defineClass.applyProperties_=function(a,b){for(var c in b)Object.prototype.hasOwnProperty.call(b,c)&&(a[c]=b[c]);for(var d=0;d<goog.defineClass.OBJECT_PROTOTYPE_FIELDS_.length;d++)c=goog.defineClass.OBJECT_PROTOTYPE_FIELDS_[d],Object.prototype.hasOwnProperty.call(b,c)&&(a[c]=b[c])};goog.identity_=function(a){return a};
goog.createTrustedTypesPolicy=function(a){var b=null,c=goog.global.trustedTypes;if(!c||!c.createPolicy)return b;try{b=c.createPolicy(a,{createHTML:goog.identity_,createScript:goog.identity_,createScriptURL:goog.identity_})}catch(d){goog.logToConsole_(d.message)}return b};
!COMPILED&&goog.DEPENDENCIES_ENABLED&&(goog.isEdge_=function(){return!!(goog.global.navigator&&goog.global.navigator.userAgent?goog.global.navigator.userAgent:"").match(/Edge\\/(\\d+)(\\.\\d)*/i)},goog.inHtmlDocument_=function(){var a=goog.global.document;return null!=a&&"write"in a},goog.isDocumentLoading_=function(){var a=goog.global.document;return a.attachEvent?"complete"!=a.readyState:"loading"==a.readyState},goog.findBasePath_=function(){if(void 0!=goog.global.CLOSURE_BASE_PATH&&"string"===typeof goog.global.CLOSURE_BASE_PATH)goog.basePath=
goog.global.CLOSURE_BASE_PATH;else if(goog.inHtmlDocument_()){var a=goog.global.document,b=a.currentScript;a=b?[b]:a.getElementsByTagName("SCRIPT");for(b=a.length-1;0<=b;--b){var c=a[b].src,d=c.lastIndexOf("?");d=-1==d?c.length:d;if("base.js"==c.slice(d-7,d)){goog.basePath=c.slice(0,d-7);break}}}},goog.findBasePath_(),goog.protectScriptTag_=function(a){return a.replace(/<\\/(SCRIPT)/ig,"\\\\x3c/$1")},goog.DebugLoader_=function(){this.dependencies_={};this.idToPath_={};this.written_={};this.loadingDeps_=
[];this.depsToLoad_=[];this.paused_=!1;this.factory_=new goog.DependencyFactory;this.deferredCallbacks_={};this.deferredQueue_=[]},goog.DebugLoader_.prototype.bootstrap=function(a,b){function c(){d&&(goog.global.setTimeout(d,0),d=null)}var d=b;if(a.length){b=[];for(var e=0;e<a.length;e++){var f=this.getPathFromDeps_(a[e]);if(!f)throw Error("Unregonized namespace: "+a[e]);b.push(this.dependencies_[f])}f=goog.require;var g=0;for(e=0;e<a.length;e++)f(a[e]),b[e].onLoad(function(){++g==a.length&&c()})}else c()},
goog.DebugLoader_.prototype.loadClosureDeps=function(){this.depsToLoad_.push(this.factory_.createDependency(goog.normalizePath_(goog.basePath+"deps.js"),"deps.js",[],[],{}));this.loadDeps_()},goog.DebugLoader_.prototype.requested=function(a,b){(a=this.getPathFromDeps_(a))&&(b||this.areDepsLoaded_(this.dependencies_[a].requires))&&(b=this.deferredCallbacks_[a])&&(delete this.deferredCallbacks_[a],b())},goog.DebugLoader_.prototype.setDependencyFactory=function(a){this.factory_=a},goog.DebugLoader_.prototype.load_=
function(a){if(this.getPathFromDeps_(a)){var b=this,c=[],d=function(e){var f=b.getPathFromDeps_(e);if(!f)throw Error("Bad dependency path or symbol: "+e);if(!b.written_[f]){b.written_[f]=!0;e=b.dependencies_[f];for(f=0;f<e.requires.length;f++)goog.isProvided_(e.requires[f])||d(e.requires[f]);c.push(e)}};d(a);a=!!this.depsToLoad_.length;this.depsToLoad_=this.depsToLoad_.concat(c);this.paused_||a||this.loadDeps_()}else goog.logToConsole_("goog.require could not find: "+a)},goog.DebugLoader_.prototype.loadDeps_=
function(){for(var a=this,b=this.paused_;this.depsToLoad_.length&&!b;)(function(){var c=!1,d=a.depsToLoad_.shift(),e=!1;a.loading_(d);var f={pause:function(){if(c)throw Error("Cannot call pause after the call to load.");b=!0},resume:function(){c?a.resume_():b=!1},loaded:function(){if(e)throw Error("Double call to loaded.");e=!0;a.loaded_(d)},pending:function(){for(var g=[],h=0;h<a.loadingDeps_.length;h++)g.push(a.loadingDeps_[h]);return g},setModuleState:function(g){goog.moduleLoaderState_={type:g,
moduleName:"",declareLegacyNamespace:!1}},registerEs6ModuleExports:function(g,h,k){k&&(goog.loadedModules_[k]={exports:h,type:goog.ModuleType.ES6,moduleId:k||""})},registerGoogModuleExports:function(g,h){goog.loadedModules_[g]={exports:h,type:goog.ModuleType.GOOG,moduleId:g}},clearModuleState:function(){goog.moduleLoaderState_=null},defer:function(g){if(c)throw Error("Cannot register with defer after the call to load.");a.defer_(d,g)},areDepsLoaded:function(){return a.areDepsLoaded_(d.requires)}};
try{d.load(f)}finally{c=!0}})();b&&this.pause_()},goog.DebugLoader_.prototype.pause_=function(){this.paused_=!0},goog.DebugLoader_.prototype.resume_=function(){this.paused_&&(this.paused_=!1,this.loadDeps_())},goog.DebugLoader_.prototype.loading_=function(a){this.loadingDeps_.push(a)},goog.DebugLoader_.prototype.loaded_=function(a){for(var b=0;b<this.loadingDeps_.length;b++)if(this.loadingDeps_[b]==a){this.loadingDeps_.splice(b,1);break}for(b=0;b<this.deferredQueue_.length;b++)if(this.deferredQueue_[b]==
a.path){this.deferredQueue_.splice(b,1);break}if(this.loadingDeps_.length==this.deferredQueue_.length&&!this.depsToLoad_.length)for(;this.deferredQueue_.length;)this.requested(this.deferredQueue_.shift(),!0);a.loaded()},goog.DebugLoader_.prototype.areDepsLoaded_=function(a){for(var b=0;b<a.length;b++){var c=this.getPathFromDeps_(a[b]);if(!c||!(c in this.deferredCallbacks_||goog.isProvided_(a[b])))return!1}return!0},goog.DebugLoader_.prototype.getPathFromDeps_=function(a){return a in this.idToPath_?
this.idToPath_[a]:a in this.dependencies_?a:null},goog.DebugLoader_.prototype.defer_=function(a,b){this.deferredCallbacks_[a.path]=b;this.deferredQueue_.push(a.path)},goog.LoadController=function(){},goog.LoadController.prototype.pause=function(){},goog.LoadController.prototype.resume=function(){},goog.LoadController.prototype.loaded=function(){},goog.LoadController.prototype.pending=function(){},goog.LoadController.prototype.registerEs6ModuleExports=function(a,b,c){},goog.LoadController.prototype.setModuleState=
function(a){},goog.LoadController.prototype.clearModuleState=function(){},goog.LoadController.prototype.defer=function(a){},goog.LoadController.prototype.areDepsLoaded=function(){},goog.Dependency=function(a,b,c,d,e){this.path=a;this.relativePath=b;this.provides=c;this.requires=d;this.loadFlags=e;this.loaded_=!1;this.loadCallbacks_=[]},goog.Dependency.prototype.getPathName=function(){var a=this.path,b=a.indexOf("://");0<=b&&(a=a.substring(b+3),b=a.indexOf("/"),0<=b&&(a=a.substring(b+1)));return a},
goog.Dependency.prototype.onLoad=function(a){this.loaded_?a():this.loadCallbacks_.push(a)},goog.Dependency.prototype.loaded=function(){this.loaded_=!0;var a=this.loadCallbacks_;this.loadCallbacks_=[];for(var b=0;b<a.length;b++)a[b]()},goog.Dependency.defer_=!1,goog.Dependency.callbackMap_={},goog.Dependency.registerCallback_=function(a){var b=Math.random().toString(32);goog.Dependency.callbackMap_[b]=a;return b},goog.Dependency.unregisterCallback_=function(a){delete goog.Dependency.callbackMap_[a]},
goog.Dependency.callback_=function(a,b){if(a in goog.Dependency.callbackMap_){for(var c=goog.Dependency.callbackMap_[a],d=[],e=1;e<arguments.length;e++)d.push(arguments[e]);c.apply(void 0,d)}else throw Error("Callback key "+a+" does not exist (was base.js loaded more than once?).");},goog.Dependency.prototype.load=function(a){if(goog.global.CLOSURE_IMPORT_SCRIPT)goog.global.CLOSURE_IMPORT_SCRIPT(this.path)?a.loaded():a.pause();else if(goog.inHtmlDocument_()){var b=goog.global.document;if("complete"==
b.readyState&&!goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING){if(/\\bdeps.js$/.test(this.path)){a.loaded();return}throw Error('Cannot write "'+this.path+'" after document load');}var c=goog.getScriptNonce_();if(!goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING&&goog.isDocumentLoading_()){var d=function(h){h.readyState&&"complete"!=h.readyState?h.onload=d:(goog.Dependency.unregisterCallback_(e),a.loaded())};var e=goog.Dependency.registerCallback_(d);c=c?' nonce="'+c+'"':"";var f='<script src="'+this.path+'"'+
c+(goog.Dependency.defer_?" defer":"")+' id="script-'+e+'">\\x3c/script>';f+="<script"+c+">";f=goog.Dependency.defer_?f+("document.getElementById('script-"+e+"').onload = function() {\\n  goog.Dependency.callback_('"+e+"', this);\\n};\\n"):f+("goog.Dependency.callback_('"+e+"', document.getElementById('script-"+e+"'));");f+="\\x3c/script>";b.write(goog.TRUSTED_TYPES_POLICY_?goog.TRUSTED_TYPES_POLICY_.createHTML(f):f)}else{var g=b.createElement("script");g.defer=goog.Dependency.defer_;g.async=!1;c&&(g.nonce=
c);g.onload=function(){g.onload=null;a.loaded()};g.src=goog.TRUSTED_TYPES_POLICY_?goog.TRUSTED_TYPES_POLICY_.createScriptURL(this.path):this.path;b.head.appendChild(g)}}else goog.logToConsole_("Cannot use default debug loader outside of HTML documents."),"deps.js"==this.relativePath?(goog.logToConsole_("Consider setting CLOSURE_IMPORT_SCRIPT before loading base.js, or setting CLOSURE_NO_DEPS to true."),a.loaded()):a.pause()},goog.Es6ModuleDependency=function(a,b,c,d,e){goog.Dependency.call(this,a,
b,c,d,e)},goog.inherits(goog.Es6ModuleDependency,goog.Dependency),goog.Es6ModuleDependency.prototype.load=function(a){function b(l,m){var n="",p=goog.getScriptNonce_();p&&(n=' nonce="'+p+'"');l=m?'<script type="module" crossorigin'+n+">"+m+"\\x3c/script>":'<script type="module" crossorigin src="'+l+'"'+n+">\\x3c/script>";d.write(goog.TRUSTED_TYPES_POLICY_?goog.TRUSTED_TYPES_POLICY_.createHTML(l):l)}function c(l,m){var n=d.createElement("script");n.defer=!0;n.async=!1;n.type="module";n.setAttribute("crossorigin",
!0);var p=goog.getScriptNonce_();p&&(n.nonce=p);m?n.text=goog.TRUSTED_TYPES_POLICY_?goog.TRUSTED_TYPES_POLICY_.createScript(m):m:n.src=goog.TRUSTED_TYPES_POLICY_?goog.TRUSTED_TYPES_POLICY_.createScriptURL(l):l;d.head.appendChild(n)}if(goog.global.CLOSURE_IMPORT_SCRIPT)goog.global.CLOSURE_IMPORT_SCRIPT(this.path)?a.loaded():a.pause();else if(goog.inHtmlDocument_()){var d=goog.global.document,e=this;if(goog.isDocumentLoading_()){var f=b;goog.Dependency.defer_=!0}else f=c;var g=goog.Dependency.registerCallback_(function(){goog.Dependency.unregisterCallback_(g);
a.setModuleState(goog.ModuleType.ES6)});f(void 0,'goog.Dependency.callback_("'+g+'")');f(this.path,void 0);var h=goog.Dependency.registerCallback_(function(l){goog.Dependency.unregisterCallback_(h);a.registerEs6ModuleExports(e.path,l,goog.moduleLoaderState_.moduleName)});f(void 0,'import * as m from "'+this.path+'"; goog.Dependency.callback_("'+h+'", m)');var k=goog.Dependency.registerCallback_(function(){goog.Dependency.unregisterCallback_(k);a.clearModuleState();a.loaded()});f(void 0,'goog.Dependency.callback_("'+
k+'")')}else goog.logToConsole_("Cannot use default debug loader outside of HTML documents."),a.pause()},goog.TransformedDependency=function(a,b,c,d,e){goog.Dependency.call(this,a,b,c,d,e);this.contents_=null;this.lazyFetch_=!goog.inHtmlDocument_()||!("noModule"in goog.global.document.createElement("script"))},goog.inherits(goog.TransformedDependency,goog.Dependency),goog.TransformedDependency.prototype.load=function(a){function b(){e.contents_=goog.loadFileSync_(e.path);e.contents_&&(e.contents_=
e.transform(e.contents_),e.contents_&&(e.contents_+="\\n//# sourceURL="+e.path))}function c(){e.lazyFetch_&&b();if(e.contents_){f&&a.setModuleState(goog.ModuleType.ES6);try{var l=e.contents_;e.contents_=null;goog.globalEval(goog.CLOSURE_EVAL_PREFILTER_.createScript(l));if(f)var m=goog.moduleLoaderState_.moduleName}finally{f&&a.clearModuleState()}f&&goog.global.$jscomp.require.ensure([e.getPathName()],function(){a.registerEs6ModuleExports(e.path,goog.global.$jscomp.require(e.getPathName()),m)});a.loaded()}}
function d(){var l=goog.global.document,m=goog.Dependency.registerCallback_(function(){goog.Dependency.unregisterCallback_(m);c()}),n=goog.getScriptNonce_();n="<script"+(n?' nonce="'+n+'"':"")+">"+goog.protectScriptTag_('goog.Dependency.callback_("'+m+'");')+"\\x3c/script>";l.write(goog.TRUSTED_TYPES_POLICY_?goog.TRUSTED_TYPES_POLICY_.createHTML(n):n)}var e=this;if(goog.global.CLOSURE_IMPORT_SCRIPT)b(),this.contents_&&goog.global.CLOSURE_IMPORT_SCRIPT("",this.contents_)?(this.contents_=null,a.loaded()):
a.pause();else{var f=this.loadFlags.module==goog.ModuleType.ES6;this.lazyFetch_||b();var g=1<a.pending().length;if(goog.Dependency.defer_&&(g||goog.isDocumentLoading_()))a.defer(function(){c()});else{var h=goog.global.document;g=goog.inHtmlDocument_()&&("ActiveXObject"in goog.global||goog.isEdge_());if(f&&goog.inHtmlDocument_()&&goog.isDocumentLoading_()&&!g){goog.Dependency.defer_=!0;a.pause();var k=h.onreadystatechange;h.onreadystatechange=function(){"interactive"==h.readyState&&(h.onreadystatechange=
k,c(),a.resume());"function"===typeof k&&k.apply(void 0,arguments)}}else goog.inHtmlDocument_()&&goog.isDocumentLoading_()?d():c()}}},goog.TransformedDependency.prototype.transform=function(a){},goog.PreTranspiledEs6ModuleDependency=function(a,b,c,d,e){goog.TransformedDependency.call(this,a,b,c,d,e)},goog.inherits(goog.PreTranspiledEs6ModuleDependency,goog.TransformedDependency),goog.PreTranspiledEs6ModuleDependency.prototype.transform=function(a){return a},goog.GoogModuleDependency=function(a,b,
c,d,e){goog.TransformedDependency.call(this,a,b,c,d,e)},goog.inherits(goog.GoogModuleDependency,goog.TransformedDependency),goog.GoogModuleDependency.prototype.transform=function(a){return goog.LOAD_MODULE_USING_EVAL&&void 0!==goog.global.JSON?"goog.loadModule("+goog.global.JSON.stringify(a+"\\n//# sourceURL="+this.path+"\\n")+");":'goog.loadModule(function(exports) {"use strict";'+a+"\\n;return exports});\\n//# sourceURL="+this.path+"\\n"},goog.DebugLoader_.prototype.addDependency=function(a,b,c,d){b=
b||[];a=a.replace(/\\\\/g,"/");var e=goog.normalizePath_(goog.basePath+a);d&&"boolean"!==typeof d||(d=d?{module:goog.ModuleType.GOOG}:{});c=this.factory_.createDependency(e,a,b,c,d);this.dependencies_[e]=c;for(c=0;c<b.length;c++)this.idToPath_[b[c]]=e;this.idToPath_[a]=e},goog.DependencyFactory=function(){},goog.DependencyFactory.prototype.createDependency=function(a,b,c,d,e){return e.module==goog.ModuleType.GOOG?new goog.GoogModuleDependency(a,b,c,d,e):e.module==goog.ModuleType.ES6?goog.ASSUME_ES_MODULES_TRANSPILED?
new goog.PreTranspiledEs6ModuleDependency(a,b,c,d,e):new goog.Es6ModuleDependency(a,b,c,d,e):new goog.Dependency(a,b,c,d,e)},goog.debugLoader_=new goog.DebugLoader_,goog.loadClosureDeps=function(){goog.debugLoader_.loadClosureDeps()},goog.setDependencyFactory=function(a){goog.debugLoader_.setDependencyFactory(a)},goog.TRUSTED_TYPES_POLICY_=goog.TRUSTED_TYPES_POLICY_NAME?goog.createTrustedTypesPolicy(goog.TRUSTED_TYPES_POLICY_NAME+"#base"):null,goog.global.CLOSURE_NO_DEPS||goog.debugLoader_.loadClosureDeps(),
goog.bootstrap=function(a,b){goog.debugLoader_.bootstrap(a,b)});if(!COMPILED){var isChrome87=!1;try{isChrome87=eval(goog.global.trustedTypes.emptyScript)!==goog.global.trustedTypes.emptyScript}catch(a){}goog.CLOSURE_EVAL_PREFILTER_=goog.global.trustedTypes&&isChrome87&&goog.createTrustedTypesPolicy("goog#base#devonly#eval")||{createScript:goog.identity_}};const proxyMarker$$module$node_modules$comlink$dist$esm$comlink_mjs=Symbol("Comlink.proxy"),createEndpoint$$module$node_modules$comlink$dist$esm$comlink_mjs=Symbol("Comlink.endpoint"),releaseProxy$$module$node_modules$comlink$dist$esm$comlink_mjs=Symbol("Comlink.releaseProxy"),throwMarker$$module$node_modules$comlink$dist$esm$comlink_mjs=Symbol("Comlink.thrown"),isObject$$module$node_modules$comlink$dist$esm$comlink_mjs=a=>"object"===typeof a&&null!==a||"function"===typeof a,proxyTransferHandler$$module$node_modules$comlink$dist$esm$comlink_mjs=
{canHandle:a=>isObject$$module$node_modules$comlink$dist$esm$comlink_mjs(a)&&a[proxyMarker$$module$node_modules$comlink$dist$esm$comlink_mjs],serialize(a){const {port1:b,port2:c}=new MessageChannel;expose$$module$node_modules$comlink$dist$esm$comlink_mjs(a,b);return[c,[c]]},deserialize(a){a.start();return wrap$$module$node_modules$comlink$dist$esm$comlink_mjs(a)}},throwTransferHandler$$module$node_modules$comlink$dist$esm$comlink_mjs={canHandle:a=>isObject$$module$node_modules$comlink$dist$esm$comlink_mjs(a)&&
throwMarker$$module$node_modules$comlink$dist$esm$comlink_mjs in a,serialize({value:a}){return[a instanceof Error?{isError:!0,value:{message:a.message,name:a.name,stack:a.stack}}:{isError:!1,value:a},[]]},deserialize(a){if(a.isError)throw Object.assign(Error(a.value.message),a.value);throw a.value;}},transferHandlers$$module$node_modules$comlink$dist$esm$comlink_mjs=new Map([["proxy",proxyTransferHandler$$module$node_modules$comlink$dist$esm$comlink_mjs],["throw",throwTransferHandler$$module$node_modules$comlink$dist$esm$comlink_mjs]]);
function expose$$module$node_modules$comlink$dist$esm$comlink_mjs(a,b=self){b.addEventListener("message",function e(d){if(d&&d.data){var {id:f,type:g,path:h}=Object.assign({path:[]},d.data),k=(d.data.argumentList||[]).map(fromWireValue$$module$node_modules$comlink$dist$esm$comlink_mjs);try{const m=h.slice(0,-1).reduce((p,q)=>p[q],a),n=h.reduce((p,q)=>p[q],a);switch(g){case "GET":var l=n;break;case "SET":m[h.slice(-1)[0]]=fromWireValue$$module$node_modules$comlink$dist$esm$comlink_mjs(d.data.value);
l=!0;break;case "APPLY":l=n.apply(m,k);break;case "CONSTRUCT":const p=new n(...k);l=proxy$$module$node_modules$comlink$dist$esm$comlink_mjs(p);break;case "ENDPOINT":const {port1:q,port2:w}=new MessageChannel;expose$$module$node_modules$comlink$dist$esm$comlink_mjs(a,w);l=transfer$$module$node_modules$comlink$dist$esm$comlink_mjs(q,[q]);break;case "RELEASE":l=void 0;break;default:return}}catch(m){l={value:m,[throwMarker$$module$node_modules$comlink$dist$esm$comlink_mjs]:0}}Promise.resolve(l).catch(m=>
({value:m,[throwMarker$$module$node_modules$comlink$dist$esm$comlink_mjs]:0})).then(m=>{const [n,p]=toWireValue$$module$node_modules$comlink$dist$esm$comlink_mjs(m);b.postMessage(Object.assign(Object.assign({},n),{id:f}),p);"RELEASE"===g&&(b.removeEventListener("message",e),closeEndPoint$$module$node_modules$comlink$dist$esm$comlink_mjs(b))})}});b.start&&b.start()}function isMessagePort$$module$node_modules$comlink$dist$esm$comlink_mjs(a){return"MessagePort"===a.constructor.name}
function closeEndPoint$$module$node_modules$comlink$dist$esm$comlink_mjs(a){isMessagePort$$module$node_modules$comlink$dist$esm$comlink_mjs(a)&&a.close()}function wrap$$module$node_modules$comlink$dist$esm$comlink_mjs(a,b){return createProxy$$module$node_modules$comlink$dist$esm$comlink_mjs(a,[],b)}function throwIfProxyReleased$$module$node_modules$comlink$dist$esm$comlink_mjs(a){if(a)throw Error("Proxy has been released and is not useable");}
function createProxy$$module$node_modules$comlink$dist$esm$comlink_mjs(a,b=[],c=function(){}){let d=!1;const e=new Proxy(c,{get(f,g){throwIfProxyReleased$$module$node_modules$comlink$dist$esm$comlink_mjs(d);if(g===releaseProxy$$module$node_modules$comlink$dist$esm$comlink_mjs)return()=>requestResponseMessage$$module$node_modules$comlink$dist$esm$comlink_mjs(a,{type:"RELEASE",path:b.map(h=>h.toString())}).then(()=>{closeEndPoint$$module$node_modules$comlink$dist$esm$comlink_mjs(a);d=!0});if("then"===
g){if(0===b.length)return{then:()=>e};f=requestResponseMessage$$module$node_modules$comlink$dist$esm$comlink_mjs(a,{type:"GET",path:b.map(h=>h.toString())}).then(fromWireValue$$module$node_modules$comlink$dist$esm$comlink_mjs);return f.then.bind(f)}return createProxy$$module$node_modules$comlink$dist$esm$comlink_mjs(a,[...b,g])},set(f,g,h){throwIfProxyReleased$$module$node_modules$comlink$dist$esm$comlink_mjs(d);const [k,l]=toWireValue$$module$node_modules$comlink$dist$esm$comlink_mjs(h);return requestResponseMessage$$module$node_modules$comlink$dist$esm$comlink_mjs(a,
{type:"SET",path:[...b,g].map(m=>m.toString()),value:k},l).then(fromWireValue$$module$node_modules$comlink$dist$esm$comlink_mjs)},apply(f,g,h){throwIfProxyReleased$$module$node_modules$comlink$dist$esm$comlink_mjs(d);f=b[b.length-1];if(f===createEndpoint$$module$node_modules$comlink$dist$esm$comlink_mjs)return requestResponseMessage$$module$node_modules$comlink$dist$esm$comlink_mjs(a,{type:"ENDPOINT"}).then(fromWireValue$$module$node_modules$comlink$dist$esm$comlink_mjs);if("bind"===f)return createProxy$$module$node_modules$comlink$dist$esm$comlink_mjs(a,
b.slice(0,-1));const [k,l]=processArguments$$module$node_modules$comlink$dist$esm$comlink_mjs(h);return requestResponseMessage$$module$node_modules$comlink$dist$esm$comlink_mjs(a,{type:"APPLY",path:b.map(m=>m.toString()),argumentList:k},l).then(fromWireValue$$module$node_modules$comlink$dist$esm$comlink_mjs)},construct(f,g){throwIfProxyReleased$$module$node_modules$comlink$dist$esm$comlink_mjs(d);const [h,k]=processArguments$$module$node_modules$comlink$dist$esm$comlink_mjs(g);return requestResponseMessage$$module$node_modules$comlink$dist$esm$comlink_mjs(a,
{type:"CONSTRUCT",path:b.map(l=>l.toString()),argumentList:h},k).then(fromWireValue$$module$node_modules$comlink$dist$esm$comlink_mjs)}});return e}function myFlat$$module$node_modules$comlink$dist$esm$comlink_mjs(a){return Array.prototype.concat.apply([],a)}
function processArguments$$module$node_modules$comlink$dist$esm$comlink_mjs(a){a=a.map(toWireValue$$module$node_modules$comlink$dist$esm$comlink_mjs);return[a.map(b=>b[0]),myFlat$$module$node_modules$comlink$dist$esm$comlink_mjs(a.map(b=>b[1]))]}const transferCache$$module$node_modules$comlink$dist$esm$comlink_mjs=new WeakMap;function transfer$$module$node_modules$comlink$dist$esm$comlink_mjs(a,b){transferCache$$module$node_modules$comlink$dist$esm$comlink_mjs.set(a,b);return a}
function proxy$$module$node_modules$comlink$dist$esm$comlink_mjs(a){return Object.assign(a,{[proxyMarker$$module$node_modules$comlink$dist$esm$comlink_mjs]:!0})}function windowEndpoint$$module$node_modules$comlink$dist$esm$comlink_mjs(a,b=self,c="*"){return{postMessage:(d,e)=>a.postMessage(d,c,e),addEventListener:b.addEventListener.bind(b),removeEventListener:b.removeEventListener.bind(b)}}
function toWireValue$$module$node_modules$comlink$dist$esm$comlink_mjs(a){for(const [b,c]of transferHandlers$$module$node_modules$comlink$dist$esm$comlink_mjs)if(c.canHandle(a)){const [d,e]=c.serialize(a);return[{type:"HANDLER",name:b,value:d},e]}return[{type:"RAW",value:a},transferCache$$module$node_modules$comlink$dist$esm$comlink_mjs.get(a)||[]]}
function fromWireValue$$module$node_modules$comlink$dist$esm$comlink_mjs(a){switch(a.type){case "HANDLER":return transferHandlers$$module$node_modules$comlink$dist$esm$comlink_mjs.get(a.name).deserialize(a.value);case "RAW":return a.value}}
function requestResponseMessage$$module$node_modules$comlink$dist$esm$comlink_mjs(a,b,c){return new Promise(d=>{const e=generateUUID$$module$node_modules$comlink$dist$esm$comlink_mjs();a.addEventListener("message",function h(g){g.data&&g.data.id&&g.data.id===e&&(a.removeEventListener("message",h),d(g.data))});a.start&&a.start();a.postMessage(Object.assign({id:e},b),c)})}
function generateUUID$$module$node_modules$comlink$dist$esm$comlink_mjs(){return Array(4).fill(0).map(()=>Math.floor(Math.random()*Number.MAX_SAFE_INTEGER).toString(16)).join("-")}var module$node_modules$comlink$dist$esm$comlink_mjs={};module$node_modules$comlink$dist$esm$comlink_mjs.createEndpoint=createEndpoint$$module$node_modules$comlink$dist$esm$comlink_mjs;module$node_modules$comlink$dist$esm$comlink_mjs.expose=expose$$module$node_modules$comlink$dist$esm$comlink_mjs;
module$node_modules$comlink$dist$esm$comlink_mjs.proxy=proxy$$module$node_modules$comlink$dist$esm$comlink_mjs;module$node_modules$comlink$dist$esm$comlink_mjs.proxyMarker=proxyMarker$$module$node_modules$comlink$dist$esm$comlink_mjs;module$node_modules$comlink$dist$esm$comlink_mjs.releaseProxy=releaseProxy$$module$node_modules$comlink$dist$esm$comlink_mjs;module$node_modules$comlink$dist$esm$comlink_mjs.transfer=transfer$$module$node_modules$comlink$dist$esm$comlink_mjs;
module$node_modules$comlink$dist$esm$comlink_mjs.transferHandlers=transferHandlers$$module$node_modules$comlink$dist$esm$comlink_mjs;module$node_modules$comlink$dist$esm$comlink_mjs.windowEndpoint=windowEndpoint$$module$node_modules$comlink$dist$esm$comlink_mjs;module$node_modules$comlink$dist$esm$comlink_mjs.wrap=wrap$$module$node_modules$comlink$dist$esm$comlink_mjs;function MessagePortState$$module$src$utils$message_port_state(){}MessagePortState$$module$src$utils$message_port_state.prototype.ready=!1;MessagePortState$$module$src$utils$message_port_state.prototype.port=void 0;MessagePortState$$module$src$utils$message_port_state.prototype.post=()=>{};MessagePortState$$module$src$utils$message_port_state.prototype.broadcastPlayState=()=>{};MessagePortState$$module$src$utils$message_port_state.prototype.workerState=void 0;
MessagePortState$$module$src$utils$message_port_state.prototype.vanillaWorkerState=void 0;var $jscompDefaultExport$$module$src$utils$message_port_state=MessagePortState$$module$src$utils$message_port_state,module$src$utils$message_port_state={};module$src$utils$message_port_state.MessagePortState=MessagePortState$$module$src$utils$message_port_state;module$src$utils$message_port_state.default=$jscompDefaultExport$$module$src$utils$message_port_state;var module$node_modules$lines_logger$lib$index={default:{}};module$node_modules$lines_logger$lib$index.default.__esModule=!0;module$node_modules$lines_logger$lib$index.default.LoggerFactory=module$node_modules$lines_logger$lib$index.default.logLevels=void 0;module$node_modules$lines_logger$lib$index.default.logLevels={log_raise_error:1,log_with_warnings:2,trace:3,debug:4,info:5,warn:6,error:7,disable:8};
var LoggerFactory$$module$node_modules$lines_logger$lib$index=function(){function a(b,c){if(void 0===b&&(b="log_with_warnings"),void 0===c&&(c=null),this.logLevel=b,!module$node_modules$lines_logger$lib$index.default.logLevels[b])throw Error("Invalid log level "+b+" allowed: "+JSON.stringify(module$node_modules$lines_logger$lib$index.default.logLevels));this.mockConsole=c||console}return a.prototype.dummy=function(){},a.prototype.setLogWarnings=function(b){this.logLevel=b},a.prototype.getLogWarnings=
function(){return this.logLevel},a.prototype.getSingleLoggerColor=function(b,c,d){return this.getSingleLoggerStyle(b,this.getColorStyle(c),d)},a.prototype.getSingleLogger=function(b,c){var d=this.getRandomColor(b);return this.getSingleLoggerStyle(b,this.getColorStyle(d),c)},a.prototype.getSingleLoggerStyle=function(b,c,d,e){var f=this;return void 0===e&&(e="log_with_warnings"),function(){for(var g=[],h=0;h<arguments.length;h++)g[h]=arguments[h];if(module$node_modules$lines_logger$lib$index.default.logLevels[f.logLevel]>
module$node_modules$lines_logger$lib$index.default.logLevels[e])return f.dummy;g=Array.prototype.slice.call(g);h=g.shift().split("{}");for(var k=[f.mockConsole,"%c"+b,c],l=0;l<h.length;l++)k.push(h[l]),void 0!==g[l]&&k.push(g[l]);if(h.length-1!==g.length)if("log_with_warnings"===f.logLevel)f.mockConsole.error("MissMatch amount of arguments");else if("log_raise_error"===f.logLevel)throw Error("MissMatch amount of arguments");return Function.prototype.bind.apply(d,k)}},a.prototype.getLoggerColor=function(b,
c){return this.getLoggerStyle(b,this.getColorStyle(c))},a.prototype.getColorStyle=function(b){return"color: white; background-color: "+b+"; padding: 2px 6px; border-radius: 2px; font-size: 10px"},a.getHash=function(b,c){void 0===c&&(c=0);var d=3735928559^c;c^=1103547991;for(var e=0,f;e<b.length;e++)f=b.charCodeAt(e),d=Math.imul(d^f,2654435761),c=Math.imul(c^f,1597334677);return d=Math.imul(d^d>>>16,2246822507)^Math.imul(c^c>>>13,3266489909),4294967296*(2097151&(Math.imul(c^c>>>16,2246822507)^Math.imul(d^
d>>>13,3266489909)))+(d>>>0)},a.prototype.getRandomColor=function(b){void 0===b&&(b="");b=a.getHash(b);for(var c="#",d=0;3>d;d++)c+=("00"+(8+(b>>7*d&127)).toString(16)).substr(-2);return c},a.prototype.getLogger=function(b){return this.getLoggerColor(b,this.getRandomColor(b))},a.prototype.getLoggerStyle=function(b,c){return{trace:this.getSingleLoggerStyle(b,c,this.mockConsole.trace,"trace"),debug:this.getSingleLoggerStyle(b,c,this.mockConsole.debug,"debug"),log:this.getSingleLoggerStyle(b,c,this.mockConsole.log,
"info"),warn:this.getSingleLoggerStyle(b,c,this.mockConsole.warn,"warn"),error:this.getSingleLoggerStyle(b,c,this.mockConsole.error,"error")}},a}();module$node_modules$lines_logger$lib$index.default.LoggerFactory=LoggerFactory$$module$node_modules$lines_logger$lib$index;let logWorkletMain$$module$src$logger,logWorkletWorker$$module$src$logger,logSABMain$$module$src$logger,logSABWorker$$module$src$logger,logVANMain$$module$src$logger,logVANWorker$$module$src$logger,logOldSpnMain$$module$src$logger,logOldSpnWorker$$module$src$logger,logIndex$$module$src$logger,logSPNMainSingle$$module$src$logger,logSinglethreadWorkletMain$$module$src$logger,logSinglethreadWorkletWorker$$module$src$logger,logCommonUtils$$module$src$logger,logWasmModule$$module$src$logger,logMidiRequest$$module$src$logger;
const isProd$$module$src$logger=1;logWorkletMain$$module$src$logger=a=>b=>{};logWorkletWorker$$module$src$logger=a=>b=>{};logSABMain$$module$src$logger=a=>b=>{};logSABWorker$$module$src$logger=a=>b=>{};logVANMain$$module$src$logger=a=>b=>{};logVANWorker$$module$src$logger=a=>b=>{};logOldSpnMain$$module$src$logger=a=>b=>{};logOldSpnWorker$$module$src$logger=a=>b=>{};logIndex$$module$src$logger=a=>b=>{};logSPNMainSingle$$module$src$logger=a=>b=>{};
logSinglethreadWorkletMain$$module$src$logger=a=>b=>{};logSinglethreadWorkletWorker$$module$src$logger=a=>b=>{};logCommonUtils$$module$src$logger=a=>b=>{};logWasmModule$$module$src$logger=a=>b=>{};logMidiRequest$$module$src$logger=a=>b=>{};var $jscompDefaultExport$$module$src$logger=a=>b=>{},module$src$logger={};module$src$logger.default=$jscompDefaultExport$$module$src$logger;module$src$logger.logCommonUtils=logCommonUtils$$module$src$logger;module$src$logger.logIndex=logIndex$$module$src$logger;
module$src$logger.logMidiRequest=logMidiRequest$$module$src$logger;module$src$logger.logOldSpnMain=logOldSpnMain$$module$src$logger;module$src$logger.logOldSpnWorker=logOldSpnWorker$$module$src$logger;module$src$logger.logSABMain=logSABMain$$module$src$logger;module$src$logger.logSABWorker=logSABWorker$$module$src$logger;module$src$logger.logSPNMainSingle=logSPNMainSingle$$module$src$logger;module$src$logger.logSinglethreadWorkletMain=logSinglethreadWorkletMain$$module$src$logger;
module$src$logger.logSinglethreadWorkletWorker=logSinglethreadWorkletWorker$$module$src$logger;module$src$logger.logVANMain=logVANMain$$module$src$logger;module$src$logger.logVANWorker=logVANWorker$$module$src$logger;module$src$logger.logWasmModule=logWasmModule$$module$src$logger;module$src$logger.logWorkletMain=logWorkletMain$$module$src$logger;module$src$logger.logWorkletWorker=logWorkletWorker$$module$src$logger;const DEFAULT_BUFFER_LEN$$module$src$constants=128,MAX_CHANNELS$$module$src$constants=32,RING_BUFFER_SIZE$$module$src$constants=16384,MIDI_BUFFER_SIZE$$module$src$constants=1024,MIDI_BUFFER_PAYLOAD_SIZE$$module$src$constants=3,CALLBACK_DATA_BUFFER_SIZE$$module$src$constants=16384,initialSharedState$$module$src$constants=[0,4096,0,0,0,0,-1,-1,-1,-1,0,DEFAULT_BUFFER_LEN$$module$src$constants,0,0,0,0,0,0,0,0],AUDIO_STATE$$module$src$constants={CSOUND_LOCK:0,FRAMES_REQUESTED:1,IS_PERFORMING:2,IS_RENDERING:3,
IS_PAUSED:4,STOP:5,SAMPLE_RATE:6,KSMPS:7,NCHNLS:8,NCHNLS_I:9,IS_REQUESTING_MIC:10,BUFFER_LEN:11,OUTPUT_READ_INDEX:12,OUTPUT_WRITE_INDEX:13,AVAIL_IN_BUFS:14,AVAIL_OUT_BUFS:15,IS_REQUESTING_RTMIDI:16,RTMIDI_INDEX:17,AVAIL_RTMIDI_EVENTS:18,HAS_PENDING_CALLBACKS:19},DATA_TYPE$$module$src$constants={NUMBER:0,STRING:1,FLOAT_32:2,FLOAT_64:3};var module$src$constants={};module$src$constants.AUDIO_STATE=AUDIO_STATE$$module$src$constants;module$src$constants.CALLBACK_DATA_BUFFER_SIZE=CALLBACK_DATA_BUFFER_SIZE$$module$src$constants;
module$src$constants.DATA_TYPE=DATA_TYPE$$module$src$constants;module$src$constants.DEFAULT_BUFFER_LEN=DEFAULT_BUFFER_LEN$$module$src$constants;module$src$constants.MAX_CHANNELS=MAX_CHANNELS$$module$src$constants;module$src$constants.MIDI_BUFFER_PAYLOAD_SIZE=MIDI_BUFFER_PAYLOAD_SIZE$$module$src$constants;module$src$constants.MIDI_BUFFER_SIZE=MIDI_BUFFER_SIZE$$module$src$constants;module$src$constants.RING_BUFFER_SIZE=RING_BUFFER_SIZE$$module$src$constants;module$src$constants.initialSharedState=initialSharedState$$module$src$constants;const handleCsoundStart$$module$src$workers$common_utils=(a,b,c,d,e)=>f=>{const {csound:g}=f,h=1===b.csoundShouldDaemonize(g);h&&(b.csoundSetOption(g,"--daemon"),b.csoundSetOption(g,"-odac"));const k=b.csoundStart(g),l=b.csoundGetOutputName(g)||"test.wav";logCommonUtils$$module$src$logger(\`handleCsoundStart: actual csoundStart result \${k}, outputName: \${l}\`)();0!==k&&a.post(\`error: csoundStart failed while trying to render \${l},\`+" look out for errors in options and syntax");setTimeout(()=>{const m=
b._isRequestingRtMidiInput(g);if(h||m||l.includes("dac"))d(f);else if(a.broadcastPlayState("renderStarted"),e)e(f);else for(;0===b.csoundPerformKsmps(g););},0);return k},instantiateAudioPacket$$module$src$workers$common_utils=(a,b)=>{const c=[];for(let d=0;d<a;d++)c.push(new Float64Array(b));return c},renderFunction$$module$src$workers$common_utils=({libraryCsound:a,workerMessagePort:b})=>async({csound:c})=>{const d=a.csoundGetKr(c);let e=0,f=0;for(;("renderStarted"===b.vanillaWorkerState||"renderStarted"===
b.workerState)&&0===e;)e=a.csoundPerformKsmps(c),f+=1,"function"===typeof setTimeout&&0===e&&0===f%(2*d)&&await new Promise(g=>setTimeout(g,0));b.broadcastPlayState("renderEnded")};var module$src$workers$common_utils={};module$src$workers$common_utils.handleCsoundStart=handleCsoundStart$$module$src$workers$common_utils;module$src$workers$common_utils.instantiateAudioPacket=instantiateAudioPacket$$module$src$workers$common_utils;module$src$workers$common_utils.renderFunction=renderFunction$$module$src$workers$common_utils;const csoundCreate$$module$src$modules$instantiation=a=>()=>a.exports.csoundCreateWasi();csoundCreate$$module$src$modules$instantiation.toString=()=>"create = async () => undefined;";const csoundDestroy$$module$src$modules$instantiation=a=>b=>a.exports.csoundDestroy(b);csoundDestroy$$module$src$modules$instantiation.toString=()=>"destroy = async () => undefined;";const csoundGetAPIVersion$$module$src$modules$instantiation=a=>()=>a.exports.csoundGetAPIVersion();
csoundGetAPIVersion$$module$src$modules$instantiation.toString=()=>"getAPIVersion = async () => Number;";const csoundGetVersion$$module$src$modules$instantiation=a=>()=>a.exports.csoundGetVersion();csoundGetVersion$$module$src$modules$instantiation.toString=()=>"getVersion = async () => Number;";const csoundInitialize$$module$src$modules$instantiation=a=>(b,c)=>a.exports.csoundInitialize(c);csoundInitialize$$module$src$modules$instantiation.toString=()=>"initialize = async () => Number;";
var module$src$modules$instantiation={};module$src$modules$instantiation.csoundCreate=csoundCreate$$module$src$modules$instantiation;module$src$modules$instantiation.csoundDestroy=csoundDestroy$$module$src$modules$instantiation;module$src$modules$instantiation.csoundGetAPIVersion=csoundGetAPIVersion$$module$src$modules$instantiation;module$src$modules$instantiation.csoundGetVersion=csoundGetVersion$$module$src$modules$instantiation;module$src$modules$instantiation.csoundInitialize=csoundInitialize$$module$src$modules$instantiation;const WITH_TEXT_ENCODER_POLYFILL$$module$src$utils$text_encoders=!1;function TextEncoderPoly$$module$src$utils$text_encoders(){this.encoding="utf8";return this}TextEncoderPoly$$module$src$utils$text_encoders.prototype.encode=function(a){if("string"!==typeof a)throw new TypeError("passed argument must be of type string "+a+" "+typeof a);a=unescape(encodeURIComponent(a));const b=new Uint8Array(a.length);[...a].forEach(function(c,d){b[d]=c.codePointAt(0)});return b};
function TextDecoderPoly$$module$src$utils$text_encoders(){this.encoding="utf8";this.ignoreBOM=!1;this.trimNull=a=>{const b=a.indexOf("\\x00");return-1<b?a.slice(0,Math.max(0,b)):a};this.decode=function(a,b){if(void 0===a)return"";if("boolean"!==typeof(void 0!==b&&"stream"in b?b.stream:!1))throw new TypeError("stream option must be boolean");if(ArrayBuffer.isView(a)){a=new Uint8Array(a.buffer,a.byteOffset,a.byteLength);const c=Array.from({length:a.length});a.forEach(function(d,e){c[e]=String.fromCodePoint(d)});
return this.trimNull(c.join(""))}throw new TypeError("passed argument must be an array buffer view");}}
const decoder$$module$src$utils$text_encoders=WITH_TEXT_ENCODER_POLYFILL$$module$src$utils$text_encoders?new TextDecoderPoly$$module$src$utils$text_encoders:new TextDecoder("utf8"),encoder$$module$src$utils$text_encoders=WITH_TEXT_ENCODER_POLYFILL$$module$src$utils$text_encoders?new TextEncoderPoly$$module$src$utils$text_encoders:new TextEncoder("utf8"),uint2String$$module$src$utils$text_encoders=a=>decoder$$module$src$utils$text_encoders.decode(a);var module$src$utils$text_encoders={};
module$src$utils$text_encoders.decoder=decoder$$module$src$utils$text_encoders;module$src$utils$text_encoders.encoder=encoder$$module$src$utils$text_encoders;module$src$utils$text_encoders.uint2String=uint2String$$module$src$utils$text_encoders;const trimNull$$module$src$utils$trim_null=a=>{const b=a.indexOf("\\x00");return-1<b?a.substr(0,b):a};var module$src$utils$trim_null={};module$src$utils$trim_null.trimNull=trimNull$$module$src$utils$trim_null;const freeStringPtr$$module$src$utils$string_pointers=(a,b)=>{a.exports.freeStringMem(b)},ptr2string$$module$src$utils$string_pointers=(a,b)=>{({buffer:a}=a.wasi.memory);b=new Uint8Array(a,b);b=uint2String$$module$src$utils$text_encoders(b);return trimNull$$module$src$utils$trim_null(b)},string2ptr$$module$src$utils$string_pointers=(a,b)=>{if("string"!==typeof b)console.error("Expected string but got",typeof b);else{b=encoder$$module$src$utils$text_encoders.encode(b);var c=a.exports.allocStringMem(b.length);
({buffer:a}=a.wasi.memory);(new Uint8Array(a,c,b.length+1)).set(b);return c}};var module$src$utils$string_pointers={};module$src$utils$string_pointers.freeStringPtr=freeStringPtr$$module$src$utils$string_pointers;module$src$utils$string_pointers.ptr2string=ptr2string$$module$src$utils$string_pointers;module$src$utils$string_pointers.string2ptr=string2ptr$$module$src$utils$string_pointers;const csoundParseOrc$$module$src$modules$performance=a=>(b,c)=>a.exports.csoundParseOrc(b,c);csoundParseOrc$$module$src$modules$performance.toString=()=>"parseOrc = async (orchestra) => Object;";const csoundCompileTree$$module$src$modules$performance=a=>(b,c)=>a.exports.csoundCompileTree(b,c);csoundCompileTree$$module$src$modules$performance.toString=()=>"compileTree = async (tree) => Number;";
const csoundCompileOrc$$module$src$modules$performance=a=>(b,c)=>{c=string2ptr$$module$src$utils$string_pointers(a,c);b=a.exports.csoundCompileOrc(b,c);freeStringPtr$$module$src$utils$string_pointers(a,c);return b};csoundCompileOrc$$module$src$modules$performance.toString=()=>"compileOrc = async (orchestra) => Number;";
const csoundEvalCode$$module$src$modules$performance=a=>(b,c)=>{c=string2ptr$$module$src$utils$string_pointers(a,c);b=a.exports.csoundEvalCode(b,c);freeStringPtr$$module$src$utils$string_pointers(a,c);return b};csoundEvalCode$$module$src$modules$performance.toString=()=>"csoundEvalCode = async (orchestra) => Number;";const csoundStart$$module$src$modules$performance=a=>b=>a.exports.csoundStartWasi(b);csoundStart$$module$src$modules$performance.toString=()=>"start = async () => Number;";
const csoundCompileCsd$$module$src$modules$performance=a=>(b,c)=>{c=string2ptr$$module$src$utils$string_pointers(a,c);let d;try{d=a.exports.csoundCompileCsd(b,c)}catch(e){console.error(e)}freeStringPtr$$module$src$utils$string_pointers(a,c);return d};csoundCompileCsd$$module$src$modules$performance.toString=()=>"compileCsd = async (path) => Number;";
const csoundCompileCsdText$$module$src$modules$performance=a=>(b,c)=>{c=string2ptr$$module$src$utils$string_pointers(a,c);b=a.exports.csoundCompileCsdText(b,c);freeStringPtr$$module$src$utils$string_pointers(a,c);return b};csoundCompileCsdText$$module$src$modules$performance.toString=()=>"compileCsdText = async (csoundDocument) => Number;";const csoundPerform$$module$src$modules$performance=a=>b=>a.exports.csoundPerform(b);csoundPerform$$module$src$modules$performance.toString=()=>"perform = async () => Number;";
const csoundPerformKsmps$$module$src$modules$performance=a=>b=>a.exports.csoundPerformKsmpsWasi(b);csoundPerformKsmps$$module$src$modules$performance.toString=()=>"performKsmps = async (csound) => Number;";const csoundPerformBuffer$$module$src$modules$performance=a=>b=>a.exports.csoundPerformBuffer(b);csoundPerformBuffer$$module$src$modules$performance.toString=()=>"performBuffer = async (csound) => Number;";const csoundStop$$module$src$modules$performance=a=>b=>a.exports.csoundStop(b);
csoundStop$$module$src$modules$performance.toString=()=>"stop = async () => undefined;";const csoundCleanup$$module$src$modules$performance=a=>b=>a.exports.csoundCleanup(b);csoundCleanup$$module$src$modules$performance.toString=()=>"cleanup = async () => Number;";const csoundReset$$module$src$modules$performance=a=>b=>a.exports.csoundResetWasi(b);csoundReset$$module$src$modules$performance.toString=()=>"reset = async () => Number;";var module$src$modules$performance={};
module$src$modules$performance.csoundCleanup=csoundCleanup$$module$src$modules$performance;module$src$modules$performance.csoundCompileCsd=csoundCompileCsd$$module$src$modules$performance;module$src$modules$performance.csoundCompileCsdText=csoundCompileCsdText$$module$src$modules$performance;module$src$modules$performance.csoundCompileOrc=csoundCompileOrc$$module$src$modules$performance;module$src$modules$performance.csoundCompileTree=csoundCompileTree$$module$src$modules$performance;
module$src$modules$performance.csoundEvalCode=csoundEvalCode$$module$src$modules$performance;module$src$modules$performance.csoundParseOrc=csoundParseOrc$$module$src$modules$performance;module$src$modules$performance.csoundPerform=csoundPerform$$module$src$modules$performance;module$src$modules$performance.csoundPerformBuffer=csoundPerformBuffer$$module$src$modules$performance;module$src$modules$performance.csoundPerformKsmps=csoundPerformKsmps$$module$src$modules$performance;
module$src$modules$performance.csoundReset=csoundReset$$module$src$modules$performance;module$src$modules$performance.csoundStart=csoundStart$$module$src$modules$performance;module$src$modules$performance.csoundStop=csoundStop$$module$src$modules$performance;const sizeOfPrimitive$$module$src$utils$native_sizes={int:4,MYFLT:4,char:1},sizeofStruct$$module$src$utils$native_sizes=a=>a.reduce((b,[,c,...d])=>b+("char"===c?sizeOfPrimitive$$module$src$utils$native_sizes[c]*d[0]:sizeOfPrimitive$$module$src$utils$native_sizes[c]),0);var module$src$utils$native_sizes={};module$src$utils$native_sizes.sizeOfPrimitive=sizeOfPrimitive$$module$src$utils$native_sizes;module$src$utils$native_sizes.sizeofStruct=sizeofStruct$$module$src$utils$native_sizes;const structBufferToObject$$module$src$utils$structure_buffer_to_object=(a,b)=>{[a]=a.reduce(([c,d],[e,f,...g])=>{g="char"===f?sizeOfPrimitive$$module$src$utils$native_sizes[f]*g[0]:sizeOfPrimitive$$module$src$utils$native_sizes[f];f="char"===f?trimNull$$module$src$utils$trim_null(uint2String$$module$src$utils$text_encoders(b.subarray(d,g)))||"":b[d];c[e]=f;return[c,d+g]},[{},0]);return a};var module$src$utils$structure_buffer_to_object={};
module$src$utils$structure_buffer_to_object.structBufferToObject=structBufferToObject$$module$src$utils$structure_buffer_to_object;const CSOUND_PARAMS$$module$src$structures=[["debug_mode","int"],["buffer_frames","int"],["hardware_buffer_frames","int"],["displays","int"],["ascii_graphs","int"],["postscript_graphs","int"],["message_level","int"],["tempo","int"],["ring_bell","int"],["use_cscore","int"],["terminate_on_midi","int"],["heartbeat","int"],["defer_gen01_load","int"],["midi_key","int"],["midi_key_cps","int"],["midi_key_oct","int"],["midi_key_pch","int"],["midi_velocity","int"],["midi_velocity_amp","int"],["no_default_paths",
"int"],["number_of_threads","int"],["syntax_check_only","int"],["csd_line_counts","int"],["compute_weights","int"],["realtime_mode","int"],["sample_accurate","int"],["sample_rate_override","MYFLT"],["control_rate_override","MYFLT"],["nchnls_override","int"],["nchnls_i_override","int"],["e0dbfs_override","MYFLT"],["daemon","int"],["ksmps_override","int"],["FFT_library","int"]],CS_MIDIDEVICE$$module$src$structures=[["device_name","char",64],["interface_name","char",64],["device_id","char",64],["midi_module",
"char",64],["isOutput","int"]];var module$src$structures={};const csoundGetSr$$module$src$modules$attributes=a=>b=>a.exports.csoundGetSr(b);csoundGetSr$$module$src$modules$attributes.toString=()=>"getSr = async () => Number;";const csoundGetKr$$module$src$modules$attributes=a=>b=>a.exports.csoundGetKr(b);csoundGetKr$$module$src$modules$attributes.toString=()=>"getKr = async () => Number;";const csoundGetKsmps$$module$src$modules$attributes=a=>b=>a.exports.csoundGetKsmps(b);csoundGetKsmps$$module$src$modules$attributes.toString=()=>"getKsmps = async () => Number;";
const csoundGetNchnls$$module$src$modules$attributes=a=>b=>a.exports.csoundGetNchnls(b);csoundGetNchnls$$module$src$modules$attributes.toString=()=>"getNchnls = async () => Number;";const csoundGetNchnlsInput$$module$src$modules$attributes=a=>b=>a.exports.csoundGetNchnlsInput(b);csoundGetNchnlsInput$$module$src$modules$attributes.toString=()=>"getNchnlsInput = async () => Number;";const csoundGet0dBFS$$module$src$modules$attributes=a=>b=>a.exports.csoundGet0dBFS(b);
csoundGet0dBFS$$module$src$modules$attributes.toString=()=>"get0dBFS = async () => Number;";const csoundGetA4$$module$src$modules$attributes=a=>b=>a.exports.csoundGetA4(b);csoundGetA4$$module$src$modules$attributes.toString=()=>"getA4 = async () => Number;";const csoundGetCurrentTimeSamples$$module$src$modules$attributes=a=>b=>a.exports.csoundGetCurrentTimeSamples(b);csoundGetCurrentTimeSamples$$module$src$modules$attributes.toString=()=>"getCurrentTimeSamples = async () => Number;";
const csoundGetSizeOfMYFLT$$module$src$modules$attributes=a=>b=>a.exports.csoundGetSizeOfMYFLT(b);csoundGetSizeOfMYFLT$$module$src$modules$attributes.toString=()=>"getSizeOfMYFLT = async () => Number;";const csoundSetOption$$module$src$modules$attributes=a=>(b,c)=>{c=string2ptr$$module$src$utils$string_pointers(a,c);b=a.exports.csoundSetOption(b,c);freeStringPtr$$module$src$utils$string_pointers(a,c);return b};csoundSetOption$$module$src$modules$attributes.toString=()=>"setOption = async (option) => Number;";
const csoundSetParams$$module$src$modules$attributes=a=>(b,c)=>{a.exports.csoundSetParams(b,c)};csoundSetParams$$module$src$modules$attributes.toString=()=>"setParams = async (csoundParams) => undefined;";
const csoundGetParams$$module$src$modules$attributes=a=>b=>{var {buffer:c}=a.wasi.memory;const d=sizeofStruct$$module$src$utils$native_sizes(CSOUND_PARAMS$$module$src$structures),e=a.exports.allocCsoundParamsStruct();c=new Uint8Array(c,e,d);a.exports.csoundGetParams(b,e);b=structBufferToObject$$module$src$utils$structure_buffer_to_object(CSOUND_PARAMS$$module$src$structures,c);a.exports.freeCsoundParams(e);return b};csoundGetParams$$module$src$modules$attributes.toString=()=>"getParams = async () => CSOUND_PARAMS;";
const csoundGetDebug$$module$src$modules$attributes=a=>b=>a.exports.csoundGetDebug(b);csoundGetDebug$$module$src$modules$attributes.toString=()=>"getDebug = async () => Number;";const csoundSetDebug$$module$src$modules$attributes=a=>(b,c)=>{a.exports.csoundSetDebug(b,c)};csoundSetDebug$$module$src$modules$attributes.toString=()=>"setDebug = async (number) => undefined;";var module$src$modules$attributes={};module$src$modules$attributes.csoundGet0dBFS=csoundGet0dBFS$$module$src$modules$attributes;
module$src$modules$attributes.csoundGetA4=csoundGetA4$$module$src$modules$attributes;module$src$modules$attributes.csoundGetCurrentTimeSamples=csoundGetCurrentTimeSamples$$module$src$modules$attributes;module$src$modules$attributes.csoundGetDebug=csoundGetDebug$$module$src$modules$attributes;module$src$modules$attributes.csoundGetKr=csoundGetKr$$module$src$modules$attributes;module$src$modules$attributes.csoundGetKsmps=csoundGetKsmps$$module$src$modules$attributes;
module$src$modules$attributes.csoundGetNchnls=csoundGetNchnls$$module$src$modules$attributes;module$src$modules$attributes.csoundGetNchnlsInput=csoundGetNchnlsInput$$module$src$modules$attributes;module$src$modules$attributes.csoundGetParams=csoundGetParams$$module$src$modules$attributes;module$src$modules$attributes.csoundGetSizeOfMYFLT=csoundGetSizeOfMYFLT$$module$src$modules$attributes;module$src$modules$attributes.csoundGetSr=csoundGetSr$$module$src$modules$attributes;
module$src$modules$attributes.csoundSetDebug=csoundSetDebug$$module$src$modules$attributes;module$src$modules$attributes.csoundSetOption=csoundSetOption$$module$src$modules$attributes;module$src$modules$attributes.csoundSetParams=csoundSetParams$$module$src$modules$attributes;const csoundGetInputBufferSize$$module$src$modules$rtaudio=a=>b=>a.exports.csoundGetInputBufferSize(b);csoundGetInputBufferSize$$module$src$modules$rtaudio.toString=()=>"getInputBufferSize = async () => Number;";const csoundGetOutputBufferSize$$module$src$modules$rtaudio=a=>b=>a.exports.csoundGetOutputBufferSize(b);csoundGetOutputBufferSize$$module$src$modules$rtaudio.toString=()=>"getOutputBufferSize = async () => Number;";const csoundGetInputBuffer$$module$src$modules$rtaudio=a=>b=>a.exports.csoundGetInputBuffer(b);
csoundGetInputBuffer$$module$src$modules$rtaudio.toString=()=>"getInputBuffer = async () => Number;";const csoundGetOutputBuffer$$module$src$modules$rtaudio=a=>b=>a.exports.csoundGetOutputBuffer(b);csoundGetOutputBuffer$$module$src$modules$rtaudio.toString=()=>"getOutputBuffer = async () => Number;";const csoundGetSpin$$module$src$modules$rtaudio=a=>b=>a.exports.csoundGetSpin(b);csoundGetSpin$$module$src$modules$rtaudio.toString=()=>"getSpin = async (csound) => Number;";
const csoundGetSpout$$module$src$modules$rtaudio=a=>b=>a.exports.csoundGetSpout(b);csoundGetSpout$$module$src$modules$rtaudio.toString=()=>"getSpout = async () => Number;";var module$src$modules$rtaudio={};module$src$modules$rtaudio.csoundGetInputBuffer=csoundGetInputBuffer$$module$src$modules$rtaudio;module$src$modules$rtaudio.csoundGetInputBufferSize=csoundGetInputBufferSize$$module$src$modules$rtaudio;module$src$modules$rtaudio.csoundGetOutputBuffer=csoundGetOutputBuffer$$module$src$modules$rtaudio;
module$src$modules$rtaudio.csoundGetOutputBufferSize=csoundGetOutputBufferSize$$module$src$modules$rtaudio;module$src$modules$rtaudio.csoundGetSpin=csoundGetSpin$$module$src$modules$rtaudio;module$src$modules$rtaudio.csoundGetSpout=csoundGetSpout$$module$src$modules$rtaudio;function add$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>add$$module$node_modules$rambda$dist$rambda_mjs(a,c):Number(a)+Number(b)}const cloneList$$module$node_modules$rambda$dist$rambda_mjs=a=>Array.prototype.slice.call(a);function curry$$module$node_modules$rambda$dist$rambda_mjs(a,b=[]){return(...c)=>{c=[...b,...c];return c.length>=a.length?a(...c):curry$$module$node_modules$rambda$dist$rambda_mjs(a,c)}}
function adjustFn$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){const d=0>a?c.length+a:a;if(a>=c.length||0>d)return c;a=cloneList$$module$node_modules$rambda$dist$rambda_mjs(c);a[d]=b(a[d]);return a}const adjust$$module$node_modules$rambda$dist$rambda_mjs=curry$$module$node_modules$rambda$dist$rambda_mjs(adjustFn$$module$node_modules$rambda$dist$rambda_mjs);
function all$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return c=>all$$module$node_modules$rambda$dist$rambda_mjs(a,c);for(let c=0;c<b.length;c++)if(!a(b[c]))return!1;return!0}function allPass$$module$node_modules$rambda$dist$rambda_mjs(a){return(...b)=>{let c=0;for(;c<a.length;){if(!a[c](...b))return!1;c++}return!0}}function always$$module$node_modules$rambda$dist$rambda_mjs(a){return b=>a}
function and$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>and$$module$node_modules$rambda$dist$rambda_mjs(a,c):a&&b}function any$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return d=>any$$module$node_modules$rambda$dist$rambda_mjs(a,d);let c=0;for(;c<b.length;){if(a(b[c],c))return!0;c++}return!1}
function anyPass$$module$node_modules$rambda$dist$rambda_mjs(a){return(...b)=>{let c=0;for(;c<a.length;){if(a[c](...b))return!0;c++}return!1}}function append$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return d=>append$$module$node_modules$rambda$dist$rambda_mjs(a,d);if("string"===typeof b)return b.split("").concat(a);const c=cloneList$$module$node_modules$rambda$dist$rambda_mjs(b);c.push(a);return c}
function apply$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>apply$$module$node_modules$rambda$dist$rambda_mjs(a,c):a.apply(this,b)}const {isArray:isArray$$module$node_modules$rambda$dist$rambda_mjs}=Array;
function __findHighestArity$$module$node_modules$rambda$dist$rambda_mjs(a,b=0){for(const c in a)!1!==a.hasOwnProperty(c)&&"constructor"!==c&&("object"===typeof a[c]&&(b=Math.max(b,__findHighestArity$$module$node_modules$rambda$dist$rambda_mjs(a[c]))),"function"===typeof a[c]&&(b=Math.max(b,a[c].length)));return b}
function __filterUndefined$$module$node_modules$rambda$dist$rambda_mjs(){const a=[];let b=0;const c=arguments.length;for(;b<c&&"undefined"!==typeof arguments[b];)a[b]=arguments[b],b++;return a}
function __applySpecWithArity$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){var d=b-c.length;if(1===d)return f=>__applySpecWithArity$$module$node_modules$rambda$dist$rambda_mjs(a,b,__filterUndefined$$module$node_modules$rambda$dist$rambda_mjs(...c,f));if(2===d)return(f,g)=>__applySpecWithArity$$module$node_modules$rambda$dist$rambda_mjs(a,b,__filterUndefined$$module$node_modules$rambda$dist$rambda_mjs(...c,f,g));if(3===d)return(f,g,h)=>__applySpecWithArity$$module$node_modules$rambda$dist$rambda_mjs(a,
b,__filterUndefined$$module$node_modules$rambda$dist$rambda_mjs(...c,f,g,h));if(4===d)return(f,g,h,k)=>__applySpecWithArity$$module$node_modules$rambda$dist$rambda_mjs(a,b,__filterUndefined$$module$node_modules$rambda$dist$rambda_mjs(...c,f,g,h,k));if(4<d)return(...f)=>__applySpecWithArity$$module$node_modules$rambda$dist$rambda_mjs(a,b,__filterUndefined$$module$node_modules$rambda$dist$rambda_mjs(...c,...f));if(isArray$$module$node_modules$rambda$dist$rambda_mjs(a)){var e=[];d=0;const f=a.length;
for(;d<f;d++){if("object"===typeof a[d]||isArray$$module$node_modules$rambda$dist$rambda_mjs(a[d]))e[d]=__applySpecWithArity$$module$node_modules$rambda$dist$rambda_mjs(a[d],b,c);"function"===typeof a[d]&&(e[d]=a[d](...c))}return e}d={};for(e in a)!1!==a.hasOwnProperty(e)&&"constructor"!==e&&("object"===typeof a[e]?d[e]=__applySpecWithArity$$module$node_modules$rambda$dist$rambda_mjs(a[e],b,c):"function"===typeof a[e]&&(d[e]=a[e](...c)));return d}
function applySpec$$module$node_modules$rambda$dist$rambda_mjs(a,...b){const c=__findHighestArity$$module$node_modules$rambda$dist$rambda_mjs(a);return 0===c?()=>({}):__applySpecWithArity$$module$node_modules$rambda$dist$rambda_mjs(a,c,b)}function assocFn$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){return Object.assign({},c,{[a]:b})}const assoc$$module$node_modules$rambda$dist$rambda_mjs=curry$$module$node_modules$rambda$dist$rambda_mjs(assocFn$$module$node_modules$rambda$dist$rambda_mjs);
function _isInteger$$module$node_modules$rambda$dist$rambda_mjs(a){return a<<0===a}const isInteger$$module$node_modules$rambda$dist$rambda_mjs=Number.isInteger||_isInteger$$module$node_modules$rambda$dist$rambda_mjs;
function assocPathFn$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){const d="string"===typeof a?a.split(".").map(e=>isInteger$$module$node_modules$rambda$dist$rambda_mjs(Number(e))?Number(e):e):a;if(0===d.length)return b;a=d[0];if(1<d.length){const e="object"===typeof c&&null!==c&&c.hasOwnProperty(a)?c[a]:isInteger$$module$node_modules$rambda$dist$rambda_mjs(d[1])?[]:{};b=assocPathFn$$module$node_modules$rambda$dist$rambda_mjs(Array.prototype.slice.call(d,1),b,e)}return isInteger$$module$node_modules$rambda$dist$rambda_mjs(a)&&
isArray$$module$node_modules$rambda$dist$rambda_mjs(c)?(c=cloneList$$module$node_modules$rambda$dist$rambda_mjs(c),c[a]=b,c):assoc$$module$node_modules$rambda$dist$rambda_mjs(a,b,c)}const assocPath$$module$node_modules$rambda$dist$rambda_mjs=curry$$module$node_modules$rambda$dist$rambda_mjs(assocPathFn$$module$node_modules$rambda$dist$rambda_mjs);
function _curryN$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){return function(){var d=0;let e=0;const f=b.length,g=arguments.length,h=Array(f+g);for(;d<f;)h[d]=b[d],d++;for(;e<g;)h[f+e]=arguments[e],e++;d=a-h.length;return h.length>=a?c.apply(this,h):_arity$1$$module$node_modules$rambda$dist$rambda_mjs(d,_curryN$$module$node_modules$rambda$dist$rambda_mjs(a,h,c))}}
function _arity$1$$module$node_modules$rambda$dist$rambda_mjs(a,b){switch(a){case 0:return function(){return b.apply(this,arguments)};case 1:return function(c){return b.apply(this,arguments)};case 2:return function(c,d){return b.apply(this,arguments)};case 3:return function(c,d,e){return b.apply(this,arguments)};case 4:return function(c,d,e,f){return b.apply(this,arguments)};case 5:return function(c,d,e,f,g){return b.apply(this,arguments)};case 6:return function(c,d,e,f,g,h){return b.apply(this,arguments)};
case 7:return function(c,d,e,f,g,h,k){return b.apply(this,arguments)};case 8:return function(c,d,e,f,g,h,k,l){return b.apply(this,arguments)};case 9:return function(c,d,e,f,g,h,k,l,m){return b.apply(this,arguments)};default:return function(c,d,e,f,g,h,k,l,m,n){return b.apply(this,arguments)}}}
function curryN$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return c=>curryN$$module$node_modules$rambda$dist$rambda_mjs(a,c);if(10<a)throw Error("First argument to _arity must be a non-negative integer no greater than ten");return _arity$1$$module$node_modules$rambda$dist$rambda_mjs(a,_curryN$$module$node_modules$rambda$dist$rambda_mjs(a,[],b))}
function bind$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>bind$$module$node_modules$rambda$dist$rambda_mjs(a,c):curryN$$module$node_modules$rambda$dist$rambda_mjs(a.length,(...c)=>a.apply(b,c))}function both$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>both$$module$node_modules$rambda$dist$rambda_mjs(a,c):(...c)=>a(...c)&&b(...c)}
function chain$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>chain$$module$node_modules$rambda$dist$rambda_mjs(a,c):[].concat(...b.map(a))}function clampFn$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){if(a>b)throw Error("min must not be greater than max in clamp(min, max, value)");if(c>=a&&c<=b)return c;if(c>b)return b;if(c<a)return a}const clamp$$module$node_modules$rambda$dist$rambda_mjs=curry$$module$node_modules$rambda$dist$rambda_mjs(clampFn$$module$node_modules$rambda$dist$rambda_mjs);
function clone$$module$node_modules$rambda$dist$rambda_mjs(a){const b=isArray$$module$node_modules$rambda$dist$rambda_mjs(a)?Array(a.length):{};if(a&&a.getTime)return new Date(a.getTime());for(const c in a){const d=a[c];b[c]="object"===typeof d&&null!==d?d.getTime?new Date(d.getTime()):clone$$module$node_modules$rambda$dist$rambda_mjs(d):d}return b}function complement$$module$node_modules$rambda$dist$rambda_mjs(a){return(...b)=>!a(...b)}
class ReduceStopper$$module$node_modules$rambda$dist$rambda_mjs{constructor(a){this.value=a}}function reduceFn$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){if(!isArray$$module$node_modules$rambda$dist$rambda_mjs(c))throw new TypeError("reduce: list must be array or iterable");let d=0;const e=c.length;for(;d<e;){b=a(b,c[d],d,c);if(b instanceof ReduceStopper$$module$node_modules$rambda$dist$rambda_mjs)return b.value;d++}return b}
const reduce$$module$node_modules$rambda$dist$rambda_mjs=curry$$module$node_modules$rambda$dist$rambda_mjs(reduceFn$$module$node_modules$rambda$dist$rambda_mjs),reduceStopper$$module$node_modules$rambda$dist$rambda_mjs=a=>new ReduceStopper$$module$node_modules$rambda$dist$rambda_mjs(a);
function _arity$$module$node_modules$rambda$dist$rambda_mjs(a,b){switch(a){case 0:return function(){return b.apply(this,arguments)};case 1:return function(c){return b.apply(this,arguments)};case 2:return function(c,d){return b.apply(this,arguments)};case 3:return function(c,d,e){return b.apply(this,arguments)};case 4:return function(c,d,e,f){return b.apply(this,arguments)};case 5:return function(c,d,e,f,g){return b.apply(this,arguments)};case 6:return function(c,d,e,f,g,h){return b.apply(this,arguments)};
case 7:return function(c,d,e,f,g,h,k){return b.apply(this,arguments)};case 8:return function(c,d,e,f,g,h,k,l){return b.apply(this,arguments)};case 9:return function(c,d,e,f,g,h,k,l,m){return b.apply(this,arguments)};case 10:return function(c,d,e,f,g,h,k,l,m,n){return b.apply(this,arguments)};default:throw Error("First argument to _arity must be a non-negative integer no greater than ten");}}
function _pipe$$module$node_modules$rambda$dist$rambda_mjs(a,b){return function(){return b.call(this,a.apply(this,arguments))}}
function pipe$$module$node_modules$rambda$dist$rambda_mjs(){if(0===arguments.length)throw Error("pipe requires at least one argument");return _arity$$module$node_modules$rambda$dist$rambda_mjs(arguments[0].length,reduceFn$$module$node_modules$rambda$dist$rambda_mjs(_pipe$$module$node_modules$rambda$dist$rambda_mjs,arguments[0],Array.prototype.slice.call(arguments,1,Infinity)))}
function compose$$module$node_modules$rambda$dist$rambda_mjs(){if(0===arguments.length)throw Error("compose requires at least one argument");return pipe$$module$node_modules$rambda$dist$rambda_mjs.apply(this,Array.prototype.slice.call(arguments,0).reverse())}function concat$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>concat$$module$node_modules$rambda$dist$rambda_mjs(a,c):"string"===typeof a?\`\${a}\${b}\`:[...a,...b]}
function cond$$module$node_modules$rambda$dist$rambda_mjs(a){return b=>{let c=!1,d;a.forEach(([e,f])=>{!c&&e(b)&&(c=!0,d=f(b))});return d}}const {keys:keys$1$$module$node_modules$rambda$dist$rambda_mjs}=Object;function mapArray$$module$node_modules$rambda$dist$rambda_mjs(a,b,c=!1){let d=0;const e=Array(b.length);for(;d<b.length;)e[d]=c?a(b[d],d):a(b[d]),d++;return e}
function mapObject$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return g=>mapObject$$module$node_modules$rambda$dist$rambda_mjs(a,g);let c=0;const d=keys$1$$module$node_modules$rambda$dist$rambda_mjs(b),e=d.length,f={};for(;c<e;){const g=d[c];f[g]=a(b[g],g,b);c++}return f}const mapObjIndexed$$module$node_modules$rambda$dist$rambda_mjs=mapObject$$module$node_modules$rambda$dist$rambda_mjs;
function map$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return c=>map$$module$node_modules$rambda$dist$rambda_mjs(a,c);if(!b)throw Error(INCORRECT_ITERABLE_INPUT);return isArray$$module$node_modules$rambda$dist$rambda_mjs(b)?mapArray$$module$node_modules$rambda$dist$rambda_mjs(a,b):mapObject$$module$node_modules$rambda$dist$rambda_mjs(a,b)}
function max$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>max$$module$node_modules$rambda$dist$rambda_mjs(a,c):b>a?b:a}
function converge$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return d=>converge$$module$node_modules$rambda$dist$rambda_mjs(a,d);const c=reduce$$module$node_modules$rambda$dist$rambda_mjs((d,e)=>max$$module$node_modules$rambda$dist$rambda_mjs(d,e.length),0,b);return curryN$$module$node_modules$rambda$dist$rambda_mjs(c,function(){return a.apply(this,map$$module$node_modules$rambda$dist$rambda_mjs(d=>d.apply(this,arguments),b))})}
function count$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>count$$module$node_modules$rambda$dist$rambda_mjs(a,c):isArray$$module$node_modules$rambda$dist$rambda_mjs(b)?b.filter(c=>a(c)).length:0}function countBy$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return d=>countBy$$module$node_modules$rambda$dist$rambda_mjs(a,d);const c={};b.forEach(d=>{d=a(d);c[d]?c[d]++:c[d]=1});return c}
const dec$$module$node_modules$rambda$dist$rambda_mjs=a=>a-1;function isFalsy$$module$node_modules$rambda$dist$rambda_mjs(a){return void 0===a||null===a||!0===Number.isNaN(a)}function defaultTo$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>defaultTo$$module$node_modules$rambda$dist$rambda_mjs(a,c):isFalsy$$module$node_modules$rambda$dist$rambda_mjs(b)?a:b}
function type$$module$node_modules$rambda$dist$rambda_mjs(a){if(null===a)return"Null";if(void 0===a)return"Undefined";if(Number.isNaN(a))return"NaN";a=Object.prototype.toString.call(a).slice(8,-1);return"AsyncFunction"===a?"Promise":a}
function _lastIndexOf$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(!isArray$$module$node_modules$rambda$dist$rambda_mjs(b))throw Error(\`Cannot read property 'indexOf' of \${b}\`);var c=type$$module$node_modules$rambda$dist$rambda_mjs(a);if(!["Object","Array","NaN","RegExp"].includes(c))return b.lastIndexOf(a);({length:c}=b);let d=-1;for(;-1<--c&&-1===d;)equals$$module$node_modules$rambda$dist$rambda_mjs(b[c],a)&&(d=c);return d}
function _indexOf$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(!isArray$$module$node_modules$rambda$dist$rambda_mjs(b))throw Error(\`Cannot read property 'indexOf' of \${b}\`);var c=type$$module$node_modules$rambda$dist$rambda_mjs(a);if(!["Object","Array","NaN","RegExp"].includes(c))return b.indexOf(a);let d=c=-1;const {length:e}=b;for(;++c<e&&-1===d;)equals$$module$node_modules$rambda$dist$rambda_mjs(b[c],a)&&(d=c);return d}
function _arrayFromIterator$$module$node_modules$rambda$dist$rambda_mjs(a){const b=[];let c;for(;!(c=a.next()).done;)b.push(c.value);return b}function _equalsSets$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(a.size!==b.size)return!1;a=_arrayFromIterator$$module$node_modules$rambda$dist$rambda_mjs(a.values());const c=_arrayFromIterator$$module$node_modules$rambda$dist$rambda_mjs(b.values());return 0===a.filter(d=>-1===_indexOf$$module$node_modules$rambda$dist$rambda_mjs(d,c)).length}
function parseError$$module$node_modules$rambda$dist$rambda_mjs(a){const b=a.__proto__.toString();return["Error","TypeError"].includes(b)?[b,a.message]:[]}function parseDate$$module$node_modules$rambda$dist$rambda_mjs(a){return a.toDateString?[!0,a.getTime()]:[!1]}function parseRegex$$module$node_modules$rambda$dist$rambda_mjs(a){return a.constructor!==RegExp?[!1]:[!0,a.toString()]}
function equals$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return f=>equals$$module$node_modules$rambda$dist$rambda_mjs(a,f);var c=type$$module$node_modules$rambda$dist$rambda_mjs(a);if(c!==type$$module$node_modules$rambda$dist$rambda_mjs(b))return!1;if("Function"===c)return void 0===a.name?!1:a.name===b.name;if(["NaN","Undefined","Null"].includes(c))return!0;if("Number"===c)return Object.is(-0,a)!==Object.is(-0,b)?!1:a.toString()===b.toString();if(["String","Boolean"].includes(c))return a.toString()===
b.toString();if("Array"===c){c=Array.from(a);const f=Array.from(b);if(c.toString()!==f.toString())return!1;let g=!0;c.forEach((h,k)=>{g&&(h===f[k]||equals$$module$node_modules$rambda$dist$rambda_mjs(h,f[k])||(g=!1))});return g}var d=parseRegex$$module$node_modules$rambda$dist$rambda_mjs(a),e=parseRegex$$module$node_modules$rambda$dist$rambda_mjs(b);if(d[0])return e[0]?d[1]===e[1]:!1;if(e[0])return!1;d=parseDate$$module$node_modules$rambda$dist$rambda_mjs(a);e=parseDate$$module$node_modules$rambda$dist$rambda_mjs(b);
if(d[0])return e[0]?d[1]===e[1]:!1;if(e[0])return!1;d=parseError$$module$node_modules$rambda$dist$rambda_mjs(a);e=parseError$$module$node_modules$rambda$dist$rambda_mjs(b);if(d[0])return e[0]?d[0]===e[0]&&d[1]===e[1]:!1;if("Set"===c)return _equalsSets$$module$node_modules$rambda$dist$rambda_mjs(a,b);if("Object"===c){c=Object.keys(a);if(c.length!==Object.keys(b).length)return!1;let f=!0;c.forEach(g=>{if(f){const h=a[g];g=b[g];h===g||equals$$module$node_modules$rambda$dist$rambda_mjs(h,g)||(f=!1)}});
return f}return!1}function includes$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return c=>includes$$module$node_modules$rambda$dist$rambda_mjs(a,c);if("string"===typeof b)return b.includes(a);if(!b)throw new TypeError(\`Cannot read property \\'indexOf\\' of \${b}\`);return isArray$$module$node_modules$rambda$dist$rambda_mjs(b)?-1<_indexOf$$module$node_modules$rambda$dist$rambda_mjs(a,b):!1}
class _Set$$module$node_modules$rambda$dist$rambda_mjs{constructor(){this.set=new Set;this.items={}}checkUniqueness(a){var b=type$$module$node_modules$rambda$dist$rambda_mjs(a);return["Null","Undefined","NaN"].includes(b)?b in this.items?!1:this.items[b]=!0:["Object","Array"].includes(b)?b in this.items?-1===_indexOf$$module$node_modules$rambda$dist$rambda_mjs(a,this.items[b])?(this.items[b].push(a),!0):!1:(this.items[b]=[a],!0):(b=this.set.size,this.set.add(a),this.set.size!==b)}}
function uniq$$module$node_modules$rambda$dist$rambda_mjs(a){const b=new _Set$$module$node_modules$rambda$dist$rambda_mjs,c=[];a.forEach(d=>{b.checkUniqueness(d)&&c.push(d)});return c}function difference$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>difference$$module$node_modules$rambda$dist$rambda_mjs(a,c):uniq$$module$node_modules$rambda$dist$rambda_mjs(a).filter(c=>!includes$$module$node_modules$rambda$dist$rambda_mjs(c,b))}
function dissoc$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return d=>dissoc$$module$node_modules$rambda$dist$rambda_mjs(a,d);if(null===b||void 0===b)return{};const c={};for(const d in b)c[d]=b[d];delete c[a];return c}function divide$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>divide$$module$node_modules$rambda$dist$rambda_mjs(a,c):a/b}
function drop$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>drop$$module$node_modules$rambda$dist$rambda_mjs(a,c):b.slice(0<a?a:0)}function dropLast$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>dropLast$$module$node_modules$rambda$dist$rambda_mjs(a,c):0<a?b.slice(0,-a):b.slice()}
function dropLastWhile$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return g=>dropLastWhile$$module$node_modules$rambda$dist$rambda_mjs(a,g);if(0===b.length)return b;const c=isArray$$module$node_modules$rambda$dist$rambda_mjs(b);if("function"!==typeof a)throw Error(\`'predicate' is from wrong type \${typeof a}\`);if(!c&&"string"!==typeof b)throw Error(\`'iterable' is from wrong type \${typeof b}\`);let d=!1;const e=[];let f=b.length;for(;0<f;)f--,d||!1!==a(b[f])?d&&e.push(b[f]):
(d=!0,e.push(b[f]));return c?e.reverse():e.reverse().join("")}function dropRepeats$$module$node_modules$rambda$dist$rambda_mjs(a){if(!isArray$$module$node_modules$rambda$dist$rambda_mjs(a))throw Error(\`\${a} is not a list\`);const b=[];a.reduce((c,d)=>{equals$$module$node_modules$rambda$dist$rambda_mjs(c,d)||b.push(d);return d},void 0);return b}
function dropRepeatsWith$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return d=>dropRepeatsWith$$module$node_modules$rambda$dist$rambda_mjs(a,d);if(!isArray$$module$node_modules$rambda$dist$rambda_mjs(b))throw Error(\`\${b} is not a list\`);const c=[];b.reduce((d,e)=>{if(void 0===d)return c.push(e),e;a(d,e)||c.push(e);return e},void 0);return c}
function dropWhile$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return g=>dropWhile$$module$node_modules$rambda$dist$rambda_mjs(a,g);const c=isArray$$module$node_modules$rambda$dist$rambda_mjs(b);if(!c&&"string"!==typeof b)throw Error("\`iterable\` is neither list nor a string");let d=!1;const e=[];let f=-1;for(;f++<b.length-1;)d?e.push(b[f]):a(b[f])||(d||(d=!0),e.push(b[f]));return c?e:e.join("")}
function either$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>either$$module$node_modules$rambda$dist$rambda_mjs(a,c):(...c)=>!(!a(...c)&&!b(...c))}
function endsWith$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return e=>endsWith$$module$node_modules$rambda$dist$rambda_mjs(a,e);if("string"===typeof b)return b.endsWith(a);if(!isArray$$module$node_modules$rambda$dist$rambda_mjs(a))return!1;const c=b.length-a.length;let d=!0;return a.filter((e,f)=>{if(!d)return!1;(e=equals$$module$node_modules$rambda$dist$rambda_mjs(e,b[f+c]))||(d=!1);return e}).length===a.length}
function prop$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return c=>prop$$module$node_modules$rambda$dist$rambda_mjs(a,c);if(b)return b[a]}function eqPropsFn$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){return equals$$module$node_modules$rambda$dist$rambda_mjs(prop$$module$node_modules$rambda$dist$rambda_mjs(a,b),prop$$module$node_modules$rambda$dist$rambda_mjs(a,c))}const eqProps$$module$node_modules$rambda$dist$rambda_mjs=curry$$module$node_modules$rambda$dist$rambda_mjs(eqPropsFn$$module$node_modules$rambda$dist$rambda_mjs);
function evolveArray$$module$node_modules$rambda$dist$rambda_mjs(a,b){return mapArray$$module$node_modules$rambda$dist$rambda_mjs((c,d)=>"Function"===type$$module$node_modules$rambda$dist$rambda_mjs(a[d])?a[d](c):c,b,!0)}
function evolveObject$$module$node_modules$rambda$dist$rambda_mjs(a,b){return mapObject$$module$node_modules$rambda$dist$rambda_mjs((c,d)=>{if("Object"===type$$module$node_modules$rambda$dist$rambda_mjs(c)){const e=type$$module$node_modules$rambda$dist$rambda_mjs(a[d]);return"Function"===e?a[d](c):"Object"===e?evolve$$module$node_modules$rambda$dist$rambda_mjs(a[d],c):c}return"Function"===type$$module$node_modules$rambda$dist$rambda_mjs(a[d])?a[d](c):c},b)}
function evolve$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return e=>evolve$$module$node_modules$rambda$dist$rambda_mjs(a,e);const c=type$$module$node_modules$rambda$dist$rambda_mjs(a),d=type$$module$node_modules$rambda$dist$rambda_mjs(b);if(d!==c)throw Error("iterableType !== rulesType");if(!["Object","Array"].includes(c))throw Error(\`'iterable' and 'rules' are from wrong type \${c}\`);return"Object"===d?evolveObject$$module$node_modules$rambda$dist$rambda_mjs(a,b):evolveArray$$module$node_modules$rambda$dist$rambda_mjs(a,
b)}function F$$module$node_modules$rambda$dist$rambda_mjs(){return!1}function filterObject$$module$node_modules$rambda$dist$rambda_mjs(a,b){const c={};for(const d in b)a(b[d],d,b)&&(c[d]=b[d]);return c}function filterArray$$module$node_modules$rambda$dist$rambda_mjs(a,b,c=!1){let d=0;const e=b.length,f=[];for(;d<e;)(c?a(b[d],d):a(b[d]))&&f.push(b[d]),d++;return f}
function filter$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return c=>filter$$module$node_modules$rambda$dist$rambda_mjs(a,c);if(!b)throw Error("Incorrect iterable input");return isArray$$module$node_modules$rambda$dist$rambda_mjs(b)?filterArray$$module$node_modules$rambda$dist$rambda_mjs(a,b,!1):filterObject$$module$node_modules$rambda$dist$rambda_mjs(a,b)}
function find$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return e=>find$$module$node_modules$rambda$dist$rambda_mjs(a,e);let c=0;const d=b.length;for(;c<d;){const e=b[c];if(a(e))return e;c++}}function findIndex$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return e=>findIndex$$module$node_modules$rambda$dist$rambda_mjs(a,e);const c=b.length;let d=-1;for(;++d<c;)if(a(b[d]))return d;return-1}
function findLast$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return d=>findLast$$module$node_modules$rambda$dist$rambda_mjs(a,d);let c=b.length;for(;0<=--c;)if(a(b[c]))return b[c]}function findLastIndex$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return d=>findLastIndex$$module$node_modules$rambda$dist$rambda_mjs(a,d);let c=b.length;for(;0<=--c;)if(a(b[c]))return c;return-1}
function flatten$$module$node_modules$rambda$dist$rambda_mjs(a,b){b=void 0===b?[]:b;for(let c=0;c<a.length;c++)isArray$$module$node_modules$rambda$dist$rambda_mjs(a[c])?flatten$$module$node_modules$rambda$dist$rambda_mjs(a[c],b):b.push(a[c]);return b}
function flipFn$$module$node_modules$rambda$dist$rambda_mjs(a){return(...b)=>{if(1===b.length)return c=>a(c,b[0]);if(2===b.length)return a(b[1],b[0]);if(3===b.length)return a(b[1],b[0],b[2]);if(4===b.length)return a(b[1],b[0],b[2],b[3]);throw Error("R.flip doesn't work with arity > 4");}}function flip$$module$node_modules$rambda$dist$rambda_mjs(a){return flipFn$$module$node_modules$rambda$dist$rambda_mjs(a)}
function forEach$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return e=>forEach$$module$node_modules$rambda$dist$rambda_mjs(a,e);if(void 0!==b){if(isArray$$module$node_modules$rambda$dist$rambda_mjs(b))for(var c=0,d=b.length;c<d;)a(b[c]),c++;else{c=0;d=keys$1$$module$node_modules$rambda$dist$rambda_mjs(b);const e=d.length;for(;c<e;){const f=d[c];a(b[f],f,b);c++}}return b}}
function fromPairs$$module$node_modules$rambda$dist$rambda_mjs(a){const b={};a.forEach(([c,d])=>b[c]=d);return b}function groupBy$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return d=>groupBy$$module$node_modules$rambda$dist$rambda_mjs(a,d);const c={};for(let d=0;d<b.length;d++){const e=b[d],f=a(e);c[f]||(c[f]=[]);c[f].push(e)}return c}
function groupWith$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(!isArray$$module$node_modules$rambda$dist$rambda_mjs(b))throw new TypeError("list.reduce is not a function");const c=cloneList$$module$node_modules$rambda$dist$rambda_mjs(b);if(1===b.length)return[c];const d=[];let e=[];c.reduce((f,g,h)=>{if(0===h)return g;const k=a(f,g),l=0===e.length;h=h===b.length-1;if(k)return l&&e.push(f),e.push(g),h&&d.push(e),g;if(l)return d.push([f]),h&&d.push([g]),g;d.push(e);h&&d.push([g]);e=[];return g},
void 0);return d}function has$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>has$$module$node_modules$rambda$dist$rambda_mjs(a,c):b?b.hasOwnProperty(a):!1}function createPath$$module$node_modules$rambda$dist$rambda_mjs(a,b="."){return"string"===typeof a?a.split(b):a}
function path$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return f=>path$$module$node_modules$rambda$dist$rambda_mjs(a,f);if(null!==b&&void 0!==b){for(var c=b,d=0,e=createPath$$module$node_modules$rambda$dist$rambda_mjs(a);d<e.length;){if(null===c||void 0===c||null===c[e[d]])return;c=c[e[d]];d++}return c}}
function hasPath$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>hasPath$$module$node_modules$rambda$dist$rambda_mjs(a,c):void 0!==path$$module$node_modules$rambda$dist$rambda_mjs(a,b)}function head$$module$node_modules$rambda$dist$rambda_mjs(a){return"string"===typeof a?a[0]||"":a[0]}function _objectIs$$module$node_modules$rambda$dist$rambda_mjs(a,b){return a===b?0!==a||1/a===1/b:a!==a&&b!==b}const objectIs$$module$node_modules$rambda$dist$rambda_mjs=Object.is||_objectIs$$module$node_modules$rambda$dist$rambda_mjs;
function identical$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>identical$$module$node_modules$rambda$dist$rambda_mjs(a,c):objectIs$$module$node_modules$rambda$dist$rambda_mjs(a,b)}function identity$$module$node_modules$rambda$dist$rambda_mjs(a){return a}function ifElseFn$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){return(...d)=>!0===("boolean"===typeof a?a:a(...d))?b(...d):c(...d)}
const ifElse$$module$node_modules$rambda$dist$rambda_mjs=curry$$module$node_modules$rambda$dist$rambda_mjs(ifElseFn$$module$node_modules$rambda$dist$rambda_mjs),inc$$module$node_modules$rambda$dist$rambda_mjs=a=>a+1;function indexByPath$$module$node_modules$rambda$dist$rambda_mjs(a,b){const c={};for(let d=0;d<b.length;d++){const e=b[d];c[path$$module$node_modules$rambda$dist$rambda_mjs(a,e)]=e}return c}
function indexBy$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return d=>indexBy$$module$node_modules$rambda$dist$rambda_mjs(a,d);if("string"===typeof a)return indexByPath$$module$node_modules$rambda$dist$rambda_mjs(a,b);const c={};for(let d=0;d<b.length;d++){const e=b[d];c[a(e)]=e}return c}
function indexOf$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>_indexOf$$module$node_modules$rambda$dist$rambda_mjs(a,c):_indexOf$$module$node_modules$rambda$dist$rambda_mjs(a,b)}function baseSlice$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){let d=-1,{length:e}=a;c=c>e?e:c;0>c&&(c+=e);e=b>c?0:c-b>>>0;b>>>=0;for(c=Array(e);++d<e;)c[d]=a[d+b];return c}
function init$$module$node_modules$rambda$dist$rambda_mjs(a){return"string"===typeof a?a.slice(0,-1):a.length?baseSlice$$module$node_modules$rambda$dist$rambda_mjs(a,0,-1):[]}function intersection$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>intersection$$module$node_modules$rambda$dist$rambda_mjs(a,c):filter$$module$node_modules$rambda$dist$rambda_mjs(c=>includes$$module$node_modules$rambda$dist$rambda_mjs(c,a),b)}
function intersperse$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return f=>intersperse$$module$node_modules$rambda$dist$rambda_mjs(a,f);let c=-1;const d=b.length,e=[];for(;++c<d;)c===d-1?e.push(b[c]):e.push(b[c],a);return e}function is$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>is$$module$node_modules$rambda$dist$rambda_mjs(a,c):null!=b&&b.constructor===a||b instanceof a}
function isEmpty$$module$node_modules$rambda$dist$rambda_mjs(a){const b=type$$module$node_modules$rambda$dist$rambda_mjs(a);return["Undefined","NaN","Number","Null"].includes(b)?!1:a?"Object"===b?0===Object.keys(a).length:"Array"===b?0===a.length:!1:!0}function isNil$$module$node_modules$rambda$dist$rambda_mjs(a){return void 0===a||null===a}
function join$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>join$$module$node_modules$rambda$dist$rambda_mjs(a,c):b.join(a)}function juxt$$module$node_modules$rambda$dist$rambda_mjs(a){return(...b)=>a.map(c=>c(...b))}function keys$$module$node_modules$rambda$dist$rambda_mjs(a){return Object.keys(a)}function last$$module$node_modules$rambda$dist$rambda_mjs(a){return"string"===typeof a?a[a.length-1]||"":a[a.length-1]}
function lastIndexOf$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>_lastIndexOf$$module$node_modules$rambda$dist$rambda_mjs(a,c):_lastIndexOf$$module$node_modules$rambda$dist$rambda_mjs(a,b)}function length$$module$node_modules$rambda$dist$rambda_mjs(a){return isArray$$module$node_modules$rambda$dist$rambda_mjs(a)||"string"===typeof a?a.length:NaN}
function lens$$module$node_modules$rambda$dist$rambda_mjs(a,b){return function(c){return function(d){return c(a(d)).map(e=>b(e,d))}}}function nth$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return d=>nth$$module$node_modules$rambda$dist$rambda_mjs(a,d);const c=0>a?b.length+a:a;return"[object String]"===Object.prototype.toString.call(b)?b.charAt(c):b[c]}
function updateFn$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){c=cloneList$$module$node_modules$rambda$dist$rambda_mjs(c);return-1===a?c.fill(b,a):c.fill(b,a,a+1)}const update$$module$node_modules$rambda$dist$rambda_mjs=curry$$module$node_modules$rambda$dist$rambda_mjs(updateFn$$module$node_modules$rambda$dist$rambda_mjs);
function lensIndex$$module$node_modules$rambda$dist$rambda_mjs(a){return lens$$module$node_modules$rambda$dist$rambda_mjs(nth$$module$node_modules$rambda$dist$rambda_mjs(a),update$$module$node_modules$rambda$dist$rambda_mjs(a))}function lensPath$$module$node_modules$rambda$dist$rambda_mjs(a){return lens$$module$node_modules$rambda$dist$rambda_mjs(path$$module$node_modules$rambda$dist$rambda_mjs(a),assocPath$$module$node_modules$rambda$dist$rambda_mjs(a))}
function lensProp$$module$node_modules$rambda$dist$rambda_mjs(a){return lens$$module$node_modules$rambda$dist$rambda_mjs(prop$$module$node_modules$rambda$dist$rambda_mjs(a),assoc$$module$node_modules$rambda$dist$rambda_mjs(a))}function match$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return d=>match$$module$node_modules$rambda$dist$rambda_mjs(a,d);const c=b.match(a);return null===c?[]:c}
function mathMod$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>mathMod$$module$node_modules$rambda$dist$rambda_mjs(a,c):!isInteger$$module$node_modules$rambda$dist$rambda_mjs(a)||!isInteger$$module$node_modules$rambda$dist$rambda_mjs(b)||1>b?NaN:(a%b+b)%b}function maxByFn$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){return a(c)>a(b)?c:b}const maxBy$$module$node_modules$rambda$dist$rambda_mjs=curry$$module$node_modules$rambda$dist$rambda_mjs(maxByFn$$module$node_modules$rambda$dist$rambda_mjs);
function sum$$module$node_modules$rambda$dist$rambda_mjs(a){return a.reduce((b,c)=>b+c,0)}function mean$$module$node_modules$rambda$dist$rambda_mjs(a){return sum$$module$node_modules$rambda$dist$rambda_mjs(a)/a.length}function median$$module$node_modules$rambda$dist$rambda_mjs(a){var b=a.length;if(0===b)return NaN;const c=2-b%2;b=(b-c)/2;return mean$$module$node_modules$rambda$dist$rambda_mjs(Array.prototype.slice.call(a,0).sort((d,e)=>d===e?0:d<e?-1:1).slice(b,b+c))}
function mergeRight$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>mergeRight$$module$node_modules$rambda$dist$rambda_mjs(a,c):Object.assign({},a||{},b||{})}function mergeAll$$module$node_modules$rambda$dist$rambda_mjs(a){let b={};map$$module$node_modules$rambda$dist$rambda_mjs(c=>{b=mergeRight$$module$node_modules$rambda$dist$rambda_mjs(b,c)},a);return b}
function mergeDeepRight$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return d=>mergeDeepRight$$module$node_modules$rambda$dist$rambda_mjs(a,d);const c=clone$$module$node_modules$rambda$dist$rambda_mjs(a);Object.keys(b).forEach(d=>{"Object"===type$$module$node_modules$rambda$dist$rambda_mjs(b[d])?"Object"===type$$module$node_modules$rambda$dist$rambda_mjs(a[d])?c[d]=mergeDeepRight$$module$node_modules$rambda$dist$rambda_mjs(a[d],b[d]):c[d]=b[d]:c[d]=b[d]});return c}
function mergeLeft$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>mergeLeft$$module$node_modules$rambda$dist$rambda_mjs(a,c):mergeRight$$module$node_modules$rambda$dist$rambda_mjs(b,a)}function mergeWithFn$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){const d={};Object.keys(b).forEach(e=>{d[e]=void 0===c[e]?b[e]:a(b[e],c[e])});Object.keys(c).forEach(e=>{void 0===d[e]&&(d[e]=void 0===b[e]?c[e]:a(b[e],c[e]))});return d}
const mergeWith$$module$node_modules$rambda$dist$rambda_mjs=curry$$module$node_modules$rambda$dist$rambda_mjs(mergeWithFn$$module$node_modules$rambda$dist$rambda_mjs);function min$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>min$$module$node_modules$rambda$dist$rambda_mjs(a,c):b<a?b:a}function minByFn$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){return a(c)<a(b)?c:b}const minBy$$module$node_modules$rambda$dist$rambda_mjs=curry$$module$node_modules$rambda$dist$rambda_mjs(minByFn$$module$node_modules$rambda$dist$rambda_mjs);
function ownKeys$$module$node_modules$rambda$dist$rambda_mjs(a,b){var c=Object.keys(a);if(Object.getOwnPropertySymbols){var d=Object.getOwnPropertySymbols(a);b&&(d=d.filter(function(e){return Object.getOwnPropertyDescriptor(a,e).enumerable}));c.push.apply(c,d)}return c}
function _objectSpread2$$module$node_modules$rambda$dist$rambda_mjs(a){for(var b=1;b<arguments.length;b++){var c=null!=arguments[b]?arguments[b]:{};b%2?ownKeys$$module$node_modules$rambda$dist$rambda_mjs(Object(c),!0).forEach(function(d){_defineProperty$$module$node_modules$rambda$dist$rambda_mjs(a,d,c[d])}):Object.getOwnPropertyDescriptors?Object.defineProperties(a,Object.getOwnPropertyDescriptors(c)):ownKeys$$module$node_modules$rambda$dist$rambda_mjs(Object(c)).forEach(function(d){Object.defineProperty(a,
d,Object.getOwnPropertyDescriptor(c,d))})}return a}function _defineProperty$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){b in a?Object.defineProperty(a,b,{value:c,enumerable:!0,configurable:!0,writable:!0}):a[b]=c;return a}function isIterable$$module$node_modules$rambda$dist$rambda_mjs(a){return Array.isArray(a)||"Object"===type$$module$node_modules$rambda$dist$rambda_mjs(a)}
function modifyFn$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){return isIterable$$module$node_modules$rambda$dist$rambda_mjs(c)&&void 0!==c[a]?isArray$$module$node_modules$rambda$dist$rambda_mjs(c)?updateFn$$module$node_modules$rambda$dist$rambda_mjs(a,b(c[a]),c):_objectSpread2$$module$node_modules$rambda$dist$rambda_mjs(_objectSpread2$$module$node_modules$rambda$dist$rambda_mjs({},c),{},{[a]:b(c[a])}):c}const modify$$module$node_modules$rambda$dist$rambda_mjs=curry$$module$node_modules$rambda$dist$rambda_mjs(modifyFn$$module$node_modules$rambda$dist$rambda_mjs);
function modifyPathFn$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){a=createPath$$module$node_modules$rambda$dist$rambda_mjs(a);if(1===a.length)return _objectSpread2$$module$node_modules$rambda$dist$rambda_mjs(_objectSpread2$$module$node_modules$rambda$dist$rambda_mjs({},c),{},{[a[0]]:b(c[a[0]])});if(void 0===path$$module$node_modules$rambda$dist$rambda_mjs(a,c))return c;b=modifyPath$$module$node_modules$rambda$dist$rambda_mjs(Array.prototype.slice.call(a,1),b,c[a[0]]);return b===c[a[0]]?c:assoc$$module$node_modules$rambda$dist$rambda_mjs(a[0],
b,c)}const modifyPath$$module$node_modules$rambda$dist$rambda_mjs=curry$$module$node_modules$rambda$dist$rambda_mjs(modifyPathFn$$module$node_modules$rambda$dist$rambda_mjs);function modulo$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>modulo$$module$node_modules$rambda$dist$rambda_mjs(a,c):a%b}
function moveFn$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){if(0>a||0>b)throw Error("Rambda.move does not support negative indexes");if(a>c.length-1||b>c.length-1)return c;const d=cloneList$$module$node_modules$rambda$dist$rambda_mjs(c);d[a]=c[b];d[b]=c[a];return d}const move$$module$node_modules$rambda$dist$rambda_mjs=curry$$module$node_modules$rambda$dist$rambda_mjs(moveFn$$module$node_modules$rambda$dist$rambda_mjs);
function multiply$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>multiply$$module$node_modules$rambda$dist$rambda_mjs(a,c):a*b}function negate$$module$node_modules$rambda$dist$rambda_mjs(a){return-a}function none$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return c=>none$$module$node_modules$rambda$dist$rambda_mjs(a,c);for(let c=0;c<b.length;c++)if(a(b[c]))return!1;return!0}
function not$$module$node_modules$rambda$dist$rambda_mjs(a){return!a}function objOf$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>objOf$$module$node_modules$rambda$dist$rambda_mjs(a,c):{[a]:b}}function of$$module$node_modules$rambda$dist$rambda_mjs(a){return[a]}
function omit$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return e=>omit$$module$node_modules$rambda$dist$rambda_mjs(a,e);if(null!==b&&void 0!==b){var c=createPath$$module$node_modules$rambda$dist$rambda_mjs(a,","),d={};for(const e in b)c.includes(e)||(d[e]=b[e]);return d}}
function on$$module$node_modules$rambda$dist$rambda_mjs(a,b,c,d){return 3===arguments.length?e=>on$$module$node_modules$rambda$dist$rambda_mjs(a,b,c,e):2===arguments.length?(e,f)=>on$$module$node_modules$rambda$dist$rambda_mjs(a,b,e,f):a(b(c),b(d))}function onceFn$$module$node_modules$rambda$dist$rambda_mjs(a,b){let c;return function(){a&&(c=a.apply(b||this,arguments),a=null);return c}}
function once$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length){const c=onceFn$$module$node_modules$rambda$dist$rambda_mjs(a,b);return curry$$module$node_modules$rambda$dist$rambda_mjs(c)}return onceFn$$module$node_modules$rambda$dist$rambda_mjs(a,b)}function or$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>or$$module$node_modules$rambda$dist$rambda_mjs(a,c):a||b}const Identity$$module$node_modules$rambda$dist$rambda_mjs=a=>({x:a,map:b=>Identity$$module$node_modules$rambda$dist$rambda_mjs(b(a))});
function overFn$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){return a(d=>Identity$$module$node_modules$rambda$dist$rambda_mjs(b(d)))(c).x}const over$$module$node_modules$rambda$dist$rambda_mjs=curry$$module$node_modules$rambda$dist$rambda_mjs(overFn$$module$node_modules$rambda$dist$rambda_mjs);
function partial$$module$node_modules$rambda$dist$rambda_mjs(a,...b){const c=a.length;return(...d)=>b.length+d.length>=c?a(...b,...d):partial$$module$node_modules$rambda$dist$rambda_mjs(a,...[...b,...d])}function partialObject$$module$node_modules$rambda$dist$rambda_mjs(a,b){return c=>a(mergeDeepRight$$module$node_modules$rambda$dist$rambda_mjs(c,b))}
function partitionObject$$module$node_modules$rambda$dist$rambda_mjs(a,b){const c={},d={};Object.entries(b).forEach(([e,f])=>{a(f,e)?c[e]=f:d[e]=f});return[c,d]}function partitionArray$$module$node_modules$rambda$dist$rambda_mjs(a,b,c=!1){const d=[],e=[];let f=-1;for(;f++<b.length-1;)(c?a(b[f],f):a(b[f]))?d.push(b[f]):e.push(b[f]);return[d,e]}
function partition$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>partition$$module$node_modules$rambda$dist$rambda_mjs(a,c):isArray$$module$node_modules$rambda$dist$rambda_mjs(b)?partitionArray$$module$node_modules$rambda$dist$rambda_mjs(a,b):partitionObject$$module$node_modules$rambda$dist$rambda_mjs(a,b)}
function pathEqFn$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){return equals$$module$node_modules$rambda$dist$rambda_mjs(path$$module$node_modules$rambda$dist$rambda_mjs(a,c),b)}const pathEq$$module$node_modules$rambda$dist$rambda_mjs=curry$$module$node_modules$rambda$dist$rambda_mjs(pathEqFn$$module$node_modules$rambda$dist$rambda_mjs);
function pathOrFn$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){return defaultTo$$module$node_modules$rambda$dist$rambda_mjs(a,path$$module$node_modules$rambda$dist$rambda_mjs(b,c))}const pathOr$$module$node_modules$rambda$dist$rambda_mjs=curry$$module$node_modules$rambda$dist$rambda_mjs(pathOrFn$$module$node_modules$rambda$dist$rambda_mjs);
function paths$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>paths$$module$node_modules$rambda$dist$rambda_mjs(a,c):a.map(c=>path$$module$node_modules$rambda$dist$rambda_mjs(c,b))}
function pick$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return f=>pick$$module$node_modules$rambda$dist$rambda_mjs(a,f);if(null!==b&&void 0!==b){for(var c=createPath$$module$node_modules$rambda$dist$rambda_mjs(a,","),d={},e=0;e<c.length;)c[e]in b&&(d[c[e]]=b[c[e]]),e++;return d}}
function pickAll$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return f=>pickAll$$module$node_modules$rambda$dist$rambda_mjs(a,f);if(null!==b&&void 0!==b){for(var c=createPath$$module$node_modules$rambda$dist$rambda_mjs(a,","),d={},e=0;e<c.length;)d[c[e]]=c[e]in b?b[c[e]]:void 0,e++;return d}}
function pluck$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return d=>pluck$$module$node_modules$rambda$dist$rambda_mjs(a,d);const c=[];map$$module$node_modules$rambda$dist$rambda_mjs(d=>{void 0!==d[a]&&c.push(d[a])},b);return c}function prepend$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>prepend$$module$node_modules$rambda$dist$rambda_mjs(a,c):"string"===typeof b?[a].concat(b.split("")):[a].concat(b)}
const product$$module$node_modules$rambda$dist$rambda_mjs=reduce$$module$node_modules$rambda$dist$rambda_mjs(multiply$$module$node_modules$rambda$dist$rambda_mjs,1);function propEqFn$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){return c?equals$$module$node_modules$rambda$dist$rambda_mjs(b,prop$$module$node_modules$rambda$dist$rambda_mjs(a,c)):!1}const propEq$$module$node_modules$rambda$dist$rambda_mjs=curry$$module$node_modules$rambda$dist$rambda_mjs(propEqFn$$module$node_modules$rambda$dist$rambda_mjs);
function propIsFn$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){return is$$module$node_modules$rambda$dist$rambda_mjs(a,c[b])}const propIs$$module$node_modules$rambda$dist$rambda_mjs=curry$$module$node_modules$rambda$dist$rambda_mjs(propIsFn$$module$node_modules$rambda$dist$rambda_mjs);function propOrFn$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){return c?defaultTo$$module$node_modules$rambda$dist$rambda_mjs(a,c[b]):a}const propOr$$module$node_modules$rambda$dist$rambda_mjs=curry$$module$node_modules$rambda$dist$rambda_mjs(propOrFn$$module$node_modules$rambda$dist$rambda_mjs);
function props$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return c=>props$$module$node_modules$rambda$dist$rambda_mjs(a,c);if(!isArray$$module$node_modules$rambda$dist$rambda_mjs(a))throw Error("propsToPick is not a list");return mapArray$$module$node_modules$rambda$dist$rambda_mjs(c=>b[c],a)}function propSatisfiesFn$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){return a(prop$$module$node_modules$rambda$dist$rambda_mjs(b,c))}
const propSatisfies$$module$node_modules$rambda$dist$rambda_mjs=curry$$module$node_modules$rambda$dist$rambda_mjs(propSatisfiesFn$$module$node_modules$rambda$dist$rambda_mjs);
function range$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return e=>range$$module$node_modules$rambda$dist$rambda_mjs(a,e);if(Number.isNaN(Number(a))||Number.isNaN(Number(b)))throw new TypeError("Both arguments to range must be numbers");if(b<a)return[];const c=b-a,d=Array(c);for(let e=0;e<c;e++)d[e]=a+e;return d}
function reject$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>reject$$module$node_modules$rambda$dist$rambda_mjs(a,c):filter$$module$node_modules$rambda$dist$rambda_mjs(c=>!a(c),b)}function repeat$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>repeat$$module$node_modules$rambda$dist$rambda_mjs(a,c):Array(b).fill(a)}function replaceFn$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){return c.replace(a,b)}
const replace$$module$node_modules$rambda$dist$rambda_mjs=curry$$module$node_modules$rambda$dist$rambda_mjs(replaceFn$$module$node_modules$rambda$dist$rambda_mjs);function reverse$$module$node_modules$rambda$dist$rambda_mjs(a){return"string"===typeof a?a.split("").reverse().join(""):a.slice().reverse()}function setFn$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){return over$$module$node_modules$rambda$dist$rambda_mjs(a,always$$module$node_modules$rambda$dist$rambda_mjs(b),c)}
const set$$module$node_modules$rambda$dist$rambda_mjs=curry$$module$node_modules$rambda$dist$rambda_mjs(setFn$$module$node_modules$rambda$dist$rambda_mjs);function sliceFn$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){return c.slice(a,b)}const slice$$module$node_modules$rambda$dist$rambda_mjs=curry$$module$node_modules$rambda$dist$rambda_mjs(sliceFn$$module$node_modules$rambda$dist$rambda_mjs);
function sort$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>sort$$module$node_modules$rambda$dist$rambda_mjs(a,c):cloneList$$module$node_modules$rambda$dist$rambda_mjs(b).sort(a)}function sortBy$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>sortBy$$module$node_modules$rambda$dist$rambda_mjs(a,c):cloneList$$module$node_modules$rambda$dist$rambda_mjs(b).sort((c,d)=>{c=a(c);d=a(d);return c===d?0:c<d?-1:1})}
function split$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>split$$module$node_modules$rambda$dist$rambda_mjs(a,c):b.split(a)}function maybe$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){b=a&&"Function"===type$$module$node_modules$rambda$dist$rambda_mjs(b)?b():b;c=a||"Function"!==type$$module$node_modules$rambda$dist$rambda_mjs(c)?c:c();return a?b:c}
function take$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>take$$module$node_modules$rambda$dist$rambda_mjs(a,c):0>a?b.slice():"string"===typeof b?b.slice(0,a):baseSlice$$module$node_modules$rambda$dist$rambda_mjs(b,0,a)}
function splitAt$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return d=>splitAt$$module$node_modules$rambda$dist$rambda_mjs(a,d);if(!b)throw new TypeError(\`Cannot read property 'slice' of \${b}\`);if(!isArray$$module$node_modules$rambda$dist$rambda_mjs(b)&&"string"!==typeof b)return[[],[]];const c=maybe$$module$node_modules$rambda$dist$rambda_mjs(0>a,0>b.length+a?0:b.length+a,a);return[take$$module$node_modules$rambda$dist$rambda_mjs(c,b),drop$$module$node_modules$rambda$dist$rambda_mjs(c,
b)]}function splitEvery$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return e=>splitEvery$$module$node_modules$rambda$dist$rambda_mjs(a,e);if(1>a)throw Error("First argument to splitEvery must be a positive integer");const c=[];let d=0;for(;d<b.length;)c.push(b.slice(d,d+=a));return c}
function splitWhen$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return g=>splitWhen$$module$node_modules$rambda$dist$rambda_mjs(a,g);if(!b)throw new TypeError(\`Cannot read property 'length' of \${b}\`);const c=[],d=[];let e=!1,f=-1;for(;f++<b.length-1;)e?d.push(b[f]):a(b[f])?(d.push(b[f]),e=!0):c.push(b[f]);return[c,d]}
function startsWith$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return d=>startsWith$$module$node_modules$rambda$dist$rambda_mjs(a,d);if("string"===typeof b)return b.startsWith(a);if(!isArray$$module$node_modules$rambda$dist$rambda_mjs(a))return!1;let c=!0;return a.filter((d,e)=>{if(!c)return!1;(d=equals$$module$node_modules$rambda$dist$rambda_mjs(d,b[e]))||(c=!1);return d}).length===a.length}
function subtract$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>subtract$$module$node_modules$rambda$dist$rambda_mjs(a,c):a-b}
function symmetricDifference$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>symmetricDifference$$module$node_modules$rambda$dist$rambda_mjs(a,c):concat$$module$node_modules$rambda$dist$rambda_mjs(filter$$module$node_modules$rambda$dist$rambda_mjs(c=>!includes$$module$node_modules$rambda$dist$rambda_mjs(c,b),a),filter$$module$node_modules$rambda$dist$rambda_mjs(c=>!includes$$module$node_modules$rambda$dist$rambda_mjs(c,a),b))}
function T$$module$node_modules$rambda$dist$rambda_mjs(){return!0}function tail$$module$node_modules$rambda$dist$rambda_mjs(a){return drop$$module$node_modules$rambda$dist$rambda_mjs(1,a)}
function takeLast$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return e=>takeLast$$module$node_modules$rambda$dist$rambda_mjs(a,e);const c=b.length;if(0>a)return b.slice();let d=a>c?c:a;return"string"===typeof b?b.slice(c-d):baseSlice$$module$node_modules$rambda$dist$rambda_mjs(b,c-d,c)}
function takeLastWhile$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return f=>takeLastWhile$$module$node_modules$rambda$dist$rambda_mjs(a,f);if(0===b.length)return b;let c=!1;const d=[];let e=b.length;for(;!c||0===e;)e--,!1===a(b[e])?c=!0:c||d.push(b[e]);return isArray$$module$node_modules$rambda$dist$rambda_mjs(b)?d.reverse():d.reverse().join("")}
function takeWhile$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return g=>takeWhile$$module$node_modules$rambda$dist$rambda_mjs(a,g);const c=isArray$$module$node_modules$rambda$dist$rambda_mjs(b);if(!c&&"string"!==typeof b)throw Error("\`iterable\` is neither list nor a string");let d=!0;const e=[];let f=-1;for(;f++<b.length-1;)a(b[f])?d&&e.push(b[f]):d&&(d=!1);return c?e:e.join("")}
function tap$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return c=>tap$$module$node_modules$rambda$dist$rambda_mjs(a,c);a(b);return b}function test$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return c=>test$$module$node_modules$rambda$dist$rambda_mjs(a,c);if("string"===typeof a)throw new TypeError(\`\\u2018test\\u2019 requires a value of type RegExp as its first argument; received "\${a}"\`);return-1!==b.search(a)}
function times$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return c=>times$$module$node_modules$rambda$dist$rambda_mjs(a,c);if(!isInteger$$module$node_modules$rambda$dist$rambda_mjs(b)||0>b)throw new RangeError("n must be an integer");return map$$module$node_modules$rambda$dist$rambda_mjs(a,range$$module$node_modules$rambda$dist$rambda_mjs(0,b))}function toLower$$module$node_modules$rambda$dist$rambda_mjs(a){return a.toLowerCase()}
function toPairs$$module$node_modules$rambda$dist$rambda_mjs(a){return Object.entries(a)}function toString$$module$node_modules$rambda$dist$rambda_mjs(a){return a.toString()}function toUpper$$module$node_modules$rambda$dist$rambda_mjs(a){return a.toUpperCase()}function transpose$$module$node_modules$rambda$dist$rambda_mjs(a){return a.reduce((b,c)=>{c.forEach((d,e)=>isArray$$module$node_modules$rambda$dist$rambda_mjs(b[e])?b[e].push(d):b.push([d]));return b},[])}
function trim$$module$node_modules$rambda$dist$rambda_mjs(a){return a.trim()}const isFunction$$module$node_modules$rambda$dist$rambda_mjs=a=>["Promise","Function"].includes(type$$module$node_modules$rambda$dist$rambda_mjs(a));
function tryCatch$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(!isFunction$$module$node_modules$rambda$dist$rambda_mjs(a))throw Error(\`R.tryCatch | fn '\${a}'\`);const c=isFunction$$module$node_modules$rambda$dist$rambda_mjs(b);return(...d)=>{try{return a(...d)}catch(e){return c?b(e,...d):b}}}function unapply$$module$node_modules$rambda$dist$rambda_mjs(a){return function(...b){return a.call(this,b)}}
function union$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return d=>union$$module$node_modules$rambda$dist$rambda_mjs(a,d);const c=cloneList$$module$node_modules$rambda$dist$rambda_mjs(a);b.forEach(d=>{includes$$module$node_modules$rambda$dist$rambda_mjs(d,a)||c.push(d)});return c}
function uniqBy$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return d=>uniqBy$$module$node_modules$rambda$dist$rambda_mjs(a,d);const c=new Set;return b.filter(d=>{if(c.has(a(d)))return!1;c.add(a(d));return!0})}function includesWith$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){let d=!1,e=-1;for(;++e<c.length&&!d;)a(b,c[e])&&(d=!0);return d}
function uniqWith$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return e=>uniqWith$$module$node_modules$rambda$dist$rambda_mjs(a,e);let c=-1;const d=[];for(;++c<b.length;){const e=b[c];includesWith$$module$node_modules$rambda$dist$rambda_mjs(a,e,d)||d.push(e)}return d}function unless$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>unless$$module$node_modules$rambda$dist$rambda_mjs(a,c):c=>a(c)?c:b(c)}
function unwind$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>unwind$$module$node_modules$rambda$dist$rambda_mjs(a,c):isArray$$module$node_modules$rambda$dist$rambda_mjs(b[a])?mapArray$$module$node_modules$rambda$dist$rambda_mjs(c=>_objectSpread2$$module$node_modules$rambda$dist$rambda_mjs(_objectSpread2$$module$node_modules$rambda$dist$rambda_mjs({},b),{},{[a]:c}),b[a]):[b]}
function values$$module$node_modules$rambda$dist$rambda_mjs(a){return"Object"!==type$$module$node_modules$rambda$dist$rambda_mjs(a)?[]:Object.values(a)}const Const$$module$node_modules$rambda$dist$rambda_mjs=a=>({x:a,map:b=>Const$$module$node_modules$rambda$dist$rambda_mjs(a)});function view$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>view$$module$node_modules$rambda$dist$rambda_mjs(a,c):a(Const$$module$node_modules$rambda$dist$rambda_mjs)(b).x}
function whenFn$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){return a(c)?b(c):c}const when$$module$node_modules$rambda$dist$rambda_mjs=curry$$module$node_modules$rambda$dist$rambda_mjs(whenFn$$module$node_modules$rambda$dist$rambda_mjs);function where$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(void 0===b)return d=>where$$module$node_modules$rambda$dist$rambda_mjs(a,d);let c=!0;for(const d in a){if(!c)continue;const e=a[d](b[d]);c&&!1===e&&(c=!1)}return c}
function whereAny$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(void 0===b)return c=>whereAny$$module$node_modules$rambda$dist$rambda_mjs(a,c);for(const c in a)if(a[c](b[c]))return!0;return!1}
function whereEq$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return d=>whereEq$$module$node_modules$rambda$dist$rambda_mjs(a,d);const c=filter$$module$node_modules$rambda$dist$rambda_mjs((d,e)=>equals$$module$node_modules$rambda$dist$rambda_mjs(d,b[e]),a);return Object.keys(c).length===Object.keys(a).length}
function without$$module$node_modules$rambda$dist$rambda_mjs(a,b){return void 0===b?c=>without$$module$node_modules$rambda$dist$rambda_mjs(a,c):reduce$$module$node_modules$rambda$dist$rambda_mjs((c,d)=>-1<_indexOf$$module$node_modules$rambda$dist$rambda_mjs(d,a)?c:c.concat(d),[],b)}function xor$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>xor$$module$node_modules$rambda$dist$rambda_mjs(a,c):!!a&&!b||!!b&&!a}
function zip$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return e=>zip$$module$node_modules$rambda$dist$rambda_mjs(a,e);const c=[],d=Math.min(a.length,b.length);for(let e=0;e<d;e++)c[e]=[a[e],b[e]];return c}function zipObj$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>zipObj$$module$node_modules$rambda$dist$rambda_mjs(a,c):take$$module$node_modules$rambda$dist$rambda_mjs(b.length,a).reduce((c,d,e)=>{c[d]=b[e];return c},{})}
function zipWithFn$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){return take$$module$node_modules$rambda$dist$rambda_mjs(b.length>c.length?c.length:b.length,b).map((d,e)=>a(d,c[e]))}const zipWith$$module$node_modules$rambda$dist$rambda_mjs=curry$$module$node_modules$rambda$dist$rambda_mjs(zipWithFn$$module$node_modules$rambda$dist$rambda_mjs);var module$node_modules$rambda$dist$rambda_mjs={};module$node_modules$rambda$dist$rambda_mjs.F=F$$module$node_modules$rambda$dist$rambda_mjs;
module$node_modules$rambda$dist$rambda_mjs.T=T$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.__findHighestArity=__findHighestArity$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs._arity=_arity$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs._indexOf=_indexOf$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs._lastIndexOf=_lastIndexOf$$module$node_modules$rambda$dist$rambda_mjs;
module$node_modules$rambda$dist$rambda_mjs._pipe=_pipe$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.add=add$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.adjust=adjust$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.all=all$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.allPass=allPass$$module$node_modules$rambda$dist$rambda_mjs;
module$node_modules$rambda$dist$rambda_mjs.always=always$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.and=and$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.any=any$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.anyPass=anyPass$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.append=append$$module$node_modules$rambda$dist$rambda_mjs;
module$node_modules$rambda$dist$rambda_mjs.apply=apply$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.applySpec=applySpec$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.assoc=assoc$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.assocPath=assocPath$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.bind=bind$$module$node_modules$rambda$dist$rambda_mjs;
module$node_modules$rambda$dist$rambda_mjs.both=both$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.chain=chain$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.clamp=clamp$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.clone=clone$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.complement=complement$$module$node_modules$rambda$dist$rambda_mjs;
module$node_modules$rambda$dist$rambda_mjs.compose=compose$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.concat=concat$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.cond=cond$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.converge=converge$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.count=count$$module$node_modules$rambda$dist$rambda_mjs;
module$node_modules$rambda$dist$rambda_mjs.countBy=countBy$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.curry=curry$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.curryN=curryN$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.dec=dec$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.defaultTo=defaultTo$$module$node_modules$rambda$dist$rambda_mjs;
module$node_modules$rambda$dist$rambda_mjs.difference=difference$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.dissoc=dissoc$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.divide=divide$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.drop=drop$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.dropLast=dropLast$$module$node_modules$rambda$dist$rambda_mjs;
module$node_modules$rambda$dist$rambda_mjs.dropLastWhile=dropLastWhile$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.dropRepeats=dropRepeats$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.dropRepeatsWith=dropRepeatsWith$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.dropWhile=dropWhile$$module$node_modules$rambda$dist$rambda_mjs;
module$node_modules$rambda$dist$rambda_mjs.either=either$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.endsWith=endsWith$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.eqProps=eqProps$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.equals=equals$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.evolve=evolve$$module$node_modules$rambda$dist$rambda_mjs;
module$node_modules$rambda$dist$rambda_mjs.evolveArray=evolveArray$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.evolveObject=evolveObject$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.filter=filter$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.filterArray=filterArray$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.filterObject=filterObject$$module$node_modules$rambda$dist$rambda_mjs;
module$node_modules$rambda$dist$rambda_mjs.find=find$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.findIndex=findIndex$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.findLast=findLast$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.findLastIndex=findLastIndex$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.flatten=flatten$$module$node_modules$rambda$dist$rambda_mjs;
module$node_modules$rambda$dist$rambda_mjs.flip=flip$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.forEach=forEach$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.fromPairs=fromPairs$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.groupBy=groupBy$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.groupWith=groupWith$$module$node_modules$rambda$dist$rambda_mjs;
module$node_modules$rambda$dist$rambda_mjs.has=has$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.hasPath=hasPath$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.head=head$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.identical=identical$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.identity=identity$$module$node_modules$rambda$dist$rambda_mjs;
module$node_modules$rambda$dist$rambda_mjs.ifElse=ifElse$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.inc=inc$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.includes=includes$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.indexBy=indexBy$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.indexOf=indexOf$$module$node_modules$rambda$dist$rambda_mjs;
module$node_modules$rambda$dist$rambda_mjs.init=init$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.intersection=intersection$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.intersperse=intersperse$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.is=is$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.isEmpty=isEmpty$$module$node_modules$rambda$dist$rambda_mjs;
module$node_modules$rambda$dist$rambda_mjs.isNil=isNil$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.join=join$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.juxt=juxt$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.keys=keys$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.last=last$$module$node_modules$rambda$dist$rambda_mjs;
module$node_modules$rambda$dist$rambda_mjs.lastIndexOf=lastIndexOf$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.length=length$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.lens=lens$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.lensIndex=lensIndex$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.lensPath=lensPath$$module$node_modules$rambda$dist$rambda_mjs;
module$node_modules$rambda$dist$rambda_mjs.lensProp=lensProp$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.map=map$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.mapArray=mapArray$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.mapObjIndexed=mapObject$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.mapObject=mapObject$$module$node_modules$rambda$dist$rambda_mjs;
module$node_modules$rambda$dist$rambda_mjs.match=match$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.mathMod=mathMod$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.max=max$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.maxBy=maxBy$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.maxByFn=maxByFn$$module$node_modules$rambda$dist$rambda_mjs;
module$node_modules$rambda$dist$rambda_mjs.mean=mean$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.median=median$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.merge=mergeRight$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.mergeAll=mergeAll$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.mergeDeepRight=mergeDeepRight$$module$node_modules$rambda$dist$rambda_mjs;
module$node_modules$rambda$dist$rambda_mjs.mergeLeft=mergeLeft$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.mergeRight=mergeRight$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.mergeWith=mergeWith$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.min=min$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.minBy=minBy$$module$node_modules$rambda$dist$rambda_mjs;
module$node_modules$rambda$dist$rambda_mjs.minByFn=minByFn$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.modify=modify$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.modifyPath=modifyPath$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.modifyPathFn=modifyPathFn$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.modulo=modulo$$module$node_modules$rambda$dist$rambda_mjs;
module$node_modules$rambda$dist$rambda_mjs.move=move$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.multiply=multiply$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.negate=negate$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.none=none$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.not=not$$module$node_modules$rambda$dist$rambda_mjs;
module$node_modules$rambda$dist$rambda_mjs.nth=nth$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.objOf=objOf$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.of=of$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.omit=omit$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.on=on$$module$node_modules$rambda$dist$rambda_mjs;
module$node_modules$rambda$dist$rambda_mjs.once=once$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.or=or$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.over=over$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.partial=partial$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.partialObject=partialObject$$module$node_modules$rambda$dist$rambda_mjs;
module$node_modules$rambda$dist$rambda_mjs.partition=partition$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.partitionArray=partitionArray$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.partitionObject=partitionObject$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.path=path$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.pathEq=pathEq$$module$node_modules$rambda$dist$rambda_mjs;
module$node_modules$rambda$dist$rambda_mjs.pathOr=pathOr$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.paths=paths$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.pick=pick$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.pickAll=pickAll$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.pipe=pipe$$module$node_modules$rambda$dist$rambda_mjs;
module$node_modules$rambda$dist$rambda_mjs.pluck=pluck$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.prepend=prepend$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.product=product$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.prop=prop$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.propEq=propEq$$module$node_modules$rambda$dist$rambda_mjs;
module$node_modules$rambda$dist$rambda_mjs.propIs=propIs$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.propOr=propOr$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.propSatisfies=propSatisfies$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.props=props$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.range=range$$module$node_modules$rambda$dist$rambda_mjs;
module$node_modules$rambda$dist$rambda_mjs.reduce=reduce$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.reduceFn=reduceFn$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.reduceStopper=reduceStopper$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.reject=reject$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.repeat=repeat$$module$node_modules$rambda$dist$rambda_mjs;
module$node_modules$rambda$dist$rambda_mjs.replace=replace$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.reverse=reverse$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.set=set$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.slice=slice$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.sort=sort$$module$node_modules$rambda$dist$rambda_mjs;
module$node_modules$rambda$dist$rambda_mjs.sortBy=sortBy$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.split=split$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.splitAt=splitAt$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.splitEvery=splitEvery$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.splitWhen=splitWhen$$module$node_modules$rambda$dist$rambda_mjs;
module$node_modules$rambda$dist$rambda_mjs.startsWith=startsWith$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.subtract=subtract$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.sum=sum$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.symmetricDifference=symmetricDifference$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.tail=tail$$module$node_modules$rambda$dist$rambda_mjs;
module$node_modules$rambda$dist$rambda_mjs.take=take$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.takeLast=takeLast$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.takeLastWhile=takeLastWhile$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.takeWhile=takeWhile$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.tap=tap$$module$node_modules$rambda$dist$rambda_mjs;
module$node_modules$rambda$dist$rambda_mjs.test=test$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.times=times$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.toLower=toLower$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.toPairs=toPairs$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.toString=toString$$module$node_modules$rambda$dist$rambda_mjs;
module$node_modules$rambda$dist$rambda_mjs.toUpper=toUpper$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.transpose=transpose$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.trim=trim$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.tryCatch=tryCatch$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.type=type$$module$node_modules$rambda$dist$rambda_mjs;
module$node_modules$rambda$dist$rambda_mjs.unapply=unapply$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.union=union$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.uniq=uniq$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.uniqBy=uniqBy$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.uniqWith=uniqWith$$module$node_modules$rambda$dist$rambda_mjs;
module$node_modules$rambda$dist$rambda_mjs.unless=unless$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.unwind=unwind$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.update=update$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.updateFn=updateFn$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.values=values$$module$node_modules$rambda$dist$rambda_mjs;
module$node_modules$rambda$dist$rambda_mjs.view=view$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.when=when$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.where=where$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.whereAny=whereAny$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.whereEq=whereEq$$module$node_modules$rambda$dist$rambda_mjs;
module$node_modules$rambda$dist$rambda_mjs.without=without$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.xor=xor$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.zip=zip$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.zipObj=zipObj$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.zipWith=zipWith$$module$node_modules$rambda$dist$rambda_mjs;const csoundSetMidiCallbacks$$module$src$modules$rtmidi=a=>b=>{a.exports.csoundSetMidiCallbacks(b)},csoundGetMIDIDevList$$module$src$modules$rtmidi=a=>(b,c)=>{const {buffer:d}=a.wasi.memory,e=a.exports.csoundGetMIDIDevList(b,void 0,c?1:0);if(0===e)return[];const f=sizeofStruct$$module$src$utils$native_sizes(CS_MIDIDEVICE$$module$src$structures),g=a.exports.allocCsMidiDeviceStruct(e);a.exports.csoundGetMIDIDevList(b,g,c?1:0);const h=new Uint8Array(d,g,f*e);b=range$$module$node_modules$rambda$dist$rambda_mjs(0,
e).map(k=>structBufferToObject$$module$src$utils$structure_buffer_to_object(CS_MIDIDEVICE$$module$src$structures,h.subarray(k*f,f)));a.exports.freeCsMidiDeviceStruct(g);return b};csoundGetMIDIDevList$$module$src$modules$rtmidi.toString=()=>"getMIDIDevList = async (isOutput) => Object;";
const csoundGetRtMidiName$$module$src$modules$rtmidi=a=>b=>{var {buffer:c}=a.wasi.memory;b=a.exports.getRtMidiName(b);c=new Uint8Array(c,b,128);return trimNull$$module$src$utils$trim_null(uint2String$$module$src$utils$text_encoders(c))||""};csoundGetRtMidiName$$module$src$modules$rtmidi.toString=()=>"getRtMidiName = async () => String;";
const csoundGetMidiOutFileName$$module$src$modules$rtmidi=a=>b=>{var {buffer:c}=a.wasi.memory;b=a.exports.getMidiOutFileName(b);c=new Uint8Array(c,b,128);b&&0<b.length&&freeStringPtr$$module$src$utils$string_pointers(a,b);return trimNull$$module$src$utils$trim_null(uint2String$$module$src$utils$text_encoders(c))||""},_isRequestingRtMidiInput$$module$src$modules$rtmidi=a=>b=>a.exports.isRequestingRtMidiInput(b),csoundPushMidiMessage$$module$src$modules$rtmidi=a=>(b,c,d,e)=>{a.exports.pushMidiMessage(b,
c,d,e)};csoundPushMidiMessage$$module$src$modules$rtmidi.toString=()=>"midiMessage = async (status, data1, data2) => undefined;";var module$src$modules$rtmidi={};module$src$modules$rtmidi._isRequestingRtMidiInput=_isRequestingRtMidiInput$$module$src$modules$rtmidi;module$src$modules$rtmidi.csoundGetMIDIDevList=csoundGetMIDIDevList$$module$src$modules$rtmidi;module$src$modules$rtmidi.csoundGetMidiOutFileName=csoundGetMidiOutFileName$$module$src$modules$rtmidi;
module$src$modules$rtmidi.csoundGetRtMidiName=csoundGetRtMidiName$$module$src$modules$rtmidi;module$src$modules$rtmidi.csoundPushMidiMessage=csoundPushMidiMessage$$module$src$modules$rtmidi;module$src$modules$rtmidi.csoundSetMidiCallbacks=csoundSetMidiCallbacks$$module$src$modules$rtmidi;const csoundInputMessage$$module$src$modules$control_events=a=>(b,c)=>{c=string2ptr$$module$src$utils$string_pointers(a,c);b=a.exports.csoundInputMessage(b,c);freeStringPtr$$module$src$utils$string_pointers(a,c);return b};csoundInputMessage$$module$src$modules$control_events.toString=()=>"inputMessage = async (scoreEvent) => Number;";
const csoundInputMessageAsync$$module$src$modules$control_events=a=>(b,c)=>{c=string2ptr$$module$src$utils$string_pointers(a,c);b=a.exports.csoundInputMessageAsync(b,c);freeStringPtr$$module$src$utils$string_pointers(a,c);return b};csoundInputMessageAsync$$module$src$modules$control_events.toString=()=>"inputMessageAsync = async (scoreEvent) => Number;";
const csoundGetControlChannel$$module$src$modules$control_events=a=>(b,c)=>{c=string2ptr$$module$src$utils$string_pointers(a,c);b=a.exports.csoundGetControlChannelWasi(b,c);freeStringPtr$$module$src$utils$string_pointers(a,c);return b};csoundGetControlChannel$$module$src$modules$control_events.toString=()=>"getControlChannel = async (channelName) => Number;";
const csoundSetControlChannel$$module$src$modules$control_events=a=>(b,c,d)=>{c=string2ptr$$module$src$utils$string_pointers(a,c);a.exports.csoundSetControlChannel(b,c,d);freeStringPtr$$module$src$utils$string_pointers(a,c)};csoundSetControlChannel$$module$src$modules$control_events.toString=()=>"setControlChannel = async (channelName, value) => void;";
const csoundGetStringChannel$$module$src$modules$control_events=a=>(b,c)=>{c=string2ptr$$module$src$utils$string_pointers(a,c);b=a.exports.csoundGetStringChannelWasi(b,c);const d=ptr2string$$module$src$utils$string_pointers(a,b);freeStringPtr$$module$src$utils$string_pointers(a,c);freeStringPtr$$module$src$utils$string_pointers(a,b);return d};csoundGetStringChannel$$module$src$modules$control_events.toString=()=>"getStringChannel = async (channelName) => String;";
const csoundSetStringChannel$$module$src$modules$control_events=a=>(b,c,d)=>{c=string2ptr$$module$src$utils$string_pointers(a,c);d=string2ptr$$module$src$utils$string_pointers(a,d);a.exports.csoundSetStringChannel(b,c,d);freeStringPtr$$module$src$utils$string_pointers(a,c);freeStringPtr$$module$src$utils$string_pointers(a,d)};csoundSetStringChannel$$module$src$modules$control_events.toString=()=>"setStringChannel = async (channelName, value) => void;";var module$src$modules$control_events={};
module$src$modules$control_events.csoundGetControlChannel=csoundGetControlChannel$$module$src$modules$control_events;module$src$modules$control_events.csoundGetStringChannel=csoundGetStringChannel$$module$src$modules$control_events;module$src$modules$control_events.csoundInputMessage=csoundInputMessage$$module$src$modules$control_events;module$src$modules$control_events.csoundInputMessageAsync=csoundInputMessageAsync$$module$src$modules$control_events;
module$src$modules$control_events.csoundSetControlChannel=csoundSetControlChannel$$module$src$modules$control_events;module$src$modules$control_events.csoundSetStringChannel=csoundSetStringChannel$$module$src$modules$control_events;const csoundGetOutputName$$module$src$modules$general_io=a=>b=>{var {buffer:c}=a.wasi.memory;b=a.exports.csoundGetOutputName(b);c=new Uint8Array(c,b,64);return trimNull$$module$src$utils$trim_null(uint2String$$module$src$utils$text_encoders(c))||""};csoundGetOutputName$$module$src$modules$general_io.toString=()=>"getOutputName = async () => String;";
const csoundGetInputName$$module$src$modules$general_io=a=>b=>{var {buffer:c}=a.wasi.memory;b=a.exports.csoundGetInputName(b);c=new Uint8Array(c,b,64);return trimNull$$module$src$utils$trim_null(uint2String$$module$src$utils$text_encoders(c))||""};csoundGetInputName$$module$src$modules$general_io.toString=()=>"getInputName = async (csound) => String;";var module$src$modules$general_io={};module$src$modules$general_io.csoundGetInputName=csoundGetInputName$$module$src$modules$general_io;
module$src$modules$general_io.csoundGetOutputName=csoundGetOutputName$$module$src$modules$general_io;const csoundAppendEnv$$module$src$modules$extra=a=>(b,c,d)=>{c=string2ptr$$module$src$utils$string_pointers(a,c);d=string2ptr$$module$src$utils$string_pointers(a,d);b=a.exports.csoundAppendEnv(b,c,d);freeStringPtr$$module$src$utils$string_pointers(a,c);freeStringPtr$$module$src$utils$string_pointers(a,d);return b};csoundAppendEnv$$module$src$modules$extra.toString=()=>"appendEnv = async (csound, variable, value) => Number;";const csoundShouldDaemonize$$module$src$modules$extra=a=>b=>a.exports.csoundShouldDaemonize(b);
var module$src$modules$extra={};module$src$modules$extra.csoundAppendEnv=csoundAppendEnv$$module$src$modules$extra;module$src$modules$extra.csoundShouldDaemonize=csoundShouldDaemonize$$module$src$modules$extra;const csoundIsScorePending$$module$src$modules$score_handling=a=>b=>a.exports.csoundIsScorePending(b);csoundIsScorePending$$module$src$modules$score_handling.toString=()=>"isScorePending = async () => Number;";const csoundSetScorePending$$module$src$modules$score_handling=a=>(b,c)=>a.exports.csoundSetScorePending(b,c);csoundSetScorePending$$module$src$modules$score_handling.toString=()=>"setScorePending = async (pending) => Number;";
const csoundReadScore$$module$src$modules$score_handling=a=>(b,c)=>{c=string2ptr$$module$src$utils$string_pointers(a,c);b=a.exports.csoundReadScore(b,c);freeStringPtr$$module$src$utils$string_pointers(a,c);return b};csoundReadScore$$module$src$modules$score_handling.toString=()=>"readScore = async (score) => Number;";const csoundGetScoreTime$$module$src$modules$score_handling=a=>b=>a.exports.csoundGetScoreTime(b);csoundGetScoreTime$$module$src$modules$score_handling.toString=()=>"getScoreTime = async () => Number;";
const csoundGetScoreOffsetSeconds$$module$src$modules$score_handling=a=>b=>a.exports.csoundGetScoreOffsetSeconds(b);csoundGetScoreOffsetSeconds$$module$src$modules$score_handling.toString=()=>"getScoreOffsetSeconds = async () => Number;";const csoundSetScoreOffsetSeconds$$module$src$modules$score_handling=a=>(b,c)=>a.exports.csoundSetScoreOffsetSeconds(b,c);csoundSetScoreOffsetSeconds$$module$src$modules$score_handling.toString=()=>"setScoreOffsetSeconds = async () => Number;";
const csoundRewindScore$$module$src$modules$score_handling=a=>b=>a.exports.csoundRewindScore(b);csoundRewindScore$$module$src$modules$score_handling.toString=()=>"rewindScore = async () => undefined;";var module$src$modules$score_handling={};module$src$modules$score_handling.csoundGetScoreOffsetSeconds=csoundGetScoreOffsetSeconds$$module$src$modules$score_handling;module$src$modules$score_handling.csoundGetScoreTime=csoundGetScoreTime$$module$src$modules$score_handling;
module$src$modules$score_handling.csoundIsScorePending=csoundIsScorePending$$module$src$modules$score_handling;module$src$modules$score_handling.csoundReadScore=csoundReadScore$$module$src$modules$score_handling;module$src$modules$score_handling.csoundRewindScore=csoundRewindScore$$module$src$modules$score_handling;module$src$modules$score_handling.csoundSetScoreOffsetSeconds=csoundSetScoreOffsetSeconds$$module$src$modules$score_handling;module$src$modules$score_handling.csoundSetScorePending=csoundSetScorePending$$module$src$modules$score_handling;const csoundTableLength$$module$src$modules$table=a=>(b,c)=>a.exports.csoundTableLength(b,c);csoundTableLength$$module$src$modules$table.toString=()=>"tableLength = async (tableNum) => Number;";const csoundTableGet$$module$src$modules$table=a=>(b,c,d)=>a.exports.csoundTableGet(b,c,d);csoundTableGet$$module$src$modules$table.toString=()=>"tableGet = async (tableNum, tableIndex) => Number;";const csoundTableSet$$module$src$modules$table=a=>(b,c,d,e)=>a.exports.csoundTableSet(b,c,d,e);
csoundTableSet$$module$src$modules$table.toString=()=>"tableSet = async (tableNum, tableIndex, value) => undefined;";const csoundTableCopyIn$$module$src$modules$table=a=>(b,c,d)=>{const e=a.exports.allocFloatArray(d.length);(new Float64Array(a.wasi.memory.buffer,e,d.length)).set(d);a.exports.csoundTableCopyIn(b,c,e);a.exports.freeFloatArrayMem(e)};csoundTableCopyIn$$module$src$modules$table.toString=()=>"tableCopyIn = async (tableNum, float64Array) => undefined;";
const csoundTableCopyOut$$module$src$modules$table=a=>(b,c)=>{var d=a.exports.csoundTableLength(b,c);if(0<d){const e=a.exports.allocFloatArray(d);a.exports.csoundTableCopyOut(b,c,e);({buffer:b}=a.wasi.memory);d=new Float64Array(b,e,d);a.exports.freeFloatArrayMem(e);return Float64Array.from(d)}};csoundTableCopyOut$$module$src$modules$table.toString=()=>"tableCopyOut = async (tableNum) => ?Float64Array;";const csoundGetTable$$module$src$modules$table=csoundTableCopyOut$$module$src$modules$table;
csoundTableCopyOut$$module$src$modules$table.toString=csoundTableCopyOut$$module$src$modules$table.toString;const csoundGetTableArgs$$module$src$modules$table=a=>(b,c)=>{const d=a.exports.allocFloatArray(1024);a.exports.csoundGetTableArgs(b,d,c);({buffer:b}=a.wasi.memory);b=new Float64Array(b,d,1024);a.exports.freeFloatArrayMem(d);return b};csoundGetTableArgs$$module$src$modules$table.toString=()=>"getTableArgs = async (tableNum) => ?Float64Array;";
const csoundIsNamedGEN$$module$src$modules$table=a=>(b,c)=>a.exports.csoundIsNamedGEN(b,c);csoundIsNamedGEN$$module$src$modules$table.toString=()=>"isNamedGEN = async (tableNum) => number;";const csoundGetNamedGEN$$module$src$modules$table=a=>(b,c)=>{var d=a.exports.csoundIsNamedGEN(b,c);if(0<d){const e=a.exports.allocStringMem(d);a.exports.csoundGetNamedGEN(b,e,c,d);({buffer:b}=a.wasi.memory);d=new Uint8Array(b,e,d);return uint2String$$module$src$utils$text_encoders(d)}};
csoundGetNamedGEN$$module$src$modules$table.toString=()=>"getNamedGEN = async (tableNum) => ?string;";var module$src$modules$table={};module$src$modules$table.csoundGetNamedGEN=csoundGetNamedGEN$$module$src$modules$table;module$src$modules$table.csoundGetTable=csoundTableCopyOut$$module$src$modules$table;module$src$modules$table.csoundGetTableArgs=csoundGetTableArgs$$module$src$modules$table;module$src$modules$table.csoundIsNamedGEN=csoundIsNamedGEN$$module$src$modules$table;
module$src$modules$table.csoundTableCopyIn=csoundTableCopyIn$$module$src$modules$table;module$src$modules$table.csoundTableCopyOut=csoundTableCopyOut$$module$src$modules$table;module$src$modules$table.csoundTableGet=csoundTableGet$$module$src$modules$table;module$src$modules$table.csoundTableLength=csoundTableLength$$module$src$modules$table;module$src$modules$table.csoundTableSet=csoundTableSet$$module$src$modules$table;function writeFile$$module$src$filesystem$worker_fs(a){return(b,c,d)=>{b="string"===typeof d?encoder$$module$src$utils$text_encoders.encode(d):d;a.wasi.writeFile(c,b)}}writeFile$$module$src$filesystem$worker_fs.toString=()=>"async (path, data) => void";function appendFile$$module$src$filesystem$worker_fs(a){return(b,c,d)=>{b="string"===typeof d?encoder$$module$src$utils$text_encoders.encode(d):d;a.wasi.appendFile(c,b)}}appendFile$$module$src$filesystem$worker_fs.toString=()=>"async (path, data) => void";
function readFile$$module$src$filesystem$worker_fs(a){return(b,c)=>a.wasi.readFile(c)}readFile$$module$src$filesystem$worker_fs.toString=()=>"async (path) => ?Uint8Array";function unlink$$module$src$filesystem$worker_fs(a){return(b,c)=>a.wasi.unlink(c)}unlink$$module$src$filesystem$worker_fs.toString=()=>"async (path) => void";function readdir$$module$src$filesystem$worker_fs(a){return(b,c)=>a.wasi.readdir(c)}readdir$$module$src$filesystem$worker_fs.toString=()=>"async (path) => string[]";
function mkdir$$module$src$filesystem$worker_fs(a){return(b,c)=>a.wasi.mkdir(c)}mkdir$$module$src$filesystem$worker_fs.toString=()=>"async (path) => void";var module$src$filesystem$worker_fs={};module$src$filesystem$worker_fs.appendFile=appendFile$$module$src$filesystem$worker_fs;module$src$filesystem$worker_fs.mkdir=mkdir$$module$src$filesystem$worker_fs;module$src$filesystem$worker_fs.readFile=readFile$$module$src$filesystem$worker_fs;module$src$filesystem$worker_fs.readdir=readdir$$module$src$filesystem$worker_fs;
module$src$filesystem$worker_fs.unlink=unlink$$module$src$filesystem$worker_fs;module$src$filesystem$worker_fs.writeFile=writeFile$$module$src$filesystem$worker_fs;const api$$module$src$libcsound={csoundCreate:csoundCreate$$module$src$modules$instantiation,csoundDestroy:csoundDestroy$$module$src$modules$instantiation,csoundGetAPIVersion:csoundGetAPIVersion$$module$src$modules$instantiation,csoundGetVersion:csoundGetVersion$$module$src$modules$instantiation,csoundInitialize:csoundInitialize$$module$src$modules$instantiation,csoundParseOrc:csoundParseOrc$$module$src$modules$performance,csoundCompileTree:csoundCompileTree$$module$src$modules$performance,csoundCompileOrc:csoundCompileOrc$$module$src$modules$performance,
csoundEvalCode:csoundEvalCode$$module$src$modules$performance,csoundStart:csoundStart$$module$src$modules$performance,csoundCompileCsd:csoundCompileCsd$$module$src$modules$performance,csoundCompileCsdText:csoundCompileCsdText$$module$src$modules$performance,csoundPerform:csoundPerform$$module$src$modules$performance,csoundPerformKsmps:csoundPerformKsmps$$module$src$modules$performance,csoundPerformBuffer:csoundPerformBuffer$$module$src$modules$performance,csoundStop:csoundStop$$module$src$modules$performance,
csoundCleanup:csoundCleanup$$module$src$modules$performance,csoundReset:csoundReset$$module$src$modules$performance,csoundGetSr:csoundGetSr$$module$src$modules$attributes,csoundGetKr:csoundGetKr$$module$src$modules$attributes,csoundGetKsmps:csoundGetKsmps$$module$src$modules$attributes,csoundGetNchnls:csoundGetNchnls$$module$src$modules$attributes,csoundGetNchnlsInput:csoundGetNchnlsInput$$module$src$modules$attributes,csoundGet0dBFS:csoundGet0dBFS$$module$src$modules$attributes,csoundGetA4:csoundGetA4$$module$src$modules$attributes,
csoundGetCurrentTimeSamples:csoundGetCurrentTimeSamples$$module$src$modules$attributes,csoundGetSizeOfMYFLT:csoundGetSizeOfMYFLT$$module$src$modules$attributes,csoundSetOption:csoundSetOption$$module$src$modules$attributes,csoundSetParams:csoundSetParams$$module$src$modules$attributes,csoundGetParams:csoundGetParams$$module$src$modules$attributes,csoundGetDebug:csoundGetDebug$$module$src$modules$attributes,csoundSetDebug:csoundSetDebug$$module$src$modules$attributes,csoundGetInputBufferSize:csoundGetInputBufferSize$$module$src$modules$rtaudio,
csoundGetOutputBufferSize:csoundGetOutputBufferSize$$module$src$modules$rtaudio,csoundGetInputBuffer:csoundGetInputBuffer$$module$src$modules$rtaudio,csoundGetOutputBuffer:csoundGetOutputBuffer$$module$src$modules$rtaudio,csoundGetSpin:csoundGetSpin$$module$src$modules$rtaudio,csoundGetSpout:csoundGetSpout$$module$src$modules$rtaudio,csoundGetMIDIDevList:csoundGetMIDIDevList$$module$src$modules$rtmidi,csoundSetMidiCallbacks:csoundSetMidiCallbacks$$module$src$modules$rtmidi,csoundGetRtMidiName:csoundGetRtMidiName$$module$src$modules$rtmidi,
csoundGetMidiOutFileName:csoundGetMidiOutFileName$$module$src$modules$rtmidi,csoundPushMidiMessage:csoundPushMidiMessage$$module$src$modules$rtmidi,_isRequestingRtMidiInput:_isRequestingRtMidiInput$$module$src$modules$rtmidi,csoundInputMessage:csoundInputMessage$$module$src$modules$control_events,csoundInputMessageAsync:csoundInputMessageAsync$$module$src$modules$control_events,csoundGetControlChannel:csoundGetControlChannel$$module$src$modules$control_events,csoundSetControlChannel:csoundSetControlChannel$$module$src$modules$control_events,
csoundGetStringChannel:csoundGetStringChannel$$module$src$modules$control_events,csoundSetStringChannel:csoundSetStringChannel$$module$src$modules$control_events,csoundGetInputName:csoundGetInputName$$module$src$modules$general_io,csoundGetOutputName:csoundGetOutputName$$module$src$modules$general_io,csoundAppendEnv:csoundAppendEnv$$module$src$modules$extra,csoundShouldDaemonize:csoundShouldDaemonize$$module$src$modules$extra,csoundIsScorePending:csoundIsScorePending$$module$src$modules$score_handling,
csoundSetScorePending:csoundSetScorePending$$module$src$modules$score_handling,csoundReadScore:csoundReadScore$$module$src$modules$score_handling,csoundGetScoreTime:csoundGetScoreTime$$module$src$modules$score_handling,csoundGetScoreOffsetSeconds:csoundGetScoreOffsetSeconds$$module$src$modules$score_handling,csoundSetScoreOffsetSeconds:csoundSetScoreOffsetSeconds$$module$src$modules$score_handling,csoundRewindScore:csoundRewindScore$$module$src$modules$score_handling,csoundTableLength:csoundTableLength$$module$src$modules$table,
csoundTableGet:csoundTableGet$$module$src$modules$table,csoundTableSet:csoundTableSet$$module$src$modules$table,csoundTableCopyIn:csoundTableCopyIn$$module$src$modules$table,csoundTableCopyOut:csoundTableCopyOut$$module$src$modules$table,csoundGetTable:csoundTableCopyOut$$module$src$modules$table,csoundGetTableArgs:csoundGetTableArgs$$module$src$modules$table,csoundIsNamedGEN:csoundIsNamedGEN$$module$src$modules$table,csoundGetNamedGEN:csoundGetNamedGEN$$module$src$modules$table,fs:module$src$filesystem$worker_fs};
var $jscompDefaultExport$$module$src$libcsound=function(a){return mergeAll$$module$node_modules$rambda$dist$rambda_mjs([reduce$$module$node_modules$rambda$dist$rambda_mjs((b,c)=>assoc$$module$node_modules$rambda$dist$rambda_mjs(c,api$$module$src$libcsound[c](a),b),{},keys$$module$node_modules$rambda$dist$rambda_mjs(dissoc$$module$node_modules$rambda$dist$rambda_mjs("fs")(api$$module$src$libcsound))),reduce$$module$node_modules$rambda$dist$rambda_mjs((b,c)=>assoc$$module$node_modules$rambda$dist$rambda_mjs(c,
api$$module$src$libcsound.fs[c](a),b),{},keys$$module$node_modules$rambda$dist$rambda_mjs(module$src$filesystem$worker_fs))])},module$src$libcsound={};module$src$libcsound.api=api$$module$src$libcsound;module$src$libcsound.default=$jscompDefaultExport$$module$src$libcsound;const dlinit$$module$src$dlinit=(a,b,c,d)=>{if(b.exports.csoundModuleInit){var e=new WebAssembly.Global({value:"i32",mutable:!0},0),f=new WebAssembly.Global({value:"i32",mutable:!0},0),g=new WebAssembly.Global({value:"i32",mutable:!0},0);const h=new WebAssembly.Global({value:"i32",mutable:!0},0);let k=c.length;"function"===typeof b.exports.csoundModuleCreate&&(c.grow(1),e.value=k,c.set(k,b.exports.csoundModuleCreate),k+=1);"function"===typeof b.exports.csoundModuleInit&&(c.grow(1),f.value=k,c.set(k,
b.exports.csoundModuleInit),k+=1);"function"===typeof b.exports.csoundModuleDestroy&&(c.grow(1),g.value=k,c.set(k,b.exports.csoundModuleDestroy),k+=1);"function"===typeof b.exports.csoundModuleErrorCodeToString&&(c.grow(1),h.value=k,c.set(k,b.exports.csoundModuleErrorCodeToString));a.exports.csoundWasiLoadPlugin(d,e,f,g,h)}else b.exports.csound_opcode_init||b.exports.csound_fgen_init?(e=new WebAssembly.Global({value:"i32",mutable:!0},0),f=new WebAssembly.Global({value:"i32",mutable:!0},0),g=c.length,
"function"===typeof b.exports.csound_opcode_init&&(e.value=g,c.grow(1),c.set(g,b.exports.csound_opcode_init),g+=1),"function"===typeof b.exports.csound_fgen_init&&(f.value=g,c.grow(1),c.set(g,b.exports.csound_fgen_init)),a.exports.csoundWasiLoadOpcodeLibrary(d,f,e)):console.error("Plugin doesn't export nececcary functions to quality as csound plugin.")};var module$src$dlinit={};module$src$dlinit.dlinit=dlinit$$module$src$dlinit;void 0!==goog.global&&(goog.global={});goog.global.BigInt||(goog.global.BigInt=void 0===BigInt?Number:BigInt);
const WASI_ESUCCESS$$module$src$filesystem$constants=0,WASI_E2BIG$$module$src$filesystem$constants=1,WASI_EACCES$$module$src$filesystem$constants=2,WASI_EADDRINUSE$$module$src$filesystem$constants=3,WASI_EADDRNOTAVAIL$$module$src$filesystem$constants=4,WASI_EAFNOSUPPORT$$module$src$filesystem$constants=5,WASI_EAGAIN$$module$src$filesystem$constants=6,WASI_EALREADY$$module$src$filesystem$constants=7,WASI_EBADF$$module$src$filesystem$constants=8,WASI_EBADMSG$$module$src$filesystem$constants=9,WASI_EBUSY$$module$src$filesystem$constants=
10,WASI_ECANCELED$$module$src$filesystem$constants=11,WASI_ECHILD$$module$src$filesystem$constants=12,WASI_ECONNABORTED$$module$src$filesystem$constants=13,WASI_ECONNREFUSED$$module$src$filesystem$constants=14,WASI_ECONNRESET$$module$src$filesystem$constants=15,WASI_EDEADLK$$module$src$filesystem$constants=16,WASI_EDESTADDRREQ$$module$src$filesystem$constants=17,WASI_EDOM$$module$src$filesystem$constants=18,WASI_EDQUOT$$module$src$filesystem$constants=19,WASI_EEXIST$$module$src$filesystem$constants=
20,WASI_EFAULT$$module$src$filesystem$constants=21,WASI_EFBIG$$module$src$filesystem$constants=22,WASI_EHOSTUNREACH$$module$src$filesystem$constants=23,WASI_EIDRM$$module$src$filesystem$constants=24,WASI_EILSEQ$$module$src$filesystem$constants=25,WASI_EINPROGRESS$$module$src$filesystem$constants=26,WASI_EINTR$$module$src$filesystem$constants=27,WASI_EINVAL$$module$src$filesystem$constants=28,WASI_EIO$$module$src$filesystem$constants=29,WASI_EISCONN$$module$src$filesystem$constants=30,WASI_EISDIR$$module$src$filesystem$constants=
31,WASI_ELOOP$$module$src$filesystem$constants=32,WASI_EMFILE$$module$src$filesystem$constants=33,WASI_EMLINK$$module$src$filesystem$constants=34,WASI_EMSGSIZE$$module$src$filesystem$constants=35,WASI_EMULTIHOP$$module$src$filesystem$constants=36,WASI_ENAMETOOLONG$$module$src$filesystem$constants=37,WASI_ENETDOWN$$module$src$filesystem$constants=38,WASI_ENETRESET$$module$src$filesystem$constants=39,WASI_ENETUNREACH$$module$src$filesystem$constants=40,WASI_ENFILE$$module$src$filesystem$constants=41,
WASI_ENOBUFS$$module$src$filesystem$constants=42,WASI_ENODEV$$module$src$filesystem$constants=43,WASI_ENOENT$$module$src$filesystem$constants=44,WASI_ENOEXEC$$module$src$filesystem$constants=45,WASI_ENOLCK$$module$src$filesystem$constants=46,WASI_ENOLINK$$module$src$filesystem$constants=47,WASI_ENOMEM$$module$src$filesystem$constants=48,WASI_ENOMSG$$module$src$filesystem$constants=49,WASI_ENOPROTOOPT$$module$src$filesystem$constants=50,WASI_ENOSPC$$module$src$filesystem$constants=51,WASI_ENOSYS$$module$src$filesystem$constants=
52,WASI_ENOTCONN$$module$src$filesystem$constants=53,WASI_ENOTDIR$$module$src$filesystem$constants=54,WASI_ENOTEMPTY$$module$src$filesystem$constants=55,WASI_ENOTRECOVERABLE$$module$src$filesystem$constants=56,WASI_ENOTSOCK$$module$src$filesystem$constants=57,WASI_ENOTSUP$$module$src$filesystem$constants=58,WASI_ENOTTY$$module$src$filesystem$constants=59,WASI_ENXIO$$module$src$filesystem$constants=60,WASI_EOVERFLOW$$module$src$filesystem$constants=61,WASI_EOWNERDEAD$$module$src$filesystem$constants=
62,WASI_EPERM$$module$src$filesystem$constants=63,WASI_EPIPE$$module$src$filesystem$constants=64,WASI_EPROTO$$module$src$filesystem$constants=65,WASI_EPROTONOSUPPORT$$module$src$filesystem$constants=66,WASI_EPROTOTYPE$$module$src$filesystem$constants=67,WASI_ERANGE$$module$src$filesystem$constants=68,WASI_EROFS$$module$src$filesystem$constants=69,WASI_ESPIPE$$module$src$filesystem$constants=70,WASI_ESRCH$$module$src$filesystem$constants=71,WASI_ESTALE$$module$src$filesystem$constants=72,WASI_ETIMEDOUT$$module$src$filesystem$constants=
73,WASI_ETXTBSY$$module$src$filesystem$constants=74,WASI_EXDEV$$module$src$filesystem$constants=75,WASI_ENOTCAPABLE$$module$src$filesystem$constants=76,WASI_SIGABRT$$module$src$filesystem$constants=0,WASI_SIGALRM$$module$src$filesystem$constants=1,WASI_SIGBUS$$module$src$filesystem$constants=2,WASI_SIGCHLD$$module$src$filesystem$constants=3,WASI_SIGCONT$$module$src$filesystem$constants=4,WASI_SIGFPE$$module$src$filesystem$constants=5,WASI_SIGHUP$$module$src$filesystem$constants=6,WASI_SIGILL$$module$src$filesystem$constants=
7,WASI_SIGINT$$module$src$filesystem$constants=8,WASI_SIGKILL$$module$src$filesystem$constants=9,WASI_SIGPIPE$$module$src$filesystem$constants=10,WASI_SIGQUIT$$module$src$filesystem$constants=11,WASI_SIGSEGV$$module$src$filesystem$constants=12,WASI_SIGSTOP$$module$src$filesystem$constants=13,WASI_SIGTERM$$module$src$filesystem$constants=14,WASI_SIGTRAP$$module$src$filesystem$constants=15,WASI_SIGTSTP$$module$src$filesystem$constants=16,WASI_SIGTTIN$$module$src$filesystem$constants=17,WASI_SIGTTOU$$module$src$filesystem$constants=
18,WASI_SIGURG$$module$src$filesystem$constants=19,WASI_SIGUSR1$$module$src$filesystem$constants=20,WASI_SIGUSR2$$module$src$filesystem$constants=21,WASI_SIGVTALRM$$module$src$filesystem$constants=22,WASI_SIGXCPU$$module$src$filesystem$constants=23,WASI_SIGXFSZ$$module$src$filesystem$constants=24,WASI_FILETYPE_UNKNOWN$$module$src$filesystem$constants=0,WASI_FILETYPE_BLOCK_DEVICE$$module$src$filesystem$constants=1,WASI_FILETYPE_CHARACTER_DEVICE$$module$src$filesystem$constants=2,WASI_FILETYPE_DIRECTORY$$module$src$filesystem$constants=
3,WASI_FILETYPE_REGULAR_FILE$$module$src$filesystem$constants=4,WASI_FILETYPE_SOCKET_DGRAM$$module$src$filesystem$constants=5,WASI_FILETYPE_SOCKET_STREAM$$module$src$filesystem$constants=6,WASI_FILETYPE_SYMBOLIC_LINK$$module$src$filesystem$constants=7,WASI_FDFLAG_APPEND$$module$src$filesystem$constants=1,WASI_FDFLAG_DSYNC$$module$src$filesystem$constants=2,WASI_FDFLAG_NONBLOCK$$module$src$filesystem$constants=4,WASI_FDFLAG_RSYNC$$module$src$filesystem$constants=8,WASI_FDFLAG_SYNC$$module$src$filesystem$constants=
16,WASI_RIGHT_FD_DATASYNC$$module$src$filesystem$constants=goog.global.BigInt(1),WASI_RIGHT_FD_READ$$module$src$filesystem$constants=goog.global.BigInt(2),WASI_RIGHT_FD_SEEK$$module$src$filesystem$constants=goog.global.BigInt(4),WASI_RIGHT_FD_FDSTAT_SET_FLAGS$$module$src$filesystem$constants=goog.global.BigInt(8),WASI_RIGHT_FD_SYNC$$module$src$filesystem$constants=goog.global.BigInt(16),WASI_RIGHT_FD_TELL$$module$src$filesystem$constants=goog.global.BigInt(32),WASI_RIGHT_FD_WRITE$$module$src$filesystem$constants=
goog.global.BigInt(64),WASI_RIGHT_FD_ADVISE$$module$src$filesystem$constants=goog.global.BigInt(128),WASI_RIGHT_FD_ALLOCATE$$module$src$filesystem$constants=goog.global.BigInt(256),WASI_RIGHT_PATH_CREATE_DIRECTORY$$module$src$filesystem$constants=goog.global.BigInt(512),WASI_RIGHT_PATH_CREATE_FILE$$module$src$filesystem$constants=goog.global.BigInt(1024),WASI_RIGHT_PATH_LINK_SOURCE$$module$src$filesystem$constants=goog.global.BigInt(2048),WASI_RIGHT_PATH_LINK_TARGET$$module$src$filesystem$constants=
goog.global.BigInt(4096),WASI_RIGHT_PATH_OPEN$$module$src$filesystem$constants=goog.global.BigInt(8192),WASI_RIGHT_FD_READDIR$$module$src$filesystem$constants=goog.global.BigInt(16384),WASI_RIGHT_PATH_READLINK$$module$src$filesystem$constants=goog.global.BigInt(32768),WASI_RIGHT_PATH_RENAME_SOURCE$$module$src$filesystem$constants=goog.global.BigInt(65536),WASI_RIGHT_PATH_RENAME_TARGET$$module$src$filesystem$constants=goog.global.BigInt(131072),WASI_RIGHT_PATH_FILESTAT_GET$$module$src$filesystem$constants=
goog.global.BigInt(262144),WASI_RIGHT_PATH_FILESTAT_SET_SIZE$$module$src$filesystem$constants=goog.global.BigInt(524288),WASI_RIGHT_PATH_FILESTAT_SET_TIMES$$module$src$filesystem$constants=goog.global.BigInt(1048576),WASI_RIGHT_FD_FILESTAT_GET$$module$src$filesystem$constants=goog.global.BigInt(2097152),WASI_RIGHT_FD_FILESTAT_SET_SIZE$$module$src$filesystem$constants=goog.global.BigInt(4194304),WASI_RIGHT_FD_FILESTAT_SET_TIMES$$module$src$filesystem$constants=goog.global.BigInt(8388608),WASI_RIGHT_PATH_SYMLINK$$module$src$filesystem$constants=
goog.global.BigInt(16777216),WASI_RIGHT_PATH_REMOVE_DIRECTORY$$module$src$filesystem$constants=goog.global.BigInt(33554432),WASI_RIGHT_PATH_UNLINK_FILE$$module$src$filesystem$constants=goog.global.BigInt(67108864),WASI_RIGHT_POLL_FD_READWRITE$$module$src$filesystem$constants=goog.global.BigInt(134217728),WASI_RIGHT_SOCK_SHUTDOWN$$module$src$filesystem$constants=goog.global.BigInt(268435456),RIGHTS_ALL$$module$src$filesystem$constants=WASI_RIGHT_FD_DATASYNC$$module$src$filesystem$constants|WASI_RIGHT_FD_READ$$module$src$filesystem$constants|
WASI_RIGHT_FD_SEEK$$module$src$filesystem$constants|WASI_RIGHT_FD_FDSTAT_SET_FLAGS$$module$src$filesystem$constants|WASI_RIGHT_FD_SYNC$$module$src$filesystem$constants|WASI_RIGHT_FD_TELL$$module$src$filesystem$constants|WASI_RIGHT_FD_WRITE$$module$src$filesystem$constants|WASI_RIGHT_FD_ADVISE$$module$src$filesystem$constants|WASI_RIGHT_FD_ALLOCATE$$module$src$filesystem$constants|WASI_RIGHT_PATH_CREATE_DIRECTORY$$module$src$filesystem$constants|WASI_RIGHT_PATH_CREATE_FILE$$module$src$filesystem$constants|
WASI_RIGHT_PATH_LINK_SOURCE$$module$src$filesystem$constants|WASI_RIGHT_PATH_LINK_TARGET$$module$src$filesystem$constants|WASI_RIGHT_PATH_OPEN$$module$src$filesystem$constants|WASI_RIGHT_FD_READDIR$$module$src$filesystem$constants|WASI_RIGHT_PATH_READLINK$$module$src$filesystem$constants|WASI_RIGHT_PATH_RENAME_SOURCE$$module$src$filesystem$constants|WASI_RIGHT_PATH_RENAME_TARGET$$module$src$filesystem$constants|WASI_RIGHT_PATH_FILESTAT_GET$$module$src$filesystem$constants|WASI_RIGHT_PATH_FILESTAT_SET_SIZE$$module$src$filesystem$constants|
WASI_RIGHT_PATH_FILESTAT_SET_TIMES$$module$src$filesystem$constants|WASI_RIGHT_FD_FILESTAT_GET$$module$src$filesystem$constants|WASI_RIGHT_FD_FILESTAT_SET_TIMES$$module$src$filesystem$constants|WASI_RIGHT_FD_FILESTAT_SET_SIZE$$module$src$filesystem$constants|WASI_RIGHT_PATH_SYMLINK$$module$src$filesystem$constants|WASI_RIGHT_PATH_UNLINK_FILE$$module$src$filesystem$constants|WASI_RIGHT_PATH_REMOVE_DIRECTORY$$module$src$filesystem$constants|WASI_RIGHT_POLL_FD_READWRITE$$module$src$filesystem$constants|
WASI_RIGHT_SOCK_SHUTDOWN$$module$src$filesystem$constants,RIGHTS_BLOCK_DEVICE_BASE$$module$src$filesystem$constants=RIGHTS_ALL$$module$src$filesystem$constants,RIGHTS_BLOCK_DEVICE_INHERITING$$module$src$filesystem$constants=RIGHTS_ALL$$module$src$filesystem$constants,RIGHTS_CHARACTER_DEVICE_BASE$$module$src$filesystem$constants=RIGHTS_ALL$$module$src$filesystem$constants,RIGHTS_CHARACTER_DEVICE_INHERITING$$module$src$filesystem$constants=RIGHTS_ALL$$module$src$filesystem$constants,RIGHTS_REGULAR_FILE_BASE$$module$src$filesystem$constants=
WASI_RIGHT_FD_DATASYNC$$module$src$filesystem$constants|WASI_RIGHT_FD_READ$$module$src$filesystem$constants|WASI_RIGHT_FD_SEEK$$module$src$filesystem$constants|WASI_RIGHT_FD_FDSTAT_SET_FLAGS$$module$src$filesystem$constants|WASI_RIGHT_FD_SYNC$$module$src$filesystem$constants|WASI_RIGHT_FD_TELL$$module$src$filesystem$constants|WASI_RIGHT_FD_WRITE$$module$src$filesystem$constants|WASI_RIGHT_FD_ADVISE$$module$src$filesystem$constants|WASI_RIGHT_FD_ALLOCATE$$module$src$filesystem$constants|WASI_RIGHT_FD_FILESTAT_GET$$module$src$filesystem$constants|
WASI_RIGHT_FD_FILESTAT_SET_SIZE$$module$src$filesystem$constants|WASI_RIGHT_FD_FILESTAT_SET_TIMES$$module$src$filesystem$constants|WASI_RIGHT_POLL_FD_READWRITE$$module$src$filesystem$constants,RIGHTS_REGULAR_FILE_INHERITING$$module$src$filesystem$constants=goog.global.BigInt(0),RIGHTS_DIRECTORY_BASE$$module$src$filesystem$constants=WASI_RIGHT_FD_FDSTAT_SET_FLAGS$$module$src$filesystem$constants|WASI_RIGHT_FD_SYNC$$module$src$filesystem$constants|WASI_RIGHT_FD_ADVISE$$module$src$filesystem$constants|
WASI_RIGHT_PATH_CREATE_DIRECTORY$$module$src$filesystem$constants|WASI_RIGHT_PATH_CREATE_FILE$$module$src$filesystem$constants|WASI_RIGHT_PATH_LINK_SOURCE$$module$src$filesystem$constants|WASI_RIGHT_PATH_LINK_TARGET$$module$src$filesystem$constants|WASI_RIGHT_PATH_OPEN$$module$src$filesystem$constants|WASI_RIGHT_FD_READDIR$$module$src$filesystem$constants|WASI_RIGHT_PATH_READLINK$$module$src$filesystem$constants|WASI_RIGHT_PATH_RENAME_SOURCE$$module$src$filesystem$constants|WASI_RIGHT_PATH_RENAME_TARGET$$module$src$filesystem$constants|
WASI_RIGHT_PATH_FILESTAT_GET$$module$src$filesystem$constants|WASI_RIGHT_PATH_FILESTAT_SET_SIZE$$module$src$filesystem$constants|WASI_RIGHT_PATH_FILESTAT_SET_TIMES$$module$src$filesystem$constants|WASI_RIGHT_FD_FILESTAT_GET$$module$src$filesystem$constants|WASI_RIGHT_FD_FILESTAT_SET_TIMES$$module$src$filesystem$constants|WASI_RIGHT_PATH_SYMLINK$$module$src$filesystem$constants|WASI_RIGHT_PATH_UNLINK_FILE$$module$src$filesystem$constants|WASI_RIGHT_PATH_REMOVE_DIRECTORY$$module$src$filesystem$constants|
WASI_RIGHT_POLL_FD_READWRITE$$module$src$filesystem$constants,RIGHTS_DIRECTORY_INHERITING$$module$src$filesystem$constants=RIGHTS_DIRECTORY_BASE$$module$src$filesystem$constants|RIGHTS_REGULAR_FILE_BASE$$module$src$filesystem$constants,RIGHTS_SOCKET_BASE$$module$src$filesystem$constants=WASI_RIGHT_FD_READ$$module$src$filesystem$constants|WASI_RIGHT_FD_FDSTAT_SET_FLAGS$$module$src$filesystem$constants|WASI_RIGHT_FD_WRITE$$module$src$filesystem$constants|WASI_RIGHT_FD_FILESTAT_GET$$module$src$filesystem$constants|
WASI_RIGHT_POLL_FD_READWRITE$$module$src$filesystem$constants|WASI_RIGHT_SOCK_SHUTDOWN$$module$src$filesystem$constants,RIGHTS_SOCKET_INHERITING$$module$src$filesystem$constants=RIGHTS_ALL$$module$src$filesystem$constants,RIGHTS_TTY_BASE$$module$src$filesystem$constants=WASI_RIGHT_FD_READ$$module$src$filesystem$constants|WASI_RIGHT_FD_FDSTAT_SET_FLAGS$$module$src$filesystem$constants|WASI_RIGHT_FD_WRITE$$module$src$filesystem$constants|WASI_RIGHT_FD_FILESTAT_GET$$module$src$filesystem$constants|WASI_RIGHT_POLL_FD_READWRITE$$module$src$filesystem$constants,
RIGHTS_TTY_INHERITING$$module$src$filesystem$constants=goog.global.BigInt(0),WASI_CLOCK_REALTIME$$module$src$filesystem$constants=0,WASI_CLOCK_MONOTONIC$$module$src$filesystem$constants=1,WASI_CLOCK_PROCESS_CPUTIME_ID$$module$src$filesystem$constants=2,WASI_CLOCK_THREAD_CPUTIME_ID$$module$src$filesystem$constants=3,WASI_EVENTTYPE_CLOCK$$module$src$filesystem$constants=0,WASI_EVENTTYPE_FD_READ$$module$src$filesystem$constants=1,WASI_EVENTTYPE_FD_WRITE$$module$src$filesystem$constants=2,WASI_FILESTAT_SET_ATIM$$module$src$filesystem$constants=
1,WASI_FILESTAT_SET_ATIM_NOW$$module$src$filesystem$constants=2,WASI_FILESTAT_SET_MTIM$$module$src$filesystem$constants=4,WASI_FILESTAT_SET_MTIM_NOW$$module$src$filesystem$constants=8,WASI_O_CREAT$$module$src$filesystem$constants=1,WASI_O_DIRECTORY$$module$src$filesystem$constants=2,WASI_O_EXCL$$module$src$filesystem$constants=4,WASI_O_TRUNC$$module$src$filesystem$constants=8,WASI_PREOPENTYPE_DIR$$module$src$filesystem$constants=0,WASI_DIRCOOKIE_START$$module$src$filesystem$constants=0,WASI_STDIN_FILENO$$module$src$filesystem$constants=
0,WASI_STDOUT_FILENO$$module$src$filesystem$constants=1,WASI_STDERR_FILENO$$module$src$filesystem$constants=2,WASI_WHENCE_SET$$module$src$filesystem$constants=0,WASI_WHENCE_CUR$$module$src$filesystem$constants=1,WASI_WHENCE_END$$module$src$filesystem$constants=2;var module$src$filesystem$constants={};module$src$filesystem$constants.RIGHTS_ALL=RIGHTS_ALL$$module$src$filesystem$constants;module$src$filesystem$constants.RIGHTS_BLOCK_DEVICE_BASE=RIGHTS_ALL$$module$src$filesystem$constants;
module$src$filesystem$constants.RIGHTS_BLOCK_DEVICE_INHERITING=RIGHTS_ALL$$module$src$filesystem$constants;module$src$filesystem$constants.RIGHTS_CHARACTER_DEVICE_BASE=RIGHTS_ALL$$module$src$filesystem$constants;module$src$filesystem$constants.RIGHTS_CHARACTER_DEVICE_INHERITING=RIGHTS_ALL$$module$src$filesystem$constants;module$src$filesystem$constants.RIGHTS_DIRECTORY_BASE=RIGHTS_DIRECTORY_BASE$$module$src$filesystem$constants;module$src$filesystem$constants.RIGHTS_DIRECTORY_INHERITING=RIGHTS_DIRECTORY_INHERITING$$module$src$filesystem$constants;
module$src$filesystem$constants.RIGHTS_REGULAR_FILE_BASE=RIGHTS_REGULAR_FILE_BASE$$module$src$filesystem$constants;module$src$filesystem$constants.RIGHTS_REGULAR_FILE_INHERITING=RIGHTS_REGULAR_FILE_INHERITING$$module$src$filesystem$constants;module$src$filesystem$constants.RIGHTS_SOCKET_BASE=RIGHTS_SOCKET_BASE$$module$src$filesystem$constants;module$src$filesystem$constants.RIGHTS_SOCKET_INHERITING=RIGHTS_ALL$$module$src$filesystem$constants;module$src$filesystem$constants.RIGHTS_TTY_BASE=RIGHTS_TTY_BASE$$module$src$filesystem$constants;
module$src$filesystem$constants.RIGHTS_TTY_INHERITING=RIGHTS_TTY_INHERITING$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_CLOCK_MONOTONIC=WASI_CLOCK_MONOTONIC$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_CLOCK_PROCESS_CPUTIME_ID=WASI_CLOCK_PROCESS_CPUTIME_ID$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_CLOCK_REALTIME=WASI_CLOCK_REALTIME$$module$src$filesystem$constants;
module$src$filesystem$constants.WASI_CLOCK_THREAD_CPUTIME_ID=WASI_CLOCK_THREAD_CPUTIME_ID$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_DIRCOOKIE_START=WASI_DIRCOOKIE_START$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_E2BIG=WASI_E2BIG$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_EACCES=WASI_EACCES$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_EADDRINUSE=WASI_EADDRINUSE$$module$src$filesystem$constants;
module$src$filesystem$constants.WASI_EADDRNOTAVAIL=WASI_EADDRNOTAVAIL$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_EAFNOSUPPORT=WASI_EAFNOSUPPORT$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_EAGAIN=WASI_EAGAIN$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_EALREADY=WASI_EALREADY$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_EBADF=WASI_EBADF$$module$src$filesystem$constants;
module$src$filesystem$constants.WASI_EBADMSG=WASI_EBADMSG$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_EBUSY=WASI_EBUSY$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_ECANCELED=WASI_ECANCELED$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_ECHILD=WASI_ECHILD$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_ECONNABORTED=WASI_ECONNABORTED$$module$src$filesystem$constants;
module$src$filesystem$constants.WASI_ECONNREFUSED=WASI_ECONNREFUSED$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_ECONNRESET=WASI_ECONNRESET$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_EDEADLK=WASI_EDEADLK$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_EDESTADDRREQ=WASI_EDESTADDRREQ$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_EDOM=WASI_EDOM$$module$src$filesystem$constants;
module$src$filesystem$constants.WASI_EDQUOT=WASI_EDQUOT$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_EEXIST=WASI_EEXIST$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_EFAULT=WASI_EFAULT$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_EFBIG=WASI_EFBIG$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_EHOSTUNREACH=WASI_EHOSTUNREACH$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_EIDRM=WASI_EIDRM$$module$src$filesystem$constants;
module$src$filesystem$constants.WASI_EILSEQ=WASI_EILSEQ$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_EINPROGRESS=WASI_EINPROGRESS$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_EINTR=WASI_EINTR$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_EINVAL=WASI_EINVAL$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_EIO=WASI_EIO$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_EISCONN=WASI_EISCONN$$module$src$filesystem$constants;
module$src$filesystem$constants.WASI_EISDIR=WASI_EISDIR$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_ELOOP=WASI_ELOOP$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_EMFILE=WASI_EMFILE$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_EMLINK=WASI_EMLINK$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_EMSGSIZE=WASI_EMSGSIZE$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_EMULTIHOP=WASI_EMULTIHOP$$module$src$filesystem$constants;
module$src$filesystem$constants.WASI_ENAMETOOLONG=WASI_ENAMETOOLONG$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_ENETDOWN=WASI_ENETDOWN$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_ENETRESET=WASI_ENETRESET$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_ENETUNREACH=WASI_ENETUNREACH$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_ENFILE=WASI_ENFILE$$module$src$filesystem$constants;
module$src$filesystem$constants.WASI_ENOBUFS=WASI_ENOBUFS$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_ENODEV=WASI_ENODEV$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_ENOENT=WASI_ENOENT$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_ENOEXEC=WASI_ENOEXEC$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_ENOLCK=WASI_ENOLCK$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_ENOLINK=WASI_ENOLINK$$module$src$filesystem$constants;
module$src$filesystem$constants.WASI_ENOMEM=WASI_ENOMEM$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_ENOMSG=WASI_ENOMSG$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_ENOPROTOOPT=WASI_ENOPROTOOPT$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_ENOSPC=WASI_ENOSPC$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_ENOSYS=WASI_ENOSYS$$module$src$filesystem$constants;
module$src$filesystem$constants.WASI_ENOTCAPABLE=WASI_ENOTCAPABLE$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_ENOTCONN=WASI_ENOTCONN$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_ENOTDIR=WASI_ENOTDIR$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_ENOTEMPTY=WASI_ENOTEMPTY$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_ENOTRECOVERABLE=WASI_ENOTRECOVERABLE$$module$src$filesystem$constants;
module$src$filesystem$constants.WASI_ENOTSOCK=WASI_ENOTSOCK$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_ENOTSUP=WASI_ENOTSUP$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_ENOTTY=WASI_ENOTTY$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_ENXIO=WASI_ENXIO$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_EOVERFLOW=WASI_EOVERFLOW$$module$src$filesystem$constants;
module$src$filesystem$constants.WASI_EOWNERDEAD=WASI_EOWNERDEAD$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_EPERM=WASI_EPERM$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_EPIPE=WASI_EPIPE$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_EPROTO=WASI_EPROTO$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_EPROTONOSUPPORT=WASI_EPROTONOSUPPORT$$module$src$filesystem$constants;
module$src$filesystem$constants.WASI_EPROTOTYPE=WASI_EPROTOTYPE$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_ERANGE=WASI_ERANGE$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_EROFS=WASI_EROFS$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_ESPIPE=WASI_ESPIPE$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_ESRCH=WASI_ESRCH$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_ESTALE=WASI_ESTALE$$module$src$filesystem$constants;
module$src$filesystem$constants.WASI_ESUCCESS=WASI_ESUCCESS$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_ETIMEDOUT=WASI_ETIMEDOUT$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_ETXTBSY=WASI_ETXTBSY$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_EVENTTYPE_CLOCK=WASI_EVENTTYPE_CLOCK$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_EVENTTYPE_FD_READ=WASI_EVENTTYPE_FD_READ$$module$src$filesystem$constants;
module$src$filesystem$constants.WASI_EVENTTYPE_FD_WRITE=WASI_EVENTTYPE_FD_WRITE$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_EXDEV=WASI_EXDEV$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_FDFLAG_APPEND=WASI_FDFLAG_APPEND$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_FDFLAG_DSYNC=WASI_FDFLAG_DSYNC$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_FDFLAG_NONBLOCK=WASI_FDFLAG_NONBLOCK$$module$src$filesystem$constants;
module$src$filesystem$constants.WASI_FDFLAG_RSYNC=WASI_FDFLAG_RSYNC$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_FDFLAG_SYNC=WASI_FDFLAG_SYNC$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_FILESTAT_SET_ATIM=WASI_FILESTAT_SET_ATIM$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_FILESTAT_SET_ATIM_NOW=WASI_FILESTAT_SET_ATIM_NOW$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_FILESTAT_SET_MTIM=WASI_FILESTAT_SET_MTIM$$module$src$filesystem$constants;
module$src$filesystem$constants.WASI_FILESTAT_SET_MTIM_NOW=WASI_FILESTAT_SET_MTIM_NOW$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_FILETYPE_BLOCK_DEVICE=WASI_FILETYPE_BLOCK_DEVICE$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_FILETYPE_CHARACTER_DEVICE=WASI_FILETYPE_CHARACTER_DEVICE$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_FILETYPE_DIRECTORY=WASI_FILETYPE_DIRECTORY$$module$src$filesystem$constants;
module$src$filesystem$constants.WASI_FILETYPE_REGULAR_FILE=WASI_FILETYPE_REGULAR_FILE$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_FILETYPE_SOCKET_DGRAM=WASI_FILETYPE_SOCKET_DGRAM$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_FILETYPE_SOCKET_STREAM=WASI_FILETYPE_SOCKET_STREAM$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_FILETYPE_SYMBOLIC_LINK=WASI_FILETYPE_SYMBOLIC_LINK$$module$src$filesystem$constants;
module$src$filesystem$constants.WASI_FILETYPE_UNKNOWN=WASI_FILETYPE_UNKNOWN$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_O_CREAT=WASI_O_CREAT$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_O_DIRECTORY=WASI_O_DIRECTORY$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_O_EXCL=WASI_O_EXCL$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_O_TRUNC=WASI_O_TRUNC$$module$src$filesystem$constants;
module$src$filesystem$constants.WASI_PREOPENTYPE_DIR=WASI_PREOPENTYPE_DIR$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_RIGHT_FD_ADVISE=WASI_RIGHT_FD_ADVISE$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_RIGHT_FD_ALLOCATE=WASI_RIGHT_FD_ALLOCATE$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_RIGHT_FD_DATASYNC=WASI_RIGHT_FD_DATASYNC$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_RIGHT_FD_FDSTAT_SET_FLAGS=WASI_RIGHT_FD_FDSTAT_SET_FLAGS$$module$src$filesystem$constants;
module$src$filesystem$constants.WASI_RIGHT_FD_FILESTAT_GET=WASI_RIGHT_FD_FILESTAT_GET$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_RIGHT_FD_FILESTAT_SET_SIZE=WASI_RIGHT_FD_FILESTAT_SET_SIZE$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_RIGHT_FD_FILESTAT_SET_TIMES=WASI_RIGHT_FD_FILESTAT_SET_TIMES$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_RIGHT_FD_READ=WASI_RIGHT_FD_READ$$module$src$filesystem$constants;
module$src$filesystem$constants.WASI_RIGHT_FD_READDIR=WASI_RIGHT_FD_READDIR$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_RIGHT_FD_SEEK=WASI_RIGHT_FD_SEEK$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_RIGHT_FD_SYNC=WASI_RIGHT_FD_SYNC$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_RIGHT_FD_TELL=WASI_RIGHT_FD_TELL$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_RIGHT_FD_WRITE=WASI_RIGHT_FD_WRITE$$module$src$filesystem$constants;
module$src$filesystem$constants.WASI_RIGHT_PATH_CREATE_DIRECTORY=WASI_RIGHT_PATH_CREATE_DIRECTORY$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_RIGHT_PATH_CREATE_FILE=WASI_RIGHT_PATH_CREATE_FILE$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_RIGHT_PATH_FILESTAT_GET=WASI_RIGHT_PATH_FILESTAT_GET$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_RIGHT_PATH_FILESTAT_SET_SIZE=WASI_RIGHT_PATH_FILESTAT_SET_SIZE$$module$src$filesystem$constants;
module$src$filesystem$constants.WASI_RIGHT_PATH_FILESTAT_SET_TIMES=WASI_RIGHT_PATH_FILESTAT_SET_TIMES$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_RIGHT_PATH_LINK_SOURCE=WASI_RIGHT_PATH_LINK_SOURCE$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_RIGHT_PATH_LINK_TARGET=WASI_RIGHT_PATH_LINK_TARGET$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_RIGHT_PATH_OPEN=WASI_RIGHT_PATH_OPEN$$module$src$filesystem$constants;
module$src$filesystem$constants.WASI_RIGHT_PATH_READLINK=WASI_RIGHT_PATH_READLINK$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_RIGHT_PATH_REMOVE_DIRECTORY=WASI_RIGHT_PATH_REMOVE_DIRECTORY$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_RIGHT_PATH_RENAME_SOURCE=WASI_RIGHT_PATH_RENAME_SOURCE$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_RIGHT_PATH_RENAME_TARGET=WASI_RIGHT_PATH_RENAME_TARGET$$module$src$filesystem$constants;
module$src$filesystem$constants.WASI_RIGHT_PATH_SYMLINK=WASI_RIGHT_PATH_SYMLINK$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_RIGHT_PATH_UNLINK_FILE=WASI_RIGHT_PATH_UNLINK_FILE$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_RIGHT_POLL_FD_READWRITE=WASI_RIGHT_POLL_FD_READWRITE$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_RIGHT_SOCK_SHUTDOWN=WASI_RIGHT_SOCK_SHUTDOWN$$module$src$filesystem$constants;
module$src$filesystem$constants.WASI_SIGABRT=WASI_SIGABRT$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_SIGALRM=WASI_SIGALRM$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_SIGBUS=WASI_SIGBUS$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_SIGCHLD=WASI_SIGCHLD$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_SIGCONT=WASI_SIGCONT$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_SIGFPE=WASI_SIGFPE$$module$src$filesystem$constants;
module$src$filesystem$constants.WASI_SIGHUP=WASI_SIGHUP$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_SIGILL=WASI_SIGILL$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_SIGINT=WASI_SIGINT$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_SIGKILL=WASI_SIGKILL$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_SIGPIPE=WASI_SIGPIPE$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_SIGQUIT=WASI_SIGQUIT$$module$src$filesystem$constants;
module$src$filesystem$constants.WASI_SIGSEGV=WASI_SIGSEGV$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_SIGSTOP=WASI_SIGSTOP$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_SIGTERM=WASI_SIGTERM$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_SIGTRAP=WASI_SIGTRAP$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_SIGTSTP=WASI_SIGTSTP$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_SIGTTIN=WASI_SIGTTIN$$module$src$filesystem$constants;
module$src$filesystem$constants.WASI_SIGTTOU=WASI_SIGTTOU$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_SIGURG=WASI_SIGURG$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_SIGUSR1=WASI_SIGUSR1$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_SIGUSR2=WASI_SIGUSR2$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_SIGVTALRM=WASI_SIGVTALRM$$module$src$filesystem$constants;
module$src$filesystem$constants.WASI_SIGXCPU=WASI_SIGXCPU$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_SIGXFSZ=WASI_SIGXFSZ$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_STDERR_FILENO=WASI_STDERR_FILENO$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_STDIN_FILENO=WASI_STDIN_FILENO$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_STDOUT_FILENO=WASI_STDOUT_FILENO$$module$src$filesystem$constants;
module$src$filesystem$constants.WASI_WHENCE_CUR=WASI_WHENCE_CUR$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_WHENCE_END=WASI_WHENCE_END$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_WHENCE_SET=WASI_WHENCE_SET$$module$src$filesystem$constants;goog.debug={};function module$contents$goog$debug$Error_DebugError(a,b){if(Error.captureStackTrace)Error.captureStackTrace(this,module$contents$goog$debug$Error_DebugError);else{const c=Error().stack;c&&(this.stack=c)}a&&(this.message=String(a));void 0!==b&&(this.cause=b);this.reportErrorToServer=!0}goog.inherits(module$contents$goog$debug$Error_DebugError,Error);module$contents$goog$debug$Error_DebugError.prototype.name="CustomError";goog.debug.Error=module$contents$goog$debug$Error_DebugError;goog.dom={};goog.dom.NodeType={ELEMENT:1,ATTRIBUTE:2,TEXT:3,CDATA_SECTION:4,ENTITY_REFERENCE:5,ENTITY:6,PROCESSING_INSTRUCTION:7,COMMENT:8,DOCUMENT:9,DOCUMENT_TYPE:10,DOCUMENT_FRAGMENT:11,NOTATION:12};goog.asserts={};goog.asserts.ENABLE_ASSERTS=goog.DEBUG;function module$contents$goog$asserts_AssertionError(a,b){module$contents$goog$debug$Error_DebugError.call(this,module$contents$goog$asserts_subs(a,b));this.messagePattern=a}goog.inherits(module$contents$goog$asserts_AssertionError,module$contents$goog$debug$Error_DebugError);goog.asserts.AssertionError=module$contents$goog$asserts_AssertionError;module$contents$goog$asserts_AssertionError.prototype.name="AssertionError";
goog.asserts.DEFAULT_ERROR_HANDLER=function(a){throw a;};let module$contents$goog$asserts_errorHandler_=goog.asserts.DEFAULT_ERROR_HANDLER;function module$contents$goog$asserts_subs(a,b){a=a.split("%s");let c="";const d=a.length-1;for(let e=0;e<d;e++)c+=a[e]+(e<b.length?b[e]:"%s");return c+a[d]}
function module$contents$goog$asserts_doAssertFailure(a,b,c,d){let e="Assertion failed",f;c?(e+=": "+c,f=d):a&&(e+=": "+a,f=b);a=new module$contents$goog$asserts_AssertionError(""+e,f||[]);module$contents$goog$asserts_errorHandler_(a)}goog.asserts.setErrorHandler=function(a){goog.asserts.ENABLE_ASSERTS&&(module$contents$goog$asserts_errorHandler_=a)};
goog.asserts.assert=function(a,b,c){goog.asserts.ENABLE_ASSERTS&&!a&&module$contents$goog$asserts_doAssertFailure("",null,b,Array.prototype.slice.call(arguments,2));return a};goog.asserts.assertExists=function(a,b,c){goog.asserts.ENABLE_ASSERTS&&null==a&&module$contents$goog$asserts_doAssertFailure("Expected to exist: %s.",[a],b,Array.prototype.slice.call(arguments,2));return a};
goog.asserts.fail=function(a,b){goog.asserts.ENABLE_ASSERTS&&module$contents$goog$asserts_errorHandler_(new module$contents$goog$asserts_AssertionError("Failure"+(a?": "+a:""),Array.prototype.slice.call(arguments,1)))};goog.asserts.assertNumber=function(a,b,c){goog.asserts.ENABLE_ASSERTS&&"number"!==typeof a&&module$contents$goog$asserts_doAssertFailure("Expected number but got %s: %s.",[goog.typeOf(a),a],b,Array.prototype.slice.call(arguments,2));return a};
goog.asserts.assertString=function(a,b,c){goog.asserts.ENABLE_ASSERTS&&"string"!==typeof a&&module$contents$goog$asserts_doAssertFailure("Expected string but got %s: %s.",[goog.typeOf(a),a],b,Array.prototype.slice.call(arguments,2));return a};goog.asserts.assertFunction=function(a,b,c){goog.asserts.ENABLE_ASSERTS&&"function"!==typeof a&&module$contents$goog$asserts_doAssertFailure("Expected function but got %s: %s.",[goog.typeOf(a),a],b,Array.prototype.slice.call(arguments,2));return a};
goog.asserts.assertObject=function(a,b,c){goog.asserts.ENABLE_ASSERTS&&!goog.isObject(a)&&module$contents$goog$asserts_doAssertFailure("Expected object but got %s: %s.",[goog.typeOf(a),a],b,Array.prototype.slice.call(arguments,2));return a};goog.asserts.assertArray=function(a,b,c){goog.asserts.ENABLE_ASSERTS&&!Array.isArray(a)&&module$contents$goog$asserts_doAssertFailure("Expected array but got %s: %s.",[goog.typeOf(a),a],b,Array.prototype.slice.call(arguments,2));return a};
goog.asserts.assertBoolean=function(a,b,c){goog.asserts.ENABLE_ASSERTS&&"boolean"!==typeof a&&module$contents$goog$asserts_doAssertFailure("Expected boolean but got %s: %s.",[goog.typeOf(a),a],b,Array.prototype.slice.call(arguments,2));return a};
goog.asserts.assertElement=function(a,b,c){!goog.asserts.ENABLE_ASSERTS||goog.isObject(a)&&a.nodeType==goog.dom.NodeType.ELEMENT||module$contents$goog$asserts_doAssertFailure("Expected Element but got %s: %s.",[goog.typeOf(a),a],b,Array.prototype.slice.call(arguments,2));return a};
goog.asserts.assertInstanceof=function(a,b,c,d){!goog.asserts.ENABLE_ASSERTS||a instanceof b||module$contents$goog$asserts_doAssertFailure("Expected instanceof %s but got %s.",[module$contents$goog$asserts_getType(b),module$contents$goog$asserts_getType(a)],c,Array.prototype.slice.call(arguments,3));return a};
goog.asserts.assertFinite=function(a,b,c){!goog.asserts.ENABLE_ASSERTS||"number"==typeof a&&isFinite(a)||module$contents$goog$asserts_doAssertFailure("Expected %s to be a finite number but it is not.",[a],b,Array.prototype.slice.call(arguments,2));return a};
function module$contents$goog$asserts_getType(a){return a instanceof Function?a.displayName||a.name||"unknown type name":a instanceof Object?a.constructor.displayName||a.constructor.name||Object.prototype.toString.call(a):null===a?"null":typeof a};goog.array={};goog.NATIVE_ARRAY_PROTOTYPES=goog.TRUSTED_SITE;const module$contents$goog$array_ASSUME_NATIVE_FUNCTIONS=2012<goog.FEATURESET_YEAR;goog.array.ASSUME_NATIVE_FUNCTIONS=module$contents$goog$array_ASSUME_NATIVE_FUNCTIONS;function module$contents$goog$array_peek(a){return a[a.length-1]}goog.array.peek=module$contents$goog$array_peek;goog.array.last=module$contents$goog$array_peek;
const module$contents$goog$array_indexOf=goog.NATIVE_ARRAY_PROTOTYPES&&(module$contents$goog$array_ASSUME_NATIVE_FUNCTIONS||Array.prototype.indexOf)?function(a,b,c){goog.asserts.assert(null!=a.length);return Array.prototype.indexOf.call(a,b,c)}:function(a,b,c){c=null==c?0:0>c?Math.max(0,a.length+c):c;if("string"===typeof a)return"string"!==typeof b||1!=b.length?-1:a.indexOf(b,c);for(;c<a.length;c++)if(c in a&&a[c]===b)return c;return-1};goog.array.indexOf=module$contents$goog$array_indexOf;
const module$contents$goog$array_lastIndexOf=goog.NATIVE_ARRAY_PROTOTYPES&&(module$contents$goog$array_ASSUME_NATIVE_FUNCTIONS||Array.prototype.lastIndexOf)?function(a,b,c){goog.asserts.assert(null!=a.length);return Array.prototype.lastIndexOf.call(a,b,null==c?a.length-1:c)}:function(a,b,c){c=null==c?a.length-1:c;0>c&&(c=Math.max(0,a.length+c));if("string"===typeof a)return"string"!==typeof b||1!=b.length?-1:a.lastIndexOf(b,c);for(;0<=c;c--)if(c in a&&a[c]===b)return c;return-1};
goog.array.lastIndexOf=module$contents$goog$array_lastIndexOf;const module$contents$goog$array_forEach=goog.NATIVE_ARRAY_PROTOTYPES&&(module$contents$goog$array_ASSUME_NATIVE_FUNCTIONS||Array.prototype.forEach)?function(a,b,c){goog.asserts.assert(null!=a.length);Array.prototype.forEach.call(a,b,c)}:function(a,b,c){const d=a.length,e="string"===typeof a?a.split(""):a;for(let f=0;f<d;f++)f in e&&b.call(c,e[f],f,a)};goog.array.forEach=module$contents$goog$array_forEach;
function module$contents$goog$array_forEachRight(a,b,c){var d=a.length;const e="string"===typeof a?a.split(""):a;for(--d;0<=d;--d)d in e&&b.call(c,e[d],d,a)}goog.array.forEachRight=module$contents$goog$array_forEachRight;
const module$contents$goog$array_filter=goog.NATIVE_ARRAY_PROTOTYPES&&(module$contents$goog$array_ASSUME_NATIVE_FUNCTIONS||Array.prototype.filter)?function(a,b,c){goog.asserts.assert(null!=a.length);return Array.prototype.filter.call(a,b,c)}:function(a,b,c){const d=a.length,e=[];let f=0;const g="string"===typeof a?a.split(""):a;for(let h=0;h<d;h++)if(h in g){const k=g[h];b.call(c,k,h,a)&&(e[f++]=k)}return e};goog.array.filter=module$contents$goog$array_filter;
const module$contents$goog$array_map=goog.NATIVE_ARRAY_PROTOTYPES&&(module$contents$goog$array_ASSUME_NATIVE_FUNCTIONS||Array.prototype.map)?function(a,b,c){goog.asserts.assert(null!=a.length);return Array.prototype.map.call(a,b,c)}:function(a,b,c){const d=a.length,e=Array(d),f="string"===typeof a?a.split(""):a;for(let g=0;g<d;g++)g in f&&(e[g]=b.call(c,f[g],g,a));return e};goog.array.map=module$contents$goog$array_map;
const module$contents$goog$array_reduce=goog.NATIVE_ARRAY_PROTOTYPES&&(module$contents$goog$array_ASSUME_NATIVE_FUNCTIONS||Array.prototype.reduce)?function(a,b,c,d){goog.asserts.assert(null!=a.length);d&&(b=goog.bind(b,d));return Array.prototype.reduce.call(a,b,c)}:function(a,b,c,d){let e=c;module$contents$goog$array_forEach(a,function(f,g){e=b.call(d,e,f,g,a)});return e};goog.array.reduce=module$contents$goog$array_reduce;
const module$contents$goog$array_reduceRight=goog.NATIVE_ARRAY_PROTOTYPES&&(module$contents$goog$array_ASSUME_NATIVE_FUNCTIONS||Array.prototype.reduceRight)?function(a,b,c,d){goog.asserts.assert(null!=a.length);goog.asserts.assert(null!=b);d&&(b=goog.bind(b,d));return Array.prototype.reduceRight.call(a,b,c)}:function(a,b,c,d){let e=c;module$contents$goog$array_forEachRight(a,function(f,g){e=b.call(d,e,f,g,a)});return e};goog.array.reduceRight=module$contents$goog$array_reduceRight;
const module$contents$goog$array_some=goog.NATIVE_ARRAY_PROTOTYPES&&(module$contents$goog$array_ASSUME_NATIVE_FUNCTIONS||Array.prototype.some)?function(a,b,c){goog.asserts.assert(null!=a.length);return Array.prototype.some.call(a,b,c)}:function(a,b,c){const d=a.length,e="string"===typeof a?a.split(""):a;for(let f=0;f<d;f++)if(f in e&&b.call(c,e[f],f,a))return!0;return!1};goog.array.some=module$contents$goog$array_some;
const module$contents$goog$array_every=goog.NATIVE_ARRAY_PROTOTYPES&&(module$contents$goog$array_ASSUME_NATIVE_FUNCTIONS||Array.prototype.every)?function(a,b,c){goog.asserts.assert(null!=a.length);return Array.prototype.every.call(a,b,c)}:function(a,b,c){const d=a.length,e="string"===typeof a?a.split(""):a;for(let f=0;f<d;f++)if(f in e&&!b.call(c,e[f],f,a))return!1;return!0};goog.array.every=module$contents$goog$array_every;
function module$contents$goog$array_count(a,b,c){let d=0;module$contents$goog$array_forEach(a,function(e,f,g){b.call(c,e,f,g)&&++d},c);return d}goog.array.count=module$contents$goog$array_count;function module$contents$goog$array_find(a,b,c){b=module$contents$goog$array_findIndex(a,b,c);return 0>b?null:"string"===typeof a?a.charAt(b):a[b]}goog.array.find=module$contents$goog$array_find;
function module$contents$goog$array_findIndex(a,b,c){const d=a.length,e="string"===typeof a?a.split(""):a;for(let f=0;f<d;f++)if(f in e&&b.call(c,e[f],f,a))return f;return-1}goog.array.findIndex=module$contents$goog$array_findIndex;function module$contents$goog$array_findRight(a,b,c){b=module$contents$goog$array_findIndexRight(a,b,c);return 0>b?null:"string"===typeof a?a.charAt(b):a[b]}goog.array.findRight=module$contents$goog$array_findRight;
function module$contents$goog$array_findIndexRight(a,b,c){var d=a.length;const e="string"===typeof a?a.split(""):a;for(--d;0<=d;d--)if(d in e&&b.call(c,e[d],d,a))return d;return-1}goog.array.findIndexRight=module$contents$goog$array_findIndexRight;function module$contents$goog$array_contains(a,b){return 0<=module$contents$goog$array_indexOf(a,b)}goog.array.contains=module$contents$goog$array_contains;function module$contents$goog$array_isEmpty(a){return 0==a.length}goog.array.isEmpty=module$contents$goog$array_isEmpty;
function module$contents$goog$array_clear(a){if(!Array.isArray(a))for(let b=a.length-1;0<=b;b--)delete a[b];a.length=0}goog.array.clear=module$contents$goog$array_clear;function module$contents$goog$array_insert(a,b){module$contents$goog$array_contains(a,b)||a.push(b)}goog.array.insert=module$contents$goog$array_insert;function module$contents$goog$array_insertAt(a,b,c){module$contents$goog$array_splice(a,c,0,b)}goog.array.insertAt=module$contents$goog$array_insertAt;
function module$contents$goog$array_insertArrayAt(a,b,c){goog.partial(module$contents$goog$array_splice,a,c,0).apply(null,b)}goog.array.insertArrayAt=module$contents$goog$array_insertArrayAt;function module$contents$goog$array_insertBefore(a,b,c){let d;2==arguments.length||0>(d=module$contents$goog$array_indexOf(a,c))?a.push(b):module$contents$goog$array_insertAt(a,b,d)}goog.array.insertBefore=module$contents$goog$array_insertBefore;
function module$contents$goog$array_remove(a,b){b=module$contents$goog$array_indexOf(a,b);let c;(c=0<=b)&&module$contents$goog$array_removeAt(a,b);return c}goog.array.remove=module$contents$goog$array_remove;function module$contents$goog$array_removeLast(a,b){b=module$contents$goog$array_lastIndexOf(a,b);return 0<=b?(module$contents$goog$array_removeAt(a,b),!0):!1}goog.array.removeLast=module$contents$goog$array_removeLast;
function module$contents$goog$array_removeAt(a,b){goog.asserts.assert(null!=a.length);return 1==Array.prototype.splice.call(a,b,1).length}goog.array.removeAt=module$contents$goog$array_removeAt;function module$contents$goog$array_removeIf(a,b,c){b=module$contents$goog$array_findIndex(a,b,c);return 0<=b?(module$contents$goog$array_removeAt(a,b),!0):!1}goog.array.removeIf=module$contents$goog$array_removeIf;
function module$contents$goog$array_removeAllIf(a,b,c){let d=0;module$contents$goog$array_forEachRight(a,function(e,f){b.call(c,e,f,a)&&module$contents$goog$array_removeAt(a,f)&&d++});return d}goog.array.removeAllIf=module$contents$goog$array_removeAllIf;function module$contents$goog$array_concat(a){return Array.prototype.concat.apply([],arguments)}goog.array.concat=module$contents$goog$array_concat;function module$contents$goog$array_join(a){return Array.prototype.concat.apply([],arguments)}
goog.array.join=module$contents$goog$array_join;function module$contents$goog$array_toArray(a){const b=a.length;if(0<b){const c=Array(b);for(let d=0;d<b;d++)c[d]=a[d];return c}return[]}const module$contents$goog$array_clone=goog.array.toArray=module$contents$goog$array_toArray;goog.array.clone=module$contents$goog$array_toArray;
function module$contents$goog$array_extend(a,b){for(let c=1;c<arguments.length;c++){const d=arguments[c];if(goog.isArrayLike(d)){const e=a.length||0,f=d.length||0;a.length=e+f;for(let g=0;g<f;g++)a[e+g]=d[g]}else a.push(d)}}goog.array.extend=module$contents$goog$array_extend;function module$contents$goog$array_splice(a,b,c,d){goog.asserts.assert(null!=a.length);return Array.prototype.splice.apply(a,module$contents$goog$array_slice(arguments,1))}goog.array.splice=module$contents$goog$array_splice;
function module$contents$goog$array_slice(a,b,c){goog.asserts.assert(null!=a.length);return 2>=arguments.length?Array.prototype.slice.call(a,b):Array.prototype.slice.call(a,b,c)}goog.array.slice=module$contents$goog$array_slice;
function module$contents$goog$array_removeDuplicates(a,b,c){b=b||a;var d=function(g){return goog.isObject(g)?"o"+goog.getUid(g):(typeof g).charAt(0)+g};c=c||d;let e=d=0;const f={};for(;e<a.length;){const g=a[e++],h=c(g);Object.prototype.hasOwnProperty.call(f,h)||(f[h]=!0,b[d++]=g)}b.length=d}goog.array.removeDuplicates=module$contents$goog$array_removeDuplicates;
function module$contents$goog$array_binarySearch(a,b,c){return module$contents$goog$array_binarySearch_(a,c||module$contents$goog$array_defaultCompare,!1,b)}goog.array.binarySearch=module$contents$goog$array_binarySearch;function module$contents$goog$array_binarySelect(a,b,c){return module$contents$goog$array_binarySearch_(a,b,!0,void 0,c)}goog.array.binarySelect=module$contents$goog$array_binarySelect;
function module$contents$goog$array_binarySearch_(a,b,c,d,e){let f=0,g=a.length,h;for(;f<g;){const k=f+(g-f>>>1);let l;l=c?b.call(e,a[k],k,a):b(d,a[k]);0<l?f=k+1:(g=k,h=!l)}return h?f:-f-1}function module$contents$goog$array_sort(a,b){a.sort(b||module$contents$goog$array_defaultCompare)}goog.array.sort=module$contents$goog$array_sort;
function module$contents$goog$array_stableSort(a,b){const c=Array(a.length);for(let e=0;e<a.length;e++)c[e]={index:e,value:a[e]};const d=b||module$contents$goog$array_defaultCompare;module$contents$goog$array_sort(c,function(e,f){return d(e.value,f.value)||e.index-f.index});for(b=0;b<a.length;b++)a[b]=c[b].value}goog.array.stableSort=module$contents$goog$array_stableSort;
function module$contents$goog$array_sortByKey(a,b,c){const d=c||module$contents$goog$array_defaultCompare;module$contents$goog$array_sort(a,function(e,f){return d(b(e),b(f))})}goog.array.sortByKey=module$contents$goog$array_sortByKey;function module$contents$goog$array_sortObjectsByKey(a,b,c){module$contents$goog$array_sortByKey(a,function(d){return d[b]},c)}goog.array.sortObjectsByKey=module$contents$goog$array_sortObjectsByKey;
function module$contents$goog$array_isSorted(a,b,c){b=b||module$contents$goog$array_defaultCompare;for(let d=1;d<a.length;d++){const e=b(a[d-1],a[d]);if(0<e||0==e&&c)return!1}return!0}goog.array.isSorted=module$contents$goog$array_isSorted;function module$contents$goog$array_equals(a,b,c){if(!goog.isArrayLike(a)||!goog.isArrayLike(b)||a.length!=b.length)return!1;const d=a.length;c=c||module$contents$goog$array_defaultCompareEquality;for(let e=0;e<d;e++)if(!c(a[e],b[e]))return!1;return!0}
goog.array.equals=module$contents$goog$array_equals;function module$contents$goog$array_compare3(a,b,c){c=c||module$contents$goog$array_defaultCompare;const d=Math.min(a.length,b.length);for(let e=0;e<d;e++){const f=c(a[e],b[e]);if(0!=f)return f}return module$contents$goog$array_defaultCompare(a.length,b.length)}goog.array.compare3=module$contents$goog$array_compare3;function module$contents$goog$array_defaultCompare(a,b){return a>b?1:a<b?-1:0}goog.array.defaultCompare=module$contents$goog$array_defaultCompare;
function module$contents$goog$array_inverseDefaultCompare(a,b){return-module$contents$goog$array_defaultCompare(a,b)}goog.array.inverseDefaultCompare=module$contents$goog$array_inverseDefaultCompare;function module$contents$goog$array_defaultCompareEquality(a,b){return a===b}goog.array.defaultCompareEquality=module$contents$goog$array_defaultCompareEquality;
function module$contents$goog$array_binaryInsert(a,b,c){c=module$contents$goog$array_binarySearch(a,b,c);return 0>c?(module$contents$goog$array_insertAt(a,b,-(c+1)),!0):!1}goog.array.binaryInsert=module$contents$goog$array_binaryInsert;function module$contents$goog$array_binaryRemove(a,b,c){b=module$contents$goog$array_binarySearch(a,b,c);return 0<=b?module$contents$goog$array_removeAt(a,b):!1}goog.array.binaryRemove=module$contents$goog$array_binaryRemove;
function module$contents$goog$array_bucket(a,b,c){const d={};for(let e=0;e<a.length;e++){const f=a[e],g=b.call(c,f,e,a);void 0!==g&&(d[g]||(d[g]=[])).push(f)}return d}goog.array.bucket=module$contents$goog$array_bucket;function module$contents$goog$array_bucketToMap(a,b){const c=new Map;for(let d=0;d<a.length;d++){const e=a[d],f=b(e,d,a);if(void 0!==f){let g=c.get(f);g||(g=[],c.set(f,g));g.push(e)}}return c}goog.array.bucketToMap=module$contents$goog$array_bucketToMap;
function module$contents$goog$array_toObject(a,b,c){const d={};module$contents$goog$array_forEach(a,function(e,f){d[b.call(c,e,f,a)]=e});return d}goog.array.toObject=module$contents$goog$array_toObject;function module$contents$goog$array_toMap(a,b){const c=new Map;for(let d=0;d<a.length;d++){const e=a[d];c.set(b(e,d,a),e)}return c}goog.array.toMap=module$contents$goog$array_toMap;
function module$contents$goog$array_range(a,b,c){const d=[];let e=0,f=a;c=c||1;void 0!==b&&(e=a,f=b);if(0>c*(f-e))return[];if(0<c)for(a=e;a<f;a+=c)d.push(a);else for(a=e;a>f;a+=c)d.push(a);return d}goog.array.range=module$contents$goog$array_range;function module$contents$goog$array_repeat(a,b){const c=[];for(let d=0;d<b;d++)c[d]=a;return c}goog.array.repeat=module$contents$goog$array_repeat;
function module$contents$goog$array_flatten(a){const b=[];for(let d=0;d<arguments.length;d++){const e=arguments[d];if(Array.isArray(e))for(let f=0;f<e.length;f+=8192){var c=module$contents$goog$array_slice(e,f,f+8192);c=module$contents$goog$array_flatten.apply(null,c);for(let g=0;g<c.length;g++)b.push(c[g])}else b.push(e)}return b}goog.array.flatten=module$contents$goog$array_flatten;
function module$contents$goog$array_rotate(a,b){goog.asserts.assert(null!=a.length);a.length&&(b%=a.length,0<b?Array.prototype.unshift.apply(a,a.splice(-b,b)):0>b&&Array.prototype.push.apply(a,a.splice(0,-b)));return a}goog.array.rotate=module$contents$goog$array_rotate;function module$contents$goog$array_moveItem(a,b,c){goog.asserts.assert(0<=b&&b<a.length);goog.asserts.assert(0<=c&&c<a.length);b=Array.prototype.splice.call(a,b,1);Array.prototype.splice.call(a,c,0,b[0])}goog.array.moveItem=module$contents$goog$array_moveItem;
function module$contents$goog$array_zip(a){if(!arguments.length)return[];const b=[];let c=arguments[0].length;for(var d=1;d<arguments.length;d++)arguments[d].length<c&&(c=arguments[d].length);for(d=0;d<c;d++){const e=[];for(let f=0;f<arguments.length;f++)e.push(arguments[f][d]);b.push(e)}return b}goog.array.zip=module$contents$goog$array_zip;function module$contents$goog$array_shuffle(a,b){b=b||Math.random;for(let c=a.length-1;0<c;c--){const d=Math.floor(b()*(c+1)),e=a[c];a[c]=a[d];a[d]=e}}
goog.array.shuffle=module$contents$goog$array_shuffle;function module$contents$goog$array_copyByIndex(a,b){const c=[];module$contents$goog$array_forEach(b,function(d){c.push(a[d])});return c}goog.array.copyByIndex=module$contents$goog$array_copyByIndex;function module$contents$goog$array_concatMap(a,b,c){return module$contents$goog$array_concat.apply([],module$contents$goog$array_map(a,b,c))}goog.array.concatMap=module$contents$goog$array_concatMap;goog.dom.asserts={};goog.dom.asserts.assertIsLocation=function(a){if(goog.asserts.ENABLE_ASSERTS){var b=goog.dom.asserts.getWindow_(a);b&&(!a||!(a instanceof b.Location)&&a instanceof b.Element)&&goog.asserts.fail("Argument is not a Location (or a non-Element mock); got: %s",goog.dom.asserts.debugStringForType_(a))}return a};
goog.dom.asserts.assertIsElementType_=function(a,b){if(goog.asserts.ENABLE_ASSERTS){var c=goog.dom.asserts.getWindow_(a);c&&"undefined"!=typeof c[b]&&(a&&(a instanceof c[b]||!(a instanceof c.Location||a instanceof c.Element))||goog.asserts.fail("Argument is not a %s (or a non-Element, non-Location mock); got: %s",b,goog.dom.asserts.debugStringForType_(a)))}return a};goog.dom.asserts.assertIsHTMLAnchorElement=function(a){return goog.dom.asserts.assertIsElementType_(a,"HTMLAnchorElement")};
goog.dom.asserts.assertIsHTMLButtonElement=function(a){return goog.dom.asserts.assertIsElementType_(a,"HTMLButtonElement")};goog.dom.asserts.assertIsHTMLLinkElement=function(a){return goog.dom.asserts.assertIsElementType_(a,"HTMLLinkElement")};goog.dom.asserts.assertIsHTMLImageElement=function(a){return goog.dom.asserts.assertIsElementType_(a,"HTMLImageElement")};goog.dom.asserts.assertIsHTMLAudioElement=function(a){return goog.dom.asserts.assertIsElementType_(a,"HTMLAudioElement")};
goog.dom.asserts.assertIsHTMLVideoElement=function(a){return goog.dom.asserts.assertIsElementType_(a,"HTMLVideoElement")};goog.dom.asserts.assertIsHTMLInputElement=function(a){return goog.dom.asserts.assertIsElementType_(a,"HTMLInputElement")};goog.dom.asserts.assertIsHTMLTextAreaElement=function(a){return goog.dom.asserts.assertIsElementType_(a,"HTMLTextAreaElement")};goog.dom.asserts.assertIsHTMLCanvasElement=function(a){return goog.dom.asserts.assertIsElementType_(a,"HTMLCanvasElement")};
goog.dom.asserts.assertIsHTMLEmbedElement=function(a){return goog.dom.asserts.assertIsElementType_(a,"HTMLEmbedElement")};goog.dom.asserts.assertIsHTMLFormElement=function(a){return goog.dom.asserts.assertIsElementType_(a,"HTMLFormElement")};goog.dom.asserts.assertIsHTMLFrameElement=function(a){return goog.dom.asserts.assertIsElementType_(a,"HTMLFrameElement")};goog.dom.asserts.assertIsHTMLIFrameElement=function(a){return goog.dom.asserts.assertIsElementType_(a,"HTMLIFrameElement")};
goog.dom.asserts.assertIsHTMLObjectElement=function(a){return goog.dom.asserts.assertIsElementType_(a,"HTMLObjectElement")};goog.dom.asserts.assertIsHTMLScriptElement=function(a){return goog.dom.asserts.assertIsElementType_(a,"HTMLScriptElement")};
goog.dom.asserts.debugStringForType_=function(a){if(goog.isObject(a))try{return a.constructor.displayName||a.constructor.name||Object.prototype.toString.call(a)}catch(b){return"<object could not be stringified>"}else return void 0===a?"undefined":null===a?"null":typeof a};goog.dom.asserts.getWindow_=function(a){try{var b=a&&a.ownerDocument,c=b&&(b.defaultView||b.parentWindow);c=c||goog.global;if(c.Element&&c.Location)return c}catch(d){}return null};goog.functions={};goog.functions.constant=function(a){return function(){return a}};goog.functions.FALSE=function(){return!1};goog.functions.TRUE=function(){return!0};goog.functions.NULL=function(){return null};goog.functions.UNDEFINED=function(){};goog.functions.EMPTY=goog.functions.UNDEFINED;goog.functions.identity=function(a,b){return a};goog.functions.error=function(a){return function(){throw Error(a);}};goog.functions.fail=function(a){return function(){throw a;}};
goog.functions.lock=function(a,b){b=b||0;return function(){return a.apply(this,Array.prototype.slice.call(arguments,0,b))}};goog.functions.nth=function(a){return function(){return arguments[a]}};goog.functions.partialRight=function(a,b){const c=Array.prototype.slice.call(arguments,1);return function(){let d=this;d===goog.global&&(d=void 0);const e=Array.prototype.slice.call(arguments);e.push.apply(e,c);return a.apply(d,e)}};
goog.functions.withReturnValue=function(a,b){return goog.functions.sequence(a,goog.functions.constant(b))};goog.functions.equalTo=function(a,b){return function(c){return b?a==c:a===c}};goog.functions.compose=function(a,b){const c=arguments,d=c.length;return function(){let e;d&&(e=c[d-1].apply(this,arguments));for(let f=d-2;0<=f;f--)e=c[f].call(this,e);return e}};
goog.functions.sequence=function(a){const b=arguments,c=b.length;return function(){let d;for(let e=0;e<c;e++)d=b[e].apply(this,arguments);return d}};goog.functions.and=function(a){const b=arguments,c=b.length;return function(){for(let d=0;d<c;d++)if(!b[d].apply(this,arguments))return!1;return!0}};goog.functions.or=function(a){const b=arguments,c=b.length;return function(){for(let d=0;d<c;d++)if(b[d].apply(this,arguments))return!0;return!1}};
goog.functions.not=function(a){return function(){return!a.apply(this,arguments)}};goog.functions.create=function(a,b){var c=function(){};c.prototype=a.prototype;c=new c;a.apply(c,Array.prototype.slice.call(arguments,1));return c};goog.functions.CACHE_RETURN_VALUE=!0;goog.functions.cacheReturnValue=function(a){let b=!1,c;return function(){if(!goog.functions.CACHE_RETURN_VALUE)return a();b||(c=a(),b=!0);return c}};goog.functions.once=function(a){let b=a;return function(){if(b){const c=b;b=null;c()}}};
goog.functions.debounce=function(a,b,c){let d=0;return function(e){goog.global.clearTimeout(d);const f=arguments;d=goog.global.setTimeout(function(){a.apply(c,f)},b)}};goog.functions.throttle=function(a,b,c){let d=0,e=!1,f=[];const g=function(){d=0;e&&(e=!1,h())},h=function(){d=goog.global.setTimeout(g,b);let k=f;f=[];a.apply(c,k)};return function(k){f=arguments;d?e=!0:h()}};
goog.functions.rateLimit=function(a,b,c){let d=0;const e=function(){d=0};return function(f){d||(d=goog.global.setTimeout(e,b),a.apply(c,arguments))}};goog.functions.isFunction=a=>"function"===typeof a;goog.string={};goog.string.TypedString=function(){};goog.string.Const=function(a,b){this.stringConstValueWithSecurityContract__googStringSecurityPrivate_=a===goog.string.Const.GOOG_STRING_CONSTRUCTOR_TOKEN_PRIVATE_&&b||"";this.STRING_CONST_TYPE_MARKER__GOOG_STRING_SECURITY_PRIVATE_=goog.string.Const.TYPE_MARKER_};goog.string.Const.prototype.implementsGoogStringTypedString=!0;goog.string.Const.prototype.getTypedStringValue=function(){return this.stringConstValueWithSecurityContract__googStringSecurityPrivate_};
goog.DEBUG&&(goog.string.Const.prototype.toString=function(){return"Const{"+this.stringConstValueWithSecurityContract__googStringSecurityPrivate_+"}"});goog.string.Const.unwrap=function(a){if(a instanceof goog.string.Const&&a.constructor===goog.string.Const&&a.STRING_CONST_TYPE_MARKER__GOOG_STRING_SECURITY_PRIVATE_===goog.string.Const.TYPE_MARKER_)return a.stringConstValueWithSecurityContract__googStringSecurityPrivate_;goog.asserts.fail("expected object of type Const, got '"+a+"'");return"type_error:Const"};
goog.string.Const.from=function(a){return new goog.string.Const(goog.string.Const.GOOG_STRING_CONSTRUCTOR_TOKEN_PRIVATE_,a)};goog.string.Const.TYPE_MARKER_={};goog.string.Const.GOOG_STRING_CONSTRUCTOR_TOKEN_PRIVATE_={};goog.string.Const.EMPTY=goog.string.Const.from("");goog.html={};goog.html.trustedtypes={};goog.html.trustedtypes.POLICY_NAME=goog.TRUSTED_TYPES_POLICY_NAME?goog.TRUSTED_TYPES_POLICY_NAME+"#html":"";goog.html.trustedtypes.getPolicyPrivateDoNotAccessOrElse=function(){if(!goog.html.trustedtypes.POLICY_NAME)return null;void 0===goog.html.trustedtypes.cachedPolicy_&&(goog.html.trustedtypes.cachedPolicy_=goog.createTrustedTypesPolicy(goog.html.trustedtypes.POLICY_NAME));return goog.html.trustedtypes.cachedPolicy_};const module$contents$goog$html$SafeScript_CONSTRUCTOR_TOKEN_PRIVATE={};
class module$contents$goog$html$SafeScript_SafeScript{constructor(a,b){this.privateDoNotAccessOrElseSafeScriptWrappedValue_=b===module$contents$goog$html$SafeScript_CONSTRUCTOR_TOKEN_PRIVATE?a:"";this.implementsGoogStringTypedString=!0}toString(){return this.privateDoNotAccessOrElseSafeScriptWrappedValue_.toString()}static fromConstant(a){a=goog.string.Const.unwrap(a);return 0===a.length?module$contents$goog$html$SafeScript_SafeScript.EMPTY:module$contents$goog$html$SafeScript_SafeScript.createSafeScriptSecurityPrivateDoNotAccessOrElse(a)}static fromJson(a){return module$contents$goog$html$SafeScript_SafeScript.createSafeScriptSecurityPrivateDoNotAccessOrElse(module$contents$goog$html$SafeScript_SafeScript.stringify_(a))}getTypedStringValue(){return this.privateDoNotAccessOrElseSafeScriptWrappedValue_.toString()}static unwrap(a){return module$contents$goog$html$SafeScript_SafeScript.unwrapTrustedScript(a).toString()}static unwrapTrustedScript(a){if(a instanceof
module$contents$goog$html$SafeScript_SafeScript&&a.constructor===module$contents$goog$html$SafeScript_SafeScript)return a.privateDoNotAccessOrElseSafeScriptWrappedValue_;(0,goog.asserts.fail)("expected object of type SafeScript, got '"+a+"' of type "+goog.typeOf(a));return"type_error:SafeScript"}static stringify_(a){return JSON.stringify(a).replace(/</g,"\\\\x3c")}static createSafeScriptSecurityPrivateDoNotAccessOrElse(a){const b=goog.html.trustedtypes.getPolicyPrivateDoNotAccessOrElse();a=b?b.createScript(a):
a;return new module$contents$goog$html$SafeScript_SafeScript(a,module$contents$goog$html$SafeScript_CONSTRUCTOR_TOKEN_PRIVATE)}}module$contents$goog$html$SafeScript_SafeScript.EMPTY=function(){return module$contents$goog$html$SafeScript_SafeScript.createSafeScriptSecurityPrivateDoNotAccessOrElse("")}();goog.html.SafeScript=module$contents$goog$html$SafeScript_SafeScript;goog.fs={};goog.fs.url={};goog.fs.url.createObjectUrl=function(a){return goog.fs.url.getUrlObject_().createObjectURL(a)};goog.fs.url.revokeObjectUrl=function(a){goog.fs.url.getUrlObject_().revokeObjectURL(a)};goog.fs.url.UrlObject_=function(){};goog.fs.url.UrlObject_.prototype.createObjectURL=function(a){};goog.fs.url.UrlObject_.prototype.revokeObjectURL=function(a){};
goog.fs.url.getUrlObject_=function(){const a=goog.fs.url.findUrlObject_();if(null!=a)return a;throw Error("This browser doesn't seem to support blob URLs");};goog.fs.url.findUrlObject_=function(){return void 0!==goog.global.URL&&void 0!==goog.global.URL.createObjectURL?goog.global.URL:void 0!==goog.global.createObjectURL?goog.global:null};goog.fs.url.browserSupportsObjectUrls=function(){return null!=goog.fs.url.findUrlObject_()};goog.fs.blob={};goog.fs.blob.getBlob=function(a){var b=goog.global.BlobBuilder||goog.global.WebKitBlobBuilder;if(void 0!==b){b=new b;for(let c=0;c<arguments.length;c++)b.append(arguments[c]);return b.getBlob()}return goog.fs.blob.getBlobWithProperties(Array.prototype.slice.call(arguments))};
goog.fs.blob.getBlobWithProperties=function(a,b,c){var d=goog.global.BlobBuilder||goog.global.WebKitBlobBuilder;if(void 0!==d){d=new d;for(let e=0;e<a.length;e++)d.append(a[e],c);return d.getBlob(b)}if(void 0!==goog.global.Blob)return d={},b&&(d.type=b),c&&(d.endings=c),new Blob(a,d);throw Error("This browser doesn't seem to support creating Blobs");};goog.html.TrustedResourceUrl=class{constructor(a,b){this.privateDoNotAccessOrElseTrustedResourceUrlWrappedValue_=b===goog.html.TrustedResourceUrl.CONSTRUCTOR_TOKEN_PRIVATE_?a:""}toString(){return this.privateDoNotAccessOrElseTrustedResourceUrlWrappedValue_+""}};goog.html.TrustedResourceUrl.prototype.implementsGoogStringTypedString=!0;goog.html.TrustedResourceUrl.prototype.getTypedStringValue=function(){return this.privateDoNotAccessOrElseTrustedResourceUrlWrappedValue_.toString()};
goog.html.TrustedResourceUrl.prototype.cloneWithParams=function(a,b){var c=goog.html.TrustedResourceUrl.unwrap(this);c=goog.html.TrustedResourceUrl.URL_PARAM_PARSER_.exec(c);var d=c[3]||"";return goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(c[1]+goog.html.TrustedResourceUrl.stringifyParams_("?",c[2]||"",a)+goog.html.TrustedResourceUrl.stringifyParams_("#",d,b))};goog.html.TrustedResourceUrl.unwrap=function(a){return goog.html.TrustedResourceUrl.unwrapTrustedScriptURL(a).toString()};
goog.html.TrustedResourceUrl.unwrapTrustedScriptURL=function(a){if(a instanceof goog.html.TrustedResourceUrl&&a.constructor===goog.html.TrustedResourceUrl)return a.privateDoNotAccessOrElseTrustedResourceUrlWrappedValue_;goog.asserts.fail("expected object of type TrustedResourceUrl, got '"+a+"' of type "+goog.typeOf(a));return"type_error:TrustedResourceUrl"};
goog.html.TrustedResourceUrl.format=function(a,b){var c=goog.string.Const.unwrap(a);if(!goog.html.TrustedResourceUrl.BASE_URL_.test(c))throw Error("Invalid TrustedResourceUrl format: "+c);a=c.replace(goog.html.TrustedResourceUrl.FORMAT_MARKER_,function(d,e){if(!Object.prototype.hasOwnProperty.call(b,e))throw Error('Found marker, "'+e+'", in format string, "'+c+'", but no valid label mapping found in args: '+JSON.stringify(b));d=b[e];return d instanceof goog.string.Const?goog.string.Const.unwrap(d):
encodeURIComponent(String(d))});return goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(a)};goog.html.TrustedResourceUrl.FORMAT_MARKER_=/%{(\\w+)}/g;goog.html.TrustedResourceUrl.BASE_URL_=RegExp("^((https:)?//[0-9a-z.:[\\\\]-]+/|/[^/\\\\\\\\]|[^:/\\\\\\\\%]+/|[^:/\\\\\\\\%]*[?#]|about:blank#)","i");goog.html.TrustedResourceUrl.URL_PARAM_PARSER_=/^([^?#]*)(\\?[^#]*)?(#[\\s\\S]*)?/;
goog.html.TrustedResourceUrl.formatWithParams=function(a,b,c,d){return goog.html.TrustedResourceUrl.format(a,b).cloneWithParams(c,d)};goog.html.TrustedResourceUrl.fromConstant=function(a){return goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(goog.string.Const.unwrap(a))};goog.html.TrustedResourceUrl.fromConstants=function(a){for(var b="",c=0;c<a.length;c++)b+=goog.string.Const.unwrap(a[c]);return goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(b)};
goog.html.TrustedResourceUrl.fromSafeScript=function(a){a=goog.fs.blob.getBlobWithProperties([module$contents$goog$html$SafeScript_SafeScript.unwrap(a)],"text/javascript");a=goog.fs.url.createObjectUrl(a);return goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(a)};goog.html.TrustedResourceUrl.CONSTRUCTOR_TOKEN_PRIVATE_={};
goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse=function(a){const b=goog.html.trustedtypes.getPolicyPrivateDoNotAccessOrElse();a=b?b.createScriptURL(a):a;return new goog.html.TrustedResourceUrl(a,goog.html.TrustedResourceUrl.CONSTRUCTOR_TOKEN_PRIVATE_)};
goog.html.TrustedResourceUrl.stringifyParams_=function(a,b,c){if(null==c)return b;if("string"===typeof c)return c?a+encodeURIComponent(c):"";for(var d in c)if(Object.prototype.hasOwnProperty.call(c,d)){var e=c[d];e=Array.isArray(e)?e:[e];for(var f=0;f<e.length;f++){var g=e[f];null!=g&&(b||(b=a),b+=(b.length>a.length?"&":"")+encodeURIComponent(d)+"="+encodeURIComponent(String(g)))}}return b};goog.string.internal={};goog.string.internal.startsWith=function(a,b){return 0==a.lastIndexOf(b,0)};goog.string.internal.endsWith=function(a,b){const c=a.length-b.length;return 0<=c&&a.indexOf(b,c)==c};goog.string.internal.caseInsensitiveStartsWith=function(a,b){return 0==goog.string.internal.caseInsensitiveCompare(b,a.slice(0,b.length))};goog.string.internal.caseInsensitiveEndsWith=function(a,b){return 0==goog.string.internal.caseInsensitiveCompare(b,a.slice(a.length-b.length))};
goog.string.internal.caseInsensitiveEquals=function(a,b){return a.toLowerCase()==b.toLowerCase()};goog.string.internal.isEmptyOrWhitespace=function(a){return/^[\\s\\xa0]*$/.test(a)};goog.string.internal.trim=goog.TRUSTED_SITE&&String.prototype.trim?function(a){return a.trim()}:function(a){return/^[\\s\\xa0]*([\\s\\S]*?)[\\s\\xa0]*$/.exec(a)[1]};goog.string.internal.caseInsensitiveCompare=function(a,b){a=String(a).toLowerCase();b=String(b).toLowerCase();return a<b?-1:a==b?0:1};
goog.string.internal.newLineToBr=function(a,b){return a.replace(/(\\r\\n|\\r|\\n)/g,b?"<br />":"<br>")};
goog.string.internal.htmlEscape=function(a,b){if(b)a=a.replace(goog.string.internal.AMP_RE_,"&amp;").replace(goog.string.internal.LT_RE_,"&lt;").replace(goog.string.internal.GT_RE_,"&gt;").replace(goog.string.internal.QUOT_RE_,"&quot;").replace(goog.string.internal.SINGLE_QUOTE_RE_,"&#39;").replace(goog.string.internal.NULL_RE_,"&#0;");else{if(!goog.string.internal.ALL_RE_.test(a))return a;-1!=a.indexOf("&")&&(a=a.replace(goog.string.internal.AMP_RE_,"&amp;"));-1!=a.indexOf("<")&&(a=a.replace(goog.string.internal.LT_RE_,
"&lt;"));-1!=a.indexOf(">")&&(a=a.replace(goog.string.internal.GT_RE_,"&gt;"));-1!=a.indexOf('"')&&(a=a.replace(goog.string.internal.QUOT_RE_,"&quot;"));-1!=a.indexOf("'")&&(a=a.replace(goog.string.internal.SINGLE_QUOTE_RE_,"&#39;"));-1!=a.indexOf("\\x00")&&(a=a.replace(goog.string.internal.NULL_RE_,"&#0;"))}return a};goog.string.internal.AMP_RE_=/&/g;goog.string.internal.LT_RE_=/</g;goog.string.internal.GT_RE_=/>/g;goog.string.internal.QUOT_RE_=/"/g;goog.string.internal.SINGLE_QUOTE_RE_=/'/g;
goog.string.internal.NULL_RE_=/\\x00/g;goog.string.internal.ALL_RE_=/[\\x00&<>"']/;goog.string.internal.whitespaceEscape=function(a,b){return goog.string.internal.newLineToBr(a.replace(/  /g," &#160;"),b)};goog.string.internal.contains=function(a,b){return-1!=a.indexOf(b)};goog.string.internal.caseInsensitiveContains=function(a,b){return goog.string.internal.contains(a.toLowerCase(),b.toLowerCase())};
goog.string.internal.compareVersions=function(a,b){var c=0;a=goog.string.internal.trim(String(a)).split(".");b=goog.string.internal.trim(String(b)).split(".");const d=Math.max(a.length,b.length);for(let g=0;0==c&&g<d;g++){var e=a[g]||"",f=b[g]||"";do{e=/(\\d*)(\\D*)(.*)/.exec(e)||["","","",""];f=/(\\d*)(\\D*)(.*)/.exec(f)||["","","",""];if(0==e[0].length&&0==f[0].length)break;c=0==e[1].length?0:parseInt(e[1],10);const h=0==f[1].length?0:parseInt(f[1],10);c=goog.string.internal.compareElements_(c,h)||
goog.string.internal.compareElements_(0==e[2].length,0==f[2].length)||goog.string.internal.compareElements_(e[2],f[2]);e=e[3];f=f[3]}while(0==c)}return c};goog.string.internal.compareElements_=function(a,b){return a<b?-1:a>b?1:0};goog.html.SafeUrl=class{constructor(a,b){this.privateDoNotAccessOrElseSafeUrlWrappedValue_=b===goog.html.SafeUrl.CONSTRUCTOR_TOKEN_PRIVATE_?a:""}toString(){return this.privateDoNotAccessOrElseSafeUrlWrappedValue_.toString()}};goog.html.SafeUrl.INNOCUOUS_STRING="about:invalid#zClosurez";goog.html.SafeUrl.prototype.implementsGoogStringTypedString=!0;goog.html.SafeUrl.prototype.getTypedStringValue=function(){return this.privateDoNotAccessOrElseSafeUrlWrappedValue_.toString()};
goog.html.SafeUrl.unwrap=function(a){if(a instanceof goog.html.SafeUrl&&a.constructor===goog.html.SafeUrl)return a.privateDoNotAccessOrElseSafeUrlWrappedValue_;goog.asserts.fail("expected object of type SafeUrl, got '"+a+"' of type "+goog.typeOf(a));return"type_error:SafeUrl"};goog.html.SafeUrl.fromConstant=function(a){return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(goog.string.Const.unwrap(a))};
goog.html.SAFE_MIME_TYPE_PATTERN_=RegExp('^(?:audio/(?:3gpp2|3gpp|aac|L16|midi|mp3|mp4|mpeg|oga|ogg|opus|x-m4a|x-matroska|x-wav|wav|webm)|font/\\\\w+|image/(?:bmp|gif|jpeg|jpg|png|tiff|webp|x-icon|heic|heif)|video/(?:mpeg|mp4|ogg|webm|quicktime|x-matroska))(?:;\\\\w+=(?:\\\\w+|"[\\\\w;,= ]+"))*$',"i");goog.html.SafeUrl.isSafeMimeType=function(a){return goog.html.SAFE_MIME_TYPE_PATTERN_.test(a)};
goog.html.SafeUrl.fromBlob=function(a){a=goog.html.SafeUrl.isSafeMimeType(a.type)?goog.fs.url.createObjectUrl(a):goog.html.SafeUrl.INNOCUOUS_STRING;return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(a)};goog.html.SafeUrl.revokeObjectUrl=function(a){a=a.getTypedStringValue();a!==goog.html.SafeUrl.INNOCUOUS_STRING&&goog.fs.url.revokeObjectUrl(a)};
goog.html.SafeUrl.fromMediaSource=function(a){goog.asserts.assert("MediaSource"in goog.global,"No support for MediaSource");a=a instanceof MediaSource?goog.fs.url.createObjectUrl(a):goog.html.SafeUrl.INNOCUOUS_STRING;return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(a)};goog.html.DATA_URL_PATTERN_=/^data:(.*);base64,[a-z0-9+\\/]+=*$/i;
goog.html.SafeUrl.tryFromDataUrl=function(a){a=String(a);a=a.replace(/(%0A|%0D)/g,"");return a.match(goog.html.DATA_URL_PATTERN_)?goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(a):null};goog.html.SafeUrl.fromDataUrl=function(a){return goog.html.SafeUrl.tryFromDataUrl(a)||goog.html.SafeUrl.INNOCUOUS_URL};goog.html.SafeUrl.fromTelUrl=function(a){goog.string.internal.caseInsensitiveStartsWith(a,"tel:")||(a=goog.html.SafeUrl.INNOCUOUS_STRING);return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(a)};
goog.html.SIP_URL_PATTERN_=RegExp("^sip[s]?:[+a-z0-9_.!$%&'*\\\\/=^\`{|}~-]+@([a-z0-9-]+\\\\.)+[a-z0-9]{2,63}$","i");goog.html.SafeUrl.fromSipUrl=function(a){goog.html.SIP_URL_PATTERN_.test(decodeURIComponent(a))||(a=goog.html.SafeUrl.INNOCUOUS_STRING);return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(a)};goog.html.SafeUrl.fromFacebookMessengerUrl=function(a){goog.string.internal.caseInsensitiveStartsWith(a,"fb-messenger://share")||(a=goog.html.SafeUrl.INNOCUOUS_STRING);return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(a)};
goog.html.SafeUrl.fromWhatsAppUrl=function(a){goog.string.internal.caseInsensitiveStartsWith(a,"whatsapp://send")||(a=goog.html.SafeUrl.INNOCUOUS_STRING);return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(a)};goog.html.SafeUrl.fromSmsUrl=function(a){goog.string.internal.caseInsensitiveStartsWith(a,"sms:")&&goog.html.SafeUrl.isSmsUrlBodyValid_(a)||(a=goog.html.SafeUrl.INNOCUOUS_STRING);return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(a)};
goog.html.SafeUrl.isSmsUrlBodyValid_=function(a){var b=a.indexOf("#");0<b&&(a=a.substring(0,b));b=a.match(/[?&]body=/gi);if(!b)return!0;if(1<b.length)return!1;a=a.match(/[?&]body=([^&]*)/)[1];if(!a)return!0;try{decodeURIComponent(a)}catch(c){return!1}return/^(?:[a-z0-9\\-_.~]|%[0-9a-f]{2})+$/i.test(a)};goog.html.SafeUrl.fromSshUrl=function(a){goog.string.internal.caseInsensitiveStartsWith(a,"ssh://")||(a=goog.html.SafeUrl.INNOCUOUS_STRING);return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(a)};
goog.html.SafeUrl.sanitizeChromeExtensionUrl=function(a,b){return goog.html.SafeUrl.sanitizeExtensionUrl_(/^chrome-extension:\\/\\/([^\\/]+)\\//,a,b)};goog.html.SafeUrl.sanitizeFirefoxExtensionUrl=function(a,b){return goog.html.SafeUrl.sanitizeExtensionUrl_(/^moz-extension:\\/\\/([^\\/]+)\\//,a,b)};goog.html.SafeUrl.sanitizeEdgeExtensionUrl=function(a,b){return goog.html.SafeUrl.sanitizeExtensionUrl_(/^ms-browser-extension:\\/\\/([^\\/]+)\\//,a,b)};
goog.html.SafeUrl.sanitizeExtensionUrl_=function(a,b,c){(a=a.exec(b))?(a=a[1],-1==(c instanceof goog.string.Const?[goog.string.Const.unwrap(c)]:c.map(function(d){return goog.string.Const.unwrap(d)})).indexOf(a)&&(b=goog.html.SafeUrl.INNOCUOUS_STRING)):b=goog.html.SafeUrl.INNOCUOUS_STRING;return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(b)};goog.html.SafeUrl.fromTrustedResourceUrl=function(a){return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(goog.html.TrustedResourceUrl.unwrap(a))};
goog.html.SAFE_URL_PATTERN_=/^(?:(?:https?|mailto|ftp):|[^:/?#]*(?:[/?#]|$))/i;goog.html.SafeUrl.SAFE_URL_PATTERN=goog.html.SAFE_URL_PATTERN_;goog.html.SafeUrl.trySanitize=function(a){if(a instanceof goog.html.SafeUrl)return a;a="object"==typeof a&&a.implementsGoogStringTypedString?a.getTypedStringValue():String(a);return goog.html.SAFE_URL_PATTERN_.test(a)?goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(a):goog.html.SafeUrl.tryFromDataUrl(a)};
goog.html.SafeUrl.sanitize=function(a){return goog.html.SafeUrl.trySanitize(a)||goog.html.SafeUrl.INNOCUOUS_URL};
goog.html.SafeUrl.sanitizeAssertUnchanged=function(a,b){if(a instanceof goog.html.SafeUrl)return a;a="object"==typeof a&&a.implementsGoogStringTypedString?a.getTypedStringValue():String(a);if(b&&/^data:/i.test(a)&&(b=goog.html.SafeUrl.fromDataUrl(a),b.getTypedStringValue()==a))return b;goog.asserts.assert(goog.html.SAFE_URL_PATTERN_.test(a),"%s does not match the safe URL pattern",a)||(a=goog.html.SafeUrl.INNOCUOUS_STRING);return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(a)};
goog.html.SafeUrl.CONSTRUCTOR_TOKEN_PRIVATE_={};goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse=function(a){return new goog.html.SafeUrl(a,goog.html.SafeUrl.CONSTRUCTOR_TOKEN_PRIVATE_)};goog.html.SafeUrl.INNOCUOUS_URL=goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(goog.html.SafeUrl.INNOCUOUS_STRING);goog.html.SafeUrl.ABOUT_BLANK=goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse("about:blank");const module$contents$goog$html$SafeStyle_CONSTRUCTOR_TOKEN_PRIVATE={};
class module$contents$goog$html$SafeStyle_SafeStyle{constructor(a,b){this.privateDoNotAccessOrElseSafeStyleWrappedValue_=b===module$contents$goog$html$SafeStyle_CONSTRUCTOR_TOKEN_PRIVATE?a:"";this.implementsGoogStringTypedString=!0}static fromConstant(a){a=goog.string.Const.unwrap(a);if(0===a.length)return module$contents$goog$html$SafeStyle_SafeStyle.EMPTY;(0,goog.asserts.assert)((0,goog.string.internal.endsWith)(a,";"),\`Last character of style string is not ';': \${a}\`);(0,goog.asserts.assert)((0,goog.string.internal.contains)(a,
":"),"Style string must contain at least one ':', to specify a \\"name: value\\" pair: "+a);return module$contents$goog$html$SafeStyle_SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse(a)}getTypedStringValue(){return this.privateDoNotAccessOrElseSafeStyleWrappedValue_}toString(){return this.privateDoNotAccessOrElseSafeStyleWrappedValue_.toString()}static unwrap(a){if(a instanceof module$contents$goog$html$SafeStyle_SafeStyle&&a.constructor===module$contents$goog$html$SafeStyle_SafeStyle)return a.privateDoNotAccessOrElseSafeStyleWrappedValue_;
(0,goog.asserts.fail)(\`expected object of type SafeStyle, got '\${a}\`+"' of type "+goog.typeOf(a));return"type_error:SafeStyle"}static createSafeStyleSecurityPrivateDoNotAccessOrElse(a){return new module$contents$goog$html$SafeStyle_SafeStyle(a,module$contents$goog$html$SafeStyle_CONSTRUCTOR_TOKEN_PRIVATE)}static create(a){let b="";for(let c in a)if(Object.prototype.hasOwnProperty.call(a,c)){if(!/^[-_a-zA-Z0-9]+$/.test(c))throw Error(\`Name allows only [-_a-zA-Z0-9], got: \${c}\`);let d=a[c];null!=d&&
(d=Array.isArray(d)?d.map(module$contents$goog$html$SafeStyle_sanitizePropertyValue).join(" "):module$contents$goog$html$SafeStyle_sanitizePropertyValue(d),b+=\`\${c}:\${d};\`)}return b?module$contents$goog$html$SafeStyle_SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse(b):module$contents$goog$html$SafeStyle_SafeStyle.EMPTY}static concat(a){let b="";const c=d=>{Array.isArray(d)?d.forEach(c):b+=module$contents$goog$html$SafeStyle_SafeStyle.unwrap(d)};Array.prototype.forEach.call(arguments,c);
return b?module$contents$goog$html$SafeStyle_SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse(b):module$contents$goog$html$SafeStyle_SafeStyle.EMPTY}}module$contents$goog$html$SafeStyle_SafeStyle.EMPTY=module$contents$goog$html$SafeStyle_SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse("");module$contents$goog$html$SafeStyle_SafeStyle.INNOCUOUS_STRING="zClosurez";
function module$contents$goog$html$SafeStyle_sanitizePropertyValue(a){if(a instanceof goog.html.SafeUrl)return'url("'+goog.html.SafeUrl.unwrap(a).replace(/</g,"%3c").replace(/[\\\\"]/g,"\\\\$&")+'")';a=a instanceof goog.string.Const?goog.string.Const.unwrap(a):module$contents$goog$html$SafeStyle_sanitizePropertyValueString(String(a));if(/[{;}]/.test(a))throw new module$contents$goog$asserts_AssertionError("Value does not allow [{;}], got: %s.",[a]);return a}
function module$contents$goog$html$SafeStyle_sanitizePropertyValueString(a){const b=a.replace(module$contents$goog$html$SafeStyle_FUNCTIONS_RE,"$1").replace(module$contents$goog$html$SafeStyle_FUNCTIONS_RE,"$1").replace(module$contents$goog$html$SafeStyle_URL_RE,"url");if(module$contents$goog$html$SafeStyle_VALUE_RE.test(b)){if(module$contents$goog$html$SafeStyle_COMMENT_RE.test(a))return(0,goog.asserts.fail)(\`String value disallows comments, got: \${a}\`),module$contents$goog$html$SafeStyle_SafeStyle.INNOCUOUS_STRING;
if(!module$contents$goog$html$SafeStyle_hasBalancedQuotes(a))return(0,goog.asserts.fail)(\`String value requires balanced quotes, got: \${a}\`),module$contents$goog$html$SafeStyle_SafeStyle.INNOCUOUS_STRING;if(!module$contents$goog$html$SafeStyle_hasBalancedSquareBrackets(a))return(0,goog.asserts.fail)("String value requires balanced square brackets and one identifier per pair of brackets, got: "+a),module$contents$goog$html$SafeStyle_SafeStyle.INNOCUOUS_STRING}else return(0,goog.asserts.fail)(\`String value allows only \${module$contents$goog$html$SafeStyle_VALUE_ALLOWED_CHARS}\`+
" and simple functions, got: "+a),module$contents$goog$html$SafeStyle_SafeStyle.INNOCUOUS_STRING;return module$contents$goog$html$SafeStyle_sanitizeUrl(a)}function module$contents$goog$html$SafeStyle_hasBalancedQuotes(a){let b=!0,c=!0;for(let d=0;d<a.length;d++){const e=a.charAt(d);"'"==e&&c?b=!b:'"'==e&&b&&(c=!c)}return b&&c}
function module$contents$goog$html$SafeStyle_hasBalancedSquareBrackets(a){let b=!0;const c=/^[-_a-zA-Z0-9]$/;for(let d=0;d<a.length;d++){const e=a.charAt(d);if("]"==e){if(b)return!1;b=!0}else if("["==e){if(!b)return!1;b=!1}else if(!b&&!c.test(e))return!1}return b}
const module$contents$goog$html$SafeStyle_VALUE_ALLOWED_CHARS="[-,.\\"'%_!#/ a-zA-Z0-9\\\\[\\\\]]",module$contents$goog$html$SafeStyle_VALUE_RE=new RegExp(\`^\${module$contents$goog$html$SafeStyle_VALUE_ALLOWED_CHARS}+\\$\`),module$contents$goog$html$SafeStyle_URL_RE=RegExp("\\\\b(url\\\\([ \\t\\n]*)('[ -&(-\\\\[\\\\]-~]*'|\\"[ !#-\\\\[\\\\]-~]*\\"|[!#-&*-\\\\[\\\\]-~]*)([ \\t\\n]*\\\\))","g"),module$contents$goog$html$SafeStyle_ALLOWED_FUNCTIONS="calc cubic-bezier fit-content hsl hsla linear-gradient matrix minmax radial-gradient repeat rgb rgba (rotate|scale|translate)(X|Y|Z|3d)? steps var".split(" "),
module$contents$goog$html$SafeStyle_FUNCTIONS_RE=new RegExp("\\\\b("+module$contents$goog$html$SafeStyle_ALLOWED_FUNCTIONS.join("|")+")\\\\([-+*/0-9a-zA-Z.%#\\\\[\\\\], ]+\\\\)","g"),module$contents$goog$html$SafeStyle_COMMENT_RE=/\\/\\*/;function module$contents$goog$html$SafeStyle_sanitizeUrl(a){return a.replace(module$contents$goog$html$SafeStyle_URL_RE,(b,c,d,e)=>{let f="";d=d.replace(/^(['"])(.*)\\1$/,(g,h,k)=>{f=h;return k});b=goog.html.SafeUrl.sanitize(d).getTypedStringValue();return c+f+b+f+e})}
goog.html.SafeStyle=module$contents$goog$html$SafeStyle_SafeStyle;goog.object={};function module$contents$goog$object_forEach(a,b,c){for(const d in a)b.call(c,a[d],d,a)}function module$contents$goog$object_filter(a,b,c){const d={};for(const e in a)b.call(c,a[e],e,a)&&(d[e]=a[e]);return d}function module$contents$goog$object_map(a,b,c){const d={};for(const e in a)d[e]=b.call(c,a[e],e,a);return d}function module$contents$goog$object_some(a,b,c){for(const d in a)if(b.call(c,a[d],d,a))return!0;return!1}
function module$contents$goog$object_every(a,b,c){for(const d in a)if(!b.call(c,a[d],d,a))return!1;return!0}function module$contents$goog$object_getCount(a){let b=0;for(const c in a)b++;return b}function module$contents$goog$object_getAnyKey(a){for(const b in a)return b}function module$contents$goog$object_getAnyValue(a){for(const b in a)return a[b]}function module$contents$goog$object_contains(a,b){return module$contents$goog$object_containsValue(a,b)}
function module$contents$goog$object_getValues(a){const b=[];let c=0;for(const d in a)b[c++]=a[d];return b}function module$contents$goog$object_getKeys(a){const b=[];let c=0;for(const d in a)b[c++]=d;return b}function module$contents$goog$object_getValueByKeys(a,b){var c=goog.isArrayLike(b);const d=c?b:arguments;for(c=c?0:1;c<d.length;c++){if(null==a)return;a=a[d[c]]}return a}function module$contents$goog$object_containsKey(a,b){return null!==a&&b in a}
function module$contents$goog$object_containsValue(a,b){for(const c in a)if(a[c]==b)return!0;return!1}function module$contents$goog$object_findKey(a,b,c){for(const d in a)if(b.call(c,a[d],d,a))return d}function module$contents$goog$object_findValue(a,b,c){return(b=module$contents$goog$object_findKey(a,b,c))&&a[b]}function module$contents$goog$object_isEmpty(a){for(const b in a)return!1;return!0}function module$contents$goog$object_clear(a){for(const b in a)delete a[b]}
function module$contents$goog$object_remove(a,b){let c;(c=b in a)&&delete a[b];return c}function module$contents$goog$object_add(a,b,c){if(null!==a&&b in a)throw Error(\`The object already contains the key "\${b}"\`);module$contents$goog$object_set(a,b,c)}function module$contents$goog$object_get(a,b,c){return null!==a&&b in a?a[b]:c}function module$contents$goog$object_set(a,b,c){a[b]=c}function module$contents$goog$object_setIfUndefined(a,b,c){return b in a?a[b]:a[b]=c}
function module$contents$goog$object_setWithReturnValueIfNotSet(a,b,c){if(b in a)return a[b];c=c();return a[b]=c}function module$contents$goog$object_equals(a,b){for(const c in a)if(!(c in b)||a[c]!==b[c])return!1;for(const c in b)if(!(c in a))return!1;return!0}function module$contents$goog$object_clone(a){const b={};for(const c in a)b[c]=a[c];return b}
function module$contents$goog$object_unsafeClone(a){if(!a||"object"!==typeof a)return a;if("function"===typeof a.clone)return a.clone();if("undefined"!==typeof Map&&a instanceof Map)return new Map(a);if("undefined"!==typeof Set&&a instanceof Set)return new Set(a);if(a instanceof Date)return new Date(a.getTime());const b=Array.isArray(a)?[]:"function"!==typeof ArrayBuffer||"function"!==typeof ArrayBuffer.isView||!ArrayBuffer.isView(a)||a instanceof DataView?{}:new a.constructor(a.length);for(const c in a)b[c]=
module$contents$goog$object_unsafeClone(a[c]);return b}function module$contents$goog$object_transpose(a){const b={};for(const c in a)b[a[c]]=c;return b}const module$contents$goog$object_PROTOTYPE_FIELDS="constructor hasOwnProperty isPrototypeOf propertyIsEnumerable toLocaleString toString valueOf".split(" ");
function module$contents$goog$object_extend(a,b){let c,d;for(let e=1;e<arguments.length;e++){d=arguments[e];for(c in d)a[c]=d[c];for(let f=0;f<module$contents$goog$object_PROTOTYPE_FIELDS.length;f++)c=module$contents$goog$object_PROTOTYPE_FIELDS[f],Object.prototype.hasOwnProperty.call(d,c)&&(a[c]=d[c])}}
function module$contents$goog$object_create(a){const b=arguments.length;if(1==b&&Array.isArray(arguments[0]))return module$contents$goog$object_create.apply(null,arguments[0]);if(b%2)throw Error("Uneven number of arguments");const c={};for(let d=0;d<b;d+=2)c[arguments[d]]=arguments[d+1];return c}
function module$contents$goog$object_createSet(a){const b=arguments.length;if(1==b&&Array.isArray(arguments[0]))return module$contents$goog$object_createSet.apply(null,arguments[0]);const c={};for(let d=0;d<b;d++)c[arguments[d]]=!0;return c}function module$contents$goog$object_createImmutableView(a){let b=a;Object.isFrozen&&!Object.isFrozen(a)&&(b=Object.create(a),Object.freeze(b));return b}function module$contents$goog$object_isImmutableView(a){return!!Object.isFrozen&&Object.isFrozen(a)}
function module$contents$goog$object_getAllPropertyNames(a,b,c){if(!a)return[];if(!Object.getOwnPropertyNames||!Object.getPrototypeOf)return module$contents$goog$object_getKeys(a);const d={};for(;a&&(a!==Object.prototype||b)&&(a!==Function.prototype||c);){const e=Object.getOwnPropertyNames(a);for(let f=0;f<e.length;f++)d[e[f]]=!0;a=Object.getPrototypeOf(a)}return module$contents$goog$object_getKeys(d)}
function module$contents$goog$object_getSuperClass(a){return(a=Object.getPrototypeOf(a.prototype))&&a.constructor}goog.object.add=module$contents$goog$object_add;goog.object.clear=module$contents$goog$object_clear;goog.object.clone=module$contents$goog$object_clone;goog.object.contains=module$contents$goog$object_contains;goog.object.containsKey=module$contents$goog$object_containsKey;goog.object.containsValue=module$contents$goog$object_containsValue;goog.object.create=module$contents$goog$object_create;
goog.object.createImmutableView=module$contents$goog$object_createImmutableView;goog.object.createSet=module$contents$goog$object_createSet;goog.object.equals=module$contents$goog$object_equals;goog.object.every=module$contents$goog$object_every;goog.object.extend=module$contents$goog$object_extend;goog.object.filter=module$contents$goog$object_filter;goog.object.findKey=module$contents$goog$object_findKey;goog.object.findValue=module$contents$goog$object_findValue;goog.object.forEach=module$contents$goog$object_forEach;
goog.object.get=module$contents$goog$object_get;goog.object.getAllPropertyNames=module$contents$goog$object_getAllPropertyNames;goog.object.getAnyKey=module$contents$goog$object_getAnyKey;goog.object.getAnyValue=module$contents$goog$object_getAnyValue;goog.object.getCount=module$contents$goog$object_getCount;goog.object.getKeys=module$contents$goog$object_getKeys;goog.object.getSuperClass=module$contents$goog$object_getSuperClass;goog.object.getValueByKeys=module$contents$goog$object_getValueByKeys;
goog.object.getValues=module$contents$goog$object_getValues;goog.object.isEmpty=module$contents$goog$object_isEmpty;goog.object.isImmutableView=module$contents$goog$object_isImmutableView;goog.object.map=module$contents$goog$object_map;goog.object.remove=module$contents$goog$object_remove;goog.object.set=module$contents$goog$object_set;goog.object.setIfUndefined=module$contents$goog$object_setIfUndefined;goog.object.setWithReturnValueIfNotSet=module$contents$goog$object_setWithReturnValueIfNotSet;
goog.object.some=module$contents$goog$object_some;goog.object.transpose=module$contents$goog$object_transpose;goog.object.unsafeClone=module$contents$goog$object_unsafeClone;const module$contents$goog$html$SafeStyleSheet_CONSTRUCTOR_TOKEN_PRIVATE={};
class module$contents$goog$html$SafeStyleSheet_SafeStyleSheet{constructor(a,b){this.privateDoNotAccessOrElseSafeStyleSheetWrappedValue_=b===module$contents$goog$html$SafeStyleSheet_CONSTRUCTOR_TOKEN_PRIVATE?a:"";this.implementsGoogStringTypedString=!0}toString(){return this.privateDoNotAccessOrElseSafeStyleSheetWrappedValue_.toString()}static createRule(a,b){if((0,goog.string.internal.contains)(a,"<"))throw Error(\`Selector does not allow '<', got: \${a}\`);const c=a.replace(/('|")((?!\\1)[^\\r\\n\\f\\\\]|\\\\[\\s\\S])*\\1/g,
"");if(!/^[-_a-zA-Z0-9#.:* ,>+~[\\]()=^$|]+$/.test(c))throw Error("Selector allows only [-_a-zA-Z0-9#.:* ,>+~[\\\\]()=^$|] and strings, got: "+a);if(!module$contents$goog$html$SafeStyleSheet_SafeStyleSheet.hasBalancedBrackets_(c))throw Error("() and [] in selector must be balanced, got: "+a);b instanceof module$contents$goog$html$SafeStyle_SafeStyle||(b=module$contents$goog$html$SafeStyle_SafeStyle.create(b));a=\`\${a}{\`+module$contents$goog$html$SafeStyle_SafeStyle.unwrap(b).replace(/</g,"\\\\3C ")+"}";
return module$contents$goog$html$SafeStyleSheet_SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse(a)}static hasBalancedBrackets_(a){const b={"(":")","[":"]"},c=[];for(let d=0;d<a.length;d++){const e=a[d];if(b[e])c.push(b[e]);else if(module$contents$goog$object_contains(b,e)&&c.pop()!=e)return!1}return 0==c.length}static concat(a){let b="";const c=d=>{Array.isArray(d)?d.forEach(c):b+=module$contents$goog$html$SafeStyleSheet_SafeStyleSheet.unwrap(d)};Array.prototype.forEach.call(arguments,
c);return module$contents$goog$html$SafeStyleSheet_SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse(b)}static fromConstant(a){a=goog.string.Const.unwrap(a);if(0===a.length)return module$contents$goog$html$SafeStyleSheet_SafeStyleSheet.EMPTY;(0,goog.asserts.assert)(!(0,goog.string.internal.contains)(a,"<"),\`Forbidden '<' character in style sheet string: \${a}\`);return module$contents$goog$html$SafeStyleSheet_SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse(a)}getTypedStringValue(){return this.privateDoNotAccessOrElseSafeStyleSheetWrappedValue_}static unwrap(a){if(a instanceof
module$contents$goog$html$SafeStyleSheet_SafeStyleSheet&&a.constructor===module$contents$goog$html$SafeStyleSheet_SafeStyleSheet)return a.privateDoNotAccessOrElseSafeStyleSheetWrappedValue_;(0,goog.asserts.fail)("expected object of type SafeStyleSheet, got '"+a+"' of type "+goog.typeOf(a));return"type_error:SafeStyleSheet"}static createSafeStyleSheetSecurityPrivateDoNotAccessOrElse(a){return new module$contents$goog$html$SafeStyleSheet_SafeStyleSheet(a,module$contents$goog$html$SafeStyleSheet_CONSTRUCTOR_TOKEN_PRIVATE)}}
module$contents$goog$html$SafeStyleSheet_SafeStyleSheet.EMPTY=module$contents$goog$html$SafeStyleSheet_SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse("");goog.html.SafeStyleSheet=module$contents$goog$html$SafeStyleSheet_SafeStyleSheet;goog.dom.HtmlElement=function(){};goog.dom.TagName=class{static cast(a,b){return a}constructor(){}toString(){}};goog.dom.TagName.A="A";goog.dom.TagName.ABBR="ABBR";goog.dom.TagName.ACRONYM="ACRONYM";goog.dom.TagName.ADDRESS="ADDRESS";goog.dom.TagName.APPLET="APPLET";goog.dom.TagName.AREA="AREA";goog.dom.TagName.ARTICLE="ARTICLE";goog.dom.TagName.ASIDE="ASIDE";goog.dom.TagName.AUDIO="AUDIO";goog.dom.TagName.B="B";goog.dom.TagName.BASE="BASE";goog.dom.TagName.BASEFONT="BASEFONT";goog.dom.TagName.BDI="BDI";goog.dom.TagName.BDO="BDO";
goog.dom.TagName.BIG="BIG";goog.dom.TagName.BLOCKQUOTE="BLOCKQUOTE";goog.dom.TagName.BODY="BODY";goog.dom.TagName.BR="BR";goog.dom.TagName.BUTTON="BUTTON";goog.dom.TagName.CANVAS="CANVAS";goog.dom.TagName.CAPTION="CAPTION";goog.dom.TagName.CENTER="CENTER";goog.dom.TagName.CITE="CITE";goog.dom.TagName.CODE="CODE";goog.dom.TagName.COL="COL";goog.dom.TagName.COLGROUP="COLGROUP";goog.dom.TagName.COMMAND="COMMAND";goog.dom.TagName.DATA="DATA";goog.dom.TagName.DATALIST="DATALIST";goog.dom.TagName.DD="DD";
goog.dom.TagName.DEL="DEL";goog.dom.TagName.DETAILS="DETAILS";goog.dom.TagName.DFN="DFN";goog.dom.TagName.DIALOG="DIALOG";goog.dom.TagName.DIR="DIR";goog.dom.TagName.DIV="DIV";goog.dom.TagName.DL="DL";goog.dom.TagName.DT="DT";goog.dom.TagName.EM="EM";goog.dom.TagName.EMBED="EMBED";goog.dom.TagName.FIELDSET="FIELDSET";goog.dom.TagName.FIGCAPTION="FIGCAPTION";goog.dom.TagName.FIGURE="FIGURE";goog.dom.TagName.FONT="FONT";goog.dom.TagName.FOOTER="FOOTER";goog.dom.TagName.FORM="FORM";
goog.dom.TagName.FRAME="FRAME";goog.dom.TagName.FRAMESET="FRAMESET";goog.dom.TagName.H1="H1";goog.dom.TagName.H2="H2";goog.dom.TagName.H3="H3";goog.dom.TagName.H4="H4";goog.dom.TagName.H5="H5";goog.dom.TagName.H6="H6";goog.dom.TagName.HEAD="HEAD";goog.dom.TagName.HEADER="HEADER";goog.dom.TagName.HGROUP="HGROUP";goog.dom.TagName.HR="HR";goog.dom.TagName.HTML="HTML";goog.dom.TagName.I="I";goog.dom.TagName.IFRAME="IFRAME";goog.dom.TagName.IMG="IMG";goog.dom.TagName.INPUT="INPUT";
goog.dom.TagName.INS="INS";goog.dom.TagName.ISINDEX="ISINDEX";goog.dom.TagName.KBD="KBD";goog.dom.TagName.KEYGEN="KEYGEN";goog.dom.TagName.LABEL="LABEL";goog.dom.TagName.LEGEND="LEGEND";goog.dom.TagName.LI="LI";goog.dom.TagName.LINK="LINK";goog.dom.TagName.MAIN="MAIN";goog.dom.TagName.MAP="MAP";goog.dom.TagName.MARK="MARK";goog.dom.TagName.MATH="MATH";goog.dom.TagName.MENU="MENU";goog.dom.TagName.MENUITEM="MENUITEM";goog.dom.TagName.META="META";goog.dom.TagName.METER="METER";
goog.dom.TagName.NAV="NAV";goog.dom.TagName.NOFRAMES="NOFRAMES";goog.dom.TagName.NOSCRIPT="NOSCRIPT";goog.dom.TagName.OBJECT="OBJECT";goog.dom.TagName.OL="OL";goog.dom.TagName.OPTGROUP="OPTGROUP";goog.dom.TagName.OPTION="OPTION";goog.dom.TagName.OUTPUT="OUTPUT";goog.dom.TagName.P="P";goog.dom.TagName.PARAM="PARAM";goog.dom.TagName.PICTURE="PICTURE";goog.dom.TagName.PRE="PRE";goog.dom.TagName.PROGRESS="PROGRESS";goog.dom.TagName.Q="Q";goog.dom.TagName.RP="RP";goog.dom.TagName.RT="RT";
goog.dom.TagName.RTC="RTC";goog.dom.TagName.RUBY="RUBY";goog.dom.TagName.S="S";goog.dom.TagName.SAMP="SAMP";goog.dom.TagName.SCRIPT="SCRIPT";goog.dom.TagName.SECTION="SECTION";goog.dom.TagName.SELECT="SELECT";goog.dom.TagName.SMALL="SMALL";goog.dom.TagName.SOURCE="SOURCE";goog.dom.TagName.SPAN="SPAN";goog.dom.TagName.STRIKE="STRIKE";goog.dom.TagName.STRONG="STRONG";goog.dom.TagName.STYLE="STYLE";goog.dom.TagName.SUB="SUB";goog.dom.TagName.SUMMARY="SUMMARY";goog.dom.TagName.SUP="SUP";
goog.dom.TagName.SVG="SVG";goog.dom.TagName.TABLE="TABLE";goog.dom.TagName.TBODY="TBODY";goog.dom.TagName.TD="TD";goog.dom.TagName.TEMPLATE="TEMPLATE";goog.dom.TagName.TEXTAREA="TEXTAREA";goog.dom.TagName.TFOOT="TFOOT";goog.dom.TagName.TH="TH";goog.dom.TagName.THEAD="THEAD";goog.dom.TagName.TIME="TIME";goog.dom.TagName.TITLE="TITLE";goog.dom.TagName.TR="TR";goog.dom.TagName.TRACK="TRACK";goog.dom.TagName.TT="TT";goog.dom.TagName.U="U";goog.dom.TagName.UL="UL";goog.dom.TagName.VAR="VAR";
goog.dom.TagName.VIDEO="VIDEO";goog.dom.TagName.WBR="WBR";goog.labs={};goog.labs.userAgent={};const module$contents$goog$labs$userAgent_USE_CLIENT_HINTS_OVERRIDE="",module$contents$goog$labs$userAgent_USE_CLIENT_HINTS=!1;let module$contents$goog$labs$userAgent_forceClientHintsInTests=!1;goog.labs.userAgent.setUseClientHintsForTesting=a=>{module$contents$goog$labs$userAgent_forceClientHintsInTests=a};
const module$contents$goog$labs$userAgent_useClientHintsRuntimeOverride=module$contents$goog$labs$userAgent_USE_CLIENT_HINTS_OVERRIDE?!!goog.getObjectByName(module$contents$goog$labs$userAgent_USE_CLIENT_HINTS_OVERRIDE):!1;goog.labs.userAgent.useClientHints=()=>module$contents$goog$labs$userAgent_USE_CLIENT_HINTS||module$contents$goog$labs$userAgent_useClientHintsRuntimeOverride||module$contents$goog$labs$userAgent_forceClientHintsInTests;goog.labs.userAgent.util={};const module$contents$goog$labs$userAgent$util_ASSUME_CLIENT_HINTS_SUPPORT=!1;function module$contents$goog$labs$userAgent$util_getNativeUserAgentString(){var a=module$contents$goog$labs$userAgent$util_getNavigator();return a&&(a=a.userAgent)?a:""}function module$contents$goog$labs$userAgent$util_getNativeUserAgentData(){const a=module$contents$goog$labs$userAgent$util_getNavigator();return a?a.userAgentData||null:null}
function module$contents$goog$labs$userAgent$util_getNavigator(){return goog.global.navigator}let module$contents$goog$labs$userAgent$util_userAgentInternal=null,module$contents$goog$labs$userAgent$util_userAgentDataInternal=module$contents$goog$labs$userAgent$util_getNativeUserAgentData();
function module$contents$goog$labs$userAgent$util_setUserAgent(a){module$contents$goog$labs$userAgent$util_userAgentInternal="string"===typeof a?a:module$contents$goog$labs$userAgent$util_getNativeUserAgentString()}function module$contents$goog$labs$userAgent$util_getUserAgent(){return null==module$contents$goog$labs$userAgent$util_userAgentInternal?module$contents$goog$labs$userAgent$util_getNativeUserAgentString():module$contents$goog$labs$userAgent$util_userAgentInternal}
function module$contents$goog$labs$userAgent$util_setUserAgentData(a){module$contents$goog$labs$userAgent$util_userAgentDataInternal=a}function module$contents$goog$labs$userAgent$util_resetUserAgentData(){module$contents$goog$labs$userAgent$util_userAgentDataInternal=module$contents$goog$labs$userAgent$util_getNativeUserAgentData()}function module$contents$goog$labs$userAgent$util_getUserAgentData(){return module$contents$goog$labs$userAgent$util_userAgentDataInternal}
function module$contents$goog$labs$userAgent$util_matchUserAgentDataBrand(a){if(!(0,goog.labs.userAgent.useClientHints)())return!1;const b=module$contents$goog$labs$userAgent$util_getUserAgentData();return b?b.brands.some(({brand:c})=>c&&(0,goog.string.internal.contains)(c,a)):!1}function module$contents$goog$labs$userAgent$util_matchUserAgent(a){const b=module$contents$goog$labs$userAgent$util_getUserAgent();return(0,goog.string.internal.contains)(b,a)}
function module$contents$goog$labs$userAgent$util_matchUserAgentIgnoreCase(a){const b=module$contents$goog$labs$userAgent$util_getUserAgent();return(0,goog.string.internal.caseInsensitiveContains)(b,a)}function module$contents$goog$labs$userAgent$util_extractVersionTuples(a){const b=RegExp("([A-Z][\\\\w ]+)/([^\\\\s]+)\\\\s*(?:\\\\((.*?)\\\\))?","g"),c=[];let d;for(;d=b.exec(a);)c.push([d[1],d[2],d[3]||void 0]);return c}goog.labs.userAgent.util.ASSUME_CLIENT_HINTS_SUPPORT=module$contents$goog$labs$userAgent$util_ASSUME_CLIENT_HINTS_SUPPORT;
goog.labs.userAgent.util.extractVersionTuples=module$contents$goog$labs$userAgent$util_extractVersionTuples;goog.labs.userAgent.util.getNativeUserAgentString=module$contents$goog$labs$userAgent$util_getNativeUserAgentString;goog.labs.userAgent.util.getUserAgent=module$contents$goog$labs$userAgent$util_getUserAgent;goog.labs.userAgent.util.getUserAgentData=module$contents$goog$labs$userAgent$util_getUserAgentData;goog.labs.userAgent.util.matchUserAgent=module$contents$goog$labs$userAgent$util_matchUserAgent;
goog.labs.userAgent.util.matchUserAgentDataBrand=module$contents$goog$labs$userAgent$util_matchUserAgentDataBrand;goog.labs.userAgent.util.matchUserAgentIgnoreCase=module$contents$goog$labs$userAgent$util_matchUserAgentIgnoreCase;goog.labs.userAgent.util.resetUserAgentData=module$contents$goog$labs$userAgent$util_resetUserAgentData;goog.labs.userAgent.util.setUserAgent=module$contents$goog$labs$userAgent$util_setUserAgent;goog.labs.userAgent.util.setUserAgentData=module$contents$goog$labs$userAgent$util_setUserAgentData;var module$exports$goog$labs$userAgent$highEntropy$highEntropyValue={AsyncValue:class{getIfLoaded(){}load(){}},HighEntropyValue:class{constructor(a){this.key_=a;this.promise_=this.value_=void 0;this.pending_=!1}getIfLoaded(){if(module$contents$goog$labs$userAgent$util_getUserAgentData())return this.value_}async load(){const a=module$contents$goog$labs$userAgent$util_getUserAgentData();if(a)return this.promise_||(this.pending_=!0,this.promise_=(async()=>{try{return this.value_=(await a.getHighEntropyValues([this.key_]))[this.key_]}finally{this.pending_=
!1}})()),await this.promise_}resetForTesting(){if(this.pending_)throw Error("Unsafe call to resetForTesting");this.value_=this.promise_=void 0;this.pending_=!1}},Version:class{constructor(a){this.versionString_=a}toVersionStringForLogging(){return this.versionString_}isAtLeast(a){return 0<=(0,goog.string.internal.compareVersions)(this.versionString_,a)}}};var module$exports$goog$labs$userAgent$highEntropy$highEntropyData={};module$exports$goog$labs$userAgent$highEntropy$highEntropyData.fullVersionList=new module$exports$goog$labs$userAgent$highEntropy$highEntropyValue.HighEntropyValue("fullVersionList");module$exports$goog$labs$userAgent$highEntropy$highEntropyData.platformVersion=new module$exports$goog$labs$userAgent$highEntropy$highEntropyValue.HighEntropyValue("platformVersion");goog.labs.userAgent.browser={};const module$contents$goog$labs$userAgent$browser_Brand={ANDROID_BROWSER:"Android Browser",CHROMIUM:"Chromium",EDGE:"Microsoft Edge",FIREFOX:"Firefox",IE:"Internet Explorer",OPERA:"Opera",SAFARI:"Safari",SILK:"Silk"};goog.labs.userAgent.browser.Brand=module$contents$goog$labs$userAgent$browser_Brand;
function module$contents$goog$labs$userAgent$browser_useUserAgentDataBrand(a=!1){if(module$contents$goog$labs$userAgent$util_ASSUME_CLIENT_HINTS_SUPPORT)return!0;if(!a&&!(0,goog.labs.userAgent.useClientHints)())return!1;a=module$contents$goog$labs$userAgent$util_getUserAgentData();return!!a&&0<a.brands.length}
function module$contents$goog$labs$userAgent$browser_hasFullVersionList(){return module$contents$goog$labs$userAgent$browser_isAtLeast(module$contents$goog$labs$userAgent$browser_Brand.CHROMIUM,98)}function module$contents$goog$labs$userAgent$browser_matchOpera(){return module$contents$goog$labs$userAgent$browser_useUserAgentDataBrand()?!1:module$contents$goog$labs$userAgent$util_matchUserAgent("Opera")}
function module$contents$goog$labs$userAgent$browser_matchIE(){return module$contents$goog$labs$userAgent$browser_useUserAgentDataBrand()?!1:module$contents$goog$labs$userAgent$util_matchUserAgent("Trident")||module$contents$goog$labs$userAgent$util_matchUserAgent("MSIE")}function module$contents$goog$labs$userAgent$browser_matchEdgeHtml(){return module$contents$goog$labs$userAgent$browser_useUserAgentDataBrand()?!1:module$contents$goog$labs$userAgent$util_matchUserAgent("Edge")}
function module$contents$goog$labs$userAgent$browser_matchEdgeChromium(){return module$contents$goog$labs$userAgent$browser_useUserAgentDataBrand()?module$contents$goog$labs$userAgent$util_matchUserAgentDataBrand(module$contents$goog$labs$userAgent$browser_Brand.EDGE):module$contents$goog$labs$userAgent$util_matchUserAgent("Edg/")}
function module$contents$goog$labs$userAgent$browser_matchOperaChromium(){return module$contents$goog$labs$userAgent$browser_useUserAgentDataBrand()?module$contents$goog$labs$userAgent$util_matchUserAgentDataBrand(module$contents$goog$labs$userAgent$browser_Brand.OPERA):module$contents$goog$labs$userAgent$util_matchUserAgent("OPR")}
function module$contents$goog$labs$userAgent$browser_matchFirefox(){return module$contents$goog$labs$userAgent$util_matchUserAgent("Firefox")||module$contents$goog$labs$userAgent$util_matchUserAgent("FxiOS")}
function module$contents$goog$labs$userAgent$browser_matchSafari(){return module$contents$goog$labs$userAgent$util_matchUserAgent("Safari")&&!(module$contents$goog$labs$userAgent$browser_matchChrome()||module$contents$goog$labs$userAgent$browser_matchCoast()||module$contents$goog$labs$userAgent$browser_matchOpera()||module$contents$goog$labs$userAgent$browser_matchEdgeHtml()||module$contents$goog$labs$userAgent$browser_matchEdgeChromium()||module$contents$goog$labs$userAgent$browser_matchOperaChromium()||
module$contents$goog$labs$userAgent$browser_matchFirefox()||module$contents$goog$labs$userAgent$browser_isSilk()||module$contents$goog$labs$userAgent$util_matchUserAgent("Android"))}function module$contents$goog$labs$userAgent$browser_matchCoast(){return module$contents$goog$labs$userAgent$browser_useUserAgentDataBrand()?!1:module$contents$goog$labs$userAgent$util_matchUserAgent("Coast")}
function module$contents$goog$labs$userAgent$browser_matchIosWebview(){return(module$contents$goog$labs$userAgent$util_matchUserAgent("iPad")||module$contents$goog$labs$userAgent$util_matchUserAgent("iPhone"))&&!module$contents$goog$labs$userAgent$browser_matchSafari()&&!module$contents$goog$labs$userAgent$browser_matchChrome()&&!module$contents$goog$labs$userAgent$browser_matchCoast()&&!module$contents$goog$labs$userAgent$browser_matchFirefox()&&module$contents$goog$labs$userAgent$util_matchUserAgent("AppleWebKit")}
function module$contents$goog$labs$userAgent$browser_matchChrome(){return module$contents$goog$labs$userAgent$browser_useUserAgentDataBrand()?module$contents$goog$labs$userAgent$util_matchUserAgentDataBrand(module$contents$goog$labs$userAgent$browser_Brand.CHROMIUM):(module$contents$goog$labs$userAgent$util_matchUserAgent("Chrome")||module$contents$goog$labs$userAgent$util_matchUserAgent("CriOS"))&&!module$contents$goog$labs$userAgent$browser_matchEdgeHtml()||module$contents$goog$labs$userAgent$browser_isSilk()}
function module$contents$goog$labs$userAgent$browser_matchAndroidBrowser(){return module$contents$goog$labs$userAgent$util_matchUserAgent("Android")&&!(module$contents$goog$labs$userAgent$browser_matchChrome()||module$contents$goog$labs$userAgent$browser_matchFirefox()||module$contents$goog$labs$userAgent$browser_matchOpera()||module$contents$goog$labs$userAgent$browser_isSilk())}const module$contents$goog$labs$userAgent$browser_isOpera=module$contents$goog$labs$userAgent$browser_matchOpera;
goog.labs.userAgent.browser.isOpera=module$contents$goog$labs$userAgent$browser_matchOpera;const module$contents$goog$labs$userAgent$browser_isIE=module$contents$goog$labs$userAgent$browser_matchIE;goog.labs.userAgent.browser.isIE=module$contents$goog$labs$userAgent$browser_matchIE;const module$contents$goog$labs$userAgent$browser_isEdge=module$contents$goog$labs$userAgent$browser_matchEdgeHtml;goog.labs.userAgent.browser.isEdge=module$contents$goog$labs$userAgent$browser_matchEdgeHtml;
const module$contents$goog$labs$userAgent$browser_isEdgeChromium=module$contents$goog$labs$userAgent$browser_matchEdgeChromium;goog.labs.userAgent.browser.isEdgeChromium=module$contents$goog$labs$userAgent$browser_matchEdgeChromium;const module$contents$goog$labs$userAgent$browser_isOperaChromium=module$contents$goog$labs$userAgent$browser_matchOperaChromium;goog.labs.userAgent.browser.isOperaChromium=module$contents$goog$labs$userAgent$browser_matchOperaChromium;
const module$contents$goog$labs$userAgent$browser_isFirefox=module$contents$goog$labs$userAgent$browser_matchFirefox;goog.labs.userAgent.browser.isFirefox=module$contents$goog$labs$userAgent$browser_matchFirefox;const module$contents$goog$labs$userAgent$browser_isSafari=module$contents$goog$labs$userAgent$browser_matchSafari;goog.labs.userAgent.browser.isSafari=module$contents$goog$labs$userAgent$browser_matchSafari;const module$contents$goog$labs$userAgent$browser_isCoast=module$contents$goog$labs$userAgent$browser_matchCoast;
goog.labs.userAgent.browser.isCoast=module$contents$goog$labs$userAgent$browser_matchCoast;const module$contents$goog$labs$userAgent$browser_isIosWebview=module$contents$goog$labs$userAgent$browser_matchIosWebview;goog.labs.userAgent.browser.isIosWebview=module$contents$goog$labs$userAgent$browser_matchIosWebview;const module$contents$goog$labs$userAgent$browser_isChrome=module$contents$goog$labs$userAgent$browser_matchChrome;goog.labs.userAgent.browser.isChrome=module$contents$goog$labs$userAgent$browser_matchChrome;
const module$contents$goog$labs$userAgent$browser_isAndroidBrowser=module$contents$goog$labs$userAgent$browser_matchAndroidBrowser;goog.labs.userAgent.browser.isAndroidBrowser=module$contents$goog$labs$userAgent$browser_matchAndroidBrowser;function module$contents$goog$labs$userAgent$browser_isSilk(){return module$contents$goog$labs$userAgent$util_matchUserAgent("Silk")}goog.labs.userAgent.browser.isSilk=module$contents$goog$labs$userAgent$browser_isSilk;
function module$contents$goog$labs$userAgent$browser_createVersionMap(a){const b={};a.forEach(c=>{b[c[0]]=c[1]});return c=>b[c.find(d=>d in b)]||""}
function module$contents$goog$labs$userAgent$browser_getVersion(){var a=module$contents$goog$labs$userAgent$util_getUserAgent();if(module$contents$goog$labs$userAgent$browser_matchIE())return module$contents$goog$labs$userAgent$browser_getIEVersion(a);a=module$contents$goog$labs$userAgent$util_extractVersionTuples(a);const b=module$contents$goog$labs$userAgent$browser_createVersionMap(a);return module$contents$goog$labs$userAgent$browser_matchOpera()?b(["Version","Opera"]):module$contents$goog$labs$userAgent$browser_matchEdgeHtml()?
b(["Edge"]):module$contents$goog$labs$userAgent$browser_matchEdgeChromium()?b(["Edg"]):module$contents$goog$labs$userAgent$browser_isSilk()?b(["Silk"]):module$contents$goog$labs$userAgent$browser_matchChrome()?b(["Chrome","CriOS","HeadlessChrome"]):(a=a[2])&&a[1]||""}goog.labs.userAgent.browser.getVersion=module$contents$goog$labs$userAgent$browser_getVersion;
function module$contents$goog$labs$userAgent$browser_isVersionOrHigher(a){return 0<=(0,goog.string.internal.compareVersions)(module$contents$goog$labs$userAgent$browser_getVersion(),a)}goog.labs.userAgent.browser.isVersionOrHigher=module$contents$goog$labs$userAgent$browser_isVersionOrHigher;
function module$contents$goog$labs$userAgent$browser_getIEVersion(a){var b=/rv: *([\\d\\.]*)/.exec(a);if(b&&b[1])return b[1];b="";const c=/MSIE +([\\d\\.]+)/.exec(a);if(c&&c[1])if(a=/Trident\\/(\\d.\\d)/.exec(a),"7.0"==c[1])if(a&&a[1])switch(a[1]){case "4.0":b="8.0";break;case "5.0":b="9.0";break;case "6.0":b="10.0";break;case "7.0":b="11.0"}else b="7.0";else b=c[1];return b}
function module$contents$goog$labs$userAgent$browser_getFullVersionFromUserAgentString(a){var b=module$contents$goog$labs$userAgent$util_getUserAgent();if(a===module$contents$goog$labs$userAgent$browser_Brand.IE)return module$contents$goog$labs$userAgent$browser_matchIE()?module$contents$goog$labs$userAgent$browser_getIEVersion(b):"";b=module$contents$goog$labs$userAgent$util_extractVersionTuples(b);const c=module$contents$goog$labs$userAgent$browser_createVersionMap(b);switch(a){case module$contents$goog$labs$userAgent$browser_Brand.OPERA:if(module$contents$goog$labs$userAgent$browser_matchOpera())return c(["Version",
"Opera"]);if(module$contents$goog$labs$userAgent$browser_matchOperaChromium())return c(["OPR"]);break;case module$contents$goog$labs$userAgent$browser_Brand.EDGE:if(module$contents$goog$labs$userAgent$browser_matchEdgeHtml())return c(["Edge"]);if(module$contents$goog$labs$userAgent$browser_matchEdgeChromium())return c(["Edg"]);break;case module$contents$goog$labs$userAgent$browser_Brand.CHROMIUM:if(module$contents$goog$labs$userAgent$browser_matchChrome())return c(["Chrome","CriOS","HeadlessChrome"])}return a===
module$contents$goog$labs$userAgent$browser_Brand.FIREFOX&&module$contents$goog$labs$userAgent$browser_matchFirefox()||a===module$contents$goog$labs$userAgent$browser_Brand.SAFARI&&module$contents$goog$labs$userAgent$browser_matchSafari()||a===module$contents$goog$labs$userAgent$browser_Brand.ANDROID_BROWSER&&module$contents$goog$labs$userAgent$browser_matchAndroidBrowser()||a===module$contents$goog$labs$userAgent$browser_Brand.SILK&&module$contents$goog$labs$userAgent$browser_isSilk()?(a=b[2])&&
a[1]||"":""}
function module$contents$goog$labs$userAgent$browser_versionOf_(a){if(module$contents$goog$labs$userAgent$browser_useUserAgentDataBrand()&&a!==module$contents$goog$labs$userAgent$browser_Brand.SILK){var b=module$contents$goog$labs$userAgent$util_getUserAgentData().brands.find(({brand:c})=>c===a);if(!b||!b.version)return NaN;b=b.version.split(".")}else{b=module$contents$goog$labs$userAgent$browser_getFullVersionFromUserAgentString(a);if(""===b)return NaN;b=b.split(".")}return 0===b.length?NaN:Number(b[0])}
function module$contents$goog$labs$userAgent$browser_isAtLeast(a,b){(0,goog.asserts.assert)(Math.floor(b)===b,"Major version must be an integer");return module$contents$goog$labs$userAgent$browser_versionOf_(a)>=b}goog.labs.userAgent.browser.isAtLeast=module$contents$goog$labs$userAgent$browser_isAtLeast;
function module$contents$goog$labs$userAgent$browser_isAtMost(a,b){(0,goog.asserts.assert)(Math.floor(b)===b,"Major version must be an integer");return module$contents$goog$labs$userAgent$browser_versionOf_(a)<=b}goog.labs.userAgent.browser.isAtMost=module$contents$goog$labs$userAgent$browser_isAtMost;
class module$contents$goog$labs$userAgent$browser_HighEntropyBrandVersion{constructor(a,b,c){this.brand_=a;this.version_=new module$exports$goog$labs$userAgent$highEntropy$highEntropyValue.Version(c);this.useUach_=b}getIfLoaded(){if(this.useUach_){var a=module$exports$goog$labs$userAgent$highEntropy$highEntropyData.fullVersionList.getIfLoaded();if(void 0!==a)return a=a.find(({brand:b})=>this.brand_===b),(0,goog.asserts.assertExists)(a),new module$exports$goog$labs$userAgent$highEntropy$highEntropyValue.Version(a.version)}if(module$contents$goog$labs$userAgent$browser_preUachHasLoaded)return this.version_}async load(){if(this.useUach_){var a=
await module$exports$goog$labs$userAgent$highEntropy$highEntropyData.fullVersionList.load();if(void 0!==a)return a=a.find(({brand:b})=>this.brand_===b),(0,goog.asserts.assertExists)(a),new module$exports$goog$labs$userAgent$highEntropy$highEntropyValue.Version(a.version)}else await 0;module$contents$goog$labs$userAgent$browser_preUachHasLoaded=!0;return this.version_}}let module$contents$goog$labs$userAgent$browser_preUachHasLoaded=!1;
async function module$contents$goog$labs$userAgent$browser_loadFullVersions(){module$contents$goog$labs$userAgent$browser_useUserAgentDataBrand(!0)&&await module$exports$goog$labs$userAgent$highEntropy$highEntropyData.fullVersionList.load();module$contents$goog$labs$userAgent$browser_preUachHasLoaded=!0}goog.labs.userAgent.browser.loadFullVersions=module$contents$goog$labs$userAgent$browser_loadFullVersions;
goog.labs.userAgent.browser.resetForTesting=()=>{module$contents$goog$labs$userAgent$browser_preUachHasLoaded=!1;module$exports$goog$labs$userAgent$highEntropy$highEntropyData.fullVersionList.resetForTesting()};
function module$contents$goog$labs$userAgent$browser_fullVersionOf(a){let b="";module$contents$goog$labs$userAgent$browser_hasFullVersionList()||(b=module$contents$goog$labs$userAgent$browser_getFullVersionFromUserAgentString(a));const c=a!==module$contents$goog$labs$userAgent$browser_Brand.SILK&&module$contents$goog$labs$userAgent$browser_useUserAgentDataBrand(!0);if(c){if(!module$contents$goog$labs$userAgent$util_getUserAgentData().brands.find(({brand:d})=>d===a))return}else if(""===b)return;return new module$contents$goog$labs$userAgent$browser_HighEntropyBrandVersion(a,
c,b)}goog.labs.userAgent.browser.fullVersionOf=module$contents$goog$labs$userAgent$browser_fullVersionOf;
function module$contents$goog$labs$userAgent$browser_getVersionStringForLogging(a){if(module$contents$goog$labs$userAgent$browser_useUserAgentDataBrand(!0)){var b=module$contents$goog$labs$userAgent$browser_fullVersionOf(a);if(b){if(b=b.getIfLoaded())return b.toVersionStringForLogging();b=module$contents$goog$labs$userAgent$util_getUserAgentData().brands.find(({brand:c})=>c===a);(0,goog.asserts.assertExists)(b);return b.version}return""}return module$contents$goog$labs$userAgent$browser_getFullVersionFromUserAgentString(a)}
goog.labs.userAgent.browser.getVersionStringForLogging=module$contents$goog$labs$userAgent$browser_getVersionStringForLogging;goog.dom.tags={};goog.dom.tags.VOID_TAGS_={area:!0,base:!0,br:!0,col:!0,command:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0};goog.dom.tags.isVoidTag=function(a){return!0===goog.dom.tags.VOID_TAGS_[a]};const module$contents$goog$html$SafeHtml_CONSTRUCTOR_TOKEN_PRIVATE={};
class module$contents$goog$html$SafeHtml_SafeHtml{constructor(a,b){this.privateDoNotAccessOrElseSafeHtmlWrappedValue_=b===module$contents$goog$html$SafeHtml_CONSTRUCTOR_TOKEN_PRIVATE?a:"";this.implementsGoogStringTypedString=!0}getTypedStringValue(){return this.privateDoNotAccessOrElseSafeHtmlWrappedValue_.toString()}toString(){return this.privateDoNotAccessOrElseSafeHtmlWrappedValue_.toString()}static unwrap(a){return module$contents$goog$html$SafeHtml_SafeHtml.unwrapTrustedHTML(a).toString()}static unwrapTrustedHTML(a){if(a instanceof module$contents$goog$html$SafeHtml_SafeHtml&&
a.constructor===module$contents$goog$html$SafeHtml_SafeHtml)return a.privateDoNotAccessOrElseSafeHtmlWrappedValue_;goog.asserts.fail(\`expected object of type SafeHtml, got '\${a}' of type \`+goog.typeOf(a));return"type_error:SafeHtml"}static htmlEscape(a){if(a instanceof module$contents$goog$html$SafeHtml_SafeHtml)return a;a="object"==typeof a&&a.implementsGoogStringTypedString?a.getTypedStringValue():String(a);return module$contents$goog$html$SafeHtml_SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(goog.string.internal.htmlEscape(a))}static htmlEscapePreservingNewlines(a){if(a instanceof
module$contents$goog$html$SafeHtml_SafeHtml)return a;a=module$contents$goog$html$SafeHtml_SafeHtml.htmlEscape(a);return module$contents$goog$html$SafeHtml_SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(goog.string.internal.newLineToBr(module$contents$goog$html$SafeHtml_SafeHtml.unwrap(a)))}static htmlEscapePreservingNewlinesAndSpaces(a){if(a instanceof module$contents$goog$html$SafeHtml_SafeHtml)return a;a=module$contents$goog$html$SafeHtml_SafeHtml.htmlEscape(a);return module$contents$goog$html$SafeHtml_SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(goog.string.internal.whitespaceEscape(module$contents$goog$html$SafeHtml_SafeHtml.unwrap(a)))}static comment(a){return module$contents$goog$html$SafeHtml_SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse("\\x3c!--"+
goog.string.internal.htmlEscape(a)+"--\\x3e")}static create(a,b,c){module$contents$goog$html$SafeHtml_SafeHtml.verifyTagName(String(a));return module$contents$goog$html$SafeHtml_SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse(String(a),b,c)}static verifyTagName(a){if(!module$contents$goog$html$SafeHtml_VALID_NAMES_IN_TAG.test(a))throw Error(module$contents$goog$html$SafeHtml_SafeHtml.ENABLE_ERROR_MESSAGES?\`Invalid tag name <\${a}>.\`:"");if(a.toUpperCase()in module$contents$goog$html$SafeHtml_NOT_ALLOWED_TAG_NAMES)throw Error(module$contents$goog$html$SafeHtml_SafeHtml.ENABLE_ERROR_MESSAGES?
\`Tag name <\${a}> is not allowed for SafeHtml.\`:"");}static createIframe(a,b,c,d){a&&goog.html.TrustedResourceUrl.unwrap(a);const e={};e.src=a||null;e.srcdoc=b&&module$contents$goog$html$SafeHtml_SafeHtml.unwrap(b);a=module$contents$goog$html$SafeHtml_SafeHtml.combineAttributes(e,{sandbox:""},c);return module$contents$goog$html$SafeHtml_SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse("iframe",a,d)}static createSandboxIframe(a,b,c,d){if(!module$contents$goog$html$SafeHtml_SafeHtml.canUseSandboxIframe())throw Error(module$contents$goog$html$SafeHtml_SafeHtml.ENABLE_ERROR_MESSAGES?
"The browser does not support sandboxed iframes.":"");const e={};e.src=a?goog.html.SafeUrl.unwrap(goog.html.SafeUrl.sanitize(a)):null;e.srcdoc=b||null;e.sandbox="";a=module$contents$goog$html$SafeHtml_SafeHtml.combineAttributes(e,{},c);return module$contents$goog$html$SafeHtml_SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse("iframe",a,d)}static canUseSandboxIframe(){return goog.global.HTMLIFrameElement&&"sandbox"in goog.global.HTMLIFrameElement.prototype}static createScriptSrc(a,b){goog.html.TrustedResourceUrl.unwrap(a);
a=module$contents$goog$html$SafeHtml_SafeHtml.combineAttributes({src:a},{},b);return module$contents$goog$html$SafeHtml_SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse("script",a)}static createScript(a,b){for(var c in b)if(Object.prototype.hasOwnProperty.call(b,c)){var d=c.toLowerCase();if("language"==d||"src"==d||"text"==d)throw Error(module$contents$goog$html$SafeHtml_SafeHtml.ENABLE_ERROR_MESSAGES?\`Cannot set "\${d}" attribute\`:"");}c="";a=module$contents$goog$array_concat(a);for(d=0;d<
a.length;d++)c+=module$contents$goog$html$SafeScript_SafeScript.unwrap(a[d]);a=module$contents$goog$html$SafeHtml_SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(c);return module$contents$goog$html$SafeHtml_SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse("script",b,a)}static createStyle(a,b){b=module$contents$goog$html$SafeHtml_SafeHtml.combineAttributes({type:"text/css"},{},b);let c="";a=module$contents$goog$array_concat(a);for(let d=0;d<a.length;d++)c+=module$contents$goog$html$SafeStyleSheet_SafeStyleSheet.unwrap(a[d]);
a=module$contents$goog$html$SafeHtml_SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(c);return module$contents$goog$html$SafeHtml_SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse("style",b,a)}static createMetaRefresh(a,b){a=goog.html.SafeUrl.unwrap(goog.html.SafeUrl.sanitize(a));(module$contents$goog$labs$userAgent$browser_matchIE()||module$contents$goog$labs$userAgent$browser_matchEdgeHtml())&&goog.string.internal.contains(a,";")&&(a="'"+a.replace(/'/g,"%27")+"'");return module$contents$goog$html$SafeHtml_SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse("meta",
{"http-equiv":"refresh",content:(b||0)+"; url="+a})}static join(a,b){a=module$contents$goog$html$SafeHtml_SafeHtml.htmlEscape(a);const c=[],d=e=>{Array.isArray(e)?e.forEach(d):(e=module$contents$goog$html$SafeHtml_SafeHtml.htmlEscape(e),c.push(module$contents$goog$html$SafeHtml_SafeHtml.unwrap(e)))};b.forEach(d);return module$contents$goog$html$SafeHtml_SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(c.join(module$contents$goog$html$SafeHtml_SafeHtml.unwrap(a)))}static concat(a){return module$contents$goog$html$SafeHtml_SafeHtml.join(module$contents$goog$html$SafeHtml_SafeHtml.EMPTY,
Array.prototype.slice.call(arguments))}static createSafeHtmlSecurityPrivateDoNotAccessOrElse(a){const b=goog.html.trustedtypes.getPolicyPrivateDoNotAccessOrElse();a=b?b.createHTML(a):a;return new module$contents$goog$html$SafeHtml_SafeHtml(a,module$contents$goog$html$SafeHtml_CONSTRUCTOR_TOKEN_PRIVATE)}static createSafeHtmlTagSecurityPrivateDoNotAccessOrElse(a,b,c){b=\`<\${a}\`+module$contents$goog$html$SafeHtml_SafeHtml.stringifyAttributes(a,b);null==c?c=[]:Array.isArray(c)||(c=[c]);goog.dom.tags.isVoidTag(a.toLowerCase())?
(goog.asserts.assert(!c.length,\`Void tag <\${a}> does not allow content.\`),b+=">"):(c=module$contents$goog$html$SafeHtml_SafeHtml.concat(c),b+=">"+module$contents$goog$html$SafeHtml_SafeHtml.unwrap(c)+"</"+a+">");return module$contents$goog$html$SafeHtml_SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(b)}static stringifyAttributes(a,b){let c="";if(b)for(let d in b)if(Object.prototype.hasOwnProperty.call(b,d)){if(!module$contents$goog$html$SafeHtml_VALID_NAMES_IN_TAG.test(d))throw Error(module$contents$goog$html$SafeHtml_SafeHtml.ENABLE_ERROR_MESSAGES?
\`Invalid attribute name "\${d}".\`:"");const e=b[d];null!=e&&(c+=" "+module$contents$goog$html$SafeHtml_getAttrNameAndValue(a,d,e))}return c}static combineAttributes(a,b,c){const d={};for(var e in a)Object.prototype.hasOwnProperty.call(a,e)&&(goog.asserts.assert(e.toLowerCase()==e,"Must be lower case"),d[e]=a[e]);for(const f in b)Object.prototype.hasOwnProperty.call(b,f)&&(goog.asserts.assert(f.toLowerCase()==f,"Must be lower case"),d[f]=b[f]);if(c)for(const f in c)if(Object.prototype.hasOwnProperty.call(c,
f)){e=f.toLowerCase();if(e in a)throw Error(module$contents$goog$html$SafeHtml_SafeHtml.ENABLE_ERROR_MESSAGES?\`Cannot override "\${e}" attribute, got "\`+f+'" with value "'+c[f]+'"':"");e in b&&delete d[e];d[f]=c[f]}return d}}module$contents$goog$html$SafeHtml_SafeHtml.ENABLE_ERROR_MESSAGES=goog.DEBUG;module$contents$goog$html$SafeHtml_SafeHtml.SUPPORT_STYLE_ATTRIBUTE=!0;module$contents$goog$html$SafeHtml_SafeHtml.from=module$contents$goog$html$SafeHtml_SafeHtml.htmlEscape;
const module$contents$goog$html$SafeHtml_VALID_NAMES_IN_TAG=/^[a-zA-Z0-9-]+$/,module$contents$goog$html$SafeHtml_URL_ATTRIBUTES={action:!0,cite:!0,data:!0,formaction:!0,href:!0,manifest:!0,poster:!0,src:!0},module$contents$goog$html$SafeHtml_NOT_ALLOWED_TAG_NAMES={[goog.dom.TagName.APPLET]:!0,[goog.dom.TagName.BASE]:!0,[goog.dom.TagName.EMBED]:!0,[goog.dom.TagName.IFRAME]:!0,[goog.dom.TagName.LINK]:!0,[goog.dom.TagName.MATH]:!0,[goog.dom.TagName.META]:!0,[goog.dom.TagName.OBJECT]:!0,[goog.dom.TagName.SCRIPT]:!0,
[goog.dom.TagName.STYLE]:!0,[goog.dom.TagName.SVG]:!0,[goog.dom.TagName.TEMPLATE]:!0};
function module$contents$goog$html$SafeHtml_getAttrNameAndValue(a,b,c){if(c instanceof goog.string.Const)c=goog.string.Const.unwrap(c);else if("style"==b.toLowerCase())if(module$contents$goog$html$SafeHtml_SafeHtml.SUPPORT_STYLE_ATTRIBUTE)c=module$contents$goog$html$SafeHtml_getStyleValue(c);else throw Error(module$contents$goog$html$SafeHtml_SafeHtml.ENABLE_ERROR_MESSAGES?'Attribute "style" not supported.':"");else{if(/^on/i.test(b))throw Error(module$contents$goog$html$SafeHtml_SafeHtml.ENABLE_ERROR_MESSAGES?
\`Attribute "\${b}\`+'" requires goog.string.Const value, "'+c+'" given.':"");if(b.toLowerCase()in module$contents$goog$html$SafeHtml_URL_ATTRIBUTES)if(c instanceof goog.html.TrustedResourceUrl)c=goog.html.TrustedResourceUrl.unwrap(c);else if(c instanceof goog.html.SafeUrl)c=goog.html.SafeUrl.unwrap(c);else if("string"===typeof c)c=goog.html.SafeUrl.sanitize(c).getTypedStringValue();else throw Error(module$contents$goog$html$SafeHtml_SafeHtml.ENABLE_ERROR_MESSAGES?\`Attribute "\${b}" on tag "\${a}\`+'" requires goog.html.SafeUrl, goog.string.Const, or string, value "'+
c+'" given.':"");}c.implementsGoogStringTypedString&&(c=c.getTypedStringValue());goog.asserts.assert("string"===typeof c||"number"===typeof c,"String or number value expected, got "+typeof c+" with value: "+c);return\`\${b}="\`+goog.string.internal.htmlEscape(String(c))+'"'}
function module$contents$goog$html$SafeHtml_getStyleValue(a){if(!goog.isObject(a))throw Error(module$contents$goog$html$SafeHtml_SafeHtml.ENABLE_ERROR_MESSAGES?'The "style" attribute requires goog.html.SafeStyle or map of style properties, '+typeof a+" given: "+a:"");a instanceof module$contents$goog$html$SafeStyle_SafeStyle||(a=module$contents$goog$html$SafeStyle_SafeStyle.create(a));return module$contents$goog$html$SafeStyle_SafeStyle.unwrap(a)}
module$contents$goog$html$SafeHtml_SafeHtml.DOCTYPE_HTML=function(){return module$contents$goog$html$SafeHtml_SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse("<!DOCTYPE html>")}();module$contents$goog$html$SafeHtml_SafeHtml.EMPTY=new module$contents$goog$html$SafeHtml_SafeHtml(goog.global.trustedTypes&&goog.global.trustedTypes.emptyHTML||"",module$contents$goog$html$SafeHtml_CONSTRUCTOR_TOKEN_PRIVATE);module$contents$goog$html$SafeHtml_SafeHtml.BR=function(){return module$contents$goog$html$SafeHtml_SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse("<br>")}();
goog.html.SafeHtml=module$contents$goog$html$SafeHtml_SafeHtml;goog.html.uncheckedconversions={};goog.html.uncheckedconversions.safeHtmlFromStringKnownToSatisfyTypeContract=function(a,b){goog.asserts.assertString(goog.string.Const.unwrap(a),"must provide justification");goog.asserts.assert(!goog.string.internal.isEmptyOrWhitespace(goog.string.Const.unwrap(a)),"must provide non-empty justification");return module$contents$goog$html$SafeHtml_SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(b)};
goog.html.uncheckedconversions.safeScriptFromStringKnownToSatisfyTypeContract=function(a,b){goog.asserts.assertString(goog.string.Const.unwrap(a),"must provide justification");goog.asserts.assert(!goog.string.internal.isEmptyOrWhitespace(goog.string.Const.unwrap(a)),"must provide non-empty justification");return module$contents$goog$html$SafeScript_SafeScript.createSafeScriptSecurityPrivateDoNotAccessOrElse(b)};
goog.html.uncheckedconversions.safeStyleFromStringKnownToSatisfyTypeContract=function(a,b){goog.asserts.assertString(goog.string.Const.unwrap(a),"must provide justification");goog.asserts.assert(!goog.string.internal.isEmptyOrWhitespace(goog.string.Const.unwrap(a)),"must provide non-empty justification");return module$contents$goog$html$SafeStyle_SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse(b)};
goog.html.uncheckedconversions.safeStyleSheetFromStringKnownToSatisfyTypeContract=function(a,b){goog.asserts.assertString(goog.string.Const.unwrap(a),"must provide justification");goog.asserts.assert(!goog.string.internal.isEmptyOrWhitespace(goog.string.Const.unwrap(a)),"must provide non-empty justification");return module$contents$goog$html$SafeStyleSheet_SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse(b)};
goog.html.uncheckedconversions.safeUrlFromStringKnownToSatisfyTypeContract=function(a,b){goog.asserts.assertString(goog.string.Const.unwrap(a),"must provide justification");goog.asserts.assert(!goog.string.internal.isEmptyOrWhitespace(goog.string.Const.unwrap(a)),"must provide non-empty justification");return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(b)};
goog.html.uncheckedconversions.trustedResourceUrlFromStringKnownToSatisfyTypeContract=function(a,b){goog.asserts.assertString(goog.string.Const.unwrap(a),"must provide justification");goog.asserts.assert(!goog.string.internal.isEmptyOrWhitespace(goog.string.Const.unwrap(a)),"must provide non-empty justification");return goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(b)};goog.dom.safe={};goog.dom.safe.InsertAdjacentHtmlPosition={AFTERBEGIN:"afterbegin",AFTEREND:"afterend",BEFOREBEGIN:"beforebegin",BEFOREEND:"beforeend"};goog.dom.safe.insertAdjacentHtml=function(a,b,c){a.insertAdjacentHTML(b,module$contents$goog$html$SafeHtml_SafeHtml.unwrapTrustedHTML(c))};goog.dom.safe.SET_INNER_HTML_DISALLOWED_TAGS_={MATH:!0,SCRIPT:!0,STYLE:!0,SVG:!0,TEMPLATE:!0};
goog.dom.safe.isInnerHtmlCleanupRecursive_=goog.functions.cacheReturnValue(function(){if(goog.DEBUG&&"undefined"===typeof document)return!1;var a=document.createElement("div"),b=document.createElement("div");b.appendChild(document.createElement("div"));a.appendChild(b);if(goog.DEBUG&&!a.firstChild)return!1;b=a.firstChild.firstChild;a.innerHTML=module$contents$goog$html$SafeHtml_SafeHtml.unwrapTrustedHTML(module$contents$goog$html$SafeHtml_SafeHtml.EMPTY);return!b.parentElement});
goog.dom.safe.unsafeSetInnerHtmlDoNotUseOrElse=function(a,b){if(goog.dom.safe.isInnerHtmlCleanupRecursive_())for(;a.lastChild;)a.removeChild(a.lastChild);a.innerHTML=module$contents$goog$html$SafeHtml_SafeHtml.unwrapTrustedHTML(b)};
goog.dom.safe.setInnerHtml=function(a,b){if(goog.asserts.ENABLE_ASSERTS&&a.tagName){var c=a.tagName.toUpperCase();if(goog.dom.safe.SET_INNER_HTML_DISALLOWED_TAGS_[c])throw Error("goog.dom.safe.setInnerHtml cannot be used to set content of "+a.tagName+".");}goog.dom.safe.unsafeSetInnerHtmlDoNotUseOrElse(a,b)};
goog.dom.safe.setInnerHtmlFromConstant=function(a,b){goog.dom.safe.setInnerHtml(a,goog.html.uncheckedconversions.safeHtmlFromStringKnownToSatisfyTypeContract(goog.string.Const.from("Constant HTML to be immediatelly used."),goog.string.Const.unwrap(b)))};goog.dom.safe.setOuterHtml=function(a,b){a.outerHTML=module$contents$goog$html$SafeHtml_SafeHtml.unwrapTrustedHTML(b)};
goog.dom.safe.setFormElementAction=function(a,b){b=b instanceof goog.html.SafeUrl?b:goog.html.SafeUrl.sanitizeAssertUnchanged(b);goog.dom.asserts.assertIsHTMLFormElement(a).action=goog.html.SafeUrl.unwrap(b)};goog.dom.safe.setButtonFormAction=function(a,b){b=b instanceof goog.html.SafeUrl?b:goog.html.SafeUrl.sanitizeAssertUnchanged(b);goog.dom.asserts.assertIsHTMLButtonElement(a).formAction=goog.html.SafeUrl.unwrap(b)};
goog.dom.safe.setInputFormAction=function(a,b){b=b instanceof goog.html.SafeUrl?b:goog.html.SafeUrl.sanitizeAssertUnchanged(b);goog.dom.asserts.assertIsHTMLInputElement(a).formAction=goog.html.SafeUrl.unwrap(b)};goog.dom.safe.setStyle=function(a,b){a.style.cssText=module$contents$goog$html$SafeStyle_SafeStyle.unwrap(b)};goog.dom.safe.documentWrite=function(a,b){a.write(module$contents$goog$html$SafeHtml_SafeHtml.unwrapTrustedHTML(b))};
goog.dom.safe.setAnchorHref=function(a,b){goog.dom.asserts.assertIsHTMLAnchorElement(a);b=b instanceof goog.html.SafeUrl?b:goog.html.SafeUrl.sanitizeAssertUnchanged(b);a.href=goog.html.SafeUrl.unwrap(b)};goog.dom.safe.setAudioSrc=function(a,b){goog.dom.asserts.assertIsHTMLAudioElement(a);if(!(b instanceof goog.html.SafeUrl)){var c=/^data:audio\\//i.test(b);b=goog.html.SafeUrl.sanitizeAssertUnchanged(b,c)}a.src=goog.html.SafeUrl.unwrap(b)};
goog.dom.safe.setVideoSrc=function(a,b){goog.dom.asserts.assertIsHTMLVideoElement(a);if(!(b instanceof goog.html.SafeUrl)){var c=/^data:video\\//i.test(b);b=goog.html.SafeUrl.sanitizeAssertUnchanged(b,c)}a.src=goog.html.SafeUrl.unwrap(b)};goog.dom.safe.setEmbedSrc=function(a,b){goog.dom.asserts.assertIsHTMLEmbedElement(a);a.src=goog.html.TrustedResourceUrl.unwrapTrustedScriptURL(b)};goog.dom.safe.setFrameSrc=function(a,b){goog.dom.asserts.assertIsHTMLFrameElement(a);a.src=goog.html.TrustedResourceUrl.unwrap(b)};
goog.dom.safe.setIframeSrc=function(a,b){goog.dom.asserts.assertIsHTMLIFrameElement(a);a.src=goog.html.TrustedResourceUrl.unwrap(b)};goog.dom.safe.setIframeSrcdoc=function(a,b){goog.dom.asserts.assertIsHTMLIFrameElement(a);a.srcdoc=module$contents$goog$html$SafeHtml_SafeHtml.unwrapTrustedHTML(b)};
goog.dom.safe.setLinkHrefAndRel=function(a,b,c){goog.dom.asserts.assertIsHTMLLinkElement(a);a.rel=c;goog.string.internal.caseInsensitiveContains(c,"stylesheet")?(goog.asserts.assert(b instanceof goog.html.TrustedResourceUrl,'URL must be TrustedResourceUrl because "rel" contains "stylesheet"'),a.href=goog.html.TrustedResourceUrl.unwrap(b),(b=goog.dom.safe.getStyleNonce(a.ownerDocument&&a.ownerDocument.defaultView))&&a.setAttribute("nonce",b)):a.href=b instanceof goog.html.TrustedResourceUrl?goog.html.TrustedResourceUrl.unwrap(b):
b instanceof goog.html.SafeUrl?goog.html.SafeUrl.unwrap(b):goog.html.SafeUrl.unwrap(goog.html.SafeUrl.sanitizeAssertUnchanged(b))};goog.dom.safe.setObjectData=function(a,b){goog.dom.asserts.assertIsHTMLObjectElement(a);a.data=goog.html.TrustedResourceUrl.unwrapTrustedScriptURL(b)};goog.dom.safe.setScriptSrc=function(a,b){goog.dom.asserts.assertIsHTMLScriptElement(a);goog.dom.safe.setNonceForScriptElement_(a);a.src=goog.html.TrustedResourceUrl.unwrapTrustedScriptURL(b)};
goog.dom.safe.setScriptContent=function(a,b){goog.dom.asserts.assertIsHTMLScriptElement(a);goog.dom.safe.setNonceForScriptElement_(a);a.textContent=module$contents$goog$html$SafeScript_SafeScript.unwrapTrustedScript(b)};goog.dom.safe.setNonceForScriptElement_=function(a){const b=goog.dom.safe.getScriptNonce(a.ownerDocument&&a.ownerDocument.defaultView);b&&a.setAttribute("nonce",b)};
goog.dom.safe.setLocationHref=function(a,b){goog.dom.asserts.assertIsLocation(a);b=b instanceof goog.html.SafeUrl?b:goog.html.SafeUrl.sanitizeAssertUnchanged(b);a.href=goog.html.SafeUrl.unwrap(b)};goog.dom.safe.assignLocation=function(a,b){goog.dom.asserts.assertIsLocation(a);b=b instanceof goog.html.SafeUrl?b:goog.html.SafeUrl.sanitizeAssertUnchanged(b);a.assign(goog.html.SafeUrl.unwrap(b))};
goog.dom.safe.replaceLocation=function(a,b){b=b instanceof goog.html.SafeUrl?b:goog.html.SafeUrl.sanitizeAssertUnchanged(b);a.replace(goog.html.SafeUrl.unwrap(b))};goog.dom.safe.openInWindow=function(a,b,c,d){a=a instanceof goog.html.SafeUrl?a:goog.html.SafeUrl.sanitizeAssertUnchanged(a);b=b||goog.global;c=c instanceof goog.string.Const?goog.string.Const.unwrap(c):c||"";return void 0!==d?b.open(goog.html.SafeUrl.unwrap(a),c,d):b.open(goog.html.SafeUrl.unwrap(a),c)};
goog.dom.safe.parseFromStringHtml=function(a,b){return goog.dom.safe.parseFromString(a,b,"text/html")};goog.dom.safe.parseFromString=function(a,b,c){return a.parseFromString(module$contents$goog$html$SafeHtml_SafeHtml.unwrapTrustedHTML(b),c)};
goog.dom.safe.createImageFromBlob=function(a){if(!/^image\\/.*/g.test(a.type))throw Error("goog.dom.safe.createImageFromBlob only accepts MIME type image/.*.");var b=goog.global.URL.createObjectURL(a);a=new goog.global.Image;a.onload=function(){goog.global.URL.revokeObjectURL(b)};a.src=b;return a};goog.dom.safe.createContextualFragment=function(a,b){return a.createContextualFragment(module$contents$goog$html$SafeHtml_SafeHtml.unwrapTrustedHTML(b))};
goog.dom.safe.getScriptNonce=function(a){return goog.dom.safe.getNonce_("script[nonce]",a)};goog.dom.safe.getStyleNonce=function(a){return goog.dom.safe.getNonce_('style[nonce],link[rel="stylesheet"][nonce]',a)};goog.dom.safe.NONCE_PATTERN_=/^[\\w+/_-]+[=]{0,2}$/;goog.dom.safe.getNonce_=function(a,b){b=(b||goog.global).document;return b.querySelector?(a=b.querySelector(a))&&(a=a.nonce||a.getAttribute("nonce"))&&goog.dom.safe.NONCE_PATTERN_.test(a)?a:"":""};goog.string.DETECT_DOUBLE_ESCAPING=!1;goog.string.FORCE_NON_DOM_HTML_UNESCAPING=!1;goog.string.Unicode={NBSP:"\\u00a0",ZERO_WIDTH_SPACE:"\\u200b"};goog.string.startsWith=goog.string.internal.startsWith;goog.string.endsWith=goog.string.internal.endsWith;goog.string.caseInsensitiveStartsWith=goog.string.internal.caseInsensitiveStartsWith;goog.string.caseInsensitiveEndsWith=goog.string.internal.caseInsensitiveEndsWith;goog.string.caseInsensitiveEquals=goog.string.internal.caseInsensitiveEquals;
goog.string.subs=function(a,b){const c=a.split("%s");let d="";const e=Array.prototype.slice.call(arguments,1);for(;e.length&&1<c.length;)d+=c.shift()+e.shift();return d+c.join("%s")};goog.string.collapseWhitespace=function(a){return a.replace(/[\\s\\xa0]+/g," ").replace(/^\\s+|\\s+$/g,"")};goog.string.isEmptyOrWhitespace=goog.string.internal.isEmptyOrWhitespace;goog.string.isEmptyString=function(a){return 0==a.length};goog.string.isEmpty=goog.string.isEmptyOrWhitespace;
goog.string.isEmptyOrWhitespaceSafe=function(a){return goog.string.isEmptyOrWhitespace(goog.string.makeSafe(a))};goog.string.isEmptySafe=goog.string.isEmptyOrWhitespaceSafe;goog.string.isBreakingWhitespace=function(a){return!/[^\\t\\n\\r ]/.test(a)};goog.string.isAlpha=function(a){return!/[^a-zA-Z]/.test(a)};goog.string.isNumeric=function(a){return!/[^0-9]/.test(a)};goog.string.isAlphaNumeric=function(a){return!/[^a-zA-Z0-9]/.test(a)};goog.string.isSpace=function(a){return" "==a};
goog.string.isUnicodeChar=function(a){return 1==a.length&&" "<=a&&"~">=a||"\\u0080"<=a&&"\\ufffd">=a};goog.string.stripNewlines=function(a){return a.replace(/(\\r\\n|\\r|\\n)+/g," ")};goog.string.canonicalizeNewlines=function(a){return a.replace(/(\\r\\n|\\r|\\n)/g,"\\n")};goog.string.normalizeWhitespace=function(a){return a.replace(/\\xa0|\\s/g," ")};goog.string.normalizeSpaces=function(a){return a.replace(/\\xa0|[ \\t]+/g," ")};
goog.string.collapseBreakingSpaces=function(a){return a.replace(/[\\t\\r\\n ]+/g," ").replace(/^[\\t\\r\\n ]+|[\\t\\r\\n ]+$/g,"")};goog.string.trim=goog.string.internal.trim;goog.string.trimLeft=function(a){return a.replace(/^[\\s\\xa0]+/,"")};goog.string.trimRight=function(a){return a.replace(/[\\s\\xa0]+$/,"")};goog.string.caseInsensitiveCompare=goog.string.internal.caseInsensitiveCompare;
goog.string.numberAwareCompare_=function(a,b,c){if(a==b)return 0;if(!a)return-1;if(!b)return 1;const d=a.toLowerCase().match(c),e=b.toLowerCase().match(c),f=Math.min(d.length,e.length);for(let g=0;g<f;g++){c=d[g];const h=e[g];if(c!=h)return a=parseInt(c,10),!isNaN(a)&&(b=parseInt(h,10),!isNaN(b)&&a-b)?a-b:c<h?-1:1}return d.length!=e.length?d.length-e.length:a<b?-1:1};goog.string.intAwareCompare=function(a,b){return goog.string.numberAwareCompare_(a,b,/\\d+|\\D+/g)};
goog.string.floatAwareCompare=function(a,b){return goog.string.numberAwareCompare_(a,b,/\\d+|\\.\\d+|\\D+/g)};goog.string.numerateCompare=goog.string.floatAwareCompare;goog.string.urlEncode=function(a){return encodeURIComponent(String(a))};goog.string.urlDecode=function(a){return decodeURIComponent(a.replace(/\\+/g," "))};goog.string.newLineToBr=goog.string.internal.newLineToBr;
goog.string.htmlEscape=function(a,b){a=goog.string.internal.htmlEscape(a,b);goog.string.DETECT_DOUBLE_ESCAPING&&(a=a.replace(goog.string.E_RE_,"&#101;"));return a};goog.string.E_RE_=/e/g;goog.string.unescapeEntities=function(a){return goog.string.contains(a,"&")?!goog.string.FORCE_NON_DOM_HTML_UNESCAPING&&"document"in goog.global?goog.string.unescapeEntitiesUsingDom_(a):goog.string.unescapePureXmlEntities_(a):a};
goog.string.unescapeEntitiesWithDocument=function(a,b){return goog.string.contains(a,"&")?goog.string.unescapeEntitiesUsingDom_(a,b):a};
goog.string.unescapeEntitiesUsingDom_=function(a,b){const c={"&amp;":"&","&lt;":"<","&gt;":">","&quot;":'"'};let d;d=b?b.createElement("div"):goog.global.document.createElement("div");return a.replace(goog.string.HTML_ENTITY_PATTERN_,function(e,f){let g=c[e];if(g)return g;"#"==f.charAt(0)&&(f=Number("0"+f.slice(1)),isNaN(f)||(g=String.fromCharCode(f)));g||(goog.dom.safe.setInnerHtml(d,goog.html.uncheckedconversions.safeHtmlFromStringKnownToSatisfyTypeContract(goog.string.Const.from("Single HTML entity."),
e+" ")),g=d.firstChild.nodeValue.slice(0,-1));return c[e]=g})};goog.string.unescapePureXmlEntities_=function(a){return a.replace(/&([^;]+);/g,function(b,c){switch(c){case "amp":return"&";case "lt":return"<";case "gt":return">";case "quot":return'"';default:return"#"!=c.charAt(0)||(c=Number("0"+c.slice(1)),isNaN(c))?b:String.fromCharCode(c)}})};goog.string.HTML_ENTITY_PATTERN_=/&([^;\\s<&]+);?/g;goog.string.whitespaceEscape=function(a,b){return goog.string.newLineToBr(a.replace(/  /g," &#160;"),b)};
goog.string.preserveSpaces=function(a){return a.replace(/(^|[\\n ]) /g,"$1"+goog.string.Unicode.NBSP)};goog.string.stripQuotes=function(a,b){const c=b.length;for(let d=0;d<c;d++){const e=1==c?b:b.charAt(d);if(a.charAt(0)==e&&a.charAt(a.length-1)==e)return a.substring(1,a.length-1)}return a};goog.string.truncate=function(a,b,c){c&&(a=goog.string.unescapeEntities(a));a.length>b&&(a=a.substring(0,b-3)+"...");c&&(a=goog.string.htmlEscape(a));return a};
goog.string.truncateMiddle=function(a,b,c,d){c&&(a=goog.string.unescapeEntities(a));if(d&&a.length>b){d>b&&(d=b);var e=a.length-d;a=a.substring(0,b-d)+"..."+a.substring(e)}else a.length>b&&(d=Math.floor(b/2),e=a.length-d,a=a.substring(0,d+b%2)+"..."+a.substring(e));c&&(a=goog.string.htmlEscape(a));return a};goog.string.specialEscapeChars_={"\\x00":"\\\\0","\\b":"\\\\b","\\f":"\\\\f","\\n":"\\\\n","\\r":"\\\\r","\\t":"\\\\t","\\v":"\\\\x0B",'"':'\\\\"',"\\\\":"\\\\\\\\","<":"\\\\u003C"};goog.string.jsEscapeCache_={"'":"\\\\'"};
goog.string.quote=function(a){a=String(a);const b=['"'];for(let c=0;c<a.length;c++){const d=a.charAt(c),e=d.charCodeAt(0);b[c+1]=goog.string.specialEscapeChars_[d]||(31<e&&127>e?d:goog.string.escapeChar(d))}b.push('"');return b.join("")};goog.string.escapeString=function(a){const b=[];for(let c=0;c<a.length;c++)b[c]=goog.string.escapeChar(a.charAt(c));return b.join("")};
goog.string.escapeChar=function(a){if(a in goog.string.jsEscapeCache_)return goog.string.jsEscapeCache_[a];if(a in goog.string.specialEscapeChars_)return goog.string.jsEscapeCache_[a]=goog.string.specialEscapeChars_[a];let b;const c=a.charCodeAt(0);if(31<c&&127>c)b=a;else{if(256>c){if(b="\\\\x",16>c||256<c)b+="0"}else b="\\\\u",4096>c&&(b+="0");b+=c.toString(16).toUpperCase()}return goog.string.jsEscapeCache_[a]=b};goog.string.contains=goog.string.internal.contains;
goog.string.caseInsensitiveContains=goog.string.internal.caseInsensitiveContains;goog.string.countOf=function(a,b){return a&&b?a.split(b).length-1:0};goog.string.removeAt=function(a,b,c){let d=a;0<=b&&b<a.length&&0<c&&(d=a.slice(0,b)+a.slice(b+c));return d};goog.string.remove=function(a,b){return a.replace(b,"")};goog.string.removeAll=function(a,b){b=new RegExp(goog.string.regExpEscape(b),"g");return a.replace(b,"")};
goog.string.replaceAll=function(a,b,c){b=new RegExp(goog.string.regExpEscape(b),"g");return a.replace(b,c.replace(/\\$/g,"$$$$"))};goog.string.regExpEscape=function(a){return String(a).replace(/([-()\\[\\]{}+?*.$\\^|,:#<!\\\\])/g,"\\\\$1").replace(/\\x08/g,"\\\\x08")};goog.string.repeat=String.prototype.repeat?function(a,b){return a.repeat(b)}:function(a,b){return Array(b+1).join(a)};
goog.string.padNumber=function(a,b,c){if(!Number.isFinite(a))return String(a);a=void 0!==c?a.toFixed(c):String(a);c=a.indexOf(".");-1===c&&(c=a.length);const d="-"===a[0]?"-":"";d&&(a=a.substring(1));return d+goog.string.repeat("0",Math.max(0,b-c))+a};goog.string.makeSafe=function(a){return null==a?"":String(a)};goog.string.getRandomString=function(){return Math.floor(2147483648*Math.random()).toString(36)+Math.abs(Math.floor(2147483648*Math.random())^goog.now()).toString(36)};
goog.string.compareVersions=goog.string.internal.compareVersions;goog.string.hashCode=function(a){let b=0;for(let c=0;c<a.length;++c)b=31*b+a.charCodeAt(c)>>>0;return b};goog.string.uniqueStringCounter_=2147483648*Math.random()|0;goog.string.createUniqueString=function(){return"goog_"+goog.string.uniqueStringCounter_++};goog.string.toNumber=function(a){const b=Number(a);return 0==b&&goog.string.isEmptyOrWhitespace(a)?NaN:b};goog.string.isLowerCamelCase=function(a){return/^[a-z]+([A-Z][a-z]*)*$/.test(a)};
goog.string.isUpperCamelCase=function(a){return/^([A-Z][a-z]*)+$/.test(a)};goog.string.toCamelCase=function(a){return String(a).replace(/\\-([a-z])/g,function(b,c){return c.toUpperCase()})};goog.string.toSelectorCase=function(a){return String(a).replace(/([A-Z])/g,"-$1").toLowerCase()};goog.string.toTitleCase=function(a,b){b="string"===typeof b?goog.string.regExpEscape(b):"\\\\s";return a.replace(new RegExp("(^"+(b?"|["+b+"]+":"")+")([a-z])","g"),function(c,d,e){return d+e.toUpperCase()})};
goog.string.capitalize=function(a){return String(a.charAt(0)).toUpperCase()+String(a.slice(1)).toLowerCase()};goog.string.parseInt=function(a){isFinite(a)&&(a=String(a));return"string"===typeof a?/^\\s*-?0x/i.test(a)?parseInt(a,16):parseInt(a,10):NaN};goog.string.splitLimit=function(a,b,c){a=a.split(b);const d=[];for(;0<c&&a.length;)d.push(a.shift()),c--;a.length&&d.push(a.join(b));return d};
goog.string.lastComponent=function(a,b){if(b)"string"==typeof b&&(b=[b]);else return a;let c=-1;for(let d=0;d<b.length;d++){if(""==b[d])continue;const e=a.lastIndexOf(b[d]);e>c&&(c=e)}return-1==c?a:a.slice(c+1)};
goog.string.editDistance=function(a,b){const c=[],d=[];if(a==b)return 0;if(!a.length||!b.length)return Math.max(a.length,b.length);for(var e=0;e<b.length+1;e++)c[e]=e;for(e=0;e<a.length;e++){d[0]=e+1;for(var f=0;f<b.length;f++)d[f+1]=Math.min(d[f]+1,c[f+1]+1,c[f]+Number(a[e]!=b[f]));for(f=0;f<c.length;f++)c[f]=d[f]}return d[b.length]};goog.string.path={};goog.string.path.baseName=function(a){const b=a.lastIndexOf("/")+1;return a.slice(b)};goog.string.path.basename=goog.string.path.baseName;goog.string.path.dirname=function(a){const b=a.lastIndexOf("/")+1;a=a.slice(0,b);/^\\/+$/.test(a)||(a=a.replace(/\\/+$/,""));return a};goog.string.path.extension=function(a){a=goog.string.path.baseName(a).replace(/\\.+/g,".");const b=a.lastIndexOf(".");return 0>=b?"":a.slice(b+1)};
goog.string.path.join=function(a){let b=arguments[0];for(let c=1;c<arguments.length;c++){const d=arguments[c];b=goog.string.startsWith(d,"/")?d:""==b||goog.string.endsWith(b,"/")?b+d:b+("/"+d)}return b};
goog.string.path.normalizePath=function(a){if(""==a)return".";let b="";goog.string.startsWith(a,"/")&&(b="/",goog.string.startsWith(a,"//")&&!goog.string.startsWith(a,"///")&&(b="//"));a=a.split("/");const c=[];for(let d=0;d<a.length;d++){const e=a[d];""!=e&&"."!=e&&(".."!=e||!b&&!c.length||".."==module$contents$goog$array_peek(c)?c.push(e):c.pop())}return b+c.join("/")||"."};goog.string.path.split=function(a){const b=goog.string.path.dirname(a);a=goog.string.path.baseName(a);return[b,a]};const DEBUG_WASI$$module$src$filesystem$wasi=!1;function assertLeadingSlash$$module$src$filesystem$wasi(a){return/^\\//g.test(a)?a:\`/\${a}\`}function removeLeadingSlash$$module$src$filesystem$wasi(a){return a.replace(/^\\//g,"")}function shouldOpenReader$$module$src$filesystem$wasi(a){return(a&(WASI_RIGHT_FD_READ$$module$src$filesystem$constants|WASI_RIGHT_FD_READDIR$$module$src$filesystem$constants))!==goog.global.BigInt(0)}
function performanceNowPoly$$module$src$filesystem$wasi(){if("undefined"===typeof performance||"undefined"===typeof performance.now){const a=Date.now();return Date.now()-a}return performance.now()}function concatUint8Arrays$$module$src$filesystem$wasi(a){var b=a.reduce((d,e)=>d+e.length,0);if(0!==a.length){b=new Uint8Array(b);var c=0;for(const d of a)b.set(d,c),c+=d.length;return b}}
const WASI$$module$src$filesystem$wasi=function({}){this.fd=Array.from({length:4});this.fd[0]={fd:0,path:"/dev/stdin",seekPos:goog.global.BigInt(0),buffers:[],open:!1};this.fd[1]={fd:1,path:"/dev/stdout",seekPos:goog.global.BigInt(0),buffers:[],open:!1};this.fd[2]={fd:2,path:"/dev/stderr",seekPos:goog.global.BigInt(0),buffers:[],open:!1};this.fd[3]={fd:3,path:"/",seekPos:goog.global.BigInt(0),buffers:[],open:!1};this.getMemory=this.getMemory.bind(this);this.CPUTIME_START=0};
WASI$$module$src$filesystem$wasi.prototype.start=function(a){this.CPUTIME_START=performanceNowPoly$$module$src$filesystem$wasi();a.exports._start()};WASI$$module$src$filesystem$wasi.prototype.getImports=function(a){const b={};a=WebAssembly.Module.imports(a);for(const c of a)"function"===c.kind&&c.module.startsWith("wasi_")&&("object"!==typeof b[c.module]&&(b[c.module]={}),b[c.module][c.name]=this[c.name].bind(this));return b};
WASI$$module$src$filesystem$wasi.prototype.setMemory=function(a){this.memory=a};WASI$$module$src$filesystem$wasi.prototype.getMemory=function(){this.view&&this.view.buffer&&this.view.buffer.byteLength||(this.view=new DataView(this.memory.buffer));return this.view};WASI$$module$src$filesystem$wasi.prototype.msToNs=function(a){const b=Math.trunc(a);a=goog.global.BigInt(Math.round(1E6*(a-b)));return goog.global.BigInt(b)*goog.global.BigInt(1E6)+a};
WASI$$module$src$filesystem$wasi.prototype.now=function(a){switch(a){case WASI_CLOCK_MONOTONIC$$module$src$filesystem$constants:return Math.floor(performanceNowPoly$$module$src$filesystem$wasi());case WASI_CLOCK_REALTIME$$module$src$filesystem$constants:return this.msToNs(Date.now());case WASI_CLOCK_PROCESS_CPUTIME_ID$$module$src$filesystem$constants:case WASI_CLOCK_THREAD_CPUTIME_ID$$module$src$filesystem$constants:return Math.floor(performanceNowPoly$$module$src$filesystem$wasi()-this.CPUTIME_START);
default:return 0}};WASI$$module$src$filesystem$wasi.prototype.args_get=function(a,b){DEBUG_WASI$$module$src$filesystem$wasi&&console.log("args_get",a,b,module$src$filesystem$constants);return WASI_ESUCCESS$$module$src$filesystem$constants};WASI$$module$src$filesystem$wasi.prototype.args_sizes_get=function(a,b){DEBUG_WASI$$module$src$filesystem$wasi&&console.log("args_sizes_get",a,b,arguments);return WASI_ESUCCESS$$module$src$filesystem$constants};
WASI$$module$src$filesystem$wasi.prototype.clock_res_get=function(a,b){DEBUG_WASI$$module$src$filesystem$wasi&&console.log("args_get",a,b,arguments);return WASI_ESUCCESS$$module$src$filesystem$constants};WASI$$module$src$filesystem$wasi.prototype.clock_time_get=function(a,b,c){DEBUG_WASI$$module$src$filesystem$wasi&&console.log("clock_time_get",a,b,c,arguments);const d=this.getMemory(),e=this.now(a);d.setBigUint64(c,goog.global.BigInt(e),!0);return WASI_ESUCCESS$$module$src$filesystem$constants};
WASI$$module$src$filesystem$wasi.prototype.environ_get=function(a,b){DEBUG_WASI$$module$src$filesystem$wasi&&console.log("environ_get",a,b,arguments);return WASI_ESUCCESS$$module$src$filesystem$constants};WASI$$module$src$filesystem$wasi.prototype.environ_sizes_get=function(a,b){DEBUG_WASI$$module$src$filesystem$wasi&&console.log("environ_sizes_get",a,b,arguments);return WASI_ESUCCESS$$module$src$filesystem$constants};
WASI$$module$src$filesystem$wasi.prototype.fd_advise=function(a,b,c,d){DEBUG_WASI$$module$src$filesystem$wasi&&console.log("fd_advise",a,b,c,d,arguments);return WASI_ENOSYS$$module$src$filesystem$constants};WASI$$module$src$filesystem$wasi.prototype.fd_allocate=function(a,b,c){DEBUG_WASI$$module$src$filesystem$wasi&&console.log("fd_allocate",a,b,c,arguments);return WASI_ENOSYS$$module$src$filesystem$constants};
WASI$$module$src$filesystem$wasi.prototype.fd_close=function(a){DEBUG_WASI$$module$src$filesystem$wasi&&console.log("fd_close",a,arguments);this.fd[a]&&(this.fd[a].open=!1);return WASI_ESUCCESS$$module$src$filesystem$constants};WASI$$module$src$filesystem$wasi.prototype.fd_datasync=function(a){DEBUG_WASI$$module$src$filesystem$wasi&&console.log("fd_datasync",a,arguments);return WASI_ESUCCESS$$module$src$filesystem$constants};
WASI$$module$src$filesystem$wasi.prototype.fd_fdstat_get=function(a,b){DEBUG_WASI$$module$src$filesystem$wasi&&console.log("fd_fdstat_get",a,b,arguments);const c=this.getMemory();c.setUint8(b+4,WASI_FILETYPE_REGULAR_FILE$$module$src$filesystem$constants);c.setUint16(b+2,0,!0);c.setUint16(b+4,0,!0);c.setBigUint64(b+8,goog.global.BigInt(RIGHTS_REGULAR_FILE_BASE$$module$src$filesystem$constants),!0);c.setBigUint64(b+8+8,goog.global.BigInt(RIGHTS_REGULAR_FILE_INHERITING$$module$src$filesystem$constants),
!0);return WASI_ESUCCESS$$module$src$filesystem$constants};WASI$$module$src$filesystem$wasi.prototype.fd_fdstat_set_flags=function(a,b){DEBUG_WASI$$module$src$filesystem$wasi&&console.log("fd_fdstat_set_flags",a,b,arguments);return WASI_ENOSYS$$module$src$filesystem$constants};WASI$$module$src$filesystem$wasi.prototype.fd_fdstat_set_rights=function(a,b,c){DEBUG_WASI$$module$src$filesystem$wasi&&console.log("fd_fdstat_set_rights",a,b,c,arguments);return WASI_ESUCCESS$$module$src$filesystem$constants};
WASI$$module$src$filesystem$wasi.prototype.fd_filestat_get=function(a,b){DEBUG_WASI$$module$src$filesystem$wasi&&console.log("fd_filestat_get",a,b,arguments);let c=0;this.fd[a]&&(c=this.fd[a].buffers.reduce(function(e,f){return e+(null==f?void 0:f.byteLength)?null==f?void 0:f.byteLength:0},0));const d=this.getMemory();d.setBigUint64(b,goog.global.BigInt(a),!0);b+=8;d.setBigUint64(b,goog.global.BigInt(a),!0);b+=8;d.setUint8(b,WASI_FILETYPE_REGULAR_FILE$$module$src$filesystem$constants);b+=8;d.setBigUint64(b,
goog.global.BigInt(1),!0);b+=8;d.setBigUint64(b,goog.global.BigInt(c),!0);b+=8;d.setBigUint64(b,this.msToNs(this.CPUTIME_START),!0);b+=8;d.setBigUint64(b,this.msToNs(this.CPUTIME_START),!0);d.setBigUint64(b+8,this.msToNs(this.CPUTIME_START),!0);return WASI_ESUCCESS$$module$src$filesystem$constants};WASI$$module$src$filesystem$wasi.prototype.fd_filestat_set_size=function(a,b){DEBUG_WASI$$module$src$filesystem$wasi&&console.log("fd_filestat_set_size",a,b,arguments);return WASI_ESUCCESS$$module$src$filesystem$constants};
WASI$$module$src$filesystem$wasi.prototype.fd_filestat_set_times=function(a,b,c,d){DEBUG_WASI$$module$src$filesystem$wasi&&console.log("fd_filestat_set_times",a,b,c,d,arguments);return WASI_ESUCCESS$$module$src$filesystem$constants};WASI$$module$src$filesystem$wasi.prototype.fd_pread=function(a,b,c,d,e){DEBUG_WASI$$module$src$filesystem$wasi&&console.log("fd_pread",a,b,c,d,e,arguments);return WASI_ESUCCESS$$module$src$filesystem$constants};
WASI$$module$src$filesystem$wasi.prototype.fd_prestat_dir_name=function(a,b,c){DEBUG_WASI$$module$src$filesystem$wasi&&console.log("fd_prestat_dir_name",a,b,c,this.fd[a]);if(!this.fd[a]&&!this.fd[a-1])return WASI_EBADF$$module$src$filesystem$constants;({path:c}=this.fd[a]);a=this.getMemory();c=encoder$$module$src$utils$text_encoders.encode(c);(new Uint8Array(a.buffer)).set(c,b);return WASI_ESUCCESS$$module$src$filesystem$constants};
WASI$$module$src$filesystem$wasi.prototype.fd_prestat_get=function(a,b){DEBUG_WASI$$module$src$filesystem$wasi&&console.log("fd_prestat_get",a,b,this.fd[a]);if(!this.fd[a])return WASI_EBADF$$module$src$filesystem$constants;var {path:c}=this.fd[a];a=this.getMemory();c=encoder$$module$src$utils$text_encoders.encode(c);a.setUint8(b,WASI_PREOPENTYPE_DIR$$module$src$filesystem$constants);a.setUint32(b+4,c.byteLength,!0);return WASI_ESUCCESS$$module$src$filesystem$constants};
WASI$$module$src$filesystem$wasi.prototype.fd_pwrite=function(a,b,c,d,e){console.log("fd_pwrite",a,b,c,d,e,arguments);return WASI_ESUCCESS$$module$src$filesystem$constants};
WASI$$module$src$filesystem$wasi.prototype.fd_read=function(a,b,c,d){DEBUG_WASI$$module$src$filesystem$wasi&&console.log("fd_read",a,b,c,d,arguments);const e=this.fd[a]&&this.fd[a].buffers;var f=e.reduce((n,p)=>n+p.length,0);const g=this.getMemory();if(e&&0!==e.length){var h=Number(this.fd[a].seekPos),k=0,l=!1;if(h>=f)return k=g.getUint32(b,!0),g.setUint8(k,"\\x00"),g.setUint32(d,0,!0),WASI_ESUCCESS$$module$src$filesystem$constants;for(f=0;f<c;f++){var m=b+8*f;const n=g.getUint32(m,!0);m=g.getUint32(m+
4,!0);l||(k+=m,Array.from({length:m},(p,q)=>q).reduce((p,q)=>{if(l)return p;const [w,r]=p;let u=p=0,A=!1,x=0,t;if(0===q)for(;!A;)t=e[p]?e[p].byteLength:0,x<=h&&t+x>h?(A=!0,u=h-x):(x+=t,p+=1);else p=w,u=r;e[p]?(g.setUint8(n+q,e[p][u]),u+1>=e[p].byteLength?(p=w+1,u=0):u+=1):(g.setUint8(n+q,"\\x00"),h+=q,l=!0);return[p,u]},[0,0]),l||(h+=m))}this.fd[a].seekPos=goog.global.BigInt(h);g.setUint32(d,k,!0);return WASI_ESUCCESS$$module$src$filesystem$constants}console.error("Reading non existent file",a,this.fd[a])};
WASI$$module$src$filesystem$wasi.prototype.fd_readdir=function(a,b,c,d,e){DEBUG_WASI$$module$src$filesystem$wasi&&console.log("fd_readdir",a,b,c,d,e,arguments);return WASI_ESUCCESS$$module$src$filesystem$constants};WASI$$module$src$filesystem$wasi.prototype.fd_renumber=function(a,b){DEBUG_WASI$$module$src$filesystem$wasi&&console.log("fd_renumber",a,b,arguments);return WASI_ESUCCESS$$module$src$filesystem$constants};
WASI$$module$src$filesystem$wasi.prototype.fd_seek=function(a,b,c,d){DEBUG_WASI$$module$src$filesystem$wasi&&console.log("fd_seek",a,b,c,d,arguments);const e=this.getMemory();switch(c){case WASI_WHENCE_CUR$$module$src$filesystem$constants:var f;this.fd[a].seekPos=(null!=(f=this.fd[a].seekPos)?f:goog.global.BigInt(0))+goog.global.BigInt(b);break;case WASI_WHENCE_END$$module$src$filesystem$constants:f=(this.fd[a].buffers||[]).reduce((g,h)=>g+h.length,0);this.fd[a].seekPos=BigInt(f)+BigInt(b);break;
case WASI_WHENCE_SET$$module$src$filesystem$constants:this.fd[a].seekPos=BigInt(b)}e.setBigUint64(d,this.fd[a].seekPos,!0);return WASI_ESUCCESS$$module$src$filesystem$constants};WASI$$module$src$filesystem$wasi.prototype.fd_sync=function(a){DEBUG_WASI$$module$src$filesystem$wasi&&console.log("fd_sync",a,arguments);return WASI_ESUCCESS$$module$src$filesystem$constants};
WASI$$module$src$filesystem$wasi.prototype.fd_tell=function(a,b){DEBUG_WASI$$module$src$filesystem$wasi&&console.log("fd_tell",a,b,arguments);const c=this.getMemory();this.fd[a].seekPos||(this.fd[a].seekPos=goog.global.BigInt(0));c.setBigUint64(b,this.fd[a].seekPos,!0);return WASI_ESUCCESS$$module$src$filesystem$constants};
WASI$$module$src$filesystem$wasi.prototype.fd_write=function(a,b,c,d){DEBUG_WASI$$module$src$filesystem$wasi&&console.log("fd_write",{fd:a,iovs:b,iovsLength:c,nwritten:d});const e=this.getMemory();this.fd[a].buffers=this.fd[a].buffers||[];this.fd[a].buffers=0<this.fd[a].buffers.length?[concatUint8Arrays$$module$src$filesystem$wasi(this.fd[a].buffers)]:this.fd[a].buffers;let f=0;for(let k=0;k<c;k++){var g=b+8*k,h=e.getUint32(g,!0);g=e.getUint32(g+4,!0);f+=g;h=new Uint8Array(e.buffer,h,g);if(this.fd[a].buffers[0]&&
this.fd[a].seekPos<this.fd[a].buffers[0].length){const l=Number(this.fd[a].seekPos);h.slice(0,g).forEach((m,n)=>{this.fd[a].buffers[0][l+n]=m})}else this.fd[a].buffers.push(h.slice(0,g))}this.fd[a].seekPos+=goog.global.BigInt(f);e.setUint32(d,f,!0);[1,2].includes(a)&&console.log(decoder$$module$src$utils$text_encoders.decode(concatUint8Arrays$$module$src$filesystem$wasi(this.fd[a].buffers)));return WASI_ESUCCESS$$module$src$filesystem$constants};
WASI$$module$src$filesystem$wasi.prototype.path_create_directory=function(a,b,c){DEBUG_WASI$$module$src$filesystem$wasi&&console.log("path_create_directory",a,b,c,arguments);return WASI_ESUCCESS$$module$src$filesystem$constants};WASI$$module$src$filesystem$wasi.prototype.path_filestat_get=function(a,b,c,d,e){DEBUG_WASI$$module$src$filesystem$wasi&&console.log("path_filestat_get",a,b,c,d,e,arguments);return WASI_ESUCCESS$$module$src$filesystem$constants};
WASI$$module$src$filesystem$wasi.prototype.path_filestat_set_times=function(a,b,c,d,e,f,g){DEBUG_WASI$$module$src$filesystem$wasi&&console.log("path_filestat_set_times",a,b,c,d,e,f,g,arguments);return WASI_ESUCCESS$$module$src$filesystem$constants};WASI$$module$src$filesystem$wasi.prototype.path_link=function(a,b,c,d,e,f,g){DEBUG_WASI$$module$src$filesystem$wasi&&console.log("path_link",a,b,c,d,e,f,g,arguments);return WASI_ESUCCESS$$module$src$filesystem$constants};
WASI$$module$src$filesystem$wasi.prototype.path_open=function(a,b,c,d,e,f,g,h,k){DEBUG_WASI$$module$src$filesystem$wasi&&console.log("path_open",a,b,c,d,e,f,g,h,k,arguments);const l=this.getMemory();var m=(this.fd[a]||{path:"/"}).path,n=new Uint8Array(l.buffer,c,d);n=decoder$$module$src$utils$text_encoders.decode(n);const p=assertLeadingSlash$$module$src$filesystem$wasi((0,goog.string.path.normalizePath)(goog.string.path.join(3===a?"":m,n)));DEBUG_WASI$$module$src$filesystem$wasi&&console.log(";; opening path",
p,"withREader",shouldOpenReader$$module$src$filesystem$wasi(f));if(p.startsWith("/..")||"/._"===p||"/.AppleDouble"===p)return WASI_EBADF$$module$src$filesystem$constants;(m=Object.values(this.fd).find(q=>q.path===p&&Array.isArray(q.buffers)))?n=m.fd:(n=this.fd.length,this.fd[n]={fd:n});this.fd[n]={...this.fd[n],path:p,type:"file",seekPos:goog.global.BigInt(0),buffers:m?this.fd[n].buffers:[],open:!0};shouldOpenReader$$module$src$filesystem$wasi(f)&&DEBUG_WASI$$module$src$filesystem$wasi&&console.log("should open a read handle for",
p);l.setUint32(k,n,!0);return WASI_ESUCCESS$$module$src$filesystem$constants};WASI$$module$src$filesystem$wasi.prototype.path_readlink=function(a,b,c,d,e,f){DEBUG_WASI$$module$src$filesystem$wasi&&console.log("path_readlink",a,b,c,d,e,f,arguments);return WASI_ESUCCESS$$module$src$filesystem$constants};WASI$$module$src$filesystem$wasi.prototype.path_remove_directory=function(a,b,c){DEBUG_WASI$$module$src$filesystem$wasi&&console.log("path_remove_directory",a,b,c);return WASI_ESUCCESS$$module$src$filesystem$constants};
WASI$$module$src$filesystem$wasi.prototype.path_rename=function(a,b,c,d,e,f){DEBUG_WASI$$module$src$filesystem$wasi&&console.log("path_rename",a,b,c,d,e,f,arguments);return WASI_ESUCCESS$$module$src$filesystem$constants};WASI$$module$src$filesystem$wasi.prototype.path_symlink=function(a,b,c,d,e){DEBUG_WASI$$module$src$filesystem$wasi&&console.log("path_symlink",a,b,c,d,e,arguments);return WASI_ESUCCESS$$module$src$filesystem$constants};
WASI$$module$src$filesystem$wasi.prototype.path_unlink_file=function(a,b,c){3<a&&DEBUG_WASI$$module$src$filesystem$wasi&&console.log("path_unlink_file",a,b,c,arguments);return WASI_ESUCCESS$$module$src$filesystem$constants};WASI$$module$src$filesystem$wasi.prototype.poll_oneoff=function(a,b,c,d){DEBUG_WASI$$module$src$filesystem$wasi&&console.log("poll_oneoff",a,b,c,d,arguments);return WASI_ESUCCESS$$module$src$filesystem$constants};
WASI$$module$src$filesystem$wasi.prototype.proc_exit=function(a){DEBUG_WASI$$module$src$filesystem$wasi&&console.log("proc_exit",a,arguments);return WASI_ESUCCESS$$module$src$filesystem$constants};WASI$$module$src$filesystem$wasi.prototype.proc_raise=function(a){DEBUG_WASI$$module$src$filesystem$wasi&&console.log("proc_raise",a,arguments);return WASI_ESUCCESS$$module$src$filesystem$constants};
WASI$$module$src$filesystem$wasi.prototype.random_get=function(a,b){DEBUG_WASI$$module$src$filesystem$wasi&&console.log("random_get",a,b);return WASI_ESUCCESS$$module$src$filesystem$constants};WASI$$module$src$filesystem$wasi.prototype.sched_yield=function(){DEBUG_WASI$$module$src$filesystem$wasi&&console.log("sched_yield",arguments);return WASI_ESUCCESS$$module$src$filesystem$constants};
WASI$$module$src$filesystem$wasi.prototype.sock_recv=function(){DEBUG_WASI$$module$src$filesystem$wasi&&console.log("sock_recv",arguments);return WASI_ENOSYS$$module$src$filesystem$constants};WASI$$module$src$filesystem$wasi.prototype.sock_send=function(){DEBUG_WASI$$module$src$filesystem$wasi&&console.log("sock_send",arguments);return WASI_ENOSYS$$module$src$filesystem$constants};
WASI$$module$src$filesystem$wasi.prototype.sock_shutdown=function(){DEBUG_WASI$$module$src$filesystem$wasi&&console.log("sock_shutdown",arguments);return WASI_ENOSYS$$module$src$filesystem$constants};WASI$$module$src$filesystem$wasi.prototype.findBuffers=function(a){const b=Object.values(this.fd).find(({path:c})=>c===a);return[b&&b.buffers,b.fd]};
WASI$$module$src$filesystem$wasi.prototype.readdir=function(a){const b=(assertLeadingSlash$$module$src$filesystem$wasi((0,goog.string.path.normalizePath)(a))+"/").replace("//","/"),c=[];Object.values(this.fd).forEach(({path:d})=>!/\\//g.test(d.replace(b,""))&&c.push(d));return c.map(d=>removeLeadingSlash$$module$src$filesystem$wasi(d.replace(b,""))).filter(d=>!!d)};
WASI$$module$src$filesystem$wasi.prototype.writeFile=function(a,b){const c=assertLeadingSlash$$module$src$filesystem$wasi((0,goog.string.path.normalizePath)(a));a=Object.keys(this.fd).length;const d=Object.values(this.fd).find(({path:e})=>e===c);this.fd[a]={fd:a,path:c,seekPos:goog.global.BigInt(0),buffers:[b]};d&&delete this.fd[d]};
WASI$$module$src$filesystem$wasi.prototype.appendFile=function(a,b){var c=assertLeadingSlash$$module$src$filesystem$wasi((0,goog.string.path.normalizePath)(a));[c]=this.findBuffers(c);c?c.push(b):console.error(\`Can't append to non-existing file \${a}\`)};
WASI$$module$src$filesystem$wasi.prototype.readFile=function(a){const b=assertLeadingSlash$$module$src$filesystem$wasi((0,goog.string.path.normalizePath)(a)),[c,d]=this.findBuffers(b);this.fd[d]&&this.fd[d].open&&console.warn(\`readFile: file \${a} hasn't been closed yet!\`);if(c)return concatUint8Arrays$$module$src$filesystem$wasi(c)};
WASI$$module$src$filesystem$wasi.prototype.readStdOut=function(){const a=Object.values(this.fd[0]);return concatUint8Arrays$$module$src$filesystem$wasi(a&&a.buffers||[])};WASI$$module$src$filesystem$wasi.prototype.unlink=function(a){const b=assertLeadingSlash$$module$src$filesystem$wasi((0,goog.string.path.normalizePath)(a));(a=Object.values(this.fd).find(({path:c})=>c===b))?delete this.fd[a]:console.error(\`While trying to unlink \${b}, path not found\`)};
WASI$$module$src$filesystem$wasi.prototype.mkdir=function(a){const b=assertLeadingSlash$$module$src$filesystem$wasi((0,goog.string.path.normalizePath)(a)),c=[];Object.values(this.fd).forEach(({path:d})=>d.startsWith(b)&&c.push(d));0<c.length?console.warn(\`mkdir: path \${a} already exists\`):(a=Object.keys(this.fd).length,this.fd[a]={fd:a,path:b})};var module$src$filesystem$wasi={};module$src$filesystem$wasi.WASI=WASI$$module$src$filesystem$wasi;function clearArray$$module$src$utils$clear_array(a){for(;0<a.length;)a.pop()}var module$src$utils$clear_array={};module$src$utils$clear_array.clearArray=clearArray$$module$src$utils$clear_array;const CompressionMethod$$module$src$zlib$zlib={DEFLATE:8,RESERVED:15};var module$src$zlib$zlib={};module$src$zlib$zlib.CompressionMethod=CompressionMethod$$module$src$zlib$zlib;/*
 zlib.js 2012 - imaya [ https://github.com/imaya/zlib.js ] The MIT License */
function Huffman$$module$src$zlib$huffman(a){const b=a.length;let c=0,d=Number.POSITIVE_INFINITY,e,f,g,h;let k,l;for(k=0;k<b;++k)a[k]>c&&(c=a[k]),a[k]<d&&(d=a[k]);const m=1<<c,n=new Uint32Array(m);e=1;f=0;for(g=2;e<=c;){for(k=0;k<b;++k)if(a[k]===e){h=0;var p=f;for(l=0;l<e;++l)h=h<<1|p&1,p>>=1;p=e<<16|k;for(l=h;l<m;l+=g)n[l]=p;++f}++e;f<<=1;g<<=1}return[n,c,d]}var module$src$zlib$huffman={};module$src$zlib$huffman.Huffman=Huffman$$module$src$zlib$huffman;const ZLIB_RAW_INFLATE_BUFFER_SIZE$$module$src$zlib$rawinflate=32768;
function RawInflate$$module$src$zlib$rawinflate(a,b){this.blocks=[];this.bufferSize=ZLIB_RAW_INFLATE_BUFFER_SIZE$$module$src$zlib$rawinflate;this.bitsbuflen=this.bitsbuf=this.ip=this.totalpos=0;this.input=new Uint8Array(a);this.bfinal=!1;this.bufferType=RawInflate$$module$src$zlib$rawinflate.BufferType.ADAPTIVE;this.resize=!1;if(b||!(b={}))b.index&&(this.ip=b.index),b.bufferSize&&(this.bufferSize=b.bufferSize),b.bufferType&&(this.bufferType=b.bufferType),b.resize&&(this.resize=b.resize);switch(this.bufferType){case RawInflate$$module$src$zlib$rawinflate.BufferType.BLOCK:this.op=
RawInflate$$module$src$zlib$rawinflate.MaxBackwardLength;this.output=new Uint8Array(RawInflate$$module$src$zlib$rawinflate.MaxBackwardLength+this.bufferSize+RawInflate$$module$src$zlib$rawinflate.MaxCopyLength);break;case RawInflate$$module$src$zlib$rawinflate.BufferType.ADAPTIVE:this.op=0;this.output=new Uint8Array(this.bufferSize);break;default:throw Error("invalid inflate mode");}}RawInflate$$module$src$zlib$rawinflate.BufferType={BLOCK:0,ADAPTIVE:1};
RawInflate$$module$src$zlib$rawinflate.prototype.decompress=function(){for(;!this.bfinal;)this.parseBlock();switch(this.bufferType){case RawInflate$$module$src$zlib$rawinflate.BufferType.BLOCK:return this.concatBufferBlock();case RawInflate$$module$src$zlib$rawinflate.BufferType.ADAPTIVE:return this.concatBufferDynamic();default:throw Error("invalid inflate mode");}};RawInflate$$module$src$zlib$rawinflate.MaxBackwardLength=32768;RawInflate$$module$src$zlib$rawinflate.MaxCopyLength=258;
RawInflate$$module$src$zlib$rawinflate.Order=function(a){return new Uint16Array(a)}([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]);RawInflate$$module$src$zlib$rawinflate.LengthCodeTable=function(a){return new Uint16Array(a)}([3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258,258,258]);RawInflate$$module$src$zlib$rawinflate.LengthExtraTable=function(a){return new Uint8Array(a)}([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,0,0]);
RawInflate$$module$src$zlib$rawinflate.DistCodeTable=function(a){return new Uint16Array(a)}([1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577]);RawInflate$$module$src$zlib$rawinflate.DistExtraTable=function(a){return new Uint8Array(a)}([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13]);
RawInflate$$module$src$zlib$rawinflate.FixedLiteralLengthTable=function(a){return a}(function(){const a=new Uint8Array(288);let b,c;b=0;for(c=a.length;b<c;++b)a[b]=143>=b?8:255>=b?9:279>=b?7:8;return Huffman$$module$src$zlib$huffman(a)}());RawInflate$$module$src$zlib$rawinflate.FixedDistanceTable=function(a){return a}(function(){const a=new Uint8Array(30);let b,c;b=0;for(c=a.length;b<c;++b)a[b]=5;return Huffman$$module$src$zlib$huffman(a)}());
RawInflate$$module$src$zlib$rawinflate.prototype.parseBlock=function(){let a=this.readBits(3);a&1&&(this.bfinal=!0);a>>>=1;switch(a){case 0:this.parseUncompressedBlock();break;case 1:this.parseFixedHuffmanBlock();break;case 2:this.parseDynamicHuffmanBlock();break;default:throw Error("unknown BTYPE: "+a);}};
RawInflate$$module$src$zlib$rawinflate.prototype.readBits=function(a){let b=this.bitsbuf,c=this.bitsbuflen;const d=this.input;let e=this.ip;if(e+(a-c+7>>3)>=d.length)throw Error("input buffer is broken");for(;c<a;)b|=d[e++]<<c,c+=8;this.bitsbuf=b>>>a;this.bitsbuflen=c-a;this.ip=e;return b&(1<<a)-1};
RawInflate$$module$src$zlib$rawinflate.prototype.readCodeByTable=function(a){let b=this.bitsbuf,c=this.bitsbuflen;var d=this.input;let e=this.ip;var f=d.length;const g=a[0];for(a=a[1];c<a&&!(e>=f);)b|=d[e++]<<c,c+=8;d=g[b&(1<<a)-1];f=d>>>16;if(f>c)throw Error("invalid code length: "+f);this.bitsbuf=b>>f;this.bitsbuflen=c-f;this.ip=e;return d&65535};
RawInflate$$module$src$zlib$rawinflate.prototype.parseUncompressedBlock=function(){const a=this.input;let b=this.ip,c=this.output,d=this.op;var e=a.length;let f;const g=c.length;this.bitsbuflen=this.bitsbuf=0;if(b+1>=e)throw Error("invalid uncompressed block header: LEN");f=a[b++]|a[b++]<<8;if(b+1>=e)throw Error("invalid uncompressed block header: NLEN");e=a[b++]|a[b++]<<8;if(f===~e)throw Error("invalid uncompressed block header: length verify");if(b+f>a.length)throw Error("input buffer is broken");
switch(this.bufferType){case RawInflate$$module$src$zlib$rawinflate.BufferType.BLOCK:for(;d+f>c.length;)e=g-d,f-=e,c.set(a.subarray(b,b+e),d),d+=e,b+=e,this.op=d,c=this.expandBufferBlock(),d=this.op;break;case RawInflate$$module$src$zlib$rawinflate.BufferType.ADAPTIVE:for(;d+f>c.length;)c=this.expandBufferAdaptive({fixRatio:2});break;default:throw Error("invalid inflate mode");}c.set(a.subarray(b,b+f),d);this.ip=b+f;this.op=d+f;this.output=c};
RawInflate$$module$src$zlib$rawinflate.prototype.parseFixedHuffmanBlock=function(){switch(this.bufferType){case RawInflate$$module$src$zlib$rawinflate.BufferType.ADAPTIVE:this.decodeHuffmanAdaptive(RawInflate$$module$src$zlib$rawinflate.FixedLiteralLengthTable,RawInflate$$module$src$zlib$rawinflate.FixedDistanceTable);break;case RawInflate$$module$src$zlib$rawinflate.BufferType.BLOCK:this.decodeHuffmanBlock(RawInflate$$module$src$zlib$rawinflate.FixedLiteralLengthTable,RawInflate$$module$src$zlib$rawinflate.FixedDistanceTable);
break;default:throw Error("invalid inflate mode");}};
RawInflate$$module$src$zlib$rawinflate.prototype.parseDynamicHuffmanBlock=function(){var a=this.readBits(5)+257,b=this.readBits(5)+1,c=this.readBits(4)+4,d=new Uint8Array(RawInflate$$module$src$zlib$rawinflate.Order.length);let e;for(e=0;e<c;++e)d[RawInflate$$module$src$zlib$rawinflate.Order[e]]=this.readBits(3);d=Huffman$$module$src$zlib$huffman(d);c=new Uint8Array(a+b);e=0;for(b=a+b;e<b;){var f=this.readCodeByTable(d);switch(f){case 16:for(f=3+this.readBits(2);f--;)c[e++]=g;break;case 17:for(f=
3+this.readBits(3);f--;)c[e++]=0;var g=0;break;case 18:for(f=11+this.readBits(7);f--;)c[e++]=0;g=0;break;default:g=c[e++]=f}}g=Huffman$$module$src$zlib$huffman(c.subarray(0,a));a=Huffman$$module$src$zlib$huffman(c.subarray(a));switch(this.bufferType){case RawInflate$$module$src$zlib$rawinflate.BufferType.ADAPTIVE:this.decodeHuffmanAdaptive(g,a);break;case RawInflate$$module$src$zlib$rawinflate.BufferType.BLOCK:this.decodeHuffmanBlock(g,a);break;default:throw Error("invalid inflate mode");}};
RawInflate$$module$src$zlib$rawinflate.prototype.decodeHuffmanBlock=function(a,b){let c=this.output,d=this.op;this.currentLitlenTable=a;const e=c.length-RawInflate$$module$src$zlib$rawinflate.MaxCopyLength;var f;let g,h;const k=RawInflate$$module$src$zlib$rawinflate.LengthCodeTable,l=RawInflate$$module$src$zlib$rawinflate.LengthExtraTable,m=RawInflate$$module$src$zlib$rawinflate.DistCodeTable,n=RawInflate$$module$src$zlib$rawinflate.DistExtraTable;for(;256!==(f=this.readCodeByTable(a));)if(256>f)d>=
e&&(this.op=d,c=this.expandBufferBlock(),d=this.op),c[d++]=f;else for(f-=257,h=k[f],0<l[f]&&(h+=this.readBits(l[f])),f=this.readCodeByTable(b),g=m[f],0<n[f]&&(g+=this.readBits(n[f])),d>=e&&(this.op=d,c=this.expandBufferBlock(),d=this.op);h--;)c[d]=c[d++-g];for(;8<=this.bitsbuflen;)this.bitsbuflen-=8,this.ip--;this.op=d};
RawInflate$$module$src$zlib$rawinflate.prototype.decodeHuffmanAdaptive=function(a,b){let c=this.output,d=this.op;this.currentLitlenTable=a;let e=c.length;var f;let g,h;const k=RawInflate$$module$src$zlib$rawinflate.LengthCodeTable,l=RawInflate$$module$src$zlib$rawinflate.LengthExtraTable,m=RawInflate$$module$src$zlib$rawinflate.DistCodeTable,n=RawInflate$$module$src$zlib$rawinflate.DistExtraTable;for(;256!==(f=this.readCodeByTable(a));)if(256>f)d>=e&&(c=this.expandBufferAdaptive(),e=c.length),c[d++]=
f;else for(f-=257,h=k[f],0<l[f]&&(h+=this.readBits(l[f])),f=this.readCodeByTable(b),g=m[f],0<n[f]&&(g+=this.readBits(n[f])),d+h>e&&(c=this.expandBufferAdaptive(),e=c.length);h--;)c[d]=c[d++-g];for(;8<=this.bitsbuflen;)this.bitsbuflen-=8,this.ip--;this.op=d};
RawInflate$$module$src$zlib$rawinflate.prototype.expandBufferBlock=function(a){a=new Uint8Array(this.op-RawInflate$$module$src$zlib$rawinflate.MaxBackwardLength);const b=this.op-RawInflate$$module$src$zlib$rawinflate.MaxBackwardLength,c=this.output;a.set(c.subarray(RawInflate$$module$src$zlib$rawinflate.MaxBackwardLength,a.length));this.blocks.push(a);this.totalpos+=a.length;c.set(c.subarray(b,b+RawInflate$$module$src$zlib$rawinflate.MaxBackwardLength));this.op=RawInflate$$module$src$zlib$rawinflate.MaxBackwardLength;
return c};RawInflate$$module$src$zlib$rawinflate.prototype.expandBufferAdaptive=function(a){let b=Math.trunc(this.input.length/this.ip+1);const c=this.input,d=this.output;a&&("number"===typeof a.fixRatio&&(b=a.fixRatio),"number"===typeof a.addRatio&&(b+=a.addRatio));2>b?(a=(c.length-this.ip)/this.currentLitlenTable[2],a=Math.trunc(a/2*258),a=a<d.length?d.length+a:d.length<<1):a=d.length*b;a=new Uint8Array(a);a.set(d);return this.output=a};
RawInflate$$module$src$zlib$rawinflate.prototype.concatBufferBlock=function(){let a=0;const b=this.output,c=this.blocks;let d;const e=new Uint8Array(this.totalpos+(this.op-RawInflate$$module$src$zlib$rawinflate.MaxBackwardLength));let f,g,h,k;if(0===c.length)return this.output.subarray(RawInflate$$module$src$zlib$rawinflate.MaxBackwardLength,this.op);f=0;for(g=c.length;f<g;++f)for(d=c[f],h=0,k=d.length;h<k;++h)e[a++]=d[h];f=RawInflate$$module$src$zlib$rawinflate.MaxBackwardLength;for(g=this.op;f<
g;++f)e[a++]=b[f];this.blocks=[];return this.buffer=e};RawInflate$$module$src$zlib$rawinflate.prototype.concatBufferDynamic=function(){let a;const b=this.op;this.resize?(a=new Uint8Array(b),a.set(this.output.subarray(0,b))):a=this.output.subarray(0,b);return this.buffer=a};var module$src$zlib$rawinflate={};module$src$zlib$rawinflate.RawInflate=RawInflate$$module$src$zlib$rawinflate;function Util$$module$src$zlib$util(){}Util$$module$src$zlib$util.stringToByteArray=function(a){a=[...a];let b,c;b=0;for(c=a.length;b<c;b++)a[b]=(a[b].charPointAt(0)&255)>>>0;return new Uint8Array([a])};var module$src$zlib$util={};module$src$zlib$util.Util=Util$$module$src$zlib$util;function Adler32$$module$src$zlib$adler32(a){"string"===typeof a&&(a=Util$$module$src$zlib$util.stringToByteArray(a));return Adler32$$module$src$zlib$adler32.update(1,a)}Adler32$$module$src$zlib$adler32.update=function(a,b){let c=a&65535;a=a>>>16&65535;let d=b.length,e,f=0;for(;0<d;){e=d>Adler32$$module$src$zlib$adler32.OptimizationParameter?Adler32$$module$src$zlib$adler32.OptimizationParameter:d;d-=e;do c+=b[f++],a+=c;while(--e);c%=65521;a%=65521}return(a<<16|c)>>>0};
Adler32$$module$src$zlib$adler32.OptimizationParameter=1024;var module$src$zlib$adler32={};module$src$zlib$adler32.Adler32=Adler32$$module$src$zlib$adler32;function Inflate$$module$src$zlib$inflate(a,b){this.input=a;this.ip=0;if(b||!(b={}))b.index&&(this.ip=b.index),b.verify&&(this.verify=b.verify);const c=a[this.ip++],d=a[this.ip++];switch(c&15){case CompressionMethod$$module$src$zlib$zlib.DEFLATE:this.method=CompressionMethod$$module$src$zlib$zlib.DEFLATE;break;default:throw Error("unsupported compression method");}if(0!==((c<<8)+d)%31)throw Error("invalid fcheck flag:"+((c<<8)+d)%31);if(d&32)throw Error("fdict flag is not supported");this.rawinflate=
new RawInflate$$module$src$zlib$rawinflate(a,{index:this.ip,bufferSize:b.bufferSize,bufferType:b.bufferType,resize:b.resize})}Inflate$$module$src$zlib$inflate.BufferType=RawInflate$$module$src$zlib$rawinflate.BufferType;
Inflate$$module$src$zlib$inflate.prototype.decompress=function(){var a=this.input;const b=this.rawinflate.decompress();this.ip=this.rawinflate.ip;if(this.verify&&(a=(a[this.ip++]<<24|a[this.ip++]<<16|a[this.ip++]<<8|a[this.ip++])>>>0,a!==Adler32$$module$src$zlib$adler32(b)))throw Error("invalid adler-32 checksum");return b};var module$src$zlib$inflate={};module$src$zlib$inflate.Inflate=Inflate$$module$src$zlib$inflate;const PAGE_SIZE$$module$src$module=65536,PAGES_PER_MB$$module$src$module=16,csoundWasiJsMessageCallback$$module$src$module=({memory:a,messagePort:b,streamBuffer:c})=>function(d,e,f,g){if(a){d=new Uint8Array(a.buffer,g,f);d=uint2String$$module$src$utils$text_encoders(d);var h=/\\n$/g.test(d);e=/^\\n/g.test(d);var k=d.split("\\n").filter(m=>0<m.length),l=[];if(0===k.length&&h||e)l.push(c.join("")),clearArray$$module$src$utils$clear_array(c);k.forEach((m,n)=>{n+1===k.length?h?0===n?(l.push(c.join("")+m),
clearArray$$module$src$utils$clear_array(c)):l.push(m):c.push(m):0===n?(l.push(c.join("")+m),clearArray$$module$src$utils$clear_array(c)):l.push(m)});l.forEach(m=>{m.replace(/(\\r\\n|\\n|\\r)/gm,"")&&b.post({log:m})})}},assertPluginExports$$module$src$module=a=>{if(a&&"object"===typeof a&&"object"===typeof a.exports){if(a.exports.__wasm_call_ctors){if(a.exports.csoundModuleCreate||a.exports.csound_opcode_init||a.exports.csound_fgen_init)return!0;console.error(a.exports,"A csound plugin turns out to be neither a plugin, opcode or module.\\nPerhaps csdl.h or module.h wasn't imported correctly?");
return!1}console.error("A csound plugin didn't export __wasm_call_ctors.\\nPlease re-run wasm-ld with either --export-all or include --export=__wasm_call_ctors");return!1}console.error("Error instantiating a csound plugin, instance and/or export is missing!");return!1},getBinaryHeaderData$$module$src$module=a=>{function b(){let l=0,m=1;for(;;){const n=a[c++];l+=(n&127)*m;m*=128;if(!(n&128))break}return l}1836278016!==(new Uint32Array((new Uint8Array(a.subarray(0,24))).buffer))[0]&&console.error("Wasm magic number is missing!");
if(0!==a[8])return logWasmModule$$module$src$logger("Dylink section wasn't found in wasm binary, assuming static wasm."),"static";let c=9;const d=b();c++;(0,goog.asserts.assert)(a[c]==="d".codePointAt(0));c++;(0,goog.asserts.assert)(a[c]==="y".codePointAt(0));c++;(0,goog.asserts.assert)(a[c]==="l".codePointAt(0));c++;(0,goog.asserts.assert)(a[c]==="i".codePointAt(0));c++;(0,goog.asserts.assert)(a[c]==="n".codePointAt(0));c++;(0,goog.asserts.assert)(a[c]==="k".codePointAt(0));c++;(0,goog.asserts.assert)(a[c]===
".".codePointAt(0));c++;(0,goog.asserts.assert)(a[c]==="0".codePointAt(0));c+=3;const e=b(),f=b(),g=b(),h=b(),k=b();return{sectionSize:d,memorySize:e,memoryAlign:f,neededDynlibsCount:k,tableSize:g,tableAlign:h}},loadStaticWasm$$module$src$module=async({wasmBytes:a,wasi:b,messagePort:c})=>{const d=await WebAssembly.compile(a);a=new WebAssembly.Memory({initial:16384});const e=b.getImports(d);e.env=e.env||{};e.env.csoundLoadModules=()=>0;e.env.memory=a;e.env.csoundWasiJsMessageCallback=csoundWasiJsMessageCallback$$module$src$module({memory:e.env.memory,
streamBuffer:[],messagePort:c});c=await WebAssembly.instantiate(d,e);b.setMemory(a);b.start(c);c.exports.__wasi_js_csoundSetMessageStringCallback();return[c,b]};
var $jscompDefaultExport$$module$src$module=async function({wasmDataURI:a,withPlugins:b=[],messagePort:c}){var d={};const e=new WASI$$module$src$filesystem$wasi({preopens:{"/":"/"}});a=new Uint8Array(a);a=(new Inflate$$module$src$zlib$inflate(a)).decompress();var f=getBinaryHeaderData$$module$src$module(a);if("static"===f)return await loadStaticWasm$$module$src$module({messagePort:c,wasmBytes:a,wasmFs:d,wasi:e});const {memorySize:g,memoryAlign:h,tableSize:k}=f;b=await b.reduce(async(t,z)=>{t=await t;
let v,y;try{v=new Uint8Array(z),y=getBinaryHeaderData$$module$src$module(v)}catch(C){console.error("Error in plugin",C)}y&&t.push({headerData:y,wasmPluginBytes:v});return t},[]);var l=128*PAGES_PER_MB$$module$src$module;d=Math.ceil((g+h)/PAGE_SIZE$$module$src$module);f=Math.ceil(b.reduce((t,{headerData:z})=>"static"===z?0:t+(z.memorySize+h),0)/PAGE_SIZE$$module$src$module);f=d+f+l;const m=new WebAssembly.Memory({initial:f,maximum:1024*PAGES_PER_MB$$module$src$module}),n=new WebAssembly.Table({initial:k+
1,element:"anyfunc"});e.setMemory(m);const p=new WebAssembly.Global({value:"i32",mutable:!0},f*PAGE_SIZE$$module$src$module);f=new WebAssembly.Global({value:"i32",mutable:!0},f*PAGE_SIZE$$module$src$module);l=new WebAssembly.Global({value:"i32",mutable:!1},l);const q=new WebAssembly.Global({value:"i32",mutable:!1},1),w=new WebAssembly.Global({value:"i32",mutable:!0},0);a=await WebAssembly.compile(a);const r=e.getImports(a);let u=[],A=d;r.env=r.env||{};r.env.memory=m;r.env.__indirect_function_table=
n;r.env.__stack_pointer=p;r.env.__memory_base=l;r.env.__table_base=q;r.env.csoundLoadModules=t=>{u.forEach(z=>{void 0===x?console.error("csound-wasm internal: timing problem detected!"):dlinit$$module$src$dlinit(x,z,n,t)});return 0};r.env._ZTH5errno=function(){};r.env.csoundWasiJsMessageCallback=csoundWasiJsMessageCallback$$module$src$module({memory:m,messagePort:c,streamBuffer:[]});r.env.printDebugCallback=(t,z)=>{t=new Uint8Array(m.buffer,t,z);t=uint2String$$module$src$utils$text_encoders(t);console.log(t)};
r["GOT.mem"]=r["GOT.mem"]||{};r["GOT.mem"].__heap_base=f;r["GOT.func"]=r["GOT.func"]||{};const x=await WebAssembly.instantiate(a,r);c=Object.assign({},x.exports);a={};a.exports=Object.assign(c,{memory:m});u=await b.reduce(async(t,{headerData:z,wasmPluginBytes:v})=>{t=await t;try{const {memorySize:y,memoryAlign:C,tableSize:F}=z,E=await WebAssembly.compile(v),B=e.getImports(E),G=new WebAssembly.Global({value:"i32",mutable:!1},A*PAGE_SIZE$$module$src$module);n.grow(F);B.env=Object.assign({},B.env);B.env.memory=
m;B.env.__indirect_function_table=n;B.env.__memory_base=G;B.env.__stack_pointer=p;B.env.__table_base=q;B.env.csoundLoadModules=w;delete B.env.csoundWasiJsMessageCallback;A+=Math.ceil((y+C)/PAGE_SIZE$$module$src$module);const D=await WebAssembly.instantiate(E,B);assertPluginExports$$module$src$module(D)&&(D.exports.__wasm_call_ctors(),t.push(D))}catch(y){console.error("Error while compiling csound-plugin",y)}return t},[]);e.start(a);a.exports.__wasi_js_csoundSetMessageStringCallback();return[a,e]},
module$src$module={};module$src$module.csoundWasiJsMessageCallback=csoundWasiJsMessageCallback$$module$src$module;module$src$module.default=$jscompDefaultExport$$module$src$module;let combined$$module$src$workers$vanilla_worker,audioProcessCallback$$module$src$workers$vanilla_worker=()=>{};
const rtmidiQueue$$module$src$workers$vanilla_worker=[],createAudioInputBuffers$$module$src$workers$vanilla_worker=(a,b)=>{for(let c=0;c<b;++c)a.buffers.push(new Float64Array(RING_BUFFER_SIZE$$module$src$constants))},generateAudioFrames$$module$src$workers$vanilla_worker=(a,b)=>{if("realtimePerformanceEnded"!==b.vanillaWorkerState)return audioProcessCallback$$module$src$workers$vanilla_worker(a)},createRealtimeAudioThread$$module$src$workers$vanilla_worker=({libraryCsound:a,wasm:b,workerMessagePort:c,
audioInputs:d,inputChannelCount:e,outputChannelCount:f,sampleRate:g})=>({csound:h})=>{var k=a.csoundGetInputName(h).includes("adc");g&&a.csoundSetOption(h,\`--sr=\${g}\`);f&&a.csoundSetOption(h,\`--nchnls=\${f}\`);e&&a.csoundSetOption(h,\`--nchnls_i=\${e}\`);const l=a.csoundGetNchnls(h),m=0<e?e:k?a.csoundGetNchnlsInput(h):0,n=a.csoundGet0dBFS(h);k=a.csoundGetSpin(h);const p=a.csoundGetSpout(h),q=a.csoundGetKsmps(h);let w=new Float64Array(b.wasi.memory.buffer,k,q*m),r=new Float64Array(b.wasi.memory.buffer,
p,q*l),u=0,A=0;c.broadcastPlayState("realtimePerformanceStarted");audioProcessCallback$$module$src$workers$vanilla_worker=({numFrames:x})=>{const t=instantiateAudioPacket$$module$src$workers$common_utils(l,x),z=0<d.buffers.length&&d.availableFrames>=x;0<rtmidiQueue$$module$src$workers$vanilla_worker.length&&(rtmidiQueue$$module$src$workers$vanilla_worker.forEach(v=>{a.csoundPushMidiMessage(h,v[0],v[1],v[2])}),clearArray$$module$src$utils$clear_array(rtmidiQueue$$module$src$workers$vanilla_worker));
for(let v=0;v<x;v++){A=(A+1)%q;if("realtimePerformanceEnded"===c.vanillaWorkerState)return 0===u&&(a.csoundStop(h),u=a.csoundPerformKsmps(h)),c.broadcastPlayState("realtimePerformanceEnded"),audioProcessCallback$$module$src$workers$vanilla_worker=()=>{},clearArray$$module$src$utils$clear_array(rtmidiQueue$$module$src$workers$vanilla_worker),d.port=void 0,{framesLeft:v};if(0===A&&0===u&&(u=a.csoundPerformKsmps(h),0!==u))return c.broadcastPlayState("realtimePerformanceEnded"),audioProcessCallback$$module$src$workers$vanilla_worker=
()=>{},clearArray$$module$src$utils$clear_array(rtmidiQueue$$module$src$workers$vanilla_worker),d.port=void 0,{framesLeft:v};0===w.length&&(w=new Float64Array(b.wasi.memory.buffer,a.csoundGetSpin(h),q*m));0===r.length&&(r=new Float64Array(b.wasi.memory.buffer,a.csoundGetSpout(h),q*l));t.forEach((y,C)=>{0<r.length&&(y[v]=(r[A*l+C]||0)/n)});if(z)for(let y=0;y<m;y++)w[A*m+y]=(d.buffers[y][v+d.inputReadIndex%RING_BUFFER_SIZE$$module$src$constants]||0)*n}z&&(d.availableFrames-=x,d.inputReadIndex+=x%RING_BUFFER_SIZE$$module$src$constants);
return{audioPacket:t,framesLeft:0}}},callUncloned$$module$src$workers$vanilla_worker=async(a,b)=>(a=combined$$module$src$workers$vanilla_worker.get(a))&&a.apply({},b||[]),initMessagePort$$module$src$workers$vanilla_worker=({port:a})=>{logVANWorker$$module$src$logger("initMessagePort")();const b=new $jscompDefaultExport$$module$src$utils$message_port_state;b.port=a;b.post=c=>a.postMessage({log:c});b.broadcastPlayState=c=>{b.vanillaWorkerState=c;a.postMessage({playStateChange:c})};b.ready=!0;return b},
initRequestPort$$module$src$workers$vanilla_worker=({csoundWorkerFrameRequestPort:a,workerMessagePort:b})=>{logVANWorker$$module$src$logger("initRequestPort")();a.addEventListener("message",c=>{const {framesLeft:d=0,audioPacket:e}=generateAudioFrames$$module$src$workers$vanilla_worker(c.data,b)||{};a.postMessage({numFrames:c.data.numFrames-d,audioPacket:e,...c.data})});a.start();return a},initAudioInputPort$$module$src$workers$vanilla_worker=({port:a})=>{logVANWorker$$module$src$logger("initAudioInputPort")();
const b={availableFrames:0,buffers:[],inputReadIndex:0,inputWriteIndex:0,port:a};b.port.addEventListener("message",({data:c})=>{0===b.buffers.length&&createAudioInputBuffers$$module$src$workers$vanilla_worker(b,c.length);b.buffers.forEach((d,e)=>{d.set(c[e],b.inputWriteIndex)});b.inputWriteIndex+=c[0].length;b.availableFrames+=c[0].length;b.inputWriteIndex>=RING_BUFFER_SIZE$$module$src$constants&&(b.inputWriteIndex=0)});b.port.start();return b},initRtMidiEventPort$$module$src$workers$vanilla_worker=
({rtmidiPort:a})=>{logVANWorker$$module$src$logger("initRtMidiEventPort")();a.addEventListener("message",({data:b})=>{rtmidiQueue$$module$src$workers$vanilla_worker.push(b)});a.start();return a},initialize$$module$src$workers$vanilla_worker=async({audioInputPort:a,inputChannelCount:b,messagePort:c,outputChannelCount:d,requestPort:e,rtmidiPort:f,wasmDataURI:g,wasmTransformerDataURI:h,withPlugins:k=[]})=>{logVANWorker$$module$src$logger("initializing wasm and exposing csoundAPI functions from worker to main")();
const l=initMessagePort$$module$src$workers$vanilla_worker({port:c}),m=initAudioInputPort$$module$src$workers$vanilla_worker({port:a});initRequestPort$$module$src$workers$vanilla_worker({csoundWorkerFrameRequestPort:e,workerMessagePort:l});initRtMidiEventPort$$module$src$workers$vanilla_worker({rtmidiPort:f});const [n,p]=await $jscompDefaultExport$$module$src$module({wasmDataURI:g,wasmTransformerDataURI:h,withPlugins:k,messagePort:l});n.wasi=p;const q=$jscompDefaultExport$$module$src$libcsound(n);
a=pipe$$module$node_modules$rambda$dist$rambda_mjs(assoc$$module$node_modules$rambda$dist$rambda_mjs("csoundStart",(r,u)=>handleCsoundStart$$module$src$workers$common_utils(l,q,p,createRealtimeAudioThread$$module$src$workers$vanilla_worker({audioInputs:m,inputChannelCount:b,libraryCsound:q,outputChannelCount:d,wasm:n,wasi:p,workerMessagePort:l}),renderFunction$$module$src$workers$common_utils({inputChannelCount:b,libraryCsound:q,outputChannelCount:d,wasm:n,workerMessagePort:l}))(u)),assoc$$module$node_modules$rambda$dist$rambda_mjs("wasm",
n))(q);combined$$module$src$workers$vanilla_worker=new Map(Object.entries(a));q.csoundInitialize(0);const w=q.csoundCreate();l.port.addEventListener("message",r=>{r.data&&r.data.newPlayState&&("realtimePerformanceEnded"===r.data.newPlayState&&(q.csoundStop(w),"realtimePerformanceEnded"!==l.vanillaWorkerState&&q.csoundPerformKsmps(w),l.broadcastPlayState("realtimePerformanceEnded")),l.vanillaWorkerState=r.data.newPlayState)});l.port.start();return w};
expose$$module$node_modules$comlink$dist$esm$comlink_mjs({initialize:initialize$$module$src$workers$vanilla_worker,callUncloned:callUncloned$$module$src$workers$vanilla_worker});var module$src$workers$vanilla_worker={};}).call(this);
//# sourceMappingURL=__compiled.vanilla.worker.js.map
`]));class VanillaWorkerMainThread$$module$src$mains$vanilla_main{constructor({audioContext:o,audioWorker:s,audioContextIsProvided:c,inputChannelCount:i,outputChannelCount:g}){this.ipcMessagePorts=new IPCMessagePorts$$module$src$mains$messages_main,this.eventPromises=new EventPromises$$module$src$utils$event_promises,this.publicEvents=new PublicEventAPI$$module$src$events(this),s.ipcMessagePorts=this.ipcMessagePorts,s.csoundWorkerMain=this,s.publicEvents=this.publicEvents,this.audioWorker=s,(this.audioContextIsProvided=c)&&(this.sampleRate=o.sampleRate),i&&(this.inputChannelCount=i),g&&(this.outputChannelCount=g),this.exportApi={},this.currentPlayState=this.csoundInstance=void 0,this.midiPortStarted=!1,this.onPlayStateChange=this.onPlayStateChange.bind(this)}async terminateInstance(){this.csoundWorker&&(this.csoundWorker.terminate(),delete this.csoundWorker),this.audioWorker&&this.audioWorker.terminateInstance&&(await this.audioWorker.terminateInstance(),delete this.audioWorker.terminateInstance),this.proxyPort&&(this.proxyPort[releaseProxy$$module$node_modules$comlink$dist$esm$comlink_mjs](),delete this.proxyPort),this.publicEvents&&this.publicEvents.terminateInstance(),Object.keys(this.exportApi).forEach(o=>delete this.exportApi[o]),Object.keys(this).forEach(o=>delete this[o])}get api(){return this.exportApi}handleMidiInput({data:o}){this.ipcMessagePorts.csoundMainRtMidiPort.postMessage&&this.ipcMessagePorts.csoundMainRtMidiPort.postMessage(o)}async prepareRealtimePerformance(){if(this.csoundInstance){this.audioWorker.sampleRate=await this.exportApi.getSr(this.csoundInstance);var o=await this.exportApi.getInputName(this.csoundInstance);this.audioWorker.isRequestingInput=o.includes("adc"),this.audioWorker.isRequestingMidi=await this.exportApi._isRequestingRtMidiInput(this.csoundInstance),this.audioWorker.outputsCount=await this.exportApi.getNchnls(this.csoundInstance),this.audioWorker.inputsCount=this.audioWorker.isRequestingInput?1:0,logVANMain$$module$src$logger("vars for rtPerf set")()}else console.error("fatal error: csound instance not found?")}async onPlayStateChange(o){if(this.publicEvents){switch(this.currentPlayState=o,o){case"realtimePerformanceStarted":logVANMain$$module$src$logger("event: realtimePerformanceStarted from worker, now preparingRT..")(),await this.prepareRealtimePerformance();break;case"realtimePerformanceEnded":logVANMain$$module$src$logger("event: realtimePerformanceEnded")(),this.eventPromises.createStopPromise(),this.midiPortStarted=!1,this.publicEvents.triggerRealtimePerformanceEnded(this),await this.eventPromises.releaseStopPromise();break;case"renderStarted":await this.eventPromises.releaseStartPromise(),this.publicEvents.triggerRenderStarted(this);break;case"renderEnded":logVANMain$$module$src$logger("event: renderEnded received, beginning cleanup")(),this.publicEvents.triggerRenderEnded(this),await this.eventPromises.releaseStopPromise()}this.audioWorker.ipcMessagePorts||(this.audioWorker.ipcMessagePorts=this.ipcMessagePorts),await this.audioWorker.onPlayStateChange(o)}}async csoundPause(){return this.eventPromises.isWaiting("pause")?-1:(this.eventPromises.createPausePromise(),this.audioWorker&&this.audioWorker.workletProxy!==void 0?await this.audioWorker.workletProxy.pause():await this.audioWorker.onPlayStateChange("realtimePerformancePaused"),await this.eventPromises.waitForPause(),0)}async csoundResume(){return this.eventPromises.isWaiting("resume")?-1:(this.eventPromises.createResumePromise(),this.audioWorker&&this.audioWorker.workletProxy!==void 0?await this.audioWorker.workletProxy.resume():await this.audioWorker.onPlayStateChange("realtimePerformanceResumed"),await this.eventPromises.waitForResume(),0)}async initialize({wasmDataURI:o,withPlugins:s}){o=o(),typeof this.audioWorker.initIframe=="function"&&await this.audioWorker.initIframe(),s&&!isEmpty$$module$node_modules$rambda$dist$rambda_mjs(s)&&(s=await fetchPlugins$$module$src$utils(s)),logVANMain$$module$src$logger("vanilla.main: initialize")(),this.csoundWorker=this.csoundWorker||new Worker($jscompDefaultExport$$module$dist$__compiled_vanilla_worker_inline()),this.ipcMessagePorts.mainMessagePort.addEventListener("message",messageEventHandler$$module$src$mains$messages_main(this)),this.ipcMessagePorts.mainMessagePort2.addEventListener("message",messageEventHandler$$module$src$mains$messages_main(this)),this.ipcMessagePorts.mainMessagePort.start();const c=wrap$$module$node_modules$comlink$dist$esm$comlink_mjs(this.csoundWorker);this.proxyPort=c,this.csoundInstance=await c.initialize(transfer$$module$node_modules$comlink$dist$esm$comlink_mjs({wasmDataURI:o,messagePort:this.ipcMessagePorts.workerMessagePort,requestPort:this.ipcMessagePorts.csoundWorkerFrameRequestPort,audioInputPort:this.ipcMessagePorts.csoundWorkerAudioInputPort,rtmidiPort:this.ipcMessagePorts.csoundWorkerRtMidiPort,sampleRate:this.sampleRate,inputChannelCount:this.inputChannelCount,outputChannelCount:this.outputChannelCount,withPlugins:s},[o,this.ipcMessagePorts.workerMessagePort,this.ipcMessagePorts.csoundWorkerFrameRequestPort,this.ipcMessagePorts.csoundWorkerAudioInputPort,this.ipcMessagePorts.csoundWorkerRtMidiPort])),this.exportApi.pause=this.csoundPause.bind(this),this.exportApi.resume=this.csoundResume.bind(this),this.exportApi.terminateInstance=this.terminateInstance.bind(this),this.exportApi.getAudioContext=async()=>this.audioWorker.audioContext,this.exportApi.getNode=async()=>{const i=this.audioWorker.audioWorkletNode;return i||await new Promise(g=>{this.exportApi.once("onAudioNodeCreated",g)})},this.exportApi=this.publicEvents.decorateAPI(this.exportApi),this.exportApi.enableAudioInput=()=>console.warn("enableAudioInput was ignored: please use -iadc option before calling start with useWorker=true"),this.exportApi.addListener("message",console.log);for(const i of Object.keys(api$$module$src$libcsound)){const g=api$$module$src$libcsound[i],h=makeProxyCallback$$module$src$utils(c,this.csoundInstance,i,this.currentPlayState);switch(i){case"csoundCreate":break;case"csoundStart":s=async function(){if(this.eventPromises.isWaiting("start"))return-1;this.eventPromises.createStartPromise();const $=await h({csound:this.csoundInstance});return await this.eventPromises.waitForStart(),$},s.toString=()=>g.toString(),this.exportApi.start=s.bind(this);break;case"csoundStop":s=async function(){return this.eventPromises.isWaiting("stop")?-1:(this.eventPromises.createStopPromise(),this.ipcMessagePorts.mainMessagePort.postMessage({newPlayState:this.currentPlayState==="renderStarted"?"renderEnded":"realtimePerformanceEnded"}),await this.eventPromises.waitForStop(),0)},this.exportApi.stop=s.bind(this),s.toString=g.toString;break;case"csoundReset":s=async()=>{if(this.currentPlayState){if(this.eventPromises.isWaiting("reset"))return-1;stopableStates$$module$src$utils.has(this.currentPlayState)&&await this.exportApi.stop();const $=await h([]);return this.audioContextIsProvided||(await this.audioWorker.terminateInstance(),delete this.audioWorker.audioContext),this.ipcMessagePorts.restartAudioWorkerPorts(),$}},this.exportApi.reset=s.bind(this),s.toString=g.toString;break;case"fs":this.exportApi.fs={},Object.keys(g).forEach($=>{const j=makeProxyCallback$$module$src$utils(c,this.csoundInstance,$,this.currentPlayState);j.toString=g[$].toString,this.exportApi.fs[$]=j});break;default:h.toString=g.toString,this.exportApi[csoundApiRename$$module$src$utils(i)]=h}}logVANMain$$module$src$logger("exportAPI generated")()}}var $jscompDefaultExport$$module$src$mains$vanilla_main=VanillaWorkerMainThread$$module$src$mains$vanilla_main,module$node_modules$unmute_ios_audio$index={default:function(){function e(_e){i==="blocked"&&(i="pending",o()),g==="blocked"&&(g="pending",$=new c,j=$.createBufferSource(),j.buffer=$.createBuffer(1,1,22050),j.connect($.destination),j.start(),$.state==="running"?(g="allowed",s()):(g="blocked",j.disconnect($.destination),j=null,$.close(),$=null))}function o(){h=document.createElement("audio"),h.setAttribute("x-webkit-airplay","deny"),h.preload="auto",h.loop=!0,h.src=_,h.load(),h.play().then(()=>{i="allowed",s()},()=>{i="blocked",h.pause(),h.removeAttribute("src"),h.load(),h=null})}function s(){i==="allowed"&&g==="allowed"&&USER_ACTIVATION_EVENTS$$module$node_modules$unmute_ios_audio$index.forEach(_e=>{window.removeEventListener(_e,e,{capture:!0,passive:!0})})}const c=window.webkitAudioContext;if(0<navigator.maxTouchPoints&&c!=null){var i="blocked",g="blocked",h,$,j,_=function(_e){const et=new ArrayBuffer(10),tt=new DataView(et);return tt.setUint32(0,_e,!0),tt.setUint32(4,_e,!0),tt.setUint16(8,1,!0),`data:audio/wav;base64,UklGRisAAABXQVZFZm10IBAAAAABAAEA${window.btoa(String.fromCharCode(...new Uint8Array(et))).slice(0,13)}AgAZGF0YQcAAACAgICAgICAAAA=`}(new c().sampleRate);USER_ACTIVATION_EVENTS$$module$node_modules$unmute_ios_audio$index.forEach(_e=>{window.addEventListener(_e,e,{capture:!0,passive:!0})})}}};const USER_ACTIVATION_EVENTS$$module$node_modules$unmute_ios_audio$index="auxclick click contextmenu dblclick keydown keyup mousedown mouseup touchend".split(" "),DEFAULT_BUFFER_LEN$$module$src$constants=128,MAX_CHANNELS$$module$src$constants=32,RING_BUFFER_SIZE$$module$src$constants=16384,MIDI_BUFFER_SIZE$$module$src$constants=1024,MIDI_BUFFER_PAYLOAD_SIZE$$module$src$constants=3,initialSharedState$$module$src$constants=[0,4096,0,0,0,0,-1,-1,-1,-1,0,DEFAULT_BUFFER_LEN$$module$src$constants,0,0,0,0,0,0,0,0],AUDIO_STATE$$module$src$constants={CSOUND_LOCK:0,FRAMES_REQUESTED:1,IS_PERFORMING:2,IS_RENDERING:3,IS_PAUSED:4,STOP:5,SAMPLE_RATE:6,KSMPS:7,NCHNLS:8,NCHNLS_I:9,IS_REQUESTING_MIC:10,BUFFER_LEN:11,OUTPUT_READ_INDEX:12,OUTPUT_WRITE_INDEX:13,AVAIL_IN_BUFS:14,AVAIL_OUT_BUFS:15,IS_REQUESTING_RTMIDI:16,RTMIDI_INDEX:17,AVAIL_RTMIDI_EVENTS:18,HAS_PENDING_CALLBACKS:19};var $jscompDefaultExport$$module$dist$__compiled_sab_worker_inline=()=>(window.URL||window.webkitURL).createObjectURL(new Blob([`(function(){/*

 Copyright The Closure Library Authors.
 SPDX-License-Identifier: Apache-2.0
*/
var $jscomp=$jscomp||{};$jscomp.scope={};var COMPILED=!0,goog=goog||{};goog.global=this||self;goog.exportPath_=function(a,b,c,d){a=a.split(".");d=d||goog.global;a[0]in d||"undefined"==typeof d.execScript||d.execScript("var "+a[0]);for(var e;a.length&&(e=a.shift());)if(a.length||void 0===b)d=d[e]&&d[e]!==Object.prototype[e]?d[e]:d[e]={};else if(!c&&goog.isObject(b)&&goog.isObject(d[e]))for(var f in b)b.hasOwnProperty(f)&&(d[e][f]=b[f]);else d[e]=b};
goog.define=function(a,b){if(!COMPILED){var c=goog.global.CLOSURE_UNCOMPILED_DEFINES,d=goog.global.CLOSURE_DEFINES;c&&void 0===c.nodeType&&Object.prototype.hasOwnProperty.call(c,a)?b=c[a]:d&&void 0===d.nodeType&&Object.prototype.hasOwnProperty.call(d,a)&&(b=d[a])}return b};goog.FEATURESET_YEAR=2020;goog.DEBUG=!0;goog.LOCALE="en";goog.getLocale=function(){return goog.LOCALE};goog.TRUSTED_SITE=!0;goog.DISALLOW_TEST_ONLY_CODE=COMPILED&&!goog.DEBUG;goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING=!1;
goog.provide=function(a){if(goog.isInModuleLoader_())throw Error("goog.provide cannot be used within a module.");if(!COMPILED&&goog.isProvided_(a))throw Error('Namespace "'+a+'" already declared.');goog.constructNamespace_(a)};goog.constructNamespace_=function(a,b,c){if(!COMPILED){delete goog.implicitNamespaces_[a];for(var d=a;(d=d.substring(0,d.lastIndexOf(".")))&&!goog.getObjectByName(d);)goog.implicitNamespaces_[d]=!0}goog.exportPath_(a,b,c)};goog.NONCE_PATTERN_=/^[\\w+/_-]+[=]{0,2}$/;
goog.getScriptNonce_=function(a){a=(a||goog.global).document;return(a=a.querySelector&&a.querySelector("script[nonce]"))&&(a=a.nonce||a.getAttribute("nonce"))&&goog.NONCE_PATTERN_.test(a)?a:""};goog.VALID_MODULE_RE_=/^[a-zA-Z_$][a-zA-Z0-9._$]*$/;
goog.module=function(a){if("string"!==typeof a||!a||-1==a.search(goog.VALID_MODULE_RE_))throw Error("Invalid module identifier");if(!goog.isInGoogModuleLoader_())throw Error("Module "+a+" has been loaded incorrectly. Note, modules cannot be loaded as normal scripts. They require some kind of pre-processing step. You're likely trying to load a module via a script tag or as a part of a concatenated bundle without rewriting the module. For more info see: https://github.com/google/closure-library/wiki/goog.module:-an-ES6-module-like-alternative-to-goog.provide.");if(goog.moduleLoaderState_.moduleName)throw Error("goog.module may only be called once per module.");
goog.moduleLoaderState_.moduleName=a;if(!COMPILED){if(goog.isProvided_(a))throw Error('Namespace "'+a+'" already declared.');delete goog.implicitNamespaces_[a]}};goog.module.get=function(a){return goog.module.getInternal_(a)};goog.module.getInternal_=function(a){if(!COMPILED){if(a in goog.loadedModules_)return goog.loadedModules_[a].exports;if(!goog.implicitNamespaces_[a])return a=goog.getObjectByName(a),null!=a?a:null}return null};goog.ModuleType={ES6:"es6",GOOG:"goog"};goog.moduleLoaderState_=null;
goog.isInModuleLoader_=function(){return goog.isInGoogModuleLoader_()||goog.isInEs6ModuleLoader_()};goog.isInGoogModuleLoader_=function(){return!!goog.moduleLoaderState_&&goog.moduleLoaderState_.type==goog.ModuleType.GOOG};goog.isInEs6ModuleLoader_=function(){if(goog.moduleLoaderState_&&goog.moduleLoaderState_.type==goog.ModuleType.ES6)return!0;var a=goog.global.$jscomp;return a?"function"!=typeof a.getCurrentModulePath?!1:!!a.getCurrentModulePath():!1};
goog.module.declareLegacyNamespace=function(){if(!COMPILED&&!goog.isInGoogModuleLoader_())throw Error("goog.module.declareLegacyNamespace must be called from within a goog.module");if(!COMPILED&&!goog.moduleLoaderState_.moduleName)throw Error("goog.module must be called prior to goog.module.declareLegacyNamespace.");goog.moduleLoaderState_.declareLegacyNamespace=!0};
goog.declareModuleId=function(a){if(!COMPILED){if(!goog.isInEs6ModuleLoader_())throw Error("goog.declareModuleId may only be called from within an ES6 module");if(goog.moduleLoaderState_&&goog.moduleLoaderState_.moduleName)throw Error("goog.declareModuleId may only be called once per module.");if(a in goog.loadedModules_)throw Error('Module with namespace "'+a+'" already exists.');}if(goog.moduleLoaderState_)goog.moduleLoaderState_.moduleName=a;else{var b=goog.global.$jscomp;if(!b||"function"!=typeof b.getCurrentModulePath)throw Error('Module with namespace "'+
a+'" has been loaded incorrectly.');b=b.require(b.getCurrentModulePath());goog.loadedModules_[a]={exports:b,type:goog.ModuleType.ES6,moduleId:a}}};goog.setTestOnly=function(a){if(goog.DISALLOW_TEST_ONLY_CODE)throw a=a||"",Error("Importing test-only code into non-debug environment"+(a?": "+a:"."));};goog.forwardDeclare=function(a){};COMPILED||(goog.isProvided_=function(a){return a in goog.loadedModules_||!goog.implicitNamespaces_[a]&&null!=goog.getObjectByName(a)},goog.implicitNamespaces_={"goog.module":!0});
goog.getObjectByName=function(a,b){a=a.split(".");b=b||goog.global;for(var c=0;c<a.length;c++)if(b=b[a[c]],null==b)return null;return b};goog.addDependency=function(a,b,c,d){!COMPILED&&goog.DEPENDENCIES_ENABLED&&goog.debugLoader_.addDependency(a,b,c,d)};goog.ENABLE_DEBUG_LOADER=!0;goog.logToConsole_=function(a){goog.global.console&&goog.global.console.error(a)};
goog.require=function(a){if(!COMPILED){goog.ENABLE_DEBUG_LOADER&&goog.debugLoader_.requested(a);if(goog.isProvided_(a)){if(goog.isInModuleLoader_())return goog.module.getInternal_(a)}else if(goog.ENABLE_DEBUG_LOADER){var b=goog.moduleLoaderState_;goog.moduleLoaderState_=null;try{goog.debugLoader_.load_(a)}finally{goog.moduleLoaderState_=b}}return null}};goog.requireType=function(a){return{}};goog.basePath="";goog.abstractMethod=function(){throw Error("unimplemented abstract method");};
goog.addSingletonGetter=function(a){a.instance_=void 0;a.getInstance=function(){if(a.instance_)return a.instance_;goog.DEBUG&&(goog.instantiatedSingletons_[goog.instantiatedSingletons_.length]=a);return a.instance_=new a}};goog.instantiatedSingletons_=[];goog.LOAD_MODULE_USING_EVAL=!0;goog.SEAL_MODULE_EXPORTS=goog.DEBUG;goog.loadedModules_={};goog.DEPENDENCIES_ENABLED=!COMPILED&&goog.ENABLE_DEBUG_LOADER;goog.TRANSPILE="detect";goog.ASSUME_ES_MODULES_TRANSPILED=!1;goog.TRUSTED_TYPES_POLICY_NAME="goog";
goog.hasBadLetScoping=null;
goog.loadModule=function(a){var b=goog.moduleLoaderState_;try{goog.moduleLoaderState_={moduleName:"",declareLegacyNamespace:!1,type:goog.ModuleType.GOOG};var c={},d=c;if("function"===typeof a)d=a.call(void 0,d);else if("string"===typeof a)d=goog.loadModuleFromSource_.call(void 0,d,a);else throw Error("Invalid module definition");var e=goog.moduleLoaderState_.moduleName;if("string"===typeof e&&e)goog.moduleLoaderState_.declareLegacyNamespace?goog.constructNamespace_(e,d,c!==d):goog.SEAL_MODULE_EXPORTS&&
Object.seal&&"object"==typeof d&&null!=d&&Object.seal(d),goog.loadedModules_[e]={exports:d,type:goog.ModuleType.GOOG,moduleId:goog.moduleLoaderState_.moduleName};else throw Error('Invalid module name "'+e+'"');}finally{goog.moduleLoaderState_=b}};goog.loadModuleFromSource_=function(a,b){eval(goog.CLOSURE_EVAL_PREFILTER_.createScript(b));return a};goog.normalizePath_=function(a){a=a.split("/");for(var b=0;b<a.length;)"."==a[b]?a.splice(b,1):b&&".."==a[b]&&a[b-1]&&".."!=a[b-1]?a.splice(--b,2):b++;return a.join("/")};
goog.loadFileSync_=function(a){if(goog.global.CLOSURE_LOAD_FILE_SYNC)return goog.global.CLOSURE_LOAD_FILE_SYNC(a);try{var b=new goog.global.XMLHttpRequest;b.open("get",a,!1);b.send();return 0==b.status||200==b.status?b.responseText:null}catch(c){return null}};goog.typeOf=function(a){var b=typeof a;return"object"!=b?b:a?Array.isArray(a)?"array":b:"null"};goog.isArrayLike=function(a){var b=goog.typeOf(a);return"array"==b||"object"==b&&"number"==typeof a.length};
goog.isDateLike=function(a){return goog.isObject(a)&&"function"==typeof a.getFullYear};goog.isObject=function(a){var b=typeof a;return"object"==b&&null!=a||"function"==b};goog.getUid=function(a){return Object.prototype.hasOwnProperty.call(a,goog.UID_PROPERTY_)&&a[goog.UID_PROPERTY_]||(a[goog.UID_PROPERTY_]=++goog.uidCounter_)};goog.hasUid=function(a){return!!a[goog.UID_PROPERTY_]};goog.removeUid=function(a){null!==a&&"removeAttribute"in a&&a.removeAttribute(goog.UID_PROPERTY_);try{delete a[goog.UID_PROPERTY_]}catch(b){}};
goog.UID_PROPERTY_="closure_uid_"+(1E9*Math.random()>>>0);goog.uidCounter_=0;goog.cloneObject=function(a){var b=goog.typeOf(a);if("object"==b||"array"==b){if("function"===typeof a.clone)return a.clone();if("undefined"!==typeof Map&&a instanceof Map)return new Map(a);if("undefined"!==typeof Set&&a instanceof Set)return new Set(a);b="array"==b?[]:{};for(var c in a)b[c]=goog.cloneObject(a[c]);return b}return a};goog.bindNative_=function(a,b,c){return a.call.apply(a.bind,arguments)};
goog.bindJs_=function(a,b,c){if(!a)throw Error();if(2<arguments.length){var d=Array.prototype.slice.call(arguments,2);return function(){var e=Array.prototype.slice.call(arguments);Array.prototype.unshift.apply(e,d);return a.apply(b,e)}}return function(){return a.apply(b,arguments)}};goog.bind=function(a,b,c){Function.prototype.bind&&-1!=Function.prototype.bind.toString().indexOf("native code")?goog.bind=goog.bindNative_:goog.bind=goog.bindJs_;return goog.bind.apply(null,arguments)};
goog.partial=function(a,b){var c=Array.prototype.slice.call(arguments,1);return function(){var d=c.slice();d.push.apply(d,arguments);return a.apply(this,d)}};goog.now=function(){return Date.now()};goog.globalEval=function(a){(0,eval)(a)};
goog.getCssName=function(a,b){if("."==String(a).charAt(0))throw Error('className passed in goog.getCssName must not start with ".". You passed: '+a);var c=function(e){return goog.cssNameMapping_[e]||e},d=function(e){e=e.split("-");for(var f=[],g=0;g<e.length;g++)f.push(c(e[g]));return f.join("-")};d=goog.cssNameMapping_?"BY_WHOLE"==goog.cssNameMappingStyle_?c:d:function(e){return e};a=b?a+"-"+d(b):d(a);return goog.global.CLOSURE_CSS_NAME_MAP_FN?goog.global.CLOSURE_CSS_NAME_MAP_FN(a):a};
goog.setCssNameMapping=function(a,b){goog.cssNameMapping_=a;goog.cssNameMappingStyle_=b};!COMPILED&&goog.global.CLOSURE_CSS_NAME_MAPPING&&(goog.cssNameMapping_=goog.global.CLOSURE_CSS_NAME_MAPPING);goog.GetMsgOptions=function(){};
goog.getMsg=function(a,b,c){c&&c.html&&(a=a.replace(/</g,"&lt;"));c&&c.unescapeHtmlEntities&&(a=a.replace(/&lt;/g,"<").replace(/&gt;/g,">").replace(/&apos;/g,"'").replace(/&quot;/g,'"').replace(/&amp;/g,"&"));b&&(a=a.replace(/\\{\\$([^}]+)}/g,function(d,e){return null!=b&&e in b?b[e]:d}));return a};goog.getMsgWithFallback=function(a,b){return a};goog.exportSymbol=function(a,b,c){goog.exportPath_(a,b,!0,c)};goog.exportProperty=function(a,b,c){a[b]=c};
goog.inherits=function(a,b){function c(){}c.prototype=b.prototype;a.superClass_=b.prototype;a.prototype=new c;a.prototype.constructor=a;a.base=function(d,e,f){for(var g=Array(arguments.length-2),h=2;h<arguments.length;h++)g[h-2]=arguments[h];return b.prototype[e].apply(d,g)}};goog.scope=function(a){if(goog.isInModuleLoader_())throw Error("goog.scope is not supported within a module.");a.call(goog.global)};COMPILED||(goog.global.COMPILED=COMPILED);
goog.defineClass=function(a,b){var c=b.constructor,d=b.statics;c&&c!=Object.prototype.constructor||(c=function(){throw Error("cannot instantiate an interface (no constructor defined).");});c=goog.defineClass.createSealingConstructor_(c,a);a&&goog.inherits(c,a);delete b.constructor;delete b.statics;goog.defineClass.applyProperties_(c.prototype,b);null!=d&&(d instanceof Function?d(c):goog.defineClass.applyProperties_(c,d));return c};goog.defineClass.SEAL_CLASS_INSTANCES=goog.DEBUG;
goog.defineClass.createSealingConstructor_=function(a,b){return goog.defineClass.SEAL_CLASS_INSTANCES?function(){var c=a.apply(this,arguments)||this;c[goog.UID_PROPERTY_]=c[goog.UID_PROPERTY_];return c}:a};goog.defineClass.OBJECT_PROTOTYPE_FIELDS_="constructor hasOwnProperty isPrototypeOf propertyIsEnumerable toLocaleString toString valueOf".split(" ");
goog.defineClass.applyProperties_=function(a,b){for(var c in b)Object.prototype.hasOwnProperty.call(b,c)&&(a[c]=b[c]);for(var d=0;d<goog.defineClass.OBJECT_PROTOTYPE_FIELDS_.length;d++)c=goog.defineClass.OBJECT_PROTOTYPE_FIELDS_[d],Object.prototype.hasOwnProperty.call(b,c)&&(a[c]=b[c])};goog.identity_=function(a){return a};
goog.createTrustedTypesPolicy=function(a){var b=null,c=goog.global.trustedTypes;if(!c||!c.createPolicy)return b;try{b=c.createPolicy(a,{createHTML:goog.identity_,createScript:goog.identity_,createScriptURL:goog.identity_})}catch(d){goog.logToConsole_(d.message)}return b};
!COMPILED&&goog.DEPENDENCIES_ENABLED&&(goog.isEdge_=function(){return!!(goog.global.navigator&&goog.global.navigator.userAgent?goog.global.navigator.userAgent:"").match(/Edge\\/(\\d+)(\\.\\d)*/i)},goog.inHtmlDocument_=function(){var a=goog.global.document;return null!=a&&"write"in a},goog.isDocumentLoading_=function(){var a=goog.global.document;return a.attachEvent?"complete"!=a.readyState:"loading"==a.readyState},goog.findBasePath_=function(){if(void 0!=goog.global.CLOSURE_BASE_PATH&&"string"===typeof goog.global.CLOSURE_BASE_PATH)goog.basePath=
goog.global.CLOSURE_BASE_PATH;else if(goog.inHtmlDocument_()){var a=goog.global.document,b=a.currentScript;a=b?[b]:a.getElementsByTagName("SCRIPT");for(b=a.length-1;0<=b;--b){var c=a[b].src,d=c.lastIndexOf("?");d=-1==d?c.length:d;if("base.js"==c.slice(d-7,d)){goog.basePath=c.slice(0,d-7);break}}}},goog.findBasePath_(),goog.protectScriptTag_=function(a){return a.replace(/<\\/(SCRIPT)/ig,"\\\\x3c/$1")},goog.DebugLoader_=function(){this.dependencies_={};this.idToPath_={};this.written_={};this.loadingDeps_=
[];this.depsToLoad_=[];this.paused_=!1;this.factory_=new goog.DependencyFactory;this.deferredCallbacks_={};this.deferredQueue_=[]},goog.DebugLoader_.prototype.bootstrap=function(a,b){function c(){d&&(goog.global.setTimeout(d,0),d=null)}var d=b;if(a.length){b=[];for(var e=0;e<a.length;e++){var f=this.getPathFromDeps_(a[e]);if(!f)throw Error("Unregonized namespace: "+a[e]);b.push(this.dependencies_[f])}f=goog.require;var g=0;for(e=0;e<a.length;e++)f(a[e]),b[e].onLoad(function(){++g==a.length&&c()})}else c()},
goog.DebugLoader_.prototype.loadClosureDeps=function(){this.depsToLoad_.push(this.factory_.createDependency(goog.normalizePath_(goog.basePath+"deps.js"),"deps.js",[],[],{}));this.loadDeps_()},goog.DebugLoader_.prototype.requested=function(a,b){(a=this.getPathFromDeps_(a))&&(b||this.areDepsLoaded_(this.dependencies_[a].requires))&&(b=this.deferredCallbacks_[a])&&(delete this.deferredCallbacks_[a],b())},goog.DebugLoader_.prototype.setDependencyFactory=function(a){this.factory_=a},goog.DebugLoader_.prototype.load_=
function(a){if(this.getPathFromDeps_(a)){var b=this,c=[],d=function(e){var f=b.getPathFromDeps_(e);if(!f)throw Error("Bad dependency path or symbol: "+e);if(!b.written_[f]){b.written_[f]=!0;e=b.dependencies_[f];for(f=0;f<e.requires.length;f++)goog.isProvided_(e.requires[f])||d(e.requires[f]);c.push(e)}};d(a);a=!!this.depsToLoad_.length;this.depsToLoad_=this.depsToLoad_.concat(c);this.paused_||a||this.loadDeps_()}else goog.logToConsole_("goog.require could not find: "+a)},goog.DebugLoader_.prototype.loadDeps_=
function(){for(var a=this,b=this.paused_;this.depsToLoad_.length&&!b;)(function(){var c=!1,d=a.depsToLoad_.shift(),e=!1;a.loading_(d);var f={pause:function(){if(c)throw Error("Cannot call pause after the call to load.");b=!0},resume:function(){c?a.resume_():b=!1},loaded:function(){if(e)throw Error("Double call to loaded.");e=!0;a.loaded_(d)},pending:function(){for(var g=[],h=0;h<a.loadingDeps_.length;h++)g.push(a.loadingDeps_[h]);return g},setModuleState:function(g){goog.moduleLoaderState_={type:g,
moduleName:"",declareLegacyNamespace:!1}},registerEs6ModuleExports:function(g,h,k){k&&(goog.loadedModules_[k]={exports:h,type:goog.ModuleType.ES6,moduleId:k||""})},registerGoogModuleExports:function(g,h){goog.loadedModules_[g]={exports:h,type:goog.ModuleType.GOOG,moduleId:g}},clearModuleState:function(){goog.moduleLoaderState_=null},defer:function(g){if(c)throw Error("Cannot register with defer after the call to load.");a.defer_(d,g)},areDepsLoaded:function(){return a.areDepsLoaded_(d.requires)}};
try{d.load(f)}finally{c=!0}})();b&&this.pause_()},goog.DebugLoader_.prototype.pause_=function(){this.paused_=!0},goog.DebugLoader_.prototype.resume_=function(){this.paused_&&(this.paused_=!1,this.loadDeps_())},goog.DebugLoader_.prototype.loading_=function(a){this.loadingDeps_.push(a)},goog.DebugLoader_.prototype.loaded_=function(a){for(var b=0;b<this.loadingDeps_.length;b++)if(this.loadingDeps_[b]==a){this.loadingDeps_.splice(b,1);break}for(b=0;b<this.deferredQueue_.length;b++)if(this.deferredQueue_[b]==
a.path){this.deferredQueue_.splice(b,1);break}if(this.loadingDeps_.length==this.deferredQueue_.length&&!this.depsToLoad_.length)for(;this.deferredQueue_.length;)this.requested(this.deferredQueue_.shift(),!0);a.loaded()},goog.DebugLoader_.prototype.areDepsLoaded_=function(a){for(var b=0;b<a.length;b++){var c=this.getPathFromDeps_(a[b]);if(!c||!(c in this.deferredCallbacks_||goog.isProvided_(a[b])))return!1}return!0},goog.DebugLoader_.prototype.getPathFromDeps_=function(a){return a in this.idToPath_?
this.idToPath_[a]:a in this.dependencies_?a:null},goog.DebugLoader_.prototype.defer_=function(a,b){this.deferredCallbacks_[a.path]=b;this.deferredQueue_.push(a.path)},goog.LoadController=function(){},goog.LoadController.prototype.pause=function(){},goog.LoadController.prototype.resume=function(){},goog.LoadController.prototype.loaded=function(){},goog.LoadController.prototype.pending=function(){},goog.LoadController.prototype.registerEs6ModuleExports=function(a,b,c){},goog.LoadController.prototype.setModuleState=
function(a){},goog.LoadController.prototype.clearModuleState=function(){},goog.LoadController.prototype.defer=function(a){},goog.LoadController.prototype.areDepsLoaded=function(){},goog.Dependency=function(a,b,c,d,e){this.path=a;this.relativePath=b;this.provides=c;this.requires=d;this.loadFlags=e;this.loaded_=!1;this.loadCallbacks_=[]},goog.Dependency.prototype.getPathName=function(){var a=this.path,b=a.indexOf("://");0<=b&&(a=a.substring(b+3),b=a.indexOf("/"),0<=b&&(a=a.substring(b+1)));return a},
goog.Dependency.prototype.onLoad=function(a){this.loaded_?a():this.loadCallbacks_.push(a)},goog.Dependency.prototype.loaded=function(){this.loaded_=!0;var a=this.loadCallbacks_;this.loadCallbacks_=[];for(var b=0;b<a.length;b++)a[b]()},goog.Dependency.defer_=!1,goog.Dependency.callbackMap_={},goog.Dependency.registerCallback_=function(a){var b=Math.random().toString(32);goog.Dependency.callbackMap_[b]=a;return b},goog.Dependency.unregisterCallback_=function(a){delete goog.Dependency.callbackMap_[a]},
goog.Dependency.callback_=function(a,b){if(a in goog.Dependency.callbackMap_){for(var c=goog.Dependency.callbackMap_[a],d=[],e=1;e<arguments.length;e++)d.push(arguments[e]);c.apply(void 0,d)}else throw Error("Callback key "+a+" does not exist (was base.js loaded more than once?).");},goog.Dependency.prototype.load=function(a){if(goog.global.CLOSURE_IMPORT_SCRIPT)goog.global.CLOSURE_IMPORT_SCRIPT(this.path)?a.loaded():a.pause();else if(goog.inHtmlDocument_()){var b=goog.global.document;if("complete"==
b.readyState&&!goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING){if(/\\bdeps.js$/.test(this.path)){a.loaded();return}throw Error('Cannot write "'+this.path+'" after document load');}var c=goog.getScriptNonce_();if(!goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING&&goog.isDocumentLoading_()){var d=function(h){h.readyState&&"complete"!=h.readyState?h.onload=d:(goog.Dependency.unregisterCallback_(e),a.loaded())};var e=goog.Dependency.registerCallback_(d);c=c?' nonce="'+c+'"':"";var f='<script src="'+this.path+'"'+
c+(goog.Dependency.defer_?" defer":"")+' id="script-'+e+'">\\x3c/script>';f+="<script"+c+">";f=goog.Dependency.defer_?f+("document.getElementById('script-"+e+"').onload = function() {\\n  goog.Dependency.callback_('"+e+"', this);\\n};\\n"):f+("goog.Dependency.callback_('"+e+"', document.getElementById('script-"+e+"'));");f+="\\x3c/script>";b.write(goog.TRUSTED_TYPES_POLICY_?goog.TRUSTED_TYPES_POLICY_.createHTML(f):f)}else{var g=b.createElement("script");g.defer=goog.Dependency.defer_;g.async=!1;c&&(g.nonce=
c);g.onload=function(){g.onload=null;a.loaded()};g.src=goog.TRUSTED_TYPES_POLICY_?goog.TRUSTED_TYPES_POLICY_.createScriptURL(this.path):this.path;b.head.appendChild(g)}}else goog.logToConsole_("Cannot use default debug loader outside of HTML documents."),"deps.js"==this.relativePath?(goog.logToConsole_("Consider setting CLOSURE_IMPORT_SCRIPT before loading base.js, or setting CLOSURE_NO_DEPS to true."),a.loaded()):a.pause()},goog.Es6ModuleDependency=function(a,b,c,d,e){goog.Dependency.call(this,a,
b,c,d,e)},goog.inherits(goog.Es6ModuleDependency,goog.Dependency),goog.Es6ModuleDependency.prototype.load=function(a){function b(l,n){var m="",p=goog.getScriptNonce_();p&&(m=' nonce="'+p+'"');l=n?'<script type="module" crossorigin'+m+">"+n+"\\x3c/script>":'<script type="module" crossorigin src="'+l+'"'+m+">\\x3c/script>";d.write(goog.TRUSTED_TYPES_POLICY_?goog.TRUSTED_TYPES_POLICY_.createHTML(l):l)}function c(l,n){var m=d.createElement("script");m.defer=!0;m.async=!1;m.type="module";m.setAttribute("crossorigin",
!0);var p=goog.getScriptNonce_();p&&(m.nonce=p);n?m.text=goog.TRUSTED_TYPES_POLICY_?goog.TRUSTED_TYPES_POLICY_.createScript(n):n:m.src=goog.TRUSTED_TYPES_POLICY_?goog.TRUSTED_TYPES_POLICY_.createScriptURL(l):l;d.head.appendChild(m)}if(goog.global.CLOSURE_IMPORT_SCRIPT)goog.global.CLOSURE_IMPORT_SCRIPT(this.path)?a.loaded():a.pause();else if(goog.inHtmlDocument_()){var d=goog.global.document,e=this;if(goog.isDocumentLoading_()){var f=b;goog.Dependency.defer_=!0}else f=c;var g=goog.Dependency.registerCallback_(function(){goog.Dependency.unregisterCallback_(g);
a.setModuleState(goog.ModuleType.ES6)});f(void 0,'goog.Dependency.callback_("'+g+'")');f(this.path,void 0);var h=goog.Dependency.registerCallback_(function(l){goog.Dependency.unregisterCallback_(h);a.registerEs6ModuleExports(e.path,l,goog.moduleLoaderState_.moduleName)});f(void 0,'import * as m from "'+this.path+'"; goog.Dependency.callback_("'+h+'", m)');var k=goog.Dependency.registerCallback_(function(){goog.Dependency.unregisterCallback_(k);a.clearModuleState();a.loaded()});f(void 0,'goog.Dependency.callback_("'+
k+'")')}else goog.logToConsole_("Cannot use default debug loader outside of HTML documents."),a.pause()},goog.TransformedDependency=function(a,b,c,d,e){goog.Dependency.call(this,a,b,c,d,e);this.contents_=null;this.lazyFetch_=!goog.inHtmlDocument_()||!("noModule"in goog.global.document.createElement("script"))},goog.inherits(goog.TransformedDependency,goog.Dependency),goog.TransformedDependency.prototype.load=function(a){function b(){e.contents_=goog.loadFileSync_(e.path);e.contents_&&(e.contents_=
e.transform(e.contents_),e.contents_&&(e.contents_+="\\n//# sourceURL="+e.path))}function c(){e.lazyFetch_&&b();if(e.contents_){f&&a.setModuleState(goog.ModuleType.ES6);try{var l=e.contents_;e.contents_=null;goog.globalEval(goog.CLOSURE_EVAL_PREFILTER_.createScript(l));if(f)var n=goog.moduleLoaderState_.moduleName}finally{f&&a.clearModuleState()}f&&goog.global.$jscomp.require.ensure([e.getPathName()],function(){a.registerEs6ModuleExports(e.path,goog.global.$jscomp.require(e.getPathName()),n)});a.loaded()}}
function d(){var l=goog.global.document,n=goog.Dependency.registerCallback_(function(){goog.Dependency.unregisterCallback_(n);c()}),m=goog.getScriptNonce_();m="<script"+(m?' nonce="'+m+'"':"")+">"+goog.protectScriptTag_('goog.Dependency.callback_("'+n+'");')+"\\x3c/script>";l.write(goog.TRUSTED_TYPES_POLICY_?goog.TRUSTED_TYPES_POLICY_.createHTML(m):m)}var e=this;if(goog.global.CLOSURE_IMPORT_SCRIPT)b(),this.contents_&&goog.global.CLOSURE_IMPORT_SCRIPT("",this.contents_)?(this.contents_=null,a.loaded()):
a.pause();else{var f=this.loadFlags.module==goog.ModuleType.ES6;this.lazyFetch_||b();var g=1<a.pending().length;if(goog.Dependency.defer_&&(g||goog.isDocumentLoading_()))a.defer(function(){c()});else{var h=goog.global.document;g=goog.inHtmlDocument_()&&("ActiveXObject"in goog.global||goog.isEdge_());if(f&&goog.inHtmlDocument_()&&goog.isDocumentLoading_()&&!g){goog.Dependency.defer_=!0;a.pause();var k=h.onreadystatechange;h.onreadystatechange=function(){"interactive"==h.readyState&&(h.onreadystatechange=
k,c(),a.resume());"function"===typeof k&&k.apply(void 0,arguments)}}else goog.inHtmlDocument_()&&goog.isDocumentLoading_()?d():c()}}},goog.TransformedDependency.prototype.transform=function(a){},goog.PreTranspiledEs6ModuleDependency=function(a,b,c,d,e){goog.TransformedDependency.call(this,a,b,c,d,e)},goog.inherits(goog.PreTranspiledEs6ModuleDependency,goog.TransformedDependency),goog.PreTranspiledEs6ModuleDependency.prototype.transform=function(a){return a},goog.GoogModuleDependency=function(a,b,
c,d,e){goog.TransformedDependency.call(this,a,b,c,d,e)},goog.inherits(goog.GoogModuleDependency,goog.TransformedDependency),goog.GoogModuleDependency.prototype.transform=function(a){return goog.LOAD_MODULE_USING_EVAL&&void 0!==goog.global.JSON?"goog.loadModule("+goog.global.JSON.stringify(a+"\\n//# sourceURL="+this.path+"\\n")+");":'goog.loadModule(function(exports) {"use strict";'+a+"\\n;return exports});\\n//# sourceURL="+this.path+"\\n"},goog.DebugLoader_.prototype.addDependency=function(a,b,c,d){b=
b||[];a=a.replace(/\\\\/g,"/");var e=goog.normalizePath_(goog.basePath+a);d&&"boolean"!==typeof d||(d=d?{module:goog.ModuleType.GOOG}:{});c=this.factory_.createDependency(e,a,b,c,d);this.dependencies_[e]=c;for(c=0;c<b.length;c++)this.idToPath_[b[c]]=e;this.idToPath_[a]=e},goog.DependencyFactory=function(){},goog.DependencyFactory.prototype.createDependency=function(a,b,c,d,e){return e.module==goog.ModuleType.GOOG?new goog.GoogModuleDependency(a,b,c,d,e):e.module==goog.ModuleType.ES6?goog.ASSUME_ES_MODULES_TRANSPILED?
new goog.PreTranspiledEs6ModuleDependency(a,b,c,d,e):new goog.Es6ModuleDependency(a,b,c,d,e):new goog.Dependency(a,b,c,d,e)},goog.debugLoader_=new goog.DebugLoader_,goog.loadClosureDeps=function(){goog.debugLoader_.loadClosureDeps()},goog.setDependencyFactory=function(a){goog.debugLoader_.setDependencyFactory(a)},goog.TRUSTED_TYPES_POLICY_=goog.TRUSTED_TYPES_POLICY_NAME?goog.createTrustedTypesPolicy(goog.TRUSTED_TYPES_POLICY_NAME+"#base"):null,goog.global.CLOSURE_NO_DEPS||goog.debugLoader_.loadClosureDeps(),
goog.bootstrap=function(a,b){goog.debugLoader_.bootstrap(a,b)});if(!COMPILED){var isChrome87=!1;try{isChrome87=eval(goog.global.trustedTypes.emptyScript)!==goog.global.trustedTypes.emptyScript}catch(a){}goog.CLOSURE_EVAL_PREFILTER_=goog.global.trustedTypes&&isChrome87&&goog.createTrustedTypesPolicy("goog#base#devonly#eval")||{createScript:goog.identity_}};const proxyMarker$$module$node_modules$comlink$dist$esm$comlink_mjs=Symbol("Comlink.proxy"),createEndpoint$$module$node_modules$comlink$dist$esm$comlink_mjs=Symbol("Comlink.endpoint"),releaseProxy$$module$node_modules$comlink$dist$esm$comlink_mjs=Symbol("Comlink.releaseProxy"),throwMarker$$module$node_modules$comlink$dist$esm$comlink_mjs=Symbol("Comlink.thrown"),isObject$$module$node_modules$comlink$dist$esm$comlink_mjs=a=>"object"===typeof a&&null!==a||"function"===typeof a,proxyTransferHandler$$module$node_modules$comlink$dist$esm$comlink_mjs=
{canHandle:a=>isObject$$module$node_modules$comlink$dist$esm$comlink_mjs(a)&&a[proxyMarker$$module$node_modules$comlink$dist$esm$comlink_mjs],serialize(a){const {port1:b,port2:c}=new MessageChannel;expose$$module$node_modules$comlink$dist$esm$comlink_mjs(a,b);return[c,[c]]},deserialize(a){a.start();return wrap$$module$node_modules$comlink$dist$esm$comlink_mjs(a)}},throwTransferHandler$$module$node_modules$comlink$dist$esm$comlink_mjs={canHandle:a=>isObject$$module$node_modules$comlink$dist$esm$comlink_mjs(a)&&
throwMarker$$module$node_modules$comlink$dist$esm$comlink_mjs in a,serialize({value:a}){return[a instanceof Error?{isError:!0,value:{message:a.message,name:a.name,stack:a.stack}}:{isError:!1,value:a},[]]},deserialize(a){if(a.isError)throw Object.assign(Error(a.value.message),a.value);throw a.value;}},transferHandlers$$module$node_modules$comlink$dist$esm$comlink_mjs=new Map([["proxy",proxyTransferHandler$$module$node_modules$comlink$dist$esm$comlink_mjs],["throw",throwTransferHandler$$module$node_modules$comlink$dist$esm$comlink_mjs]]);
function expose$$module$node_modules$comlink$dist$esm$comlink_mjs(a,b=self){b.addEventListener("message",function e(d){if(d&&d.data){var {id:f,type:g,path:h}=Object.assign({path:[]},d.data),k=(d.data.argumentList||[]).map(fromWireValue$$module$node_modules$comlink$dist$esm$comlink_mjs);try{const n=h.slice(0,-1).reduce((p,q)=>p[q],a),m=h.reduce((p,q)=>p[q],a);switch(g){case "GET":var l=m;break;case "SET":n[h.slice(-1)[0]]=fromWireValue$$module$node_modules$comlink$dist$esm$comlink_mjs(d.data.value);
l=!0;break;case "APPLY":l=m.apply(n,k);break;case "CONSTRUCT":const p=new m(...k);l=proxy$$module$node_modules$comlink$dist$esm$comlink_mjs(p);break;case "ENDPOINT":const {port1:q,port2:B}=new MessageChannel;expose$$module$node_modules$comlink$dist$esm$comlink_mjs(a,B);l=transfer$$module$node_modules$comlink$dist$esm$comlink_mjs(q,[q]);break;case "RELEASE":l=void 0;break;default:return}}catch(n){l={value:n,[throwMarker$$module$node_modules$comlink$dist$esm$comlink_mjs]:0}}Promise.resolve(l).catch(n=>
({value:n,[throwMarker$$module$node_modules$comlink$dist$esm$comlink_mjs]:0})).then(n=>{const [m,p]=toWireValue$$module$node_modules$comlink$dist$esm$comlink_mjs(n);b.postMessage(Object.assign(Object.assign({},m),{id:f}),p);"RELEASE"===g&&(b.removeEventListener("message",e),closeEndPoint$$module$node_modules$comlink$dist$esm$comlink_mjs(b))})}});b.start&&b.start()}function isMessagePort$$module$node_modules$comlink$dist$esm$comlink_mjs(a){return"MessagePort"===a.constructor.name}
function closeEndPoint$$module$node_modules$comlink$dist$esm$comlink_mjs(a){isMessagePort$$module$node_modules$comlink$dist$esm$comlink_mjs(a)&&a.close()}function wrap$$module$node_modules$comlink$dist$esm$comlink_mjs(a,b){return createProxy$$module$node_modules$comlink$dist$esm$comlink_mjs(a,[],b)}function throwIfProxyReleased$$module$node_modules$comlink$dist$esm$comlink_mjs(a){if(a)throw Error("Proxy has been released and is not useable");}
function createProxy$$module$node_modules$comlink$dist$esm$comlink_mjs(a,b=[],c=function(){}){let d=!1;const e=new Proxy(c,{get(f,g){throwIfProxyReleased$$module$node_modules$comlink$dist$esm$comlink_mjs(d);if(g===releaseProxy$$module$node_modules$comlink$dist$esm$comlink_mjs)return()=>requestResponseMessage$$module$node_modules$comlink$dist$esm$comlink_mjs(a,{type:"RELEASE",path:b.map(h=>h.toString())}).then(()=>{closeEndPoint$$module$node_modules$comlink$dist$esm$comlink_mjs(a);d=!0});if("then"===
g){if(0===b.length)return{then:()=>e};f=requestResponseMessage$$module$node_modules$comlink$dist$esm$comlink_mjs(a,{type:"GET",path:b.map(h=>h.toString())}).then(fromWireValue$$module$node_modules$comlink$dist$esm$comlink_mjs);return f.then.bind(f)}return createProxy$$module$node_modules$comlink$dist$esm$comlink_mjs(a,[...b,g])},set(f,g,h){throwIfProxyReleased$$module$node_modules$comlink$dist$esm$comlink_mjs(d);const [k,l]=toWireValue$$module$node_modules$comlink$dist$esm$comlink_mjs(h);return requestResponseMessage$$module$node_modules$comlink$dist$esm$comlink_mjs(a,
{type:"SET",path:[...b,g].map(n=>n.toString()),value:k},l).then(fromWireValue$$module$node_modules$comlink$dist$esm$comlink_mjs)},apply(f,g,h){throwIfProxyReleased$$module$node_modules$comlink$dist$esm$comlink_mjs(d);f=b[b.length-1];if(f===createEndpoint$$module$node_modules$comlink$dist$esm$comlink_mjs)return requestResponseMessage$$module$node_modules$comlink$dist$esm$comlink_mjs(a,{type:"ENDPOINT"}).then(fromWireValue$$module$node_modules$comlink$dist$esm$comlink_mjs);if("bind"===f)return createProxy$$module$node_modules$comlink$dist$esm$comlink_mjs(a,
b.slice(0,-1));const [k,l]=processArguments$$module$node_modules$comlink$dist$esm$comlink_mjs(h);return requestResponseMessage$$module$node_modules$comlink$dist$esm$comlink_mjs(a,{type:"APPLY",path:b.map(n=>n.toString()),argumentList:k},l).then(fromWireValue$$module$node_modules$comlink$dist$esm$comlink_mjs)},construct(f,g){throwIfProxyReleased$$module$node_modules$comlink$dist$esm$comlink_mjs(d);const [h,k]=processArguments$$module$node_modules$comlink$dist$esm$comlink_mjs(g);return requestResponseMessage$$module$node_modules$comlink$dist$esm$comlink_mjs(a,
{type:"CONSTRUCT",path:b.map(l=>l.toString()),argumentList:h},k).then(fromWireValue$$module$node_modules$comlink$dist$esm$comlink_mjs)}});return e}function myFlat$$module$node_modules$comlink$dist$esm$comlink_mjs(a){return Array.prototype.concat.apply([],a)}
function processArguments$$module$node_modules$comlink$dist$esm$comlink_mjs(a){a=a.map(toWireValue$$module$node_modules$comlink$dist$esm$comlink_mjs);return[a.map(b=>b[0]),myFlat$$module$node_modules$comlink$dist$esm$comlink_mjs(a.map(b=>b[1]))]}const transferCache$$module$node_modules$comlink$dist$esm$comlink_mjs=new WeakMap;function transfer$$module$node_modules$comlink$dist$esm$comlink_mjs(a,b){transferCache$$module$node_modules$comlink$dist$esm$comlink_mjs.set(a,b);return a}
function proxy$$module$node_modules$comlink$dist$esm$comlink_mjs(a){return Object.assign(a,{[proxyMarker$$module$node_modules$comlink$dist$esm$comlink_mjs]:!0})}function windowEndpoint$$module$node_modules$comlink$dist$esm$comlink_mjs(a,b=self,c="*"){return{postMessage:(d,e)=>a.postMessage(d,c,e),addEventListener:b.addEventListener.bind(b),removeEventListener:b.removeEventListener.bind(b)}}
function toWireValue$$module$node_modules$comlink$dist$esm$comlink_mjs(a){for(const [b,c]of transferHandlers$$module$node_modules$comlink$dist$esm$comlink_mjs)if(c.canHandle(a)){const [d,e]=c.serialize(a);return[{type:"HANDLER",name:b,value:d},e]}return[{type:"RAW",value:a},transferCache$$module$node_modules$comlink$dist$esm$comlink_mjs.get(a)||[]]}
function fromWireValue$$module$node_modules$comlink$dist$esm$comlink_mjs(a){switch(a.type){case "HANDLER":return transferHandlers$$module$node_modules$comlink$dist$esm$comlink_mjs.get(a.name).deserialize(a.value);case "RAW":return a.value}}
function requestResponseMessage$$module$node_modules$comlink$dist$esm$comlink_mjs(a,b,c){return new Promise(d=>{const e=generateUUID$$module$node_modules$comlink$dist$esm$comlink_mjs();a.addEventListener("message",function h(g){g.data&&g.data.id&&g.data.id===e&&(a.removeEventListener("message",h),d(g.data))});a.start&&a.start();a.postMessage(Object.assign({id:e},b),c)})}
function generateUUID$$module$node_modules$comlink$dist$esm$comlink_mjs(){return Array(4).fill(0).map(()=>Math.floor(Math.random()*Number.MAX_SAFE_INTEGER).toString(16)).join("-")}var module$node_modules$comlink$dist$esm$comlink_mjs={};module$node_modules$comlink$dist$esm$comlink_mjs.createEndpoint=createEndpoint$$module$node_modules$comlink$dist$esm$comlink_mjs;module$node_modules$comlink$dist$esm$comlink_mjs.expose=expose$$module$node_modules$comlink$dist$esm$comlink_mjs;
module$node_modules$comlink$dist$esm$comlink_mjs.proxy=proxy$$module$node_modules$comlink$dist$esm$comlink_mjs;module$node_modules$comlink$dist$esm$comlink_mjs.proxyMarker=proxyMarker$$module$node_modules$comlink$dist$esm$comlink_mjs;module$node_modules$comlink$dist$esm$comlink_mjs.releaseProxy=releaseProxy$$module$node_modules$comlink$dist$esm$comlink_mjs;module$node_modules$comlink$dist$esm$comlink_mjs.transfer=transfer$$module$node_modules$comlink$dist$esm$comlink_mjs;
module$node_modules$comlink$dist$esm$comlink_mjs.transferHandlers=transferHandlers$$module$node_modules$comlink$dist$esm$comlink_mjs;module$node_modules$comlink$dist$esm$comlink_mjs.windowEndpoint=windowEndpoint$$module$node_modules$comlink$dist$esm$comlink_mjs;module$node_modules$comlink$dist$esm$comlink_mjs.wrap=wrap$$module$node_modules$comlink$dist$esm$comlink_mjs;function MessagePortState$$module$src$utils$message_port_state(){}MessagePortState$$module$src$utils$message_port_state.prototype.ready=!1;MessagePortState$$module$src$utils$message_port_state.prototype.port=void 0;MessagePortState$$module$src$utils$message_port_state.prototype.post=()=>{};MessagePortState$$module$src$utils$message_port_state.prototype.broadcastPlayState=()=>{};MessagePortState$$module$src$utils$message_port_state.prototype.workerState=void 0;
MessagePortState$$module$src$utils$message_port_state.prototype.vanillaWorkerState=void 0;var $jscompDefaultExport$$module$src$utils$message_port_state=MessagePortState$$module$src$utils$message_port_state,module$src$utils$message_port_state={};module$src$utils$message_port_state.MessagePortState=MessagePortState$$module$src$utils$message_port_state;module$src$utils$message_port_state.default=$jscompDefaultExport$$module$src$utils$message_port_state;const csoundCreate$$module$src$modules$instantiation=a=>()=>a.exports.csoundCreateWasi();csoundCreate$$module$src$modules$instantiation.toString=()=>"create = async () => undefined;";const csoundDestroy$$module$src$modules$instantiation=a=>b=>a.exports.csoundDestroy(b);csoundDestroy$$module$src$modules$instantiation.toString=()=>"destroy = async () => undefined;";const csoundGetAPIVersion$$module$src$modules$instantiation=a=>()=>a.exports.csoundGetAPIVersion();
csoundGetAPIVersion$$module$src$modules$instantiation.toString=()=>"getAPIVersion = async () => Number;";const csoundGetVersion$$module$src$modules$instantiation=a=>()=>a.exports.csoundGetVersion();csoundGetVersion$$module$src$modules$instantiation.toString=()=>"getVersion = async () => Number;";const csoundInitialize$$module$src$modules$instantiation=a=>(b,c)=>a.exports.csoundInitialize(c);csoundInitialize$$module$src$modules$instantiation.toString=()=>"initialize = async () => Number;";
var module$src$modules$instantiation={};module$src$modules$instantiation.csoundCreate=csoundCreate$$module$src$modules$instantiation;module$src$modules$instantiation.csoundDestroy=csoundDestroy$$module$src$modules$instantiation;module$src$modules$instantiation.csoundGetAPIVersion=csoundGetAPIVersion$$module$src$modules$instantiation;module$src$modules$instantiation.csoundGetVersion=csoundGetVersion$$module$src$modules$instantiation;module$src$modules$instantiation.csoundInitialize=csoundInitialize$$module$src$modules$instantiation;const WITH_TEXT_ENCODER_POLYFILL$$module$src$utils$text_encoders=!1;function TextEncoderPoly$$module$src$utils$text_encoders(){this.encoding="utf8";return this}TextEncoderPoly$$module$src$utils$text_encoders.prototype.encode=function(a){if("string"!==typeof a)throw new TypeError("passed argument must be of type string "+a+" "+typeof a);a=unescape(encodeURIComponent(a));const b=new Uint8Array(a.length);[...a].forEach(function(c,d){b[d]=c.codePointAt(0)});return b};
function TextDecoderPoly$$module$src$utils$text_encoders(){this.encoding="utf8";this.ignoreBOM=!1;this.trimNull=a=>{const b=a.indexOf("\\x00");return-1<b?a.slice(0,Math.max(0,b)):a};this.decode=function(a,b){if(void 0===a)return"";if("boolean"!==typeof(void 0!==b&&"stream"in b?b.stream:!1))throw new TypeError("stream option must be boolean");if(ArrayBuffer.isView(a)){a=new Uint8Array(a.buffer,a.byteOffset,a.byteLength);const c=Array.from({length:a.length});a.forEach(function(d,e){c[e]=String.fromCodePoint(d)});
return this.trimNull(c.join(""))}throw new TypeError("passed argument must be an array buffer view");}}
const decoder$$module$src$utils$text_encoders=WITH_TEXT_ENCODER_POLYFILL$$module$src$utils$text_encoders?new TextDecoderPoly$$module$src$utils$text_encoders:new TextDecoder("utf8"),encoder$$module$src$utils$text_encoders=WITH_TEXT_ENCODER_POLYFILL$$module$src$utils$text_encoders?new TextEncoderPoly$$module$src$utils$text_encoders:new TextEncoder("utf8"),uint2String$$module$src$utils$text_encoders=a=>decoder$$module$src$utils$text_encoders.decode(a);var module$src$utils$text_encoders={};
module$src$utils$text_encoders.decoder=decoder$$module$src$utils$text_encoders;module$src$utils$text_encoders.encoder=encoder$$module$src$utils$text_encoders;module$src$utils$text_encoders.uint2String=uint2String$$module$src$utils$text_encoders;const trimNull$$module$src$utils$trim_null=a=>{const b=a.indexOf("\\x00");return-1<b?a.substr(0,b):a};var module$src$utils$trim_null={};module$src$utils$trim_null.trimNull=trimNull$$module$src$utils$trim_null;const freeStringPtr$$module$src$utils$string_pointers=(a,b)=>{a.exports.freeStringMem(b)},ptr2string$$module$src$utils$string_pointers=(a,b)=>{({buffer:a}=a.wasi.memory);b=new Uint8Array(a,b);b=uint2String$$module$src$utils$text_encoders(b);return trimNull$$module$src$utils$trim_null(b)},string2ptr$$module$src$utils$string_pointers=(a,b)=>{if("string"!==typeof b)console.error("Expected string but got",typeof b);else{b=encoder$$module$src$utils$text_encoders.encode(b);var c=a.exports.allocStringMem(b.length);
({buffer:a}=a.wasi.memory);(new Uint8Array(a,c,b.length+1)).set(b);return c}};var module$src$utils$string_pointers={};module$src$utils$string_pointers.freeStringPtr=freeStringPtr$$module$src$utils$string_pointers;module$src$utils$string_pointers.ptr2string=ptr2string$$module$src$utils$string_pointers;module$src$utils$string_pointers.string2ptr=string2ptr$$module$src$utils$string_pointers;const csoundParseOrc$$module$src$modules$performance=a=>(b,c)=>a.exports.csoundParseOrc(b,c);csoundParseOrc$$module$src$modules$performance.toString=()=>"parseOrc = async (orchestra) => Object;";const csoundCompileTree$$module$src$modules$performance=a=>(b,c)=>a.exports.csoundCompileTree(b,c);csoundCompileTree$$module$src$modules$performance.toString=()=>"compileTree = async (tree) => Number;";
const csoundCompileOrc$$module$src$modules$performance=a=>(b,c)=>{c=string2ptr$$module$src$utils$string_pointers(a,c);b=a.exports.csoundCompileOrc(b,c);freeStringPtr$$module$src$utils$string_pointers(a,c);return b};csoundCompileOrc$$module$src$modules$performance.toString=()=>"compileOrc = async (orchestra) => Number;";
const csoundEvalCode$$module$src$modules$performance=a=>(b,c)=>{c=string2ptr$$module$src$utils$string_pointers(a,c);b=a.exports.csoundEvalCode(b,c);freeStringPtr$$module$src$utils$string_pointers(a,c);return b};csoundEvalCode$$module$src$modules$performance.toString=()=>"csoundEvalCode = async (orchestra) => Number;";const csoundStart$$module$src$modules$performance=a=>b=>a.exports.csoundStartWasi(b);csoundStart$$module$src$modules$performance.toString=()=>"start = async () => Number;";
const csoundCompileCsd$$module$src$modules$performance=a=>(b,c)=>{c=string2ptr$$module$src$utils$string_pointers(a,c);let d;try{d=a.exports.csoundCompileCsd(b,c)}catch(e){console.error(e)}freeStringPtr$$module$src$utils$string_pointers(a,c);return d};csoundCompileCsd$$module$src$modules$performance.toString=()=>"compileCsd = async (path) => Number;";
const csoundCompileCsdText$$module$src$modules$performance=a=>(b,c)=>{c=string2ptr$$module$src$utils$string_pointers(a,c);b=a.exports.csoundCompileCsdText(b,c);freeStringPtr$$module$src$utils$string_pointers(a,c);return b};csoundCompileCsdText$$module$src$modules$performance.toString=()=>"compileCsdText = async (csoundDocument) => Number;";const csoundPerform$$module$src$modules$performance=a=>b=>a.exports.csoundPerform(b);csoundPerform$$module$src$modules$performance.toString=()=>"perform = async () => Number;";
const csoundPerformKsmps$$module$src$modules$performance=a=>b=>a.exports.csoundPerformKsmpsWasi(b);csoundPerformKsmps$$module$src$modules$performance.toString=()=>"performKsmps = async (csound) => Number;";const csoundPerformBuffer$$module$src$modules$performance=a=>b=>a.exports.csoundPerformBuffer(b);csoundPerformBuffer$$module$src$modules$performance.toString=()=>"performBuffer = async (csound) => Number;";const csoundStop$$module$src$modules$performance=a=>b=>a.exports.csoundStop(b);
csoundStop$$module$src$modules$performance.toString=()=>"stop = async () => undefined;";const csoundCleanup$$module$src$modules$performance=a=>b=>a.exports.csoundCleanup(b);csoundCleanup$$module$src$modules$performance.toString=()=>"cleanup = async () => Number;";const csoundReset$$module$src$modules$performance=a=>b=>a.exports.csoundResetWasi(b);csoundReset$$module$src$modules$performance.toString=()=>"reset = async () => Number;";var module$src$modules$performance={};
module$src$modules$performance.csoundCleanup=csoundCleanup$$module$src$modules$performance;module$src$modules$performance.csoundCompileCsd=csoundCompileCsd$$module$src$modules$performance;module$src$modules$performance.csoundCompileCsdText=csoundCompileCsdText$$module$src$modules$performance;module$src$modules$performance.csoundCompileOrc=csoundCompileOrc$$module$src$modules$performance;module$src$modules$performance.csoundCompileTree=csoundCompileTree$$module$src$modules$performance;
module$src$modules$performance.csoundEvalCode=csoundEvalCode$$module$src$modules$performance;module$src$modules$performance.csoundParseOrc=csoundParseOrc$$module$src$modules$performance;module$src$modules$performance.csoundPerform=csoundPerform$$module$src$modules$performance;module$src$modules$performance.csoundPerformBuffer=csoundPerformBuffer$$module$src$modules$performance;module$src$modules$performance.csoundPerformKsmps=csoundPerformKsmps$$module$src$modules$performance;
module$src$modules$performance.csoundReset=csoundReset$$module$src$modules$performance;module$src$modules$performance.csoundStart=csoundStart$$module$src$modules$performance;module$src$modules$performance.csoundStop=csoundStop$$module$src$modules$performance;const sizeOfPrimitive$$module$src$utils$native_sizes={int:4,MYFLT:4,char:1},sizeofStruct$$module$src$utils$native_sizes=a=>a.reduce((b,[,c,...d])=>b+("char"===c?sizeOfPrimitive$$module$src$utils$native_sizes[c]*d[0]:sizeOfPrimitive$$module$src$utils$native_sizes[c]),0);var module$src$utils$native_sizes={};module$src$utils$native_sizes.sizeOfPrimitive=sizeOfPrimitive$$module$src$utils$native_sizes;module$src$utils$native_sizes.sizeofStruct=sizeofStruct$$module$src$utils$native_sizes;const structBufferToObject$$module$src$utils$structure_buffer_to_object=(a,b)=>{[a]=a.reduce(([c,d],[e,f,...g])=>{g="char"===f?sizeOfPrimitive$$module$src$utils$native_sizes[f]*g[0]:sizeOfPrimitive$$module$src$utils$native_sizes[f];f="char"===f?trimNull$$module$src$utils$trim_null(uint2String$$module$src$utils$text_encoders(b.subarray(d,g)))||"":b[d];c[e]=f;return[c,d+g]},[{},0]);return a};var module$src$utils$structure_buffer_to_object={};
module$src$utils$structure_buffer_to_object.structBufferToObject=structBufferToObject$$module$src$utils$structure_buffer_to_object;const CSOUND_PARAMS$$module$src$structures=[["debug_mode","int"],["buffer_frames","int"],["hardware_buffer_frames","int"],["displays","int"],["ascii_graphs","int"],["postscript_graphs","int"],["message_level","int"],["tempo","int"],["ring_bell","int"],["use_cscore","int"],["terminate_on_midi","int"],["heartbeat","int"],["defer_gen01_load","int"],["midi_key","int"],["midi_key_cps","int"],["midi_key_oct","int"],["midi_key_pch","int"],["midi_velocity","int"],["midi_velocity_amp","int"],["no_default_paths",
"int"],["number_of_threads","int"],["syntax_check_only","int"],["csd_line_counts","int"],["compute_weights","int"],["realtime_mode","int"],["sample_accurate","int"],["sample_rate_override","MYFLT"],["control_rate_override","MYFLT"],["nchnls_override","int"],["nchnls_i_override","int"],["e0dbfs_override","MYFLT"],["daemon","int"],["ksmps_override","int"],["FFT_library","int"]],CS_MIDIDEVICE$$module$src$structures=[["device_name","char",64],["interface_name","char",64],["device_id","char",64],["midi_module",
"char",64],["isOutput","int"]];var module$src$structures={};const csoundGetSr$$module$src$modules$attributes=a=>b=>a.exports.csoundGetSr(b);csoundGetSr$$module$src$modules$attributes.toString=()=>"getSr = async () => Number;";const csoundGetKr$$module$src$modules$attributes=a=>b=>a.exports.csoundGetKr(b);csoundGetKr$$module$src$modules$attributes.toString=()=>"getKr = async () => Number;";const csoundGetKsmps$$module$src$modules$attributes=a=>b=>a.exports.csoundGetKsmps(b);csoundGetKsmps$$module$src$modules$attributes.toString=()=>"getKsmps = async () => Number;";
const csoundGetNchnls$$module$src$modules$attributes=a=>b=>a.exports.csoundGetNchnls(b);csoundGetNchnls$$module$src$modules$attributes.toString=()=>"getNchnls = async () => Number;";const csoundGetNchnlsInput$$module$src$modules$attributes=a=>b=>a.exports.csoundGetNchnlsInput(b);csoundGetNchnlsInput$$module$src$modules$attributes.toString=()=>"getNchnlsInput = async () => Number;";const csoundGet0dBFS$$module$src$modules$attributes=a=>b=>a.exports.csoundGet0dBFS(b);
csoundGet0dBFS$$module$src$modules$attributes.toString=()=>"get0dBFS = async () => Number;";const csoundGetA4$$module$src$modules$attributes=a=>b=>a.exports.csoundGetA4(b);csoundGetA4$$module$src$modules$attributes.toString=()=>"getA4 = async () => Number;";const csoundGetCurrentTimeSamples$$module$src$modules$attributes=a=>b=>a.exports.csoundGetCurrentTimeSamples(b);csoundGetCurrentTimeSamples$$module$src$modules$attributes.toString=()=>"getCurrentTimeSamples = async () => Number;";
const csoundGetSizeOfMYFLT$$module$src$modules$attributes=a=>b=>a.exports.csoundGetSizeOfMYFLT(b);csoundGetSizeOfMYFLT$$module$src$modules$attributes.toString=()=>"getSizeOfMYFLT = async () => Number;";const csoundSetOption$$module$src$modules$attributes=a=>(b,c)=>{c=string2ptr$$module$src$utils$string_pointers(a,c);b=a.exports.csoundSetOption(b,c);freeStringPtr$$module$src$utils$string_pointers(a,c);return b};csoundSetOption$$module$src$modules$attributes.toString=()=>"setOption = async (option) => Number;";
const csoundSetParams$$module$src$modules$attributes=a=>(b,c)=>{a.exports.csoundSetParams(b,c)};csoundSetParams$$module$src$modules$attributes.toString=()=>"setParams = async (csoundParams) => undefined;";
const csoundGetParams$$module$src$modules$attributes=a=>b=>{var {buffer:c}=a.wasi.memory;const d=sizeofStruct$$module$src$utils$native_sizes(CSOUND_PARAMS$$module$src$structures),e=a.exports.allocCsoundParamsStruct();c=new Uint8Array(c,e,d);a.exports.csoundGetParams(b,e);b=structBufferToObject$$module$src$utils$structure_buffer_to_object(CSOUND_PARAMS$$module$src$structures,c);a.exports.freeCsoundParams(e);return b};csoundGetParams$$module$src$modules$attributes.toString=()=>"getParams = async () => CSOUND_PARAMS;";
const csoundGetDebug$$module$src$modules$attributes=a=>b=>a.exports.csoundGetDebug(b);csoundGetDebug$$module$src$modules$attributes.toString=()=>"getDebug = async () => Number;";const csoundSetDebug$$module$src$modules$attributes=a=>(b,c)=>{a.exports.csoundSetDebug(b,c)};csoundSetDebug$$module$src$modules$attributes.toString=()=>"setDebug = async (number) => undefined;";var module$src$modules$attributes={};module$src$modules$attributes.csoundGet0dBFS=csoundGet0dBFS$$module$src$modules$attributes;
module$src$modules$attributes.csoundGetA4=csoundGetA4$$module$src$modules$attributes;module$src$modules$attributes.csoundGetCurrentTimeSamples=csoundGetCurrentTimeSamples$$module$src$modules$attributes;module$src$modules$attributes.csoundGetDebug=csoundGetDebug$$module$src$modules$attributes;module$src$modules$attributes.csoundGetKr=csoundGetKr$$module$src$modules$attributes;module$src$modules$attributes.csoundGetKsmps=csoundGetKsmps$$module$src$modules$attributes;
module$src$modules$attributes.csoundGetNchnls=csoundGetNchnls$$module$src$modules$attributes;module$src$modules$attributes.csoundGetNchnlsInput=csoundGetNchnlsInput$$module$src$modules$attributes;module$src$modules$attributes.csoundGetParams=csoundGetParams$$module$src$modules$attributes;module$src$modules$attributes.csoundGetSizeOfMYFLT=csoundGetSizeOfMYFLT$$module$src$modules$attributes;module$src$modules$attributes.csoundGetSr=csoundGetSr$$module$src$modules$attributes;
module$src$modules$attributes.csoundSetDebug=csoundSetDebug$$module$src$modules$attributes;module$src$modules$attributes.csoundSetOption=csoundSetOption$$module$src$modules$attributes;module$src$modules$attributes.csoundSetParams=csoundSetParams$$module$src$modules$attributes;const csoundGetInputBufferSize$$module$src$modules$rtaudio=a=>b=>a.exports.csoundGetInputBufferSize(b);csoundGetInputBufferSize$$module$src$modules$rtaudio.toString=()=>"getInputBufferSize = async () => Number;";const csoundGetOutputBufferSize$$module$src$modules$rtaudio=a=>b=>a.exports.csoundGetOutputBufferSize(b);csoundGetOutputBufferSize$$module$src$modules$rtaudio.toString=()=>"getOutputBufferSize = async () => Number;";const csoundGetInputBuffer$$module$src$modules$rtaudio=a=>b=>a.exports.csoundGetInputBuffer(b);
csoundGetInputBuffer$$module$src$modules$rtaudio.toString=()=>"getInputBuffer = async () => Number;";const csoundGetOutputBuffer$$module$src$modules$rtaudio=a=>b=>a.exports.csoundGetOutputBuffer(b);csoundGetOutputBuffer$$module$src$modules$rtaudio.toString=()=>"getOutputBuffer = async () => Number;";const csoundGetSpin$$module$src$modules$rtaudio=a=>b=>a.exports.csoundGetSpin(b);csoundGetSpin$$module$src$modules$rtaudio.toString=()=>"getSpin = async (csound) => Number;";
const csoundGetSpout$$module$src$modules$rtaudio=a=>b=>a.exports.csoundGetSpout(b);csoundGetSpout$$module$src$modules$rtaudio.toString=()=>"getSpout = async () => Number;";var module$src$modules$rtaudio={};module$src$modules$rtaudio.csoundGetInputBuffer=csoundGetInputBuffer$$module$src$modules$rtaudio;module$src$modules$rtaudio.csoundGetInputBufferSize=csoundGetInputBufferSize$$module$src$modules$rtaudio;module$src$modules$rtaudio.csoundGetOutputBuffer=csoundGetOutputBuffer$$module$src$modules$rtaudio;
module$src$modules$rtaudio.csoundGetOutputBufferSize=csoundGetOutputBufferSize$$module$src$modules$rtaudio;module$src$modules$rtaudio.csoundGetSpin=csoundGetSpin$$module$src$modules$rtaudio;module$src$modules$rtaudio.csoundGetSpout=csoundGetSpout$$module$src$modules$rtaudio;function add$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>add$$module$node_modules$rambda$dist$rambda_mjs(a,c):Number(a)+Number(b)}const cloneList$$module$node_modules$rambda$dist$rambda_mjs=a=>Array.prototype.slice.call(a);function curry$$module$node_modules$rambda$dist$rambda_mjs(a,b=[]){return(...c)=>{c=[...b,...c];return c.length>=a.length?a(...c):curry$$module$node_modules$rambda$dist$rambda_mjs(a,c)}}
function adjustFn$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){const d=0>a?c.length+a:a;if(a>=c.length||0>d)return c;a=cloneList$$module$node_modules$rambda$dist$rambda_mjs(c);a[d]=b(a[d]);return a}const adjust$$module$node_modules$rambda$dist$rambda_mjs=curry$$module$node_modules$rambda$dist$rambda_mjs(adjustFn$$module$node_modules$rambda$dist$rambda_mjs);
function all$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return c=>all$$module$node_modules$rambda$dist$rambda_mjs(a,c);for(let c=0;c<b.length;c++)if(!a(b[c]))return!1;return!0}function allPass$$module$node_modules$rambda$dist$rambda_mjs(a){return(...b)=>{let c=0;for(;c<a.length;){if(!a[c](...b))return!1;c++}return!0}}function always$$module$node_modules$rambda$dist$rambda_mjs(a){return b=>a}
function and$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>and$$module$node_modules$rambda$dist$rambda_mjs(a,c):a&&b}function any$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return d=>any$$module$node_modules$rambda$dist$rambda_mjs(a,d);let c=0;for(;c<b.length;){if(a(b[c],c))return!0;c++}return!1}
function anyPass$$module$node_modules$rambda$dist$rambda_mjs(a){return(...b)=>{let c=0;for(;c<a.length;){if(a[c](...b))return!0;c++}return!1}}function append$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return d=>append$$module$node_modules$rambda$dist$rambda_mjs(a,d);if("string"===typeof b)return b.split("").concat(a);const c=cloneList$$module$node_modules$rambda$dist$rambda_mjs(b);c.push(a);return c}
function apply$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>apply$$module$node_modules$rambda$dist$rambda_mjs(a,c):a.apply(this,b)}const {isArray:isArray$$module$node_modules$rambda$dist$rambda_mjs}=Array;
function __findHighestArity$$module$node_modules$rambda$dist$rambda_mjs(a,b=0){for(const c in a)!1!==a.hasOwnProperty(c)&&"constructor"!==c&&("object"===typeof a[c]&&(b=Math.max(b,__findHighestArity$$module$node_modules$rambda$dist$rambda_mjs(a[c]))),"function"===typeof a[c]&&(b=Math.max(b,a[c].length)));return b}
function __filterUndefined$$module$node_modules$rambda$dist$rambda_mjs(){const a=[];let b=0;const c=arguments.length;for(;b<c&&"undefined"!==typeof arguments[b];)a[b]=arguments[b],b++;return a}
function __applySpecWithArity$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){var d=b-c.length;if(1===d)return f=>__applySpecWithArity$$module$node_modules$rambda$dist$rambda_mjs(a,b,__filterUndefined$$module$node_modules$rambda$dist$rambda_mjs(...c,f));if(2===d)return(f,g)=>__applySpecWithArity$$module$node_modules$rambda$dist$rambda_mjs(a,b,__filterUndefined$$module$node_modules$rambda$dist$rambda_mjs(...c,f,g));if(3===d)return(f,g,h)=>__applySpecWithArity$$module$node_modules$rambda$dist$rambda_mjs(a,
b,__filterUndefined$$module$node_modules$rambda$dist$rambda_mjs(...c,f,g,h));if(4===d)return(f,g,h,k)=>__applySpecWithArity$$module$node_modules$rambda$dist$rambda_mjs(a,b,__filterUndefined$$module$node_modules$rambda$dist$rambda_mjs(...c,f,g,h,k));if(4<d)return(...f)=>__applySpecWithArity$$module$node_modules$rambda$dist$rambda_mjs(a,b,__filterUndefined$$module$node_modules$rambda$dist$rambda_mjs(...c,...f));if(isArray$$module$node_modules$rambda$dist$rambda_mjs(a)){var e=[];d=0;const f=a.length;
for(;d<f;d++){if("object"===typeof a[d]||isArray$$module$node_modules$rambda$dist$rambda_mjs(a[d]))e[d]=__applySpecWithArity$$module$node_modules$rambda$dist$rambda_mjs(a[d],b,c);"function"===typeof a[d]&&(e[d]=a[d](...c))}return e}d={};for(e in a)!1!==a.hasOwnProperty(e)&&"constructor"!==e&&("object"===typeof a[e]?d[e]=__applySpecWithArity$$module$node_modules$rambda$dist$rambda_mjs(a[e],b,c):"function"===typeof a[e]&&(d[e]=a[e](...c)));return d}
function applySpec$$module$node_modules$rambda$dist$rambda_mjs(a,...b){const c=__findHighestArity$$module$node_modules$rambda$dist$rambda_mjs(a);return 0===c?()=>({}):__applySpecWithArity$$module$node_modules$rambda$dist$rambda_mjs(a,c,b)}function assocFn$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){return Object.assign({},c,{[a]:b})}const assoc$$module$node_modules$rambda$dist$rambda_mjs=curry$$module$node_modules$rambda$dist$rambda_mjs(assocFn$$module$node_modules$rambda$dist$rambda_mjs);
function _isInteger$$module$node_modules$rambda$dist$rambda_mjs(a){return a<<0===a}const isInteger$$module$node_modules$rambda$dist$rambda_mjs=Number.isInteger||_isInteger$$module$node_modules$rambda$dist$rambda_mjs;
function assocPathFn$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){const d="string"===typeof a?a.split(".").map(e=>isInteger$$module$node_modules$rambda$dist$rambda_mjs(Number(e))?Number(e):e):a;if(0===d.length)return b;a=d[0];if(1<d.length){const e="object"===typeof c&&null!==c&&c.hasOwnProperty(a)?c[a]:isInteger$$module$node_modules$rambda$dist$rambda_mjs(d[1])?[]:{};b=assocPathFn$$module$node_modules$rambda$dist$rambda_mjs(Array.prototype.slice.call(d,1),b,e)}return isInteger$$module$node_modules$rambda$dist$rambda_mjs(a)&&
isArray$$module$node_modules$rambda$dist$rambda_mjs(c)?(c=cloneList$$module$node_modules$rambda$dist$rambda_mjs(c),c[a]=b,c):assoc$$module$node_modules$rambda$dist$rambda_mjs(a,b,c)}const assocPath$$module$node_modules$rambda$dist$rambda_mjs=curry$$module$node_modules$rambda$dist$rambda_mjs(assocPathFn$$module$node_modules$rambda$dist$rambda_mjs);
function _curryN$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){return function(){var d=0;let e=0;const f=b.length,g=arguments.length,h=Array(f+g);for(;d<f;)h[d]=b[d],d++;for(;e<g;)h[f+e]=arguments[e],e++;d=a-h.length;return h.length>=a?c.apply(this,h):_arity$1$$module$node_modules$rambda$dist$rambda_mjs(d,_curryN$$module$node_modules$rambda$dist$rambda_mjs(a,h,c))}}
function _arity$1$$module$node_modules$rambda$dist$rambda_mjs(a,b){switch(a){case 0:return function(){return b.apply(this,arguments)};case 1:return function(c){return b.apply(this,arguments)};case 2:return function(c,d){return b.apply(this,arguments)};case 3:return function(c,d,e){return b.apply(this,arguments)};case 4:return function(c,d,e,f){return b.apply(this,arguments)};case 5:return function(c,d,e,f,g){return b.apply(this,arguments)};case 6:return function(c,d,e,f,g,h){return b.apply(this,arguments)};
case 7:return function(c,d,e,f,g,h,k){return b.apply(this,arguments)};case 8:return function(c,d,e,f,g,h,k,l){return b.apply(this,arguments)};case 9:return function(c,d,e,f,g,h,k,l,n){return b.apply(this,arguments)};default:return function(c,d,e,f,g,h,k,l,n,m){return b.apply(this,arguments)}}}
function curryN$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return c=>curryN$$module$node_modules$rambda$dist$rambda_mjs(a,c);if(10<a)throw Error("First argument to _arity must be a non-negative integer no greater than ten");return _arity$1$$module$node_modules$rambda$dist$rambda_mjs(a,_curryN$$module$node_modules$rambda$dist$rambda_mjs(a,[],b))}
function bind$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>bind$$module$node_modules$rambda$dist$rambda_mjs(a,c):curryN$$module$node_modules$rambda$dist$rambda_mjs(a.length,(...c)=>a.apply(b,c))}function both$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>both$$module$node_modules$rambda$dist$rambda_mjs(a,c):(...c)=>a(...c)&&b(...c)}
function chain$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>chain$$module$node_modules$rambda$dist$rambda_mjs(a,c):[].concat(...b.map(a))}function clampFn$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){if(a>b)throw Error("min must not be greater than max in clamp(min, max, value)");if(c>=a&&c<=b)return c;if(c>b)return b;if(c<a)return a}const clamp$$module$node_modules$rambda$dist$rambda_mjs=curry$$module$node_modules$rambda$dist$rambda_mjs(clampFn$$module$node_modules$rambda$dist$rambda_mjs);
function clone$$module$node_modules$rambda$dist$rambda_mjs(a){const b=isArray$$module$node_modules$rambda$dist$rambda_mjs(a)?Array(a.length):{};if(a&&a.getTime)return new Date(a.getTime());for(const c in a){const d=a[c];b[c]="object"===typeof d&&null!==d?d.getTime?new Date(d.getTime()):clone$$module$node_modules$rambda$dist$rambda_mjs(d):d}return b}function complement$$module$node_modules$rambda$dist$rambda_mjs(a){return(...b)=>!a(...b)}
class ReduceStopper$$module$node_modules$rambda$dist$rambda_mjs{constructor(a){this.value=a}}function reduceFn$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){if(!isArray$$module$node_modules$rambda$dist$rambda_mjs(c))throw new TypeError("reduce: list must be array or iterable");let d=0;const e=c.length;for(;d<e;){b=a(b,c[d],d,c);if(b instanceof ReduceStopper$$module$node_modules$rambda$dist$rambda_mjs)return b.value;d++}return b}
const reduce$$module$node_modules$rambda$dist$rambda_mjs=curry$$module$node_modules$rambda$dist$rambda_mjs(reduceFn$$module$node_modules$rambda$dist$rambda_mjs),reduceStopper$$module$node_modules$rambda$dist$rambda_mjs=a=>new ReduceStopper$$module$node_modules$rambda$dist$rambda_mjs(a);
function _arity$$module$node_modules$rambda$dist$rambda_mjs(a,b){switch(a){case 0:return function(){return b.apply(this,arguments)};case 1:return function(c){return b.apply(this,arguments)};case 2:return function(c,d){return b.apply(this,arguments)};case 3:return function(c,d,e){return b.apply(this,arguments)};case 4:return function(c,d,e,f){return b.apply(this,arguments)};case 5:return function(c,d,e,f,g){return b.apply(this,arguments)};case 6:return function(c,d,e,f,g,h){return b.apply(this,arguments)};
case 7:return function(c,d,e,f,g,h,k){return b.apply(this,arguments)};case 8:return function(c,d,e,f,g,h,k,l){return b.apply(this,arguments)};case 9:return function(c,d,e,f,g,h,k,l,n){return b.apply(this,arguments)};case 10:return function(c,d,e,f,g,h,k,l,n,m){return b.apply(this,arguments)};default:throw Error("First argument to _arity must be a non-negative integer no greater than ten");}}
function _pipe$$module$node_modules$rambda$dist$rambda_mjs(a,b){return function(){return b.call(this,a.apply(this,arguments))}}
function pipe$$module$node_modules$rambda$dist$rambda_mjs(){if(0===arguments.length)throw Error("pipe requires at least one argument");return _arity$$module$node_modules$rambda$dist$rambda_mjs(arguments[0].length,reduceFn$$module$node_modules$rambda$dist$rambda_mjs(_pipe$$module$node_modules$rambda$dist$rambda_mjs,arguments[0],Array.prototype.slice.call(arguments,1,Infinity)))}
function compose$$module$node_modules$rambda$dist$rambda_mjs(){if(0===arguments.length)throw Error("compose requires at least one argument");return pipe$$module$node_modules$rambda$dist$rambda_mjs.apply(this,Array.prototype.slice.call(arguments,0).reverse())}function concat$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>concat$$module$node_modules$rambda$dist$rambda_mjs(a,c):"string"===typeof a?\`\${a}\${b}\`:[...a,...b]}
function cond$$module$node_modules$rambda$dist$rambda_mjs(a){return b=>{let c=!1,d;a.forEach(([e,f])=>{!c&&e(b)&&(c=!0,d=f(b))});return d}}const {keys:keys$1$$module$node_modules$rambda$dist$rambda_mjs}=Object;function mapArray$$module$node_modules$rambda$dist$rambda_mjs(a,b,c=!1){let d=0;const e=Array(b.length);for(;d<b.length;)e[d]=c?a(b[d],d):a(b[d]),d++;return e}
function mapObject$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return g=>mapObject$$module$node_modules$rambda$dist$rambda_mjs(a,g);let c=0;const d=keys$1$$module$node_modules$rambda$dist$rambda_mjs(b),e=d.length,f={};for(;c<e;){const g=d[c];f[g]=a(b[g],g,b);c++}return f}const mapObjIndexed$$module$node_modules$rambda$dist$rambda_mjs=mapObject$$module$node_modules$rambda$dist$rambda_mjs;
function map$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return c=>map$$module$node_modules$rambda$dist$rambda_mjs(a,c);if(!b)throw Error(INCORRECT_ITERABLE_INPUT);return isArray$$module$node_modules$rambda$dist$rambda_mjs(b)?mapArray$$module$node_modules$rambda$dist$rambda_mjs(a,b):mapObject$$module$node_modules$rambda$dist$rambda_mjs(a,b)}
function max$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>max$$module$node_modules$rambda$dist$rambda_mjs(a,c):b>a?b:a}
function converge$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return d=>converge$$module$node_modules$rambda$dist$rambda_mjs(a,d);const c=reduce$$module$node_modules$rambda$dist$rambda_mjs((d,e)=>max$$module$node_modules$rambda$dist$rambda_mjs(d,e.length),0,b);return curryN$$module$node_modules$rambda$dist$rambda_mjs(c,function(){return a.apply(this,map$$module$node_modules$rambda$dist$rambda_mjs(d=>d.apply(this,arguments),b))})}
function count$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>count$$module$node_modules$rambda$dist$rambda_mjs(a,c):isArray$$module$node_modules$rambda$dist$rambda_mjs(b)?b.filter(c=>a(c)).length:0}function countBy$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return d=>countBy$$module$node_modules$rambda$dist$rambda_mjs(a,d);const c={};b.forEach(d=>{d=a(d);c[d]?c[d]++:c[d]=1});return c}
const dec$$module$node_modules$rambda$dist$rambda_mjs=a=>a-1;function isFalsy$$module$node_modules$rambda$dist$rambda_mjs(a){return void 0===a||null===a||!0===Number.isNaN(a)}function defaultTo$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>defaultTo$$module$node_modules$rambda$dist$rambda_mjs(a,c):isFalsy$$module$node_modules$rambda$dist$rambda_mjs(b)?a:b}
function type$$module$node_modules$rambda$dist$rambda_mjs(a){if(null===a)return"Null";if(void 0===a)return"Undefined";if(Number.isNaN(a))return"NaN";a=Object.prototype.toString.call(a).slice(8,-1);return"AsyncFunction"===a?"Promise":a}
function _lastIndexOf$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(!isArray$$module$node_modules$rambda$dist$rambda_mjs(b))throw Error(\`Cannot read property 'indexOf' of \${b}\`);var c=type$$module$node_modules$rambda$dist$rambda_mjs(a);if(!["Object","Array","NaN","RegExp"].includes(c))return b.lastIndexOf(a);({length:c}=b);let d=-1;for(;-1<--c&&-1===d;)equals$$module$node_modules$rambda$dist$rambda_mjs(b[c],a)&&(d=c);return d}
function _indexOf$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(!isArray$$module$node_modules$rambda$dist$rambda_mjs(b))throw Error(\`Cannot read property 'indexOf' of \${b}\`);var c=type$$module$node_modules$rambda$dist$rambda_mjs(a);if(!["Object","Array","NaN","RegExp"].includes(c))return b.indexOf(a);let d=c=-1;const {length:e}=b;for(;++c<e&&-1===d;)equals$$module$node_modules$rambda$dist$rambda_mjs(b[c],a)&&(d=c);return d}
function _arrayFromIterator$$module$node_modules$rambda$dist$rambda_mjs(a){const b=[];let c;for(;!(c=a.next()).done;)b.push(c.value);return b}function _equalsSets$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(a.size!==b.size)return!1;a=_arrayFromIterator$$module$node_modules$rambda$dist$rambda_mjs(a.values());const c=_arrayFromIterator$$module$node_modules$rambda$dist$rambda_mjs(b.values());return 0===a.filter(d=>-1===_indexOf$$module$node_modules$rambda$dist$rambda_mjs(d,c)).length}
function parseError$$module$node_modules$rambda$dist$rambda_mjs(a){const b=a.__proto__.toString();return["Error","TypeError"].includes(b)?[b,a.message]:[]}function parseDate$$module$node_modules$rambda$dist$rambda_mjs(a){return a.toDateString?[!0,a.getTime()]:[!1]}function parseRegex$$module$node_modules$rambda$dist$rambda_mjs(a){return a.constructor!==RegExp?[!1]:[!0,a.toString()]}
function equals$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return f=>equals$$module$node_modules$rambda$dist$rambda_mjs(a,f);var c=type$$module$node_modules$rambda$dist$rambda_mjs(a);if(c!==type$$module$node_modules$rambda$dist$rambda_mjs(b))return!1;if("Function"===c)return void 0===a.name?!1:a.name===b.name;if(["NaN","Undefined","Null"].includes(c))return!0;if("Number"===c)return Object.is(-0,a)!==Object.is(-0,b)?!1:a.toString()===b.toString();if(["String","Boolean"].includes(c))return a.toString()===
b.toString();if("Array"===c){c=Array.from(a);const f=Array.from(b);if(c.toString()!==f.toString())return!1;let g=!0;c.forEach((h,k)=>{g&&(h===f[k]||equals$$module$node_modules$rambda$dist$rambda_mjs(h,f[k])||(g=!1))});return g}var d=parseRegex$$module$node_modules$rambda$dist$rambda_mjs(a),e=parseRegex$$module$node_modules$rambda$dist$rambda_mjs(b);if(d[0])return e[0]?d[1]===e[1]:!1;if(e[0])return!1;d=parseDate$$module$node_modules$rambda$dist$rambda_mjs(a);e=parseDate$$module$node_modules$rambda$dist$rambda_mjs(b);
if(d[0])return e[0]?d[1]===e[1]:!1;if(e[0])return!1;d=parseError$$module$node_modules$rambda$dist$rambda_mjs(a);e=parseError$$module$node_modules$rambda$dist$rambda_mjs(b);if(d[0])return e[0]?d[0]===e[0]&&d[1]===e[1]:!1;if("Set"===c)return _equalsSets$$module$node_modules$rambda$dist$rambda_mjs(a,b);if("Object"===c){c=Object.keys(a);if(c.length!==Object.keys(b).length)return!1;let f=!0;c.forEach(g=>{if(f){const h=a[g];g=b[g];h===g||equals$$module$node_modules$rambda$dist$rambda_mjs(h,g)||(f=!1)}});
return f}return!1}function includes$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return c=>includes$$module$node_modules$rambda$dist$rambda_mjs(a,c);if("string"===typeof b)return b.includes(a);if(!b)throw new TypeError(\`Cannot read property \\'indexOf\\' of \${b}\`);return isArray$$module$node_modules$rambda$dist$rambda_mjs(b)?-1<_indexOf$$module$node_modules$rambda$dist$rambda_mjs(a,b):!1}
class _Set$$module$node_modules$rambda$dist$rambda_mjs{constructor(){this.set=new Set;this.items={}}checkUniqueness(a){var b=type$$module$node_modules$rambda$dist$rambda_mjs(a);return["Null","Undefined","NaN"].includes(b)?b in this.items?!1:this.items[b]=!0:["Object","Array"].includes(b)?b in this.items?-1===_indexOf$$module$node_modules$rambda$dist$rambda_mjs(a,this.items[b])?(this.items[b].push(a),!0):!1:(this.items[b]=[a],!0):(b=this.set.size,this.set.add(a),this.set.size!==b)}}
function uniq$$module$node_modules$rambda$dist$rambda_mjs(a){const b=new _Set$$module$node_modules$rambda$dist$rambda_mjs,c=[];a.forEach(d=>{b.checkUniqueness(d)&&c.push(d)});return c}function difference$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>difference$$module$node_modules$rambda$dist$rambda_mjs(a,c):uniq$$module$node_modules$rambda$dist$rambda_mjs(a).filter(c=>!includes$$module$node_modules$rambda$dist$rambda_mjs(c,b))}
function dissoc$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return d=>dissoc$$module$node_modules$rambda$dist$rambda_mjs(a,d);if(null===b||void 0===b)return{};const c={};for(const d in b)c[d]=b[d];delete c[a];return c}function divide$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>divide$$module$node_modules$rambda$dist$rambda_mjs(a,c):a/b}
function drop$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>drop$$module$node_modules$rambda$dist$rambda_mjs(a,c):b.slice(0<a?a:0)}function dropLast$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>dropLast$$module$node_modules$rambda$dist$rambda_mjs(a,c):0<a?b.slice(0,-a):b.slice()}
function dropLastWhile$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return g=>dropLastWhile$$module$node_modules$rambda$dist$rambda_mjs(a,g);if(0===b.length)return b;const c=isArray$$module$node_modules$rambda$dist$rambda_mjs(b);if("function"!==typeof a)throw Error(\`'predicate' is from wrong type \${typeof a}\`);if(!c&&"string"!==typeof b)throw Error(\`'iterable' is from wrong type \${typeof b}\`);let d=!1;const e=[];let f=b.length;for(;0<f;)f--,d||!1!==a(b[f])?d&&e.push(b[f]):
(d=!0,e.push(b[f]));return c?e.reverse():e.reverse().join("")}function dropRepeats$$module$node_modules$rambda$dist$rambda_mjs(a){if(!isArray$$module$node_modules$rambda$dist$rambda_mjs(a))throw Error(\`\${a} is not a list\`);const b=[];a.reduce((c,d)=>{equals$$module$node_modules$rambda$dist$rambda_mjs(c,d)||b.push(d);return d},void 0);return b}
function dropRepeatsWith$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return d=>dropRepeatsWith$$module$node_modules$rambda$dist$rambda_mjs(a,d);if(!isArray$$module$node_modules$rambda$dist$rambda_mjs(b))throw Error(\`\${b} is not a list\`);const c=[];b.reduce((d,e)=>{if(void 0===d)return c.push(e),e;a(d,e)||c.push(e);return e},void 0);return c}
function dropWhile$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return g=>dropWhile$$module$node_modules$rambda$dist$rambda_mjs(a,g);const c=isArray$$module$node_modules$rambda$dist$rambda_mjs(b);if(!c&&"string"!==typeof b)throw Error("\`iterable\` is neither list nor a string");let d=!1;const e=[];let f=-1;for(;f++<b.length-1;)d?e.push(b[f]):a(b[f])||(d||(d=!0),e.push(b[f]));return c?e:e.join("")}
function either$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>either$$module$node_modules$rambda$dist$rambda_mjs(a,c):(...c)=>!(!a(...c)&&!b(...c))}
function endsWith$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return e=>endsWith$$module$node_modules$rambda$dist$rambda_mjs(a,e);if("string"===typeof b)return b.endsWith(a);if(!isArray$$module$node_modules$rambda$dist$rambda_mjs(a))return!1;const c=b.length-a.length;let d=!0;return a.filter((e,f)=>{if(!d)return!1;(e=equals$$module$node_modules$rambda$dist$rambda_mjs(e,b[f+c]))||(d=!1);return e}).length===a.length}
function prop$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return c=>prop$$module$node_modules$rambda$dist$rambda_mjs(a,c);if(b)return b[a]}function eqPropsFn$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){return equals$$module$node_modules$rambda$dist$rambda_mjs(prop$$module$node_modules$rambda$dist$rambda_mjs(a,b),prop$$module$node_modules$rambda$dist$rambda_mjs(a,c))}const eqProps$$module$node_modules$rambda$dist$rambda_mjs=curry$$module$node_modules$rambda$dist$rambda_mjs(eqPropsFn$$module$node_modules$rambda$dist$rambda_mjs);
function evolveArray$$module$node_modules$rambda$dist$rambda_mjs(a,b){return mapArray$$module$node_modules$rambda$dist$rambda_mjs((c,d)=>"Function"===type$$module$node_modules$rambda$dist$rambda_mjs(a[d])?a[d](c):c,b,!0)}
function evolveObject$$module$node_modules$rambda$dist$rambda_mjs(a,b){return mapObject$$module$node_modules$rambda$dist$rambda_mjs((c,d)=>{if("Object"===type$$module$node_modules$rambda$dist$rambda_mjs(c)){const e=type$$module$node_modules$rambda$dist$rambda_mjs(a[d]);return"Function"===e?a[d](c):"Object"===e?evolve$$module$node_modules$rambda$dist$rambda_mjs(a[d],c):c}return"Function"===type$$module$node_modules$rambda$dist$rambda_mjs(a[d])?a[d](c):c},b)}
function evolve$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return e=>evolve$$module$node_modules$rambda$dist$rambda_mjs(a,e);const c=type$$module$node_modules$rambda$dist$rambda_mjs(a),d=type$$module$node_modules$rambda$dist$rambda_mjs(b);if(d!==c)throw Error("iterableType !== rulesType");if(!["Object","Array"].includes(c))throw Error(\`'iterable' and 'rules' are from wrong type \${c}\`);return"Object"===d?evolveObject$$module$node_modules$rambda$dist$rambda_mjs(a,b):evolveArray$$module$node_modules$rambda$dist$rambda_mjs(a,
b)}function F$$module$node_modules$rambda$dist$rambda_mjs(){return!1}function filterObject$$module$node_modules$rambda$dist$rambda_mjs(a,b){const c={};for(const d in b)a(b[d],d,b)&&(c[d]=b[d]);return c}function filterArray$$module$node_modules$rambda$dist$rambda_mjs(a,b,c=!1){let d=0;const e=b.length,f=[];for(;d<e;)(c?a(b[d],d):a(b[d]))&&f.push(b[d]),d++;return f}
function filter$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return c=>filter$$module$node_modules$rambda$dist$rambda_mjs(a,c);if(!b)throw Error("Incorrect iterable input");return isArray$$module$node_modules$rambda$dist$rambda_mjs(b)?filterArray$$module$node_modules$rambda$dist$rambda_mjs(a,b,!1):filterObject$$module$node_modules$rambda$dist$rambda_mjs(a,b)}
function find$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return e=>find$$module$node_modules$rambda$dist$rambda_mjs(a,e);let c=0;const d=b.length;for(;c<d;){const e=b[c];if(a(e))return e;c++}}function findIndex$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return e=>findIndex$$module$node_modules$rambda$dist$rambda_mjs(a,e);const c=b.length;let d=-1;for(;++d<c;)if(a(b[d]))return d;return-1}
function findLast$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return d=>findLast$$module$node_modules$rambda$dist$rambda_mjs(a,d);let c=b.length;for(;0<=--c;)if(a(b[c]))return b[c]}function findLastIndex$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return d=>findLastIndex$$module$node_modules$rambda$dist$rambda_mjs(a,d);let c=b.length;for(;0<=--c;)if(a(b[c]))return c;return-1}
function flatten$$module$node_modules$rambda$dist$rambda_mjs(a,b){b=void 0===b?[]:b;for(let c=0;c<a.length;c++)isArray$$module$node_modules$rambda$dist$rambda_mjs(a[c])?flatten$$module$node_modules$rambda$dist$rambda_mjs(a[c],b):b.push(a[c]);return b}
function flipFn$$module$node_modules$rambda$dist$rambda_mjs(a){return(...b)=>{if(1===b.length)return c=>a(c,b[0]);if(2===b.length)return a(b[1],b[0]);if(3===b.length)return a(b[1],b[0],b[2]);if(4===b.length)return a(b[1],b[0],b[2],b[3]);throw Error("R.flip doesn't work with arity > 4");}}function flip$$module$node_modules$rambda$dist$rambda_mjs(a){return flipFn$$module$node_modules$rambda$dist$rambda_mjs(a)}
function forEach$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return e=>forEach$$module$node_modules$rambda$dist$rambda_mjs(a,e);if(void 0!==b){if(isArray$$module$node_modules$rambda$dist$rambda_mjs(b))for(var c=0,d=b.length;c<d;)a(b[c]),c++;else{c=0;d=keys$1$$module$node_modules$rambda$dist$rambda_mjs(b);const e=d.length;for(;c<e;){const f=d[c];a(b[f],f,b);c++}}return b}}
function fromPairs$$module$node_modules$rambda$dist$rambda_mjs(a){const b={};a.forEach(([c,d])=>b[c]=d);return b}function groupBy$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return d=>groupBy$$module$node_modules$rambda$dist$rambda_mjs(a,d);const c={};for(let d=0;d<b.length;d++){const e=b[d],f=a(e);c[f]||(c[f]=[]);c[f].push(e)}return c}
function groupWith$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(!isArray$$module$node_modules$rambda$dist$rambda_mjs(b))throw new TypeError("list.reduce is not a function");const c=cloneList$$module$node_modules$rambda$dist$rambda_mjs(b);if(1===b.length)return[c];const d=[];let e=[];c.reduce((f,g,h)=>{if(0===h)return g;const k=a(f,g),l=0===e.length;h=h===b.length-1;if(k)return l&&e.push(f),e.push(g),h&&d.push(e),g;if(l)return d.push([f]),h&&d.push([g]),g;d.push(e);h&&d.push([g]);e=[];return g},
void 0);return d}function has$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>has$$module$node_modules$rambda$dist$rambda_mjs(a,c):b?b.hasOwnProperty(a):!1}function createPath$$module$node_modules$rambda$dist$rambda_mjs(a,b="."){return"string"===typeof a?a.split(b):a}
function path$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return f=>path$$module$node_modules$rambda$dist$rambda_mjs(a,f);if(null!==b&&void 0!==b){for(var c=b,d=0,e=createPath$$module$node_modules$rambda$dist$rambda_mjs(a);d<e.length;){if(null===c||void 0===c||null===c[e[d]])return;c=c[e[d]];d++}return c}}
function hasPath$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>hasPath$$module$node_modules$rambda$dist$rambda_mjs(a,c):void 0!==path$$module$node_modules$rambda$dist$rambda_mjs(a,b)}function head$$module$node_modules$rambda$dist$rambda_mjs(a){return"string"===typeof a?a[0]||"":a[0]}function _objectIs$$module$node_modules$rambda$dist$rambda_mjs(a,b){return a===b?0!==a||1/a===1/b:a!==a&&b!==b}const objectIs$$module$node_modules$rambda$dist$rambda_mjs=Object.is||_objectIs$$module$node_modules$rambda$dist$rambda_mjs;
function identical$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>identical$$module$node_modules$rambda$dist$rambda_mjs(a,c):objectIs$$module$node_modules$rambda$dist$rambda_mjs(a,b)}function identity$$module$node_modules$rambda$dist$rambda_mjs(a){return a}function ifElseFn$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){return(...d)=>!0===("boolean"===typeof a?a:a(...d))?b(...d):c(...d)}
const ifElse$$module$node_modules$rambda$dist$rambda_mjs=curry$$module$node_modules$rambda$dist$rambda_mjs(ifElseFn$$module$node_modules$rambda$dist$rambda_mjs),inc$$module$node_modules$rambda$dist$rambda_mjs=a=>a+1;function indexByPath$$module$node_modules$rambda$dist$rambda_mjs(a,b){const c={};for(let d=0;d<b.length;d++){const e=b[d];c[path$$module$node_modules$rambda$dist$rambda_mjs(a,e)]=e}return c}
function indexBy$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return d=>indexBy$$module$node_modules$rambda$dist$rambda_mjs(a,d);if("string"===typeof a)return indexByPath$$module$node_modules$rambda$dist$rambda_mjs(a,b);const c={};for(let d=0;d<b.length;d++){const e=b[d];c[a(e)]=e}return c}
function indexOf$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>_indexOf$$module$node_modules$rambda$dist$rambda_mjs(a,c):_indexOf$$module$node_modules$rambda$dist$rambda_mjs(a,b)}function baseSlice$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){let d=-1,{length:e}=a;c=c>e?e:c;0>c&&(c+=e);e=b>c?0:c-b>>>0;b>>>=0;for(c=Array(e);++d<e;)c[d]=a[d+b];return c}
function init$$module$node_modules$rambda$dist$rambda_mjs(a){return"string"===typeof a?a.slice(0,-1):a.length?baseSlice$$module$node_modules$rambda$dist$rambda_mjs(a,0,-1):[]}function intersection$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>intersection$$module$node_modules$rambda$dist$rambda_mjs(a,c):filter$$module$node_modules$rambda$dist$rambda_mjs(c=>includes$$module$node_modules$rambda$dist$rambda_mjs(c,a),b)}
function intersperse$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return f=>intersperse$$module$node_modules$rambda$dist$rambda_mjs(a,f);let c=-1;const d=b.length,e=[];for(;++c<d;)c===d-1?e.push(b[c]):e.push(b[c],a);return e}function is$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>is$$module$node_modules$rambda$dist$rambda_mjs(a,c):null!=b&&b.constructor===a||b instanceof a}
function isEmpty$$module$node_modules$rambda$dist$rambda_mjs(a){const b=type$$module$node_modules$rambda$dist$rambda_mjs(a);return["Undefined","NaN","Number","Null"].includes(b)?!1:a?"Object"===b?0===Object.keys(a).length:"Array"===b?0===a.length:!1:!0}function isNil$$module$node_modules$rambda$dist$rambda_mjs(a){return void 0===a||null===a}
function join$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>join$$module$node_modules$rambda$dist$rambda_mjs(a,c):b.join(a)}function juxt$$module$node_modules$rambda$dist$rambda_mjs(a){return(...b)=>a.map(c=>c(...b))}function keys$$module$node_modules$rambda$dist$rambda_mjs(a){return Object.keys(a)}function last$$module$node_modules$rambda$dist$rambda_mjs(a){return"string"===typeof a?a[a.length-1]||"":a[a.length-1]}
function lastIndexOf$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>_lastIndexOf$$module$node_modules$rambda$dist$rambda_mjs(a,c):_lastIndexOf$$module$node_modules$rambda$dist$rambda_mjs(a,b)}function length$$module$node_modules$rambda$dist$rambda_mjs(a){return isArray$$module$node_modules$rambda$dist$rambda_mjs(a)||"string"===typeof a?a.length:NaN}
function lens$$module$node_modules$rambda$dist$rambda_mjs(a,b){return function(c){return function(d){return c(a(d)).map(e=>b(e,d))}}}function nth$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return d=>nth$$module$node_modules$rambda$dist$rambda_mjs(a,d);const c=0>a?b.length+a:a;return"[object String]"===Object.prototype.toString.call(b)?b.charAt(c):b[c]}
function updateFn$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){c=cloneList$$module$node_modules$rambda$dist$rambda_mjs(c);return-1===a?c.fill(b,a):c.fill(b,a,a+1)}const update$$module$node_modules$rambda$dist$rambda_mjs=curry$$module$node_modules$rambda$dist$rambda_mjs(updateFn$$module$node_modules$rambda$dist$rambda_mjs);
function lensIndex$$module$node_modules$rambda$dist$rambda_mjs(a){return lens$$module$node_modules$rambda$dist$rambda_mjs(nth$$module$node_modules$rambda$dist$rambda_mjs(a),update$$module$node_modules$rambda$dist$rambda_mjs(a))}function lensPath$$module$node_modules$rambda$dist$rambda_mjs(a){return lens$$module$node_modules$rambda$dist$rambda_mjs(path$$module$node_modules$rambda$dist$rambda_mjs(a),assocPath$$module$node_modules$rambda$dist$rambda_mjs(a))}
function lensProp$$module$node_modules$rambda$dist$rambda_mjs(a){return lens$$module$node_modules$rambda$dist$rambda_mjs(prop$$module$node_modules$rambda$dist$rambda_mjs(a),assoc$$module$node_modules$rambda$dist$rambda_mjs(a))}function match$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return d=>match$$module$node_modules$rambda$dist$rambda_mjs(a,d);const c=b.match(a);return null===c?[]:c}
function mathMod$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>mathMod$$module$node_modules$rambda$dist$rambda_mjs(a,c):!isInteger$$module$node_modules$rambda$dist$rambda_mjs(a)||!isInteger$$module$node_modules$rambda$dist$rambda_mjs(b)||1>b?NaN:(a%b+b)%b}function maxByFn$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){return a(c)>a(b)?c:b}const maxBy$$module$node_modules$rambda$dist$rambda_mjs=curry$$module$node_modules$rambda$dist$rambda_mjs(maxByFn$$module$node_modules$rambda$dist$rambda_mjs);
function sum$$module$node_modules$rambda$dist$rambda_mjs(a){return a.reduce((b,c)=>b+c,0)}function mean$$module$node_modules$rambda$dist$rambda_mjs(a){return sum$$module$node_modules$rambda$dist$rambda_mjs(a)/a.length}function median$$module$node_modules$rambda$dist$rambda_mjs(a){var b=a.length;if(0===b)return NaN;const c=2-b%2;b=(b-c)/2;return mean$$module$node_modules$rambda$dist$rambda_mjs(Array.prototype.slice.call(a,0).sort((d,e)=>d===e?0:d<e?-1:1).slice(b,b+c))}
function mergeRight$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>mergeRight$$module$node_modules$rambda$dist$rambda_mjs(a,c):Object.assign({},a||{},b||{})}function mergeAll$$module$node_modules$rambda$dist$rambda_mjs(a){let b={};map$$module$node_modules$rambda$dist$rambda_mjs(c=>{b=mergeRight$$module$node_modules$rambda$dist$rambda_mjs(b,c)},a);return b}
function mergeDeepRight$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return d=>mergeDeepRight$$module$node_modules$rambda$dist$rambda_mjs(a,d);const c=clone$$module$node_modules$rambda$dist$rambda_mjs(a);Object.keys(b).forEach(d=>{"Object"===type$$module$node_modules$rambda$dist$rambda_mjs(b[d])?"Object"===type$$module$node_modules$rambda$dist$rambda_mjs(a[d])?c[d]=mergeDeepRight$$module$node_modules$rambda$dist$rambda_mjs(a[d],b[d]):c[d]=b[d]:c[d]=b[d]});return c}
function mergeLeft$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>mergeLeft$$module$node_modules$rambda$dist$rambda_mjs(a,c):mergeRight$$module$node_modules$rambda$dist$rambda_mjs(b,a)}function mergeWithFn$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){const d={};Object.keys(b).forEach(e=>{d[e]=void 0===c[e]?b[e]:a(b[e],c[e])});Object.keys(c).forEach(e=>{void 0===d[e]&&(d[e]=void 0===b[e]?c[e]:a(b[e],c[e]))});return d}
const mergeWith$$module$node_modules$rambda$dist$rambda_mjs=curry$$module$node_modules$rambda$dist$rambda_mjs(mergeWithFn$$module$node_modules$rambda$dist$rambda_mjs);function min$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>min$$module$node_modules$rambda$dist$rambda_mjs(a,c):b<a?b:a}function minByFn$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){return a(c)<a(b)?c:b}const minBy$$module$node_modules$rambda$dist$rambda_mjs=curry$$module$node_modules$rambda$dist$rambda_mjs(minByFn$$module$node_modules$rambda$dist$rambda_mjs);
function ownKeys$$module$node_modules$rambda$dist$rambda_mjs(a,b){var c=Object.keys(a);if(Object.getOwnPropertySymbols){var d=Object.getOwnPropertySymbols(a);b&&(d=d.filter(function(e){return Object.getOwnPropertyDescriptor(a,e).enumerable}));c.push.apply(c,d)}return c}
function _objectSpread2$$module$node_modules$rambda$dist$rambda_mjs(a){for(var b=1;b<arguments.length;b++){var c=null!=arguments[b]?arguments[b]:{};b%2?ownKeys$$module$node_modules$rambda$dist$rambda_mjs(Object(c),!0).forEach(function(d){_defineProperty$$module$node_modules$rambda$dist$rambda_mjs(a,d,c[d])}):Object.getOwnPropertyDescriptors?Object.defineProperties(a,Object.getOwnPropertyDescriptors(c)):ownKeys$$module$node_modules$rambda$dist$rambda_mjs(Object(c)).forEach(function(d){Object.defineProperty(a,
d,Object.getOwnPropertyDescriptor(c,d))})}return a}function _defineProperty$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){b in a?Object.defineProperty(a,b,{value:c,enumerable:!0,configurable:!0,writable:!0}):a[b]=c;return a}function isIterable$$module$node_modules$rambda$dist$rambda_mjs(a){return Array.isArray(a)||"Object"===type$$module$node_modules$rambda$dist$rambda_mjs(a)}
function modifyFn$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){return isIterable$$module$node_modules$rambda$dist$rambda_mjs(c)&&void 0!==c[a]?isArray$$module$node_modules$rambda$dist$rambda_mjs(c)?updateFn$$module$node_modules$rambda$dist$rambda_mjs(a,b(c[a]),c):_objectSpread2$$module$node_modules$rambda$dist$rambda_mjs(_objectSpread2$$module$node_modules$rambda$dist$rambda_mjs({},c),{},{[a]:b(c[a])}):c}const modify$$module$node_modules$rambda$dist$rambda_mjs=curry$$module$node_modules$rambda$dist$rambda_mjs(modifyFn$$module$node_modules$rambda$dist$rambda_mjs);
function modifyPathFn$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){a=createPath$$module$node_modules$rambda$dist$rambda_mjs(a);if(1===a.length)return _objectSpread2$$module$node_modules$rambda$dist$rambda_mjs(_objectSpread2$$module$node_modules$rambda$dist$rambda_mjs({},c),{},{[a[0]]:b(c[a[0]])});if(void 0===path$$module$node_modules$rambda$dist$rambda_mjs(a,c))return c;b=modifyPath$$module$node_modules$rambda$dist$rambda_mjs(Array.prototype.slice.call(a,1),b,c[a[0]]);return b===c[a[0]]?c:assoc$$module$node_modules$rambda$dist$rambda_mjs(a[0],
b,c)}const modifyPath$$module$node_modules$rambda$dist$rambda_mjs=curry$$module$node_modules$rambda$dist$rambda_mjs(modifyPathFn$$module$node_modules$rambda$dist$rambda_mjs);function modulo$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>modulo$$module$node_modules$rambda$dist$rambda_mjs(a,c):a%b}
function moveFn$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){if(0>a||0>b)throw Error("Rambda.move does not support negative indexes");if(a>c.length-1||b>c.length-1)return c;const d=cloneList$$module$node_modules$rambda$dist$rambda_mjs(c);d[a]=c[b];d[b]=c[a];return d}const move$$module$node_modules$rambda$dist$rambda_mjs=curry$$module$node_modules$rambda$dist$rambda_mjs(moveFn$$module$node_modules$rambda$dist$rambda_mjs);
function multiply$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>multiply$$module$node_modules$rambda$dist$rambda_mjs(a,c):a*b}function negate$$module$node_modules$rambda$dist$rambda_mjs(a){return-a}function none$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return c=>none$$module$node_modules$rambda$dist$rambda_mjs(a,c);for(let c=0;c<b.length;c++)if(a(b[c]))return!1;return!0}
function not$$module$node_modules$rambda$dist$rambda_mjs(a){return!a}function objOf$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>objOf$$module$node_modules$rambda$dist$rambda_mjs(a,c):{[a]:b}}function of$$module$node_modules$rambda$dist$rambda_mjs(a){return[a]}
function omit$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return e=>omit$$module$node_modules$rambda$dist$rambda_mjs(a,e);if(null!==b&&void 0!==b){var c=createPath$$module$node_modules$rambda$dist$rambda_mjs(a,","),d={};for(const e in b)c.includes(e)||(d[e]=b[e]);return d}}
function on$$module$node_modules$rambda$dist$rambda_mjs(a,b,c,d){return 3===arguments.length?e=>on$$module$node_modules$rambda$dist$rambda_mjs(a,b,c,e):2===arguments.length?(e,f)=>on$$module$node_modules$rambda$dist$rambda_mjs(a,b,e,f):a(b(c),b(d))}function onceFn$$module$node_modules$rambda$dist$rambda_mjs(a,b){let c;return function(){a&&(c=a.apply(b||this,arguments),a=null);return c}}
function once$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length){const c=onceFn$$module$node_modules$rambda$dist$rambda_mjs(a,b);return curry$$module$node_modules$rambda$dist$rambda_mjs(c)}return onceFn$$module$node_modules$rambda$dist$rambda_mjs(a,b)}function or$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>or$$module$node_modules$rambda$dist$rambda_mjs(a,c):a||b}const Identity$$module$node_modules$rambda$dist$rambda_mjs=a=>({x:a,map:b=>Identity$$module$node_modules$rambda$dist$rambda_mjs(b(a))});
function overFn$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){return a(d=>Identity$$module$node_modules$rambda$dist$rambda_mjs(b(d)))(c).x}const over$$module$node_modules$rambda$dist$rambda_mjs=curry$$module$node_modules$rambda$dist$rambda_mjs(overFn$$module$node_modules$rambda$dist$rambda_mjs);
function partial$$module$node_modules$rambda$dist$rambda_mjs(a,...b){const c=a.length;return(...d)=>b.length+d.length>=c?a(...b,...d):partial$$module$node_modules$rambda$dist$rambda_mjs(a,...[...b,...d])}function partialObject$$module$node_modules$rambda$dist$rambda_mjs(a,b){return c=>a(mergeDeepRight$$module$node_modules$rambda$dist$rambda_mjs(c,b))}
function partitionObject$$module$node_modules$rambda$dist$rambda_mjs(a,b){const c={},d={};Object.entries(b).forEach(([e,f])=>{a(f,e)?c[e]=f:d[e]=f});return[c,d]}function partitionArray$$module$node_modules$rambda$dist$rambda_mjs(a,b,c=!1){const d=[],e=[];let f=-1;for(;f++<b.length-1;)(c?a(b[f],f):a(b[f]))?d.push(b[f]):e.push(b[f]);return[d,e]}
function partition$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>partition$$module$node_modules$rambda$dist$rambda_mjs(a,c):isArray$$module$node_modules$rambda$dist$rambda_mjs(b)?partitionArray$$module$node_modules$rambda$dist$rambda_mjs(a,b):partitionObject$$module$node_modules$rambda$dist$rambda_mjs(a,b)}
function pathEqFn$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){return equals$$module$node_modules$rambda$dist$rambda_mjs(path$$module$node_modules$rambda$dist$rambda_mjs(a,c),b)}const pathEq$$module$node_modules$rambda$dist$rambda_mjs=curry$$module$node_modules$rambda$dist$rambda_mjs(pathEqFn$$module$node_modules$rambda$dist$rambda_mjs);
function pathOrFn$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){return defaultTo$$module$node_modules$rambda$dist$rambda_mjs(a,path$$module$node_modules$rambda$dist$rambda_mjs(b,c))}const pathOr$$module$node_modules$rambda$dist$rambda_mjs=curry$$module$node_modules$rambda$dist$rambda_mjs(pathOrFn$$module$node_modules$rambda$dist$rambda_mjs);
function paths$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>paths$$module$node_modules$rambda$dist$rambda_mjs(a,c):a.map(c=>path$$module$node_modules$rambda$dist$rambda_mjs(c,b))}
function pick$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return f=>pick$$module$node_modules$rambda$dist$rambda_mjs(a,f);if(null!==b&&void 0!==b){for(var c=createPath$$module$node_modules$rambda$dist$rambda_mjs(a,","),d={},e=0;e<c.length;)c[e]in b&&(d[c[e]]=b[c[e]]),e++;return d}}
function pickAll$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return f=>pickAll$$module$node_modules$rambda$dist$rambda_mjs(a,f);if(null!==b&&void 0!==b){for(var c=createPath$$module$node_modules$rambda$dist$rambda_mjs(a,","),d={},e=0;e<c.length;)d[c[e]]=c[e]in b?b[c[e]]:void 0,e++;return d}}
function pluck$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return d=>pluck$$module$node_modules$rambda$dist$rambda_mjs(a,d);const c=[];map$$module$node_modules$rambda$dist$rambda_mjs(d=>{void 0!==d[a]&&c.push(d[a])},b);return c}function prepend$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>prepend$$module$node_modules$rambda$dist$rambda_mjs(a,c):"string"===typeof b?[a].concat(b.split("")):[a].concat(b)}
const product$$module$node_modules$rambda$dist$rambda_mjs=reduce$$module$node_modules$rambda$dist$rambda_mjs(multiply$$module$node_modules$rambda$dist$rambda_mjs,1);function propEqFn$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){return c?equals$$module$node_modules$rambda$dist$rambda_mjs(b,prop$$module$node_modules$rambda$dist$rambda_mjs(a,c)):!1}const propEq$$module$node_modules$rambda$dist$rambda_mjs=curry$$module$node_modules$rambda$dist$rambda_mjs(propEqFn$$module$node_modules$rambda$dist$rambda_mjs);
function propIsFn$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){return is$$module$node_modules$rambda$dist$rambda_mjs(a,c[b])}const propIs$$module$node_modules$rambda$dist$rambda_mjs=curry$$module$node_modules$rambda$dist$rambda_mjs(propIsFn$$module$node_modules$rambda$dist$rambda_mjs);function propOrFn$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){return c?defaultTo$$module$node_modules$rambda$dist$rambda_mjs(a,c[b]):a}const propOr$$module$node_modules$rambda$dist$rambda_mjs=curry$$module$node_modules$rambda$dist$rambda_mjs(propOrFn$$module$node_modules$rambda$dist$rambda_mjs);
function props$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return c=>props$$module$node_modules$rambda$dist$rambda_mjs(a,c);if(!isArray$$module$node_modules$rambda$dist$rambda_mjs(a))throw Error("propsToPick is not a list");return mapArray$$module$node_modules$rambda$dist$rambda_mjs(c=>b[c],a)}function propSatisfiesFn$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){return a(prop$$module$node_modules$rambda$dist$rambda_mjs(b,c))}
const propSatisfies$$module$node_modules$rambda$dist$rambda_mjs=curry$$module$node_modules$rambda$dist$rambda_mjs(propSatisfiesFn$$module$node_modules$rambda$dist$rambda_mjs);
function range$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return e=>range$$module$node_modules$rambda$dist$rambda_mjs(a,e);if(Number.isNaN(Number(a))||Number.isNaN(Number(b)))throw new TypeError("Both arguments to range must be numbers");if(b<a)return[];const c=b-a,d=Array(c);for(let e=0;e<c;e++)d[e]=a+e;return d}
function reject$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>reject$$module$node_modules$rambda$dist$rambda_mjs(a,c):filter$$module$node_modules$rambda$dist$rambda_mjs(c=>!a(c),b)}function repeat$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>repeat$$module$node_modules$rambda$dist$rambda_mjs(a,c):Array(b).fill(a)}function replaceFn$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){return c.replace(a,b)}
const replace$$module$node_modules$rambda$dist$rambda_mjs=curry$$module$node_modules$rambda$dist$rambda_mjs(replaceFn$$module$node_modules$rambda$dist$rambda_mjs);function reverse$$module$node_modules$rambda$dist$rambda_mjs(a){return"string"===typeof a?a.split("").reverse().join(""):a.slice().reverse()}function setFn$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){return over$$module$node_modules$rambda$dist$rambda_mjs(a,always$$module$node_modules$rambda$dist$rambda_mjs(b),c)}
const set$$module$node_modules$rambda$dist$rambda_mjs=curry$$module$node_modules$rambda$dist$rambda_mjs(setFn$$module$node_modules$rambda$dist$rambda_mjs);function sliceFn$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){return c.slice(a,b)}const slice$$module$node_modules$rambda$dist$rambda_mjs=curry$$module$node_modules$rambda$dist$rambda_mjs(sliceFn$$module$node_modules$rambda$dist$rambda_mjs);
function sort$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>sort$$module$node_modules$rambda$dist$rambda_mjs(a,c):cloneList$$module$node_modules$rambda$dist$rambda_mjs(b).sort(a)}function sortBy$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>sortBy$$module$node_modules$rambda$dist$rambda_mjs(a,c):cloneList$$module$node_modules$rambda$dist$rambda_mjs(b).sort((c,d)=>{c=a(c);d=a(d);return c===d?0:c<d?-1:1})}
function split$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>split$$module$node_modules$rambda$dist$rambda_mjs(a,c):b.split(a)}function maybe$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){b=a&&"Function"===type$$module$node_modules$rambda$dist$rambda_mjs(b)?b():b;c=a||"Function"!==type$$module$node_modules$rambda$dist$rambda_mjs(c)?c:c();return a?b:c}
function take$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>take$$module$node_modules$rambda$dist$rambda_mjs(a,c):0>a?b.slice():"string"===typeof b?b.slice(0,a):baseSlice$$module$node_modules$rambda$dist$rambda_mjs(b,0,a)}
function splitAt$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return d=>splitAt$$module$node_modules$rambda$dist$rambda_mjs(a,d);if(!b)throw new TypeError(\`Cannot read property 'slice' of \${b}\`);if(!isArray$$module$node_modules$rambda$dist$rambda_mjs(b)&&"string"!==typeof b)return[[],[]];const c=maybe$$module$node_modules$rambda$dist$rambda_mjs(0>a,0>b.length+a?0:b.length+a,a);return[take$$module$node_modules$rambda$dist$rambda_mjs(c,b),drop$$module$node_modules$rambda$dist$rambda_mjs(c,
b)]}function splitEvery$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return e=>splitEvery$$module$node_modules$rambda$dist$rambda_mjs(a,e);if(1>a)throw Error("First argument to splitEvery must be a positive integer");const c=[];let d=0;for(;d<b.length;)c.push(b.slice(d,d+=a));return c}
function splitWhen$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return g=>splitWhen$$module$node_modules$rambda$dist$rambda_mjs(a,g);if(!b)throw new TypeError(\`Cannot read property 'length' of \${b}\`);const c=[],d=[];let e=!1,f=-1;for(;f++<b.length-1;)e?d.push(b[f]):a(b[f])?(d.push(b[f]),e=!0):c.push(b[f]);return[c,d]}
function startsWith$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return d=>startsWith$$module$node_modules$rambda$dist$rambda_mjs(a,d);if("string"===typeof b)return b.startsWith(a);if(!isArray$$module$node_modules$rambda$dist$rambda_mjs(a))return!1;let c=!0;return a.filter((d,e)=>{if(!c)return!1;(d=equals$$module$node_modules$rambda$dist$rambda_mjs(d,b[e]))||(c=!1);return d}).length===a.length}
function subtract$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>subtract$$module$node_modules$rambda$dist$rambda_mjs(a,c):a-b}
function symmetricDifference$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>symmetricDifference$$module$node_modules$rambda$dist$rambda_mjs(a,c):concat$$module$node_modules$rambda$dist$rambda_mjs(filter$$module$node_modules$rambda$dist$rambda_mjs(c=>!includes$$module$node_modules$rambda$dist$rambda_mjs(c,b),a),filter$$module$node_modules$rambda$dist$rambda_mjs(c=>!includes$$module$node_modules$rambda$dist$rambda_mjs(c,a),b))}
function T$$module$node_modules$rambda$dist$rambda_mjs(){return!0}function tail$$module$node_modules$rambda$dist$rambda_mjs(a){return drop$$module$node_modules$rambda$dist$rambda_mjs(1,a)}
function takeLast$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return e=>takeLast$$module$node_modules$rambda$dist$rambda_mjs(a,e);const c=b.length;if(0>a)return b.slice();let d=a>c?c:a;return"string"===typeof b?b.slice(c-d):baseSlice$$module$node_modules$rambda$dist$rambda_mjs(b,c-d,c)}
function takeLastWhile$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return f=>takeLastWhile$$module$node_modules$rambda$dist$rambda_mjs(a,f);if(0===b.length)return b;let c=!1;const d=[];let e=b.length;for(;!c||0===e;)e--,!1===a(b[e])?c=!0:c||d.push(b[e]);return isArray$$module$node_modules$rambda$dist$rambda_mjs(b)?d.reverse():d.reverse().join("")}
function takeWhile$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return g=>takeWhile$$module$node_modules$rambda$dist$rambda_mjs(a,g);const c=isArray$$module$node_modules$rambda$dist$rambda_mjs(b);if(!c&&"string"!==typeof b)throw Error("\`iterable\` is neither list nor a string");let d=!0;const e=[];let f=-1;for(;f++<b.length-1;)a(b[f])?d&&e.push(b[f]):d&&(d=!1);return c?e:e.join("")}
function tap$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return c=>tap$$module$node_modules$rambda$dist$rambda_mjs(a,c);a(b);return b}function test$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return c=>test$$module$node_modules$rambda$dist$rambda_mjs(a,c);if("string"===typeof a)throw new TypeError(\`\\u2018test\\u2019 requires a value of type RegExp as its first argument; received "\${a}"\`);return-1!==b.search(a)}
function times$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return c=>times$$module$node_modules$rambda$dist$rambda_mjs(a,c);if(!isInteger$$module$node_modules$rambda$dist$rambda_mjs(b)||0>b)throw new RangeError("n must be an integer");return map$$module$node_modules$rambda$dist$rambda_mjs(a,range$$module$node_modules$rambda$dist$rambda_mjs(0,b))}function toLower$$module$node_modules$rambda$dist$rambda_mjs(a){return a.toLowerCase()}
function toPairs$$module$node_modules$rambda$dist$rambda_mjs(a){return Object.entries(a)}function toString$$module$node_modules$rambda$dist$rambda_mjs(a){return a.toString()}function toUpper$$module$node_modules$rambda$dist$rambda_mjs(a){return a.toUpperCase()}function transpose$$module$node_modules$rambda$dist$rambda_mjs(a){return a.reduce((b,c)=>{c.forEach((d,e)=>isArray$$module$node_modules$rambda$dist$rambda_mjs(b[e])?b[e].push(d):b.push([d]));return b},[])}
function trim$$module$node_modules$rambda$dist$rambda_mjs(a){return a.trim()}const isFunction$$module$node_modules$rambda$dist$rambda_mjs=a=>["Promise","Function"].includes(type$$module$node_modules$rambda$dist$rambda_mjs(a));
function tryCatch$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(!isFunction$$module$node_modules$rambda$dist$rambda_mjs(a))throw Error(\`R.tryCatch | fn '\${a}'\`);const c=isFunction$$module$node_modules$rambda$dist$rambda_mjs(b);return(...d)=>{try{return a(...d)}catch(e){return c?b(e,...d):b}}}function unapply$$module$node_modules$rambda$dist$rambda_mjs(a){return function(...b){return a.call(this,b)}}
function union$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return d=>union$$module$node_modules$rambda$dist$rambda_mjs(a,d);const c=cloneList$$module$node_modules$rambda$dist$rambda_mjs(a);b.forEach(d=>{includes$$module$node_modules$rambda$dist$rambda_mjs(d,a)||c.push(d)});return c}
function uniqBy$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return d=>uniqBy$$module$node_modules$rambda$dist$rambda_mjs(a,d);const c=new Set;return b.filter(d=>{if(c.has(a(d)))return!1;c.add(a(d));return!0})}function includesWith$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){let d=!1,e=-1;for(;++e<c.length&&!d;)a(b,c[e])&&(d=!0);return d}
function uniqWith$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return e=>uniqWith$$module$node_modules$rambda$dist$rambda_mjs(a,e);let c=-1;const d=[];for(;++c<b.length;){const e=b[c];includesWith$$module$node_modules$rambda$dist$rambda_mjs(a,e,d)||d.push(e)}return d}function unless$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>unless$$module$node_modules$rambda$dist$rambda_mjs(a,c):c=>a(c)?c:b(c)}
function unwind$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>unwind$$module$node_modules$rambda$dist$rambda_mjs(a,c):isArray$$module$node_modules$rambda$dist$rambda_mjs(b[a])?mapArray$$module$node_modules$rambda$dist$rambda_mjs(c=>_objectSpread2$$module$node_modules$rambda$dist$rambda_mjs(_objectSpread2$$module$node_modules$rambda$dist$rambda_mjs({},b),{},{[a]:c}),b[a]):[b]}
function values$$module$node_modules$rambda$dist$rambda_mjs(a){return"Object"!==type$$module$node_modules$rambda$dist$rambda_mjs(a)?[]:Object.values(a)}const Const$$module$node_modules$rambda$dist$rambda_mjs=a=>({x:a,map:b=>Const$$module$node_modules$rambda$dist$rambda_mjs(a)});function view$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>view$$module$node_modules$rambda$dist$rambda_mjs(a,c):a(Const$$module$node_modules$rambda$dist$rambda_mjs)(b).x}
function whenFn$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){return a(c)?b(c):c}const when$$module$node_modules$rambda$dist$rambda_mjs=curry$$module$node_modules$rambda$dist$rambda_mjs(whenFn$$module$node_modules$rambda$dist$rambda_mjs);function where$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(void 0===b)return d=>where$$module$node_modules$rambda$dist$rambda_mjs(a,d);let c=!0;for(const d in a){if(!c)continue;const e=a[d](b[d]);c&&!1===e&&(c=!1)}return c}
function whereAny$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(void 0===b)return c=>whereAny$$module$node_modules$rambda$dist$rambda_mjs(a,c);for(const c in a)if(a[c](b[c]))return!0;return!1}
function whereEq$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return d=>whereEq$$module$node_modules$rambda$dist$rambda_mjs(a,d);const c=filter$$module$node_modules$rambda$dist$rambda_mjs((d,e)=>equals$$module$node_modules$rambda$dist$rambda_mjs(d,b[e]),a);return Object.keys(c).length===Object.keys(a).length}
function without$$module$node_modules$rambda$dist$rambda_mjs(a,b){return void 0===b?c=>without$$module$node_modules$rambda$dist$rambda_mjs(a,c):reduce$$module$node_modules$rambda$dist$rambda_mjs((c,d)=>-1<_indexOf$$module$node_modules$rambda$dist$rambda_mjs(d,a)?c:c.concat(d),[],b)}function xor$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>xor$$module$node_modules$rambda$dist$rambda_mjs(a,c):!!a&&!b||!!b&&!a}
function zip$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return e=>zip$$module$node_modules$rambda$dist$rambda_mjs(a,e);const c=[],d=Math.min(a.length,b.length);for(let e=0;e<d;e++)c[e]=[a[e],b[e]];return c}function zipObj$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>zipObj$$module$node_modules$rambda$dist$rambda_mjs(a,c):take$$module$node_modules$rambda$dist$rambda_mjs(b.length,a).reduce((c,d,e)=>{c[d]=b[e];return c},{})}
function zipWithFn$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){return take$$module$node_modules$rambda$dist$rambda_mjs(b.length>c.length?c.length:b.length,b).map((d,e)=>a(d,c[e]))}const zipWith$$module$node_modules$rambda$dist$rambda_mjs=curry$$module$node_modules$rambda$dist$rambda_mjs(zipWithFn$$module$node_modules$rambda$dist$rambda_mjs);var module$node_modules$rambda$dist$rambda_mjs={};module$node_modules$rambda$dist$rambda_mjs.F=F$$module$node_modules$rambda$dist$rambda_mjs;
module$node_modules$rambda$dist$rambda_mjs.T=T$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.__findHighestArity=__findHighestArity$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs._arity=_arity$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs._indexOf=_indexOf$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs._lastIndexOf=_lastIndexOf$$module$node_modules$rambda$dist$rambda_mjs;
module$node_modules$rambda$dist$rambda_mjs._pipe=_pipe$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.add=add$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.adjust=adjust$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.all=all$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.allPass=allPass$$module$node_modules$rambda$dist$rambda_mjs;
module$node_modules$rambda$dist$rambda_mjs.always=always$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.and=and$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.any=any$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.anyPass=anyPass$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.append=append$$module$node_modules$rambda$dist$rambda_mjs;
module$node_modules$rambda$dist$rambda_mjs.apply=apply$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.applySpec=applySpec$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.assoc=assoc$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.assocPath=assocPath$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.bind=bind$$module$node_modules$rambda$dist$rambda_mjs;
module$node_modules$rambda$dist$rambda_mjs.both=both$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.chain=chain$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.clamp=clamp$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.clone=clone$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.complement=complement$$module$node_modules$rambda$dist$rambda_mjs;
module$node_modules$rambda$dist$rambda_mjs.compose=compose$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.concat=concat$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.cond=cond$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.converge=converge$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.count=count$$module$node_modules$rambda$dist$rambda_mjs;
module$node_modules$rambda$dist$rambda_mjs.countBy=countBy$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.curry=curry$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.curryN=curryN$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.dec=dec$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.defaultTo=defaultTo$$module$node_modules$rambda$dist$rambda_mjs;
module$node_modules$rambda$dist$rambda_mjs.difference=difference$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.dissoc=dissoc$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.divide=divide$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.drop=drop$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.dropLast=dropLast$$module$node_modules$rambda$dist$rambda_mjs;
module$node_modules$rambda$dist$rambda_mjs.dropLastWhile=dropLastWhile$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.dropRepeats=dropRepeats$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.dropRepeatsWith=dropRepeatsWith$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.dropWhile=dropWhile$$module$node_modules$rambda$dist$rambda_mjs;
module$node_modules$rambda$dist$rambda_mjs.either=either$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.endsWith=endsWith$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.eqProps=eqProps$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.equals=equals$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.evolve=evolve$$module$node_modules$rambda$dist$rambda_mjs;
module$node_modules$rambda$dist$rambda_mjs.evolveArray=evolveArray$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.evolveObject=evolveObject$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.filter=filter$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.filterArray=filterArray$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.filterObject=filterObject$$module$node_modules$rambda$dist$rambda_mjs;
module$node_modules$rambda$dist$rambda_mjs.find=find$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.findIndex=findIndex$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.findLast=findLast$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.findLastIndex=findLastIndex$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.flatten=flatten$$module$node_modules$rambda$dist$rambda_mjs;
module$node_modules$rambda$dist$rambda_mjs.flip=flip$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.forEach=forEach$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.fromPairs=fromPairs$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.groupBy=groupBy$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.groupWith=groupWith$$module$node_modules$rambda$dist$rambda_mjs;
module$node_modules$rambda$dist$rambda_mjs.has=has$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.hasPath=hasPath$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.head=head$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.identical=identical$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.identity=identity$$module$node_modules$rambda$dist$rambda_mjs;
module$node_modules$rambda$dist$rambda_mjs.ifElse=ifElse$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.inc=inc$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.includes=includes$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.indexBy=indexBy$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.indexOf=indexOf$$module$node_modules$rambda$dist$rambda_mjs;
module$node_modules$rambda$dist$rambda_mjs.init=init$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.intersection=intersection$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.intersperse=intersperse$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.is=is$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.isEmpty=isEmpty$$module$node_modules$rambda$dist$rambda_mjs;
module$node_modules$rambda$dist$rambda_mjs.isNil=isNil$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.join=join$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.juxt=juxt$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.keys=keys$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.last=last$$module$node_modules$rambda$dist$rambda_mjs;
module$node_modules$rambda$dist$rambda_mjs.lastIndexOf=lastIndexOf$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.length=length$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.lens=lens$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.lensIndex=lensIndex$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.lensPath=lensPath$$module$node_modules$rambda$dist$rambda_mjs;
module$node_modules$rambda$dist$rambda_mjs.lensProp=lensProp$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.map=map$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.mapArray=mapArray$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.mapObjIndexed=mapObject$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.mapObject=mapObject$$module$node_modules$rambda$dist$rambda_mjs;
module$node_modules$rambda$dist$rambda_mjs.match=match$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.mathMod=mathMod$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.max=max$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.maxBy=maxBy$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.maxByFn=maxByFn$$module$node_modules$rambda$dist$rambda_mjs;
module$node_modules$rambda$dist$rambda_mjs.mean=mean$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.median=median$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.merge=mergeRight$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.mergeAll=mergeAll$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.mergeDeepRight=mergeDeepRight$$module$node_modules$rambda$dist$rambda_mjs;
module$node_modules$rambda$dist$rambda_mjs.mergeLeft=mergeLeft$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.mergeRight=mergeRight$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.mergeWith=mergeWith$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.min=min$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.minBy=minBy$$module$node_modules$rambda$dist$rambda_mjs;
module$node_modules$rambda$dist$rambda_mjs.minByFn=minByFn$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.modify=modify$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.modifyPath=modifyPath$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.modifyPathFn=modifyPathFn$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.modulo=modulo$$module$node_modules$rambda$dist$rambda_mjs;
module$node_modules$rambda$dist$rambda_mjs.move=move$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.multiply=multiply$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.negate=negate$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.none=none$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.not=not$$module$node_modules$rambda$dist$rambda_mjs;
module$node_modules$rambda$dist$rambda_mjs.nth=nth$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.objOf=objOf$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.of=of$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.omit=omit$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.on=on$$module$node_modules$rambda$dist$rambda_mjs;
module$node_modules$rambda$dist$rambda_mjs.once=once$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.or=or$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.over=over$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.partial=partial$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.partialObject=partialObject$$module$node_modules$rambda$dist$rambda_mjs;
module$node_modules$rambda$dist$rambda_mjs.partition=partition$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.partitionArray=partitionArray$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.partitionObject=partitionObject$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.path=path$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.pathEq=pathEq$$module$node_modules$rambda$dist$rambda_mjs;
module$node_modules$rambda$dist$rambda_mjs.pathOr=pathOr$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.paths=paths$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.pick=pick$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.pickAll=pickAll$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.pipe=pipe$$module$node_modules$rambda$dist$rambda_mjs;
module$node_modules$rambda$dist$rambda_mjs.pluck=pluck$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.prepend=prepend$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.product=product$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.prop=prop$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.propEq=propEq$$module$node_modules$rambda$dist$rambda_mjs;
module$node_modules$rambda$dist$rambda_mjs.propIs=propIs$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.propOr=propOr$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.propSatisfies=propSatisfies$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.props=props$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.range=range$$module$node_modules$rambda$dist$rambda_mjs;
module$node_modules$rambda$dist$rambda_mjs.reduce=reduce$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.reduceFn=reduceFn$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.reduceStopper=reduceStopper$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.reject=reject$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.repeat=repeat$$module$node_modules$rambda$dist$rambda_mjs;
module$node_modules$rambda$dist$rambda_mjs.replace=replace$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.reverse=reverse$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.set=set$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.slice=slice$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.sort=sort$$module$node_modules$rambda$dist$rambda_mjs;
module$node_modules$rambda$dist$rambda_mjs.sortBy=sortBy$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.split=split$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.splitAt=splitAt$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.splitEvery=splitEvery$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.splitWhen=splitWhen$$module$node_modules$rambda$dist$rambda_mjs;
module$node_modules$rambda$dist$rambda_mjs.startsWith=startsWith$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.subtract=subtract$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.sum=sum$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.symmetricDifference=symmetricDifference$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.tail=tail$$module$node_modules$rambda$dist$rambda_mjs;
module$node_modules$rambda$dist$rambda_mjs.take=take$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.takeLast=takeLast$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.takeLastWhile=takeLastWhile$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.takeWhile=takeWhile$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.tap=tap$$module$node_modules$rambda$dist$rambda_mjs;
module$node_modules$rambda$dist$rambda_mjs.test=test$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.times=times$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.toLower=toLower$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.toPairs=toPairs$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.toString=toString$$module$node_modules$rambda$dist$rambda_mjs;
module$node_modules$rambda$dist$rambda_mjs.toUpper=toUpper$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.transpose=transpose$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.trim=trim$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.tryCatch=tryCatch$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.type=type$$module$node_modules$rambda$dist$rambda_mjs;
module$node_modules$rambda$dist$rambda_mjs.unapply=unapply$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.union=union$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.uniq=uniq$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.uniqBy=uniqBy$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.uniqWith=uniqWith$$module$node_modules$rambda$dist$rambda_mjs;
module$node_modules$rambda$dist$rambda_mjs.unless=unless$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.unwind=unwind$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.update=update$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.updateFn=updateFn$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.values=values$$module$node_modules$rambda$dist$rambda_mjs;
module$node_modules$rambda$dist$rambda_mjs.view=view$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.when=when$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.where=where$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.whereAny=whereAny$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.whereEq=whereEq$$module$node_modules$rambda$dist$rambda_mjs;
module$node_modules$rambda$dist$rambda_mjs.without=without$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.xor=xor$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.zip=zip$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.zipObj=zipObj$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.zipWith=zipWith$$module$node_modules$rambda$dist$rambda_mjs;const csoundSetMidiCallbacks$$module$src$modules$rtmidi=a=>b=>{a.exports.csoundSetMidiCallbacks(b)},csoundGetMIDIDevList$$module$src$modules$rtmidi=a=>(b,c)=>{const {buffer:d}=a.wasi.memory,e=a.exports.csoundGetMIDIDevList(b,void 0,c?1:0);if(0===e)return[];const f=sizeofStruct$$module$src$utils$native_sizes(CS_MIDIDEVICE$$module$src$structures),g=a.exports.allocCsMidiDeviceStruct(e);a.exports.csoundGetMIDIDevList(b,g,c?1:0);const h=new Uint8Array(d,g,f*e);b=range$$module$node_modules$rambda$dist$rambda_mjs(0,
e).map(k=>structBufferToObject$$module$src$utils$structure_buffer_to_object(CS_MIDIDEVICE$$module$src$structures,h.subarray(k*f,f)));a.exports.freeCsMidiDeviceStruct(g);return b};csoundGetMIDIDevList$$module$src$modules$rtmidi.toString=()=>"getMIDIDevList = async (isOutput) => Object;";
const csoundGetRtMidiName$$module$src$modules$rtmidi=a=>b=>{var {buffer:c}=a.wasi.memory;b=a.exports.getRtMidiName(b);c=new Uint8Array(c,b,128);return trimNull$$module$src$utils$trim_null(uint2String$$module$src$utils$text_encoders(c))||""};csoundGetRtMidiName$$module$src$modules$rtmidi.toString=()=>"getRtMidiName = async () => String;";
const csoundGetMidiOutFileName$$module$src$modules$rtmidi=a=>b=>{var {buffer:c}=a.wasi.memory;b=a.exports.getMidiOutFileName(b);c=new Uint8Array(c,b,128);b&&0<b.length&&freeStringPtr$$module$src$utils$string_pointers(a,b);return trimNull$$module$src$utils$trim_null(uint2String$$module$src$utils$text_encoders(c))||""},_isRequestingRtMidiInput$$module$src$modules$rtmidi=a=>b=>a.exports.isRequestingRtMidiInput(b),csoundPushMidiMessage$$module$src$modules$rtmidi=a=>(b,c,d,e)=>{a.exports.pushMidiMessage(b,
c,d,e)};csoundPushMidiMessage$$module$src$modules$rtmidi.toString=()=>"midiMessage = async (status, data1, data2) => undefined;";var module$src$modules$rtmidi={};module$src$modules$rtmidi._isRequestingRtMidiInput=_isRequestingRtMidiInput$$module$src$modules$rtmidi;module$src$modules$rtmidi.csoundGetMIDIDevList=csoundGetMIDIDevList$$module$src$modules$rtmidi;module$src$modules$rtmidi.csoundGetMidiOutFileName=csoundGetMidiOutFileName$$module$src$modules$rtmidi;
module$src$modules$rtmidi.csoundGetRtMidiName=csoundGetRtMidiName$$module$src$modules$rtmidi;module$src$modules$rtmidi.csoundPushMidiMessage=csoundPushMidiMessage$$module$src$modules$rtmidi;module$src$modules$rtmidi.csoundSetMidiCallbacks=csoundSetMidiCallbacks$$module$src$modules$rtmidi;const csoundInputMessage$$module$src$modules$control_events=a=>(b,c)=>{c=string2ptr$$module$src$utils$string_pointers(a,c);b=a.exports.csoundInputMessage(b,c);freeStringPtr$$module$src$utils$string_pointers(a,c);return b};csoundInputMessage$$module$src$modules$control_events.toString=()=>"inputMessage = async (scoreEvent) => Number;";
const csoundInputMessageAsync$$module$src$modules$control_events=a=>(b,c)=>{c=string2ptr$$module$src$utils$string_pointers(a,c);b=a.exports.csoundInputMessageAsync(b,c);freeStringPtr$$module$src$utils$string_pointers(a,c);return b};csoundInputMessageAsync$$module$src$modules$control_events.toString=()=>"inputMessageAsync = async (scoreEvent) => Number;";
const csoundGetControlChannel$$module$src$modules$control_events=a=>(b,c)=>{c=string2ptr$$module$src$utils$string_pointers(a,c);b=a.exports.csoundGetControlChannelWasi(b,c);freeStringPtr$$module$src$utils$string_pointers(a,c);return b};csoundGetControlChannel$$module$src$modules$control_events.toString=()=>"getControlChannel = async (channelName) => Number;";
const csoundSetControlChannel$$module$src$modules$control_events=a=>(b,c,d)=>{c=string2ptr$$module$src$utils$string_pointers(a,c);a.exports.csoundSetControlChannel(b,c,d);freeStringPtr$$module$src$utils$string_pointers(a,c)};csoundSetControlChannel$$module$src$modules$control_events.toString=()=>"setControlChannel = async (channelName, value) => void;";
const csoundGetStringChannel$$module$src$modules$control_events=a=>(b,c)=>{c=string2ptr$$module$src$utils$string_pointers(a,c);b=a.exports.csoundGetStringChannelWasi(b,c);const d=ptr2string$$module$src$utils$string_pointers(a,b);freeStringPtr$$module$src$utils$string_pointers(a,c);freeStringPtr$$module$src$utils$string_pointers(a,b);return d};csoundGetStringChannel$$module$src$modules$control_events.toString=()=>"getStringChannel = async (channelName) => String;";
const csoundSetStringChannel$$module$src$modules$control_events=a=>(b,c,d)=>{c=string2ptr$$module$src$utils$string_pointers(a,c);d=string2ptr$$module$src$utils$string_pointers(a,d);a.exports.csoundSetStringChannel(b,c,d);freeStringPtr$$module$src$utils$string_pointers(a,c);freeStringPtr$$module$src$utils$string_pointers(a,d)};csoundSetStringChannel$$module$src$modules$control_events.toString=()=>"setStringChannel = async (channelName, value) => void;";var module$src$modules$control_events={};
module$src$modules$control_events.csoundGetControlChannel=csoundGetControlChannel$$module$src$modules$control_events;module$src$modules$control_events.csoundGetStringChannel=csoundGetStringChannel$$module$src$modules$control_events;module$src$modules$control_events.csoundInputMessage=csoundInputMessage$$module$src$modules$control_events;module$src$modules$control_events.csoundInputMessageAsync=csoundInputMessageAsync$$module$src$modules$control_events;
module$src$modules$control_events.csoundSetControlChannel=csoundSetControlChannel$$module$src$modules$control_events;module$src$modules$control_events.csoundSetStringChannel=csoundSetStringChannel$$module$src$modules$control_events;const csoundGetOutputName$$module$src$modules$general_io=a=>b=>{var {buffer:c}=a.wasi.memory;b=a.exports.csoundGetOutputName(b);c=new Uint8Array(c,b,64);return trimNull$$module$src$utils$trim_null(uint2String$$module$src$utils$text_encoders(c))||""};csoundGetOutputName$$module$src$modules$general_io.toString=()=>"getOutputName = async () => String;";
const csoundGetInputName$$module$src$modules$general_io=a=>b=>{var {buffer:c}=a.wasi.memory;b=a.exports.csoundGetInputName(b);c=new Uint8Array(c,b,64);return trimNull$$module$src$utils$trim_null(uint2String$$module$src$utils$text_encoders(c))||""};csoundGetInputName$$module$src$modules$general_io.toString=()=>"getInputName = async (csound) => String;";var module$src$modules$general_io={};module$src$modules$general_io.csoundGetInputName=csoundGetInputName$$module$src$modules$general_io;
module$src$modules$general_io.csoundGetOutputName=csoundGetOutputName$$module$src$modules$general_io;const csoundAppendEnv$$module$src$modules$extra=a=>(b,c,d)=>{c=string2ptr$$module$src$utils$string_pointers(a,c);d=string2ptr$$module$src$utils$string_pointers(a,d);b=a.exports.csoundAppendEnv(b,c,d);freeStringPtr$$module$src$utils$string_pointers(a,c);freeStringPtr$$module$src$utils$string_pointers(a,d);return b};csoundAppendEnv$$module$src$modules$extra.toString=()=>"appendEnv = async (csound, variable, value) => Number;";const csoundShouldDaemonize$$module$src$modules$extra=a=>b=>a.exports.csoundShouldDaemonize(b);
var module$src$modules$extra={};module$src$modules$extra.csoundAppendEnv=csoundAppendEnv$$module$src$modules$extra;module$src$modules$extra.csoundShouldDaemonize=csoundShouldDaemonize$$module$src$modules$extra;const csoundIsScorePending$$module$src$modules$score_handling=a=>b=>a.exports.csoundIsScorePending(b);csoundIsScorePending$$module$src$modules$score_handling.toString=()=>"isScorePending = async () => Number;";const csoundSetScorePending$$module$src$modules$score_handling=a=>(b,c)=>a.exports.csoundSetScorePending(b,c);csoundSetScorePending$$module$src$modules$score_handling.toString=()=>"setScorePending = async (pending) => Number;";
const csoundReadScore$$module$src$modules$score_handling=a=>(b,c)=>{c=string2ptr$$module$src$utils$string_pointers(a,c);b=a.exports.csoundReadScore(b,c);freeStringPtr$$module$src$utils$string_pointers(a,c);return b};csoundReadScore$$module$src$modules$score_handling.toString=()=>"readScore = async (score) => Number;";const csoundGetScoreTime$$module$src$modules$score_handling=a=>b=>a.exports.csoundGetScoreTime(b);csoundGetScoreTime$$module$src$modules$score_handling.toString=()=>"getScoreTime = async () => Number;";
const csoundGetScoreOffsetSeconds$$module$src$modules$score_handling=a=>b=>a.exports.csoundGetScoreOffsetSeconds(b);csoundGetScoreOffsetSeconds$$module$src$modules$score_handling.toString=()=>"getScoreOffsetSeconds = async () => Number;";const csoundSetScoreOffsetSeconds$$module$src$modules$score_handling=a=>(b,c)=>a.exports.csoundSetScoreOffsetSeconds(b,c);csoundSetScoreOffsetSeconds$$module$src$modules$score_handling.toString=()=>"setScoreOffsetSeconds = async () => Number;";
const csoundRewindScore$$module$src$modules$score_handling=a=>b=>a.exports.csoundRewindScore(b);csoundRewindScore$$module$src$modules$score_handling.toString=()=>"rewindScore = async () => undefined;";var module$src$modules$score_handling={};module$src$modules$score_handling.csoundGetScoreOffsetSeconds=csoundGetScoreOffsetSeconds$$module$src$modules$score_handling;module$src$modules$score_handling.csoundGetScoreTime=csoundGetScoreTime$$module$src$modules$score_handling;
module$src$modules$score_handling.csoundIsScorePending=csoundIsScorePending$$module$src$modules$score_handling;module$src$modules$score_handling.csoundReadScore=csoundReadScore$$module$src$modules$score_handling;module$src$modules$score_handling.csoundRewindScore=csoundRewindScore$$module$src$modules$score_handling;module$src$modules$score_handling.csoundSetScoreOffsetSeconds=csoundSetScoreOffsetSeconds$$module$src$modules$score_handling;module$src$modules$score_handling.csoundSetScorePending=csoundSetScorePending$$module$src$modules$score_handling;const csoundTableLength$$module$src$modules$table=a=>(b,c)=>a.exports.csoundTableLength(b,c);csoundTableLength$$module$src$modules$table.toString=()=>"tableLength = async (tableNum) => Number;";const csoundTableGet$$module$src$modules$table=a=>(b,c,d)=>a.exports.csoundTableGet(b,c,d);csoundTableGet$$module$src$modules$table.toString=()=>"tableGet = async (tableNum, tableIndex) => Number;";const csoundTableSet$$module$src$modules$table=a=>(b,c,d,e)=>a.exports.csoundTableSet(b,c,d,e);
csoundTableSet$$module$src$modules$table.toString=()=>"tableSet = async (tableNum, tableIndex, value) => undefined;";const csoundTableCopyIn$$module$src$modules$table=a=>(b,c,d)=>{const e=a.exports.allocFloatArray(d.length);(new Float64Array(a.wasi.memory.buffer,e,d.length)).set(d);a.exports.csoundTableCopyIn(b,c,e);a.exports.freeFloatArrayMem(e)};csoundTableCopyIn$$module$src$modules$table.toString=()=>"tableCopyIn = async (tableNum, float64Array) => undefined;";
const csoundTableCopyOut$$module$src$modules$table=a=>(b,c)=>{var d=a.exports.csoundTableLength(b,c);if(0<d){const e=a.exports.allocFloatArray(d);a.exports.csoundTableCopyOut(b,c,e);({buffer:b}=a.wasi.memory);d=new Float64Array(b,e,d);a.exports.freeFloatArrayMem(e);return Float64Array.from(d)}};csoundTableCopyOut$$module$src$modules$table.toString=()=>"tableCopyOut = async (tableNum) => ?Float64Array;";const csoundGetTable$$module$src$modules$table=csoundTableCopyOut$$module$src$modules$table;
csoundTableCopyOut$$module$src$modules$table.toString=csoundTableCopyOut$$module$src$modules$table.toString;const csoundGetTableArgs$$module$src$modules$table=a=>(b,c)=>{const d=a.exports.allocFloatArray(1024);a.exports.csoundGetTableArgs(b,d,c);({buffer:b}=a.wasi.memory);b=new Float64Array(b,d,1024);a.exports.freeFloatArrayMem(d);return b};csoundGetTableArgs$$module$src$modules$table.toString=()=>"getTableArgs = async (tableNum) => ?Float64Array;";
const csoundIsNamedGEN$$module$src$modules$table=a=>(b,c)=>a.exports.csoundIsNamedGEN(b,c);csoundIsNamedGEN$$module$src$modules$table.toString=()=>"isNamedGEN = async (tableNum) => number;";const csoundGetNamedGEN$$module$src$modules$table=a=>(b,c)=>{var d=a.exports.csoundIsNamedGEN(b,c);if(0<d){const e=a.exports.allocStringMem(d);a.exports.csoundGetNamedGEN(b,e,c,d);({buffer:b}=a.wasi.memory);d=new Uint8Array(b,e,d);return uint2String$$module$src$utils$text_encoders(d)}};
csoundGetNamedGEN$$module$src$modules$table.toString=()=>"getNamedGEN = async (tableNum) => ?string;";var module$src$modules$table={};module$src$modules$table.csoundGetNamedGEN=csoundGetNamedGEN$$module$src$modules$table;module$src$modules$table.csoundGetTable=csoundTableCopyOut$$module$src$modules$table;module$src$modules$table.csoundGetTableArgs=csoundGetTableArgs$$module$src$modules$table;module$src$modules$table.csoundIsNamedGEN=csoundIsNamedGEN$$module$src$modules$table;
module$src$modules$table.csoundTableCopyIn=csoundTableCopyIn$$module$src$modules$table;module$src$modules$table.csoundTableCopyOut=csoundTableCopyOut$$module$src$modules$table;module$src$modules$table.csoundTableGet=csoundTableGet$$module$src$modules$table;module$src$modules$table.csoundTableLength=csoundTableLength$$module$src$modules$table;module$src$modules$table.csoundTableSet=csoundTableSet$$module$src$modules$table;function writeFile$$module$src$filesystem$worker_fs(a){return(b,c,d)=>{b="string"===typeof d?encoder$$module$src$utils$text_encoders.encode(d):d;a.wasi.writeFile(c,b)}}writeFile$$module$src$filesystem$worker_fs.toString=()=>"async (path, data) => void";function appendFile$$module$src$filesystem$worker_fs(a){return(b,c,d)=>{b="string"===typeof d?encoder$$module$src$utils$text_encoders.encode(d):d;a.wasi.appendFile(c,b)}}appendFile$$module$src$filesystem$worker_fs.toString=()=>"async (path, data) => void";
function readFile$$module$src$filesystem$worker_fs(a){return(b,c)=>a.wasi.readFile(c)}readFile$$module$src$filesystem$worker_fs.toString=()=>"async (path) => ?Uint8Array";function unlink$$module$src$filesystem$worker_fs(a){return(b,c)=>a.wasi.unlink(c)}unlink$$module$src$filesystem$worker_fs.toString=()=>"async (path) => void";function readdir$$module$src$filesystem$worker_fs(a){return(b,c)=>a.wasi.readdir(c)}readdir$$module$src$filesystem$worker_fs.toString=()=>"async (path) => string[]";
function mkdir$$module$src$filesystem$worker_fs(a){return(b,c)=>a.wasi.mkdir(c)}mkdir$$module$src$filesystem$worker_fs.toString=()=>"async (path) => void";var module$src$filesystem$worker_fs={};module$src$filesystem$worker_fs.appendFile=appendFile$$module$src$filesystem$worker_fs;module$src$filesystem$worker_fs.mkdir=mkdir$$module$src$filesystem$worker_fs;module$src$filesystem$worker_fs.readFile=readFile$$module$src$filesystem$worker_fs;module$src$filesystem$worker_fs.readdir=readdir$$module$src$filesystem$worker_fs;
module$src$filesystem$worker_fs.unlink=unlink$$module$src$filesystem$worker_fs;module$src$filesystem$worker_fs.writeFile=writeFile$$module$src$filesystem$worker_fs;const api$$module$src$libcsound={csoundCreate:csoundCreate$$module$src$modules$instantiation,csoundDestroy:csoundDestroy$$module$src$modules$instantiation,csoundGetAPIVersion:csoundGetAPIVersion$$module$src$modules$instantiation,csoundGetVersion:csoundGetVersion$$module$src$modules$instantiation,csoundInitialize:csoundInitialize$$module$src$modules$instantiation,csoundParseOrc:csoundParseOrc$$module$src$modules$performance,csoundCompileTree:csoundCompileTree$$module$src$modules$performance,csoundCompileOrc:csoundCompileOrc$$module$src$modules$performance,
csoundEvalCode:csoundEvalCode$$module$src$modules$performance,csoundStart:csoundStart$$module$src$modules$performance,csoundCompileCsd:csoundCompileCsd$$module$src$modules$performance,csoundCompileCsdText:csoundCompileCsdText$$module$src$modules$performance,csoundPerform:csoundPerform$$module$src$modules$performance,csoundPerformKsmps:csoundPerformKsmps$$module$src$modules$performance,csoundPerformBuffer:csoundPerformBuffer$$module$src$modules$performance,csoundStop:csoundStop$$module$src$modules$performance,
csoundCleanup:csoundCleanup$$module$src$modules$performance,csoundReset:csoundReset$$module$src$modules$performance,csoundGetSr:csoundGetSr$$module$src$modules$attributes,csoundGetKr:csoundGetKr$$module$src$modules$attributes,csoundGetKsmps:csoundGetKsmps$$module$src$modules$attributes,csoundGetNchnls:csoundGetNchnls$$module$src$modules$attributes,csoundGetNchnlsInput:csoundGetNchnlsInput$$module$src$modules$attributes,csoundGet0dBFS:csoundGet0dBFS$$module$src$modules$attributes,csoundGetA4:csoundGetA4$$module$src$modules$attributes,
csoundGetCurrentTimeSamples:csoundGetCurrentTimeSamples$$module$src$modules$attributes,csoundGetSizeOfMYFLT:csoundGetSizeOfMYFLT$$module$src$modules$attributes,csoundSetOption:csoundSetOption$$module$src$modules$attributes,csoundSetParams:csoundSetParams$$module$src$modules$attributes,csoundGetParams:csoundGetParams$$module$src$modules$attributes,csoundGetDebug:csoundGetDebug$$module$src$modules$attributes,csoundSetDebug:csoundSetDebug$$module$src$modules$attributes,csoundGetInputBufferSize:csoundGetInputBufferSize$$module$src$modules$rtaudio,
csoundGetOutputBufferSize:csoundGetOutputBufferSize$$module$src$modules$rtaudio,csoundGetInputBuffer:csoundGetInputBuffer$$module$src$modules$rtaudio,csoundGetOutputBuffer:csoundGetOutputBuffer$$module$src$modules$rtaudio,csoundGetSpin:csoundGetSpin$$module$src$modules$rtaudio,csoundGetSpout:csoundGetSpout$$module$src$modules$rtaudio,csoundGetMIDIDevList:csoundGetMIDIDevList$$module$src$modules$rtmidi,csoundSetMidiCallbacks:csoundSetMidiCallbacks$$module$src$modules$rtmidi,csoundGetRtMidiName:csoundGetRtMidiName$$module$src$modules$rtmidi,
csoundGetMidiOutFileName:csoundGetMidiOutFileName$$module$src$modules$rtmidi,csoundPushMidiMessage:csoundPushMidiMessage$$module$src$modules$rtmidi,_isRequestingRtMidiInput:_isRequestingRtMidiInput$$module$src$modules$rtmidi,csoundInputMessage:csoundInputMessage$$module$src$modules$control_events,csoundInputMessageAsync:csoundInputMessageAsync$$module$src$modules$control_events,csoundGetControlChannel:csoundGetControlChannel$$module$src$modules$control_events,csoundSetControlChannel:csoundSetControlChannel$$module$src$modules$control_events,
csoundGetStringChannel:csoundGetStringChannel$$module$src$modules$control_events,csoundSetStringChannel:csoundSetStringChannel$$module$src$modules$control_events,csoundGetInputName:csoundGetInputName$$module$src$modules$general_io,csoundGetOutputName:csoundGetOutputName$$module$src$modules$general_io,csoundAppendEnv:csoundAppendEnv$$module$src$modules$extra,csoundShouldDaemonize:csoundShouldDaemonize$$module$src$modules$extra,csoundIsScorePending:csoundIsScorePending$$module$src$modules$score_handling,
csoundSetScorePending:csoundSetScorePending$$module$src$modules$score_handling,csoundReadScore:csoundReadScore$$module$src$modules$score_handling,csoundGetScoreTime:csoundGetScoreTime$$module$src$modules$score_handling,csoundGetScoreOffsetSeconds:csoundGetScoreOffsetSeconds$$module$src$modules$score_handling,csoundSetScoreOffsetSeconds:csoundSetScoreOffsetSeconds$$module$src$modules$score_handling,csoundRewindScore:csoundRewindScore$$module$src$modules$score_handling,csoundTableLength:csoundTableLength$$module$src$modules$table,
csoundTableGet:csoundTableGet$$module$src$modules$table,csoundTableSet:csoundTableSet$$module$src$modules$table,csoundTableCopyIn:csoundTableCopyIn$$module$src$modules$table,csoundTableCopyOut:csoundTableCopyOut$$module$src$modules$table,csoundGetTable:csoundTableCopyOut$$module$src$modules$table,csoundGetTableArgs:csoundGetTableArgs$$module$src$modules$table,csoundIsNamedGEN:csoundIsNamedGEN$$module$src$modules$table,csoundGetNamedGEN:csoundGetNamedGEN$$module$src$modules$table,fs:module$src$filesystem$worker_fs};
var $jscompDefaultExport$$module$src$libcsound=function(a){return mergeAll$$module$node_modules$rambda$dist$rambda_mjs([reduce$$module$node_modules$rambda$dist$rambda_mjs((b,c)=>assoc$$module$node_modules$rambda$dist$rambda_mjs(c,api$$module$src$libcsound[c](a),b),{},keys$$module$node_modules$rambda$dist$rambda_mjs(dissoc$$module$node_modules$rambda$dist$rambda_mjs("fs")(api$$module$src$libcsound))),reduce$$module$node_modules$rambda$dist$rambda_mjs((b,c)=>assoc$$module$node_modules$rambda$dist$rambda_mjs(c,
api$$module$src$libcsound.fs[c](a),b),{},keys$$module$node_modules$rambda$dist$rambda_mjs(module$src$filesystem$worker_fs))])},module$src$libcsound={};module$src$libcsound.api=api$$module$src$libcsound;module$src$libcsound.default=$jscompDefaultExport$$module$src$libcsound;const dlinit$$module$src$dlinit=(a,b,c,d)=>{if(b.exports.csoundModuleInit){var e=new WebAssembly.Global({value:"i32",mutable:!0},0),f=new WebAssembly.Global({value:"i32",mutable:!0},0),g=new WebAssembly.Global({value:"i32",mutable:!0},0);const h=new WebAssembly.Global({value:"i32",mutable:!0},0);let k=c.length;"function"===typeof b.exports.csoundModuleCreate&&(c.grow(1),e.value=k,c.set(k,b.exports.csoundModuleCreate),k+=1);"function"===typeof b.exports.csoundModuleInit&&(c.grow(1),f.value=k,c.set(k,
b.exports.csoundModuleInit),k+=1);"function"===typeof b.exports.csoundModuleDestroy&&(c.grow(1),g.value=k,c.set(k,b.exports.csoundModuleDestroy),k+=1);"function"===typeof b.exports.csoundModuleErrorCodeToString&&(c.grow(1),h.value=k,c.set(k,b.exports.csoundModuleErrorCodeToString));a.exports.csoundWasiLoadPlugin(d,e,f,g,h)}else b.exports.csound_opcode_init||b.exports.csound_fgen_init?(e=new WebAssembly.Global({value:"i32",mutable:!0},0),f=new WebAssembly.Global({value:"i32",mutable:!0},0),g=c.length,
"function"===typeof b.exports.csound_opcode_init&&(e.value=g,c.grow(1),c.set(g,b.exports.csound_opcode_init),g+=1),"function"===typeof b.exports.csound_fgen_init&&(f.value=g,c.grow(1),c.set(g,b.exports.csound_fgen_init)),a.exports.csoundWasiLoadOpcodeLibrary(d,f,e)):console.error("Plugin doesn't export nececcary functions to quality as csound plugin.")};var module$src$dlinit={};module$src$dlinit.dlinit=dlinit$$module$src$dlinit;void 0!==goog.global&&(goog.global={});goog.global.BigInt||(goog.global.BigInt=void 0===BigInt?Number:BigInt);
const WASI_ESUCCESS$$module$src$filesystem$constants=0,WASI_E2BIG$$module$src$filesystem$constants=1,WASI_EACCES$$module$src$filesystem$constants=2,WASI_EADDRINUSE$$module$src$filesystem$constants=3,WASI_EADDRNOTAVAIL$$module$src$filesystem$constants=4,WASI_EAFNOSUPPORT$$module$src$filesystem$constants=5,WASI_EAGAIN$$module$src$filesystem$constants=6,WASI_EALREADY$$module$src$filesystem$constants=7,WASI_EBADF$$module$src$filesystem$constants=8,WASI_EBADMSG$$module$src$filesystem$constants=9,WASI_EBUSY$$module$src$filesystem$constants=
10,WASI_ECANCELED$$module$src$filesystem$constants=11,WASI_ECHILD$$module$src$filesystem$constants=12,WASI_ECONNABORTED$$module$src$filesystem$constants=13,WASI_ECONNREFUSED$$module$src$filesystem$constants=14,WASI_ECONNRESET$$module$src$filesystem$constants=15,WASI_EDEADLK$$module$src$filesystem$constants=16,WASI_EDESTADDRREQ$$module$src$filesystem$constants=17,WASI_EDOM$$module$src$filesystem$constants=18,WASI_EDQUOT$$module$src$filesystem$constants=19,WASI_EEXIST$$module$src$filesystem$constants=
20,WASI_EFAULT$$module$src$filesystem$constants=21,WASI_EFBIG$$module$src$filesystem$constants=22,WASI_EHOSTUNREACH$$module$src$filesystem$constants=23,WASI_EIDRM$$module$src$filesystem$constants=24,WASI_EILSEQ$$module$src$filesystem$constants=25,WASI_EINPROGRESS$$module$src$filesystem$constants=26,WASI_EINTR$$module$src$filesystem$constants=27,WASI_EINVAL$$module$src$filesystem$constants=28,WASI_EIO$$module$src$filesystem$constants=29,WASI_EISCONN$$module$src$filesystem$constants=30,WASI_EISDIR$$module$src$filesystem$constants=
31,WASI_ELOOP$$module$src$filesystem$constants=32,WASI_EMFILE$$module$src$filesystem$constants=33,WASI_EMLINK$$module$src$filesystem$constants=34,WASI_EMSGSIZE$$module$src$filesystem$constants=35,WASI_EMULTIHOP$$module$src$filesystem$constants=36,WASI_ENAMETOOLONG$$module$src$filesystem$constants=37,WASI_ENETDOWN$$module$src$filesystem$constants=38,WASI_ENETRESET$$module$src$filesystem$constants=39,WASI_ENETUNREACH$$module$src$filesystem$constants=40,WASI_ENFILE$$module$src$filesystem$constants=41,
WASI_ENOBUFS$$module$src$filesystem$constants=42,WASI_ENODEV$$module$src$filesystem$constants=43,WASI_ENOENT$$module$src$filesystem$constants=44,WASI_ENOEXEC$$module$src$filesystem$constants=45,WASI_ENOLCK$$module$src$filesystem$constants=46,WASI_ENOLINK$$module$src$filesystem$constants=47,WASI_ENOMEM$$module$src$filesystem$constants=48,WASI_ENOMSG$$module$src$filesystem$constants=49,WASI_ENOPROTOOPT$$module$src$filesystem$constants=50,WASI_ENOSPC$$module$src$filesystem$constants=51,WASI_ENOSYS$$module$src$filesystem$constants=
52,WASI_ENOTCONN$$module$src$filesystem$constants=53,WASI_ENOTDIR$$module$src$filesystem$constants=54,WASI_ENOTEMPTY$$module$src$filesystem$constants=55,WASI_ENOTRECOVERABLE$$module$src$filesystem$constants=56,WASI_ENOTSOCK$$module$src$filesystem$constants=57,WASI_ENOTSUP$$module$src$filesystem$constants=58,WASI_ENOTTY$$module$src$filesystem$constants=59,WASI_ENXIO$$module$src$filesystem$constants=60,WASI_EOVERFLOW$$module$src$filesystem$constants=61,WASI_EOWNERDEAD$$module$src$filesystem$constants=
62,WASI_EPERM$$module$src$filesystem$constants=63,WASI_EPIPE$$module$src$filesystem$constants=64,WASI_EPROTO$$module$src$filesystem$constants=65,WASI_EPROTONOSUPPORT$$module$src$filesystem$constants=66,WASI_EPROTOTYPE$$module$src$filesystem$constants=67,WASI_ERANGE$$module$src$filesystem$constants=68,WASI_EROFS$$module$src$filesystem$constants=69,WASI_ESPIPE$$module$src$filesystem$constants=70,WASI_ESRCH$$module$src$filesystem$constants=71,WASI_ESTALE$$module$src$filesystem$constants=72,WASI_ETIMEDOUT$$module$src$filesystem$constants=
73,WASI_ETXTBSY$$module$src$filesystem$constants=74,WASI_EXDEV$$module$src$filesystem$constants=75,WASI_ENOTCAPABLE$$module$src$filesystem$constants=76,WASI_SIGABRT$$module$src$filesystem$constants=0,WASI_SIGALRM$$module$src$filesystem$constants=1,WASI_SIGBUS$$module$src$filesystem$constants=2,WASI_SIGCHLD$$module$src$filesystem$constants=3,WASI_SIGCONT$$module$src$filesystem$constants=4,WASI_SIGFPE$$module$src$filesystem$constants=5,WASI_SIGHUP$$module$src$filesystem$constants=6,WASI_SIGILL$$module$src$filesystem$constants=
7,WASI_SIGINT$$module$src$filesystem$constants=8,WASI_SIGKILL$$module$src$filesystem$constants=9,WASI_SIGPIPE$$module$src$filesystem$constants=10,WASI_SIGQUIT$$module$src$filesystem$constants=11,WASI_SIGSEGV$$module$src$filesystem$constants=12,WASI_SIGSTOP$$module$src$filesystem$constants=13,WASI_SIGTERM$$module$src$filesystem$constants=14,WASI_SIGTRAP$$module$src$filesystem$constants=15,WASI_SIGTSTP$$module$src$filesystem$constants=16,WASI_SIGTTIN$$module$src$filesystem$constants=17,WASI_SIGTTOU$$module$src$filesystem$constants=
18,WASI_SIGURG$$module$src$filesystem$constants=19,WASI_SIGUSR1$$module$src$filesystem$constants=20,WASI_SIGUSR2$$module$src$filesystem$constants=21,WASI_SIGVTALRM$$module$src$filesystem$constants=22,WASI_SIGXCPU$$module$src$filesystem$constants=23,WASI_SIGXFSZ$$module$src$filesystem$constants=24,WASI_FILETYPE_UNKNOWN$$module$src$filesystem$constants=0,WASI_FILETYPE_BLOCK_DEVICE$$module$src$filesystem$constants=1,WASI_FILETYPE_CHARACTER_DEVICE$$module$src$filesystem$constants=2,WASI_FILETYPE_DIRECTORY$$module$src$filesystem$constants=
3,WASI_FILETYPE_REGULAR_FILE$$module$src$filesystem$constants=4,WASI_FILETYPE_SOCKET_DGRAM$$module$src$filesystem$constants=5,WASI_FILETYPE_SOCKET_STREAM$$module$src$filesystem$constants=6,WASI_FILETYPE_SYMBOLIC_LINK$$module$src$filesystem$constants=7,WASI_FDFLAG_APPEND$$module$src$filesystem$constants=1,WASI_FDFLAG_DSYNC$$module$src$filesystem$constants=2,WASI_FDFLAG_NONBLOCK$$module$src$filesystem$constants=4,WASI_FDFLAG_RSYNC$$module$src$filesystem$constants=8,WASI_FDFLAG_SYNC$$module$src$filesystem$constants=
16,WASI_RIGHT_FD_DATASYNC$$module$src$filesystem$constants=goog.global.BigInt(1),WASI_RIGHT_FD_READ$$module$src$filesystem$constants=goog.global.BigInt(2),WASI_RIGHT_FD_SEEK$$module$src$filesystem$constants=goog.global.BigInt(4),WASI_RIGHT_FD_FDSTAT_SET_FLAGS$$module$src$filesystem$constants=goog.global.BigInt(8),WASI_RIGHT_FD_SYNC$$module$src$filesystem$constants=goog.global.BigInt(16),WASI_RIGHT_FD_TELL$$module$src$filesystem$constants=goog.global.BigInt(32),WASI_RIGHT_FD_WRITE$$module$src$filesystem$constants=
goog.global.BigInt(64),WASI_RIGHT_FD_ADVISE$$module$src$filesystem$constants=goog.global.BigInt(128),WASI_RIGHT_FD_ALLOCATE$$module$src$filesystem$constants=goog.global.BigInt(256),WASI_RIGHT_PATH_CREATE_DIRECTORY$$module$src$filesystem$constants=goog.global.BigInt(512),WASI_RIGHT_PATH_CREATE_FILE$$module$src$filesystem$constants=goog.global.BigInt(1024),WASI_RIGHT_PATH_LINK_SOURCE$$module$src$filesystem$constants=goog.global.BigInt(2048),WASI_RIGHT_PATH_LINK_TARGET$$module$src$filesystem$constants=
goog.global.BigInt(4096),WASI_RIGHT_PATH_OPEN$$module$src$filesystem$constants=goog.global.BigInt(8192),WASI_RIGHT_FD_READDIR$$module$src$filesystem$constants=goog.global.BigInt(16384),WASI_RIGHT_PATH_READLINK$$module$src$filesystem$constants=goog.global.BigInt(32768),WASI_RIGHT_PATH_RENAME_SOURCE$$module$src$filesystem$constants=goog.global.BigInt(65536),WASI_RIGHT_PATH_RENAME_TARGET$$module$src$filesystem$constants=goog.global.BigInt(131072),WASI_RIGHT_PATH_FILESTAT_GET$$module$src$filesystem$constants=
goog.global.BigInt(262144),WASI_RIGHT_PATH_FILESTAT_SET_SIZE$$module$src$filesystem$constants=goog.global.BigInt(524288),WASI_RIGHT_PATH_FILESTAT_SET_TIMES$$module$src$filesystem$constants=goog.global.BigInt(1048576),WASI_RIGHT_FD_FILESTAT_GET$$module$src$filesystem$constants=goog.global.BigInt(2097152),WASI_RIGHT_FD_FILESTAT_SET_SIZE$$module$src$filesystem$constants=goog.global.BigInt(4194304),WASI_RIGHT_FD_FILESTAT_SET_TIMES$$module$src$filesystem$constants=goog.global.BigInt(8388608),WASI_RIGHT_PATH_SYMLINK$$module$src$filesystem$constants=
goog.global.BigInt(16777216),WASI_RIGHT_PATH_REMOVE_DIRECTORY$$module$src$filesystem$constants=goog.global.BigInt(33554432),WASI_RIGHT_PATH_UNLINK_FILE$$module$src$filesystem$constants=goog.global.BigInt(67108864),WASI_RIGHT_POLL_FD_READWRITE$$module$src$filesystem$constants=goog.global.BigInt(134217728),WASI_RIGHT_SOCK_SHUTDOWN$$module$src$filesystem$constants=goog.global.BigInt(268435456),RIGHTS_ALL$$module$src$filesystem$constants=WASI_RIGHT_FD_DATASYNC$$module$src$filesystem$constants|WASI_RIGHT_FD_READ$$module$src$filesystem$constants|
WASI_RIGHT_FD_SEEK$$module$src$filesystem$constants|WASI_RIGHT_FD_FDSTAT_SET_FLAGS$$module$src$filesystem$constants|WASI_RIGHT_FD_SYNC$$module$src$filesystem$constants|WASI_RIGHT_FD_TELL$$module$src$filesystem$constants|WASI_RIGHT_FD_WRITE$$module$src$filesystem$constants|WASI_RIGHT_FD_ADVISE$$module$src$filesystem$constants|WASI_RIGHT_FD_ALLOCATE$$module$src$filesystem$constants|WASI_RIGHT_PATH_CREATE_DIRECTORY$$module$src$filesystem$constants|WASI_RIGHT_PATH_CREATE_FILE$$module$src$filesystem$constants|
WASI_RIGHT_PATH_LINK_SOURCE$$module$src$filesystem$constants|WASI_RIGHT_PATH_LINK_TARGET$$module$src$filesystem$constants|WASI_RIGHT_PATH_OPEN$$module$src$filesystem$constants|WASI_RIGHT_FD_READDIR$$module$src$filesystem$constants|WASI_RIGHT_PATH_READLINK$$module$src$filesystem$constants|WASI_RIGHT_PATH_RENAME_SOURCE$$module$src$filesystem$constants|WASI_RIGHT_PATH_RENAME_TARGET$$module$src$filesystem$constants|WASI_RIGHT_PATH_FILESTAT_GET$$module$src$filesystem$constants|WASI_RIGHT_PATH_FILESTAT_SET_SIZE$$module$src$filesystem$constants|
WASI_RIGHT_PATH_FILESTAT_SET_TIMES$$module$src$filesystem$constants|WASI_RIGHT_FD_FILESTAT_GET$$module$src$filesystem$constants|WASI_RIGHT_FD_FILESTAT_SET_TIMES$$module$src$filesystem$constants|WASI_RIGHT_FD_FILESTAT_SET_SIZE$$module$src$filesystem$constants|WASI_RIGHT_PATH_SYMLINK$$module$src$filesystem$constants|WASI_RIGHT_PATH_UNLINK_FILE$$module$src$filesystem$constants|WASI_RIGHT_PATH_REMOVE_DIRECTORY$$module$src$filesystem$constants|WASI_RIGHT_POLL_FD_READWRITE$$module$src$filesystem$constants|
WASI_RIGHT_SOCK_SHUTDOWN$$module$src$filesystem$constants,RIGHTS_BLOCK_DEVICE_BASE$$module$src$filesystem$constants=RIGHTS_ALL$$module$src$filesystem$constants,RIGHTS_BLOCK_DEVICE_INHERITING$$module$src$filesystem$constants=RIGHTS_ALL$$module$src$filesystem$constants,RIGHTS_CHARACTER_DEVICE_BASE$$module$src$filesystem$constants=RIGHTS_ALL$$module$src$filesystem$constants,RIGHTS_CHARACTER_DEVICE_INHERITING$$module$src$filesystem$constants=RIGHTS_ALL$$module$src$filesystem$constants,RIGHTS_REGULAR_FILE_BASE$$module$src$filesystem$constants=
WASI_RIGHT_FD_DATASYNC$$module$src$filesystem$constants|WASI_RIGHT_FD_READ$$module$src$filesystem$constants|WASI_RIGHT_FD_SEEK$$module$src$filesystem$constants|WASI_RIGHT_FD_FDSTAT_SET_FLAGS$$module$src$filesystem$constants|WASI_RIGHT_FD_SYNC$$module$src$filesystem$constants|WASI_RIGHT_FD_TELL$$module$src$filesystem$constants|WASI_RIGHT_FD_WRITE$$module$src$filesystem$constants|WASI_RIGHT_FD_ADVISE$$module$src$filesystem$constants|WASI_RIGHT_FD_ALLOCATE$$module$src$filesystem$constants|WASI_RIGHT_FD_FILESTAT_GET$$module$src$filesystem$constants|
WASI_RIGHT_FD_FILESTAT_SET_SIZE$$module$src$filesystem$constants|WASI_RIGHT_FD_FILESTAT_SET_TIMES$$module$src$filesystem$constants|WASI_RIGHT_POLL_FD_READWRITE$$module$src$filesystem$constants,RIGHTS_REGULAR_FILE_INHERITING$$module$src$filesystem$constants=goog.global.BigInt(0),RIGHTS_DIRECTORY_BASE$$module$src$filesystem$constants=WASI_RIGHT_FD_FDSTAT_SET_FLAGS$$module$src$filesystem$constants|WASI_RIGHT_FD_SYNC$$module$src$filesystem$constants|WASI_RIGHT_FD_ADVISE$$module$src$filesystem$constants|
WASI_RIGHT_PATH_CREATE_DIRECTORY$$module$src$filesystem$constants|WASI_RIGHT_PATH_CREATE_FILE$$module$src$filesystem$constants|WASI_RIGHT_PATH_LINK_SOURCE$$module$src$filesystem$constants|WASI_RIGHT_PATH_LINK_TARGET$$module$src$filesystem$constants|WASI_RIGHT_PATH_OPEN$$module$src$filesystem$constants|WASI_RIGHT_FD_READDIR$$module$src$filesystem$constants|WASI_RIGHT_PATH_READLINK$$module$src$filesystem$constants|WASI_RIGHT_PATH_RENAME_SOURCE$$module$src$filesystem$constants|WASI_RIGHT_PATH_RENAME_TARGET$$module$src$filesystem$constants|
WASI_RIGHT_PATH_FILESTAT_GET$$module$src$filesystem$constants|WASI_RIGHT_PATH_FILESTAT_SET_SIZE$$module$src$filesystem$constants|WASI_RIGHT_PATH_FILESTAT_SET_TIMES$$module$src$filesystem$constants|WASI_RIGHT_FD_FILESTAT_GET$$module$src$filesystem$constants|WASI_RIGHT_FD_FILESTAT_SET_TIMES$$module$src$filesystem$constants|WASI_RIGHT_PATH_SYMLINK$$module$src$filesystem$constants|WASI_RIGHT_PATH_UNLINK_FILE$$module$src$filesystem$constants|WASI_RIGHT_PATH_REMOVE_DIRECTORY$$module$src$filesystem$constants|
WASI_RIGHT_POLL_FD_READWRITE$$module$src$filesystem$constants,RIGHTS_DIRECTORY_INHERITING$$module$src$filesystem$constants=RIGHTS_DIRECTORY_BASE$$module$src$filesystem$constants|RIGHTS_REGULAR_FILE_BASE$$module$src$filesystem$constants,RIGHTS_SOCKET_BASE$$module$src$filesystem$constants=WASI_RIGHT_FD_READ$$module$src$filesystem$constants|WASI_RIGHT_FD_FDSTAT_SET_FLAGS$$module$src$filesystem$constants|WASI_RIGHT_FD_WRITE$$module$src$filesystem$constants|WASI_RIGHT_FD_FILESTAT_GET$$module$src$filesystem$constants|
WASI_RIGHT_POLL_FD_READWRITE$$module$src$filesystem$constants|WASI_RIGHT_SOCK_SHUTDOWN$$module$src$filesystem$constants,RIGHTS_SOCKET_INHERITING$$module$src$filesystem$constants=RIGHTS_ALL$$module$src$filesystem$constants,RIGHTS_TTY_BASE$$module$src$filesystem$constants=WASI_RIGHT_FD_READ$$module$src$filesystem$constants|WASI_RIGHT_FD_FDSTAT_SET_FLAGS$$module$src$filesystem$constants|WASI_RIGHT_FD_WRITE$$module$src$filesystem$constants|WASI_RIGHT_FD_FILESTAT_GET$$module$src$filesystem$constants|WASI_RIGHT_POLL_FD_READWRITE$$module$src$filesystem$constants,
RIGHTS_TTY_INHERITING$$module$src$filesystem$constants=goog.global.BigInt(0),WASI_CLOCK_REALTIME$$module$src$filesystem$constants=0,WASI_CLOCK_MONOTONIC$$module$src$filesystem$constants=1,WASI_CLOCK_PROCESS_CPUTIME_ID$$module$src$filesystem$constants=2,WASI_CLOCK_THREAD_CPUTIME_ID$$module$src$filesystem$constants=3,WASI_EVENTTYPE_CLOCK$$module$src$filesystem$constants=0,WASI_EVENTTYPE_FD_READ$$module$src$filesystem$constants=1,WASI_EVENTTYPE_FD_WRITE$$module$src$filesystem$constants=2,WASI_FILESTAT_SET_ATIM$$module$src$filesystem$constants=
1,WASI_FILESTAT_SET_ATIM_NOW$$module$src$filesystem$constants=2,WASI_FILESTAT_SET_MTIM$$module$src$filesystem$constants=4,WASI_FILESTAT_SET_MTIM_NOW$$module$src$filesystem$constants=8,WASI_O_CREAT$$module$src$filesystem$constants=1,WASI_O_DIRECTORY$$module$src$filesystem$constants=2,WASI_O_EXCL$$module$src$filesystem$constants=4,WASI_O_TRUNC$$module$src$filesystem$constants=8,WASI_PREOPENTYPE_DIR$$module$src$filesystem$constants=0,WASI_DIRCOOKIE_START$$module$src$filesystem$constants=0,WASI_STDIN_FILENO$$module$src$filesystem$constants=
0,WASI_STDOUT_FILENO$$module$src$filesystem$constants=1,WASI_STDERR_FILENO$$module$src$filesystem$constants=2,WASI_WHENCE_SET$$module$src$filesystem$constants=0,WASI_WHENCE_CUR$$module$src$filesystem$constants=1,WASI_WHENCE_END$$module$src$filesystem$constants=2;var module$src$filesystem$constants={};module$src$filesystem$constants.RIGHTS_ALL=RIGHTS_ALL$$module$src$filesystem$constants;module$src$filesystem$constants.RIGHTS_BLOCK_DEVICE_BASE=RIGHTS_ALL$$module$src$filesystem$constants;
module$src$filesystem$constants.RIGHTS_BLOCK_DEVICE_INHERITING=RIGHTS_ALL$$module$src$filesystem$constants;module$src$filesystem$constants.RIGHTS_CHARACTER_DEVICE_BASE=RIGHTS_ALL$$module$src$filesystem$constants;module$src$filesystem$constants.RIGHTS_CHARACTER_DEVICE_INHERITING=RIGHTS_ALL$$module$src$filesystem$constants;module$src$filesystem$constants.RIGHTS_DIRECTORY_BASE=RIGHTS_DIRECTORY_BASE$$module$src$filesystem$constants;module$src$filesystem$constants.RIGHTS_DIRECTORY_INHERITING=RIGHTS_DIRECTORY_INHERITING$$module$src$filesystem$constants;
module$src$filesystem$constants.RIGHTS_REGULAR_FILE_BASE=RIGHTS_REGULAR_FILE_BASE$$module$src$filesystem$constants;module$src$filesystem$constants.RIGHTS_REGULAR_FILE_INHERITING=RIGHTS_REGULAR_FILE_INHERITING$$module$src$filesystem$constants;module$src$filesystem$constants.RIGHTS_SOCKET_BASE=RIGHTS_SOCKET_BASE$$module$src$filesystem$constants;module$src$filesystem$constants.RIGHTS_SOCKET_INHERITING=RIGHTS_ALL$$module$src$filesystem$constants;module$src$filesystem$constants.RIGHTS_TTY_BASE=RIGHTS_TTY_BASE$$module$src$filesystem$constants;
module$src$filesystem$constants.RIGHTS_TTY_INHERITING=RIGHTS_TTY_INHERITING$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_CLOCK_MONOTONIC=WASI_CLOCK_MONOTONIC$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_CLOCK_PROCESS_CPUTIME_ID=WASI_CLOCK_PROCESS_CPUTIME_ID$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_CLOCK_REALTIME=WASI_CLOCK_REALTIME$$module$src$filesystem$constants;
module$src$filesystem$constants.WASI_CLOCK_THREAD_CPUTIME_ID=WASI_CLOCK_THREAD_CPUTIME_ID$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_DIRCOOKIE_START=WASI_DIRCOOKIE_START$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_E2BIG=WASI_E2BIG$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_EACCES=WASI_EACCES$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_EADDRINUSE=WASI_EADDRINUSE$$module$src$filesystem$constants;
module$src$filesystem$constants.WASI_EADDRNOTAVAIL=WASI_EADDRNOTAVAIL$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_EAFNOSUPPORT=WASI_EAFNOSUPPORT$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_EAGAIN=WASI_EAGAIN$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_EALREADY=WASI_EALREADY$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_EBADF=WASI_EBADF$$module$src$filesystem$constants;
module$src$filesystem$constants.WASI_EBADMSG=WASI_EBADMSG$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_EBUSY=WASI_EBUSY$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_ECANCELED=WASI_ECANCELED$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_ECHILD=WASI_ECHILD$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_ECONNABORTED=WASI_ECONNABORTED$$module$src$filesystem$constants;
module$src$filesystem$constants.WASI_ECONNREFUSED=WASI_ECONNREFUSED$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_ECONNRESET=WASI_ECONNRESET$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_EDEADLK=WASI_EDEADLK$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_EDESTADDRREQ=WASI_EDESTADDRREQ$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_EDOM=WASI_EDOM$$module$src$filesystem$constants;
module$src$filesystem$constants.WASI_EDQUOT=WASI_EDQUOT$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_EEXIST=WASI_EEXIST$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_EFAULT=WASI_EFAULT$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_EFBIG=WASI_EFBIG$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_EHOSTUNREACH=WASI_EHOSTUNREACH$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_EIDRM=WASI_EIDRM$$module$src$filesystem$constants;
module$src$filesystem$constants.WASI_EILSEQ=WASI_EILSEQ$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_EINPROGRESS=WASI_EINPROGRESS$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_EINTR=WASI_EINTR$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_EINVAL=WASI_EINVAL$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_EIO=WASI_EIO$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_EISCONN=WASI_EISCONN$$module$src$filesystem$constants;
module$src$filesystem$constants.WASI_EISDIR=WASI_EISDIR$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_ELOOP=WASI_ELOOP$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_EMFILE=WASI_EMFILE$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_EMLINK=WASI_EMLINK$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_EMSGSIZE=WASI_EMSGSIZE$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_EMULTIHOP=WASI_EMULTIHOP$$module$src$filesystem$constants;
module$src$filesystem$constants.WASI_ENAMETOOLONG=WASI_ENAMETOOLONG$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_ENETDOWN=WASI_ENETDOWN$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_ENETRESET=WASI_ENETRESET$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_ENETUNREACH=WASI_ENETUNREACH$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_ENFILE=WASI_ENFILE$$module$src$filesystem$constants;
module$src$filesystem$constants.WASI_ENOBUFS=WASI_ENOBUFS$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_ENODEV=WASI_ENODEV$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_ENOENT=WASI_ENOENT$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_ENOEXEC=WASI_ENOEXEC$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_ENOLCK=WASI_ENOLCK$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_ENOLINK=WASI_ENOLINK$$module$src$filesystem$constants;
module$src$filesystem$constants.WASI_ENOMEM=WASI_ENOMEM$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_ENOMSG=WASI_ENOMSG$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_ENOPROTOOPT=WASI_ENOPROTOOPT$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_ENOSPC=WASI_ENOSPC$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_ENOSYS=WASI_ENOSYS$$module$src$filesystem$constants;
module$src$filesystem$constants.WASI_ENOTCAPABLE=WASI_ENOTCAPABLE$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_ENOTCONN=WASI_ENOTCONN$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_ENOTDIR=WASI_ENOTDIR$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_ENOTEMPTY=WASI_ENOTEMPTY$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_ENOTRECOVERABLE=WASI_ENOTRECOVERABLE$$module$src$filesystem$constants;
module$src$filesystem$constants.WASI_ENOTSOCK=WASI_ENOTSOCK$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_ENOTSUP=WASI_ENOTSUP$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_ENOTTY=WASI_ENOTTY$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_ENXIO=WASI_ENXIO$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_EOVERFLOW=WASI_EOVERFLOW$$module$src$filesystem$constants;
module$src$filesystem$constants.WASI_EOWNERDEAD=WASI_EOWNERDEAD$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_EPERM=WASI_EPERM$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_EPIPE=WASI_EPIPE$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_EPROTO=WASI_EPROTO$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_EPROTONOSUPPORT=WASI_EPROTONOSUPPORT$$module$src$filesystem$constants;
module$src$filesystem$constants.WASI_EPROTOTYPE=WASI_EPROTOTYPE$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_ERANGE=WASI_ERANGE$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_EROFS=WASI_EROFS$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_ESPIPE=WASI_ESPIPE$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_ESRCH=WASI_ESRCH$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_ESTALE=WASI_ESTALE$$module$src$filesystem$constants;
module$src$filesystem$constants.WASI_ESUCCESS=WASI_ESUCCESS$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_ETIMEDOUT=WASI_ETIMEDOUT$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_ETXTBSY=WASI_ETXTBSY$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_EVENTTYPE_CLOCK=WASI_EVENTTYPE_CLOCK$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_EVENTTYPE_FD_READ=WASI_EVENTTYPE_FD_READ$$module$src$filesystem$constants;
module$src$filesystem$constants.WASI_EVENTTYPE_FD_WRITE=WASI_EVENTTYPE_FD_WRITE$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_EXDEV=WASI_EXDEV$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_FDFLAG_APPEND=WASI_FDFLAG_APPEND$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_FDFLAG_DSYNC=WASI_FDFLAG_DSYNC$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_FDFLAG_NONBLOCK=WASI_FDFLAG_NONBLOCK$$module$src$filesystem$constants;
module$src$filesystem$constants.WASI_FDFLAG_RSYNC=WASI_FDFLAG_RSYNC$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_FDFLAG_SYNC=WASI_FDFLAG_SYNC$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_FILESTAT_SET_ATIM=WASI_FILESTAT_SET_ATIM$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_FILESTAT_SET_ATIM_NOW=WASI_FILESTAT_SET_ATIM_NOW$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_FILESTAT_SET_MTIM=WASI_FILESTAT_SET_MTIM$$module$src$filesystem$constants;
module$src$filesystem$constants.WASI_FILESTAT_SET_MTIM_NOW=WASI_FILESTAT_SET_MTIM_NOW$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_FILETYPE_BLOCK_DEVICE=WASI_FILETYPE_BLOCK_DEVICE$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_FILETYPE_CHARACTER_DEVICE=WASI_FILETYPE_CHARACTER_DEVICE$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_FILETYPE_DIRECTORY=WASI_FILETYPE_DIRECTORY$$module$src$filesystem$constants;
module$src$filesystem$constants.WASI_FILETYPE_REGULAR_FILE=WASI_FILETYPE_REGULAR_FILE$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_FILETYPE_SOCKET_DGRAM=WASI_FILETYPE_SOCKET_DGRAM$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_FILETYPE_SOCKET_STREAM=WASI_FILETYPE_SOCKET_STREAM$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_FILETYPE_SYMBOLIC_LINK=WASI_FILETYPE_SYMBOLIC_LINK$$module$src$filesystem$constants;
module$src$filesystem$constants.WASI_FILETYPE_UNKNOWN=WASI_FILETYPE_UNKNOWN$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_O_CREAT=WASI_O_CREAT$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_O_DIRECTORY=WASI_O_DIRECTORY$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_O_EXCL=WASI_O_EXCL$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_O_TRUNC=WASI_O_TRUNC$$module$src$filesystem$constants;
module$src$filesystem$constants.WASI_PREOPENTYPE_DIR=WASI_PREOPENTYPE_DIR$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_RIGHT_FD_ADVISE=WASI_RIGHT_FD_ADVISE$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_RIGHT_FD_ALLOCATE=WASI_RIGHT_FD_ALLOCATE$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_RIGHT_FD_DATASYNC=WASI_RIGHT_FD_DATASYNC$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_RIGHT_FD_FDSTAT_SET_FLAGS=WASI_RIGHT_FD_FDSTAT_SET_FLAGS$$module$src$filesystem$constants;
module$src$filesystem$constants.WASI_RIGHT_FD_FILESTAT_GET=WASI_RIGHT_FD_FILESTAT_GET$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_RIGHT_FD_FILESTAT_SET_SIZE=WASI_RIGHT_FD_FILESTAT_SET_SIZE$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_RIGHT_FD_FILESTAT_SET_TIMES=WASI_RIGHT_FD_FILESTAT_SET_TIMES$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_RIGHT_FD_READ=WASI_RIGHT_FD_READ$$module$src$filesystem$constants;
module$src$filesystem$constants.WASI_RIGHT_FD_READDIR=WASI_RIGHT_FD_READDIR$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_RIGHT_FD_SEEK=WASI_RIGHT_FD_SEEK$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_RIGHT_FD_SYNC=WASI_RIGHT_FD_SYNC$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_RIGHT_FD_TELL=WASI_RIGHT_FD_TELL$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_RIGHT_FD_WRITE=WASI_RIGHT_FD_WRITE$$module$src$filesystem$constants;
module$src$filesystem$constants.WASI_RIGHT_PATH_CREATE_DIRECTORY=WASI_RIGHT_PATH_CREATE_DIRECTORY$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_RIGHT_PATH_CREATE_FILE=WASI_RIGHT_PATH_CREATE_FILE$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_RIGHT_PATH_FILESTAT_GET=WASI_RIGHT_PATH_FILESTAT_GET$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_RIGHT_PATH_FILESTAT_SET_SIZE=WASI_RIGHT_PATH_FILESTAT_SET_SIZE$$module$src$filesystem$constants;
module$src$filesystem$constants.WASI_RIGHT_PATH_FILESTAT_SET_TIMES=WASI_RIGHT_PATH_FILESTAT_SET_TIMES$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_RIGHT_PATH_LINK_SOURCE=WASI_RIGHT_PATH_LINK_SOURCE$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_RIGHT_PATH_LINK_TARGET=WASI_RIGHT_PATH_LINK_TARGET$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_RIGHT_PATH_OPEN=WASI_RIGHT_PATH_OPEN$$module$src$filesystem$constants;
module$src$filesystem$constants.WASI_RIGHT_PATH_READLINK=WASI_RIGHT_PATH_READLINK$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_RIGHT_PATH_REMOVE_DIRECTORY=WASI_RIGHT_PATH_REMOVE_DIRECTORY$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_RIGHT_PATH_RENAME_SOURCE=WASI_RIGHT_PATH_RENAME_SOURCE$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_RIGHT_PATH_RENAME_TARGET=WASI_RIGHT_PATH_RENAME_TARGET$$module$src$filesystem$constants;
module$src$filesystem$constants.WASI_RIGHT_PATH_SYMLINK=WASI_RIGHT_PATH_SYMLINK$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_RIGHT_PATH_UNLINK_FILE=WASI_RIGHT_PATH_UNLINK_FILE$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_RIGHT_POLL_FD_READWRITE=WASI_RIGHT_POLL_FD_READWRITE$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_RIGHT_SOCK_SHUTDOWN=WASI_RIGHT_SOCK_SHUTDOWN$$module$src$filesystem$constants;
module$src$filesystem$constants.WASI_SIGABRT=WASI_SIGABRT$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_SIGALRM=WASI_SIGALRM$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_SIGBUS=WASI_SIGBUS$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_SIGCHLD=WASI_SIGCHLD$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_SIGCONT=WASI_SIGCONT$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_SIGFPE=WASI_SIGFPE$$module$src$filesystem$constants;
module$src$filesystem$constants.WASI_SIGHUP=WASI_SIGHUP$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_SIGILL=WASI_SIGILL$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_SIGINT=WASI_SIGINT$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_SIGKILL=WASI_SIGKILL$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_SIGPIPE=WASI_SIGPIPE$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_SIGQUIT=WASI_SIGQUIT$$module$src$filesystem$constants;
module$src$filesystem$constants.WASI_SIGSEGV=WASI_SIGSEGV$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_SIGSTOP=WASI_SIGSTOP$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_SIGTERM=WASI_SIGTERM$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_SIGTRAP=WASI_SIGTRAP$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_SIGTSTP=WASI_SIGTSTP$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_SIGTTIN=WASI_SIGTTIN$$module$src$filesystem$constants;
module$src$filesystem$constants.WASI_SIGTTOU=WASI_SIGTTOU$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_SIGURG=WASI_SIGURG$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_SIGUSR1=WASI_SIGUSR1$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_SIGUSR2=WASI_SIGUSR2$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_SIGVTALRM=WASI_SIGVTALRM$$module$src$filesystem$constants;
module$src$filesystem$constants.WASI_SIGXCPU=WASI_SIGXCPU$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_SIGXFSZ=WASI_SIGXFSZ$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_STDERR_FILENO=WASI_STDERR_FILENO$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_STDIN_FILENO=WASI_STDIN_FILENO$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_STDOUT_FILENO=WASI_STDOUT_FILENO$$module$src$filesystem$constants;
module$src$filesystem$constants.WASI_WHENCE_CUR=WASI_WHENCE_CUR$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_WHENCE_END=WASI_WHENCE_END$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_WHENCE_SET=WASI_WHENCE_SET$$module$src$filesystem$constants;goog.debug={};function module$contents$goog$debug$Error_DebugError(a,b){if(Error.captureStackTrace)Error.captureStackTrace(this,module$contents$goog$debug$Error_DebugError);else{const c=Error().stack;c&&(this.stack=c)}a&&(this.message=String(a));void 0!==b&&(this.cause=b);this.reportErrorToServer=!0}goog.inherits(module$contents$goog$debug$Error_DebugError,Error);module$contents$goog$debug$Error_DebugError.prototype.name="CustomError";goog.debug.Error=module$contents$goog$debug$Error_DebugError;goog.dom={};goog.dom.NodeType={ELEMENT:1,ATTRIBUTE:2,TEXT:3,CDATA_SECTION:4,ENTITY_REFERENCE:5,ENTITY:6,PROCESSING_INSTRUCTION:7,COMMENT:8,DOCUMENT:9,DOCUMENT_TYPE:10,DOCUMENT_FRAGMENT:11,NOTATION:12};goog.asserts={};goog.asserts.ENABLE_ASSERTS=goog.DEBUG;function module$contents$goog$asserts_AssertionError(a,b){module$contents$goog$debug$Error_DebugError.call(this,module$contents$goog$asserts_subs(a,b));this.messagePattern=a}goog.inherits(module$contents$goog$asserts_AssertionError,module$contents$goog$debug$Error_DebugError);goog.asserts.AssertionError=module$contents$goog$asserts_AssertionError;module$contents$goog$asserts_AssertionError.prototype.name="AssertionError";
goog.asserts.DEFAULT_ERROR_HANDLER=function(a){throw a;};let module$contents$goog$asserts_errorHandler_=goog.asserts.DEFAULT_ERROR_HANDLER;function module$contents$goog$asserts_subs(a,b){a=a.split("%s");let c="";const d=a.length-1;for(let e=0;e<d;e++)c+=a[e]+(e<b.length?b[e]:"%s");return c+a[d]}
function module$contents$goog$asserts_doAssertFailure(a,b,c,d){let e="Assertion failed",f;c?(e+=": "+c,f=d):a&&(e+=": "+a,f=b);a=new module$contents$goog$asserts_AssertionError(""+e,f||[]);module$contents$goog$asserts_errorHandler_(a)}goog.asserts.setErrorHandler=function(a){goog.asserts.ENABLE_ASSERTS&&(module$contents$goog$asserts_errorHandler_=a)};
goog.asserts.assert=function(a,b,c){goog.asserts.ENABLE_ASSERTS&&!a&&module$contents$goog$asserts_doAssertFailure("",null,b,Array.prototype.slice.call(arguments,2));return a};goog.asserts.assertExists=function(a,b,c){goog.asserts.ENABLE_ASSERTS&&null==a&&module$contents$goog$asserts_doAssertFailure("Expected to exist: %s.",[a],b,Array.prototype.slice.call(arguments,2));return a};
goog.asserts.fail=function(a,b){goog.asserts.ENABLE_ASSERTS&&module$contents$goog$asserts_errorHandler_(new module$contents$goog$asserts_AssertionError("Failure"+(a?": "+a:""),Array.prototype.slice.call(arguments,1)))};goog.asserts.assertNumber=function(a,b,c){goog.asserts.ENABLE_ASSERTS&&"number"!==typeof a&&module$contents$goog$asserts_doAssertFailure("Expected number but got %s: %s.",[goog.typeOf(a),a],b,Array.prototype.slice.call(arguments,2));return a};
goog.asserts.assertString=function(a,b,c){goog.asserts.ENABLE_ASSERTS&&"string"!==typeof a&&module$contents$goog$asserts_doAssertFailure("Expected string but got %s: %s.",[goog.typeOf(a),a],b,Array.prototype.slice.call(arguments,2));return a};goog.asserts.assertFunction=function(a,b,c){goog.asserts.ENABLE_ASSERTS&&"function"!==typeof a&&module$contents$goog$asserts_doAssertFailure("Expected function but got %s: %s.",[goog.typeOf(a),a],b,Array.prototype.slice.call(arguments,2));return a};
goog.asserts.assertObject=function(a,b,c){goog.asserts.ENABLE_ASSERTS&&!goog.isObject(a)&&module$contents$goog$asserts_doAssertFailure("Expected object but got %s: %s.",[goog.typeOf(a),a],b,Array.prototype.slice.call(arguments,2));return a};goog.asserts.assertArray=function(a,b,c){goog.asserts.ENABLE_ASSERTS&&!Array.isArray(a)&&module$contents$goog$asserts_doAssertFailure("Expected array but got %s: %s.",[goog.typeOf(a),a],b,Array.prototype.slice.call(arguments,2));return a};
goog.asserts.assertBoolean=function(a,b,c){goog.asserts.ENABLE_ASSERTS&&"boolean"!==typeof a&&module$contents$goog$asserts_doAssertFailure("Expected boolean but got %s: %s.",[goog.typeOf(a),a],b,Array.prototype.slice.call(arguments,2));return a};
goog.asserts.assertElement=function(a,b,c){!goog.asserts.ENABLE_ASSERTS||goog.isObject(a)&&a.nodeType==goog.dom.NodeType.ELEMENT||module$contents$goog$asserts_doAssertFailure("Expected Element but got %s: %s.",[goog.typeOf(a),a],b,Array.prototype.slice.call(arguments,2));return a};
goog.asserts.assertInstanceof=function(a,b,c,d){!goog.asserts.ENABLE_ASSERTS||a instanceof b||module$contents$goog$asserts_doAssertFailure("Expected instanceof %s but got %s.",[module$contents$goog$asserts_getType(b),module$contents$goog$asserts_getType(a)],c,Array.prototype.slice.call(arguments,3));return a};
goog.asserts.assertFinite=function(a,b,c){!goog.asserts.ENABLE_ASSERTS||"number"==typeof a&&isFinite(a)||module$contents$goog$asserts_doAssertFailure("Expected %s to be a finite number but it is not.",[a],b,Array.prototype.slice.call(arguments,2));return a};
function module$contents$goog$asserts_getType(a){return a instanceof Function?a.displayName||a.name||"unknown type name":a instanceof Object?a.constructor.displayName||a.constructor.name||Object.prototype.toString.call(a):null===a?"null":typeof a};goog.array={};goog.NATIVE_ARRAY_PROTOTYPES=goog.TRUSTED_SITE;const module$contents$goog$array_ASSUME_NATIVE_FUNCTIONS=2012<goog.FEATURESET_YEAR;goog.array.ASSUME_NATIVE_FUNCTIONS=module$contents$goog$array_ASSUME_NATIVE_FUNCTIONS;function module$contents$goog$array_peek(a){return a[a.length-1]}goog.array.peek=module$contents$goog$array_peek;goog.array.last=module$contents$goog$array_peek;
const module$contents$goog$array_indexOf=goog.NATIVE_ARRAY_PROTOTYPES&&(module$contents$goog$array_ASSUME_NATIVE_FUNCTIONS||Array.prototype.indexOf)?function(a,b,c){goog.asserts.assert(null!=a.length);return Array.prototype.indexOf.call(a,b,c)}:function(a,b,c){c=null==c?0:0>c?Math.max(0,a.length+c):c;if("string"===typeof a)return"string"!==typeof b||1!=b.length?-1:a.indexOf(b,c);for(;c<a.length;c++)if(c in a&&a[c]===b)return c;return-1};goog.array.indexOf=module$contents$goog$array_indexOf;
const module$contents$goog$array_lastIndexOf=goog.NATIVE_ARRAY_PROTOTYPES&&(module$contents$goog$array_ASSUME_NATIVE_FUNCTIONS||Array.prototype.lastIndexOf)?function(a,b,c){goog.asserts.assert(null!=a.length);return Array.prototype.lastIndexOf.call(a,b,null==c?a.length-1:c)}:function(a,b,c){c=null==c?a.length-1:c;0>c&&(c=Math.max(0,a.length+c));if("string"===typeof a)return"string"!==typeof b||1!=b.length?-1:a.lastIndexOf(b,c);for(;0<=c;c--)if(c in a&&a[c]===b)return c;return-1};
goog.array.lastIndexOf=module$contents$goog$array_lastIndexOf;const module$contents$goog$array_forEach=goog.NATIVE_ARRAY_PROTOTYPES&&(module$contents$goog$array_ASSUME_NATIVE_FUNCTIONS||Array.prototype.forEach)?function(a,b,c){goog.asserts.assert(null!=a.length);Array.prototype.forEach.call(a,b,c)}:function(a,b,c){const d=a.length,e="string"===typeof a?a.split(""):a;for(let f=0;f<d;f++)f in e&&b.call(c,e[f],f,a)};goog.array.forEach=module$contents$goog$array_forEach;
function module$contents$goog$array_forEachRight(a,b,c){var d=a.length;const e="string"===typeof a?a.split(""):a;for(--d;0<=d;--d)d in e&&b.call(c,e[d],d,a)}goog.array.forEachRight=module$contents$goog$array_forEachRight;
const module$contents$goog$array_filter=goog.NATIVE_ARRAY_PROTOTYPES&&(module$contents$goog$array_ASSUME_NATIVE_FUNCTIONS||Array.prototype.filter)?function(a,b,c){goog.asserts.assert(null!=a.length);return Array.prototype.filter.call(a,b,c)}:function(a,b,c){const d=a.length,e=[];let f=0;const g="string"===typeof a?a.split(""):a;for(let h=0;h<d;h++)if(h in g){const k=g[h];b.call(c,k,h,a)&&(e[f++]=k)}return e};goog.array.filter=module$contents$goog$array_filter;
const module$contents$goog$array_map=goog.NATIVE_ARRAY_PROTOTYPES&&(module$contents$goog$array_ASSUME_NATIVE_FUNCTIONS||Array.prototype.map)?function(a,b,c){goog.asserts.assert(null!=a.length);return Array.prototype.map.call(a,b,c)}:function(a,b,c){const d=a.length,e=Array(d),f="string"===typeof a?a.split(""):a;for(let g=0;g<d;g++)g in f&&(e[g]=b.call(c,f[g],g,a));return e};goog.array.map=module$contents$goog$array_map;
const module$contents$goog$array_reduce=goog.NATIVE_ARRAY_PROTOTYPES&&(module$contents$goog$array_ASSUME_NATIVE_FUNCTIONS||Array.prototype.reduce)?function(a,b,c,d){goog.asserts.assert(null!=a.length);d&&(b=goog.bind(b,d));return Array.prototype.reduce.call(a,b,c)}:function(a,b,c,d){let e=c;module$contents$goog$array_forEach(a,function(f,g){e=b.call(d,e,f,g,a)});return e};goog.array.reduce=module$contents$goog$array_reduce;
const module$contents$goog$array_reduceRight=goog.NATIVE_ARRAY_PROTOTYPES&&(module$contents$goog$array_ASSUME_NATIVE_FUNCTIONS||Array.prototype.reduceRight)?function(a,b,c,d){goog.asserts.assert(null!=a.length);goog.asserts.assert(null!=b);d&&(b=goog.bind(b,d));return Array.prototype.reduceRight.call(a,b,c)}:function(a,b,c,d){let e=c;module$contents$goog$array_forEachRight(a,function(f,g){e=b.call(d,e,f,g,a)});return e};goog.array.reduceRight=module$contents$goog$array_reduceRight;
const module$contents$goog$array_some=goog.NATIVE_ARRAY_PROTOTYPES&&(module$contents$goog$array_ASSUME_NATIVE_FUNCTIONS||Array.prototype.some)?function(a,b,c){goog.asserts.assert(null!=a.length);return Array.prototype.some.call(a,b,c)}:function(a,b,c){const d=a.length,e="string"===typeof a?a.split(""):a;for(let f=0;f<d;f++)if(f in e&&b.call(c,e[f],f,a))return!0;return!1};goog.array.some=module$contents$goog$array_some;
const module$contents$goog$array_every=goog.NATIVE_ARRAY_PROTOTYPES&&(module$contents$goog$array_ASSUME_NATIVE_FUNCTIONS||Array.prototype.every)?function(a,b,c){goog.asserts.assert(null!=a.length);return Array.prototype.every.call(a,b,c)}:function(a,b,c){const d=a.length,e="string"===typeof a?a.split(""):a;for(let f=0;f<d;f++)if(f in e&&!b.call(c,e[f],f,a))return!1;return!0};goog.array.every=module$contents$goog$array_every;
function module$contents$goog$array_count(a,b,c){let d=0;module$contents$goog$array_forEach(a,function(e,f,g){b.call(c,e,f,g)&&++d},c);return d}goog.array.count=module$contents$goog$array_count;function module$contents$goog$array_find(a,b,c){b=module$contents$goog$array_findIndex(a,b,c);return 0>b?null:"string"===typeof a?a.charAt(b):a[b]}goog.array.find=module$contents$goog$array_find;
function module$contents$goog$array_findIndex(a,b,c){const d=a.length,e="string"===typeof a?a.split(""):a;for(let f=0;f<d;f++)if(f in e&&b.call(c,e[f],f,a))return f;return-1}goog.array.findIndex=module$contents$goog$array_findIndex;function module$contents$goog$array_findRight(a,b,c){b=module$contents$goog$array_findIndexRight(a,b,c);return 0>b?null:"string"===typeof a?a.charAt(b):a[b]}goog.array.findRight=module$contents$goog$array_findRight;
function module$contents$goog$array_findIndexRight(a,b,c){var d=a.length;const e="string"===typeof a?a.split(""):a;for(--d;0<=d;d--)if(d in e&&b.call(c,e[d],d,a))return d;return-1}goog.array.findIndexRight=module$contents$goog$array_findIndexRight;function module$contents$goog$array_contains(a,b){return 0<=module$contents$goog$array_indexOf(a,b)}goog.array.contains=module$contents$goog$array_contains;function module$contents$goog$array_isEmpty(a){return 0==a.length}goog.array.isEmpty=module$contents$goog$array_isEmpty;
function module$contents$goog$array_clear(a){if(!Array.isArray(a))for(let b=a.length-1;0<=b;b--)delete a[b];a.length=0}goog.array.clear=module$contents$goog$array_clear;function module$contents$goog$array_insert(a,b){module$contents$goog$array_contains(a,b)||a.push(b)}goog.array.insert=module$contents$goog$array_insert;function module$contents$goog$array_insertAt(a,b,c){module$contents$goog$array_splice(a,c,0,b)}goog.array.insertAt=module$contents$goog$array_insertAt;
function module$contents$goog$array_insertArrayAt(a,b,c){goog.partial(module$contents$goog$array_splice,a,c,0).apply(null,b)}goog.array.insertArrayAt=module$contents$goog$array_insertArrayAt;function module$contents$goog$array_insertBefore(a,b,c){let d;2==arguments.length||0>(d=module$contents$goog$array_indexOf(a,c))?a.push(b):module$contents$goog$array_insertAt(a,b,d)}goog.array.insertBefore=module$contents$goog$array_insertBefore;
function module$contents$goog$array_remove(a,b){b=module$contents$goog$array_indexOf(a,b);let c;(c=0<=b)&&module$contents$goog$array_removeAt(a,b);return c}goog.array.remove=module$contents$goog$array_remove;function module$contents$goog$array_removeLast(a,b){b=module$contents$goog$array_lastIndexOf(a,b);return 0<=b?(module$contents$goog$array_removeAt(a,b),!0):!1}goog.array.removeLast=module$contents$goog$array_removeLast;
function module$contents$goog$array_removeAt(a,b){goog.asserts.assert(null!=a.length);return 1==Array.prototype.splice.call(a,b,1).length}goog.array.removeAt=module$contents$goog$array_removeAt;function module$contents$goog$array_removeIf(a,b,c){b=module$contents$goog$array_findIndex(a,b,c);return 0<=b?(module$contents$goog$array_removeAt(a,b),!0):!1}goog.array.removeIf=module$contents$goog$array_removeIf;
function module$contents$goog$array_removeAllIf(a,b,c){let d=0;module$contents$goog$array_forEachRight(a,function(e,f){b.call(c,e,f,a)&&module$contents$goog$array_removeAt(a,f)&&d++});return d}goog.array.removeAllIf=module$contents$goog$array_removeAllIf;function module$contents$goog$array_concat(a){return Array.prototype.concat.apply([],arguments)}goog.array.concat=module$contents$goog$array_concat;function module$contents$goog$array_join(a){return Array.prototype.concat.apply([],arguments)}
goog.array.join=module$contents$goog$array_join;function module$contents$goog$array_toArray(a){const b=a.length;if(0<b){const c=Array(b);for(let d=0;d<b;d++)c[d]=a[d];return c}return[]}const module$contents$goog$array_clone=goog.array.toArray=module$contents$goog$array_toArray;goog.array.clone=module$contents$goog$array_toArray;
function module$contents$goog$array_extend(a,b){for(let c=1;c<arguments.length;c++){const d=arguments[c];if(goog.isArrayLike(d)){const e=a.length||0,f=d.length||0;a.length=e+f;for(let g=0;g<f;g++)a[e+g]=d[g]}else a.push(d)}}goog.array.extend=module$contents$goog$array_extend;function module$contents$goog$array_splice(a,b,c,d){goog.asserts.assert(null!=a.length);return Array.prototype.splice.apply(a,module$contents$goog$array_slice(arguments,1))}goog.array.splice=module$contents$goog$array_splice;
function module$contents$goog$array_slice(a,b,c){goog.asserts.assert(null!=a.length);return 2>=arguments.length?Array.prototype.slice.call(a,b):Array.prototype.slice.call(a,b,c)}goog.array.slice=module$contents$goog$array_slice;
function module$contents$goog$array_removeDuplicates(a,b,c){b=b||a;var d=function(g){return goog.isObject(g)?"o"+goog.getUid(g):(typeof g).charAt(0)+g};c=c||d;let e=d=0;const f={};for(;e<a.length;){const g=a[e++],h=c(g);Object.prototype.hasOwnProperty.call(f,h)||(f[h]=!0,b[d++]=g)}b.length=d}goog.array.removeDuplicates=module$contents$goog$array_removeDuplicates;
function module$contents$goog$array_binarySearch(a,b,c){return module$contents$goog$array_binarySearch_(a,c||module$contents$goog$array_defaultCompare,!1,b)}goog.array.binarySearch=module$contents$goog$array_binarySearch;function module$contents$goog$array_binarySelect(a,b,c){return module$contents$goog$array_binarySearch_(a,b,!0,void 0,c)}goog.array.binarySelect=module$contents$goog$array_binarySelect;
function module$contents$goog$array_binarySearch_(a,b,c,d,e){let f=0,g=a.length,h;for(;f<g;){const k=f+(g-f>>>1);let l;l=c?b.call(e,a[k],k,a):b(d,a[k]);0<l?f=k+1:(g=k,h=!l)}return h?f:-f-1}function module$contents$goog$array_sort(a,b){a.sort(b||module$contents$goog$array_defaultCompare)}goog.array.sort=module$contents$goog$array_sort;
function module$contents$goog$array_stableSort(a,b){const c=Array(a.length);for(let e=0;e<a.length;e++)c[e]={index:e,value:a[e]};const d=b||module$contents$goog$array_defaultCompare;module$contents$goog$array_sort(c,function(e,f){return d(e.value,f.value)||e.index-f.index});for(b=0;b<a.length;b++)a[b]=c[b].value}goog.array.stableSort=module$contents$goog$array_stableSort;
function module$contents$goog$array_sortByKey(a,b,c){const d=c||module$contents$goog$array_defaultCompare;module$contents$goog$array_sort(a,function(e,f){return d(b(e),b(f))})}goog.array.sortByKey=module$contents$goog$array_sortByKey;function module$contents$goog$array_sortObjectsByKey(a,b,c){module$contents$goog$array_sortByKey(a,function(d){return d[b]},c)}goog.array.sortObjectsByKey=module$contents$goog$array_sortObjectsByKey;
function module$contents$goog$array_isSorted(a,b,c){b=b||module$contents$goog$array_defaultCompare;for(let d=1;d<a.length;d++){const e=b(a[d-1],a[d]);if(0<e||0==e&&c)return!1}return!0}goog.array.isSorted=module$contents$goog$array_isSorted;function module$contents$goog$array_equals(a,b,c){if(!goog.isArrayLike(a)||!goog.isArrayLike(b)||a.length!=b.length)return!1;const d=a.length;c=c||module$contents$goog$array_defaultCompareEquality;for(let e=0;e<d;e++)if(!c(a[e],b[e]))return!1;return!0}
goog.array.equals=module$contents$goog$array_equals;function module$contents$goog$array_compare3(a,b,c){c=c||module$contents$goog$array_defaultCompare;const d=Math.min(a.length,b.length);for(let e=0;e<d;e++){const f=c(a[e],b[e]);if(0!=f)return f}return module$contents$goog$array_defaultCompare(a.length,b.length)}goog.array.compare3=module$contents$goog$array_compare3;function module$contents$goog$array_defaultCompare(a,b){return a>b?1:a<b?-1:0}goog.array.defaultCompare=module$contents$goog$array_defaultCompare;
function module$contents$goog$array_inverseDefaultCompare(a,b){return-module$contents$goog$array_defaultCompare(a,b)}goog.array.inverseDefaultCompare=module$contents$goog$array_inverseDefaultCompare;function module$contents$goog$array_defaultCompareEquality(a,b){return a===b}goog.array.defaultCompareEquality=module$contents$goog$array_defaultCompareEquality;
function module$contents$goog$array_binaryInsert(a,b,c){c=module$contents$goog$array_binarySearch(a,b,c);return 0>c?(module$contents$goog$array_insertAt(a,b,-(c+1)),!0):!1}goog.array.binaryInsert=module$contents$goog$array_binaryInsert;function module$contents$goog$array_binaryRemove(a,b,c){b=module$contents$goog$array_binarySearch(a,b,c);return 0<=b?module$contents$goog$array_removeAt(a,b):!1}goog.array.binaryRemove=module$contents$goog$array_binaryRemove;
function module$contents$goog$array_bucket(a,b,c){const d={};for(let e=0;e<a.length;e++){const f=a[e],g=b.call(c,f,e,a);void 0!==g&&(d[g]||(d[g]=[])).push(f)}return d}goog.array.bucket=module$contents$goog$array_bucket;function module$contents$goog$array_bucketToMap(a,b){const c=new Map;for(let d=0;d<a.length;d++){const e=a[d],f=b(e,d,a);if(void 0!==f){let g=c.get(f);g||(g=[],c.set(f,g));g.push(e)}}return c}goog.array.bucketToMap=module$contents$goog$array_bucketToMap;
function module$contents$goog$array_toObject(a,b,c){const d={};module$contents$goog$array_forEach(a,function(e,f){d[b.call(c,e,f,a)]=e});return d}goog.array.toObject=module$contents$goog$array_toObject;function module$contents$goog$array_toMap(a,b){const c=new Map;for(let d=0;d<a.length;d++){const e=a[d];c.set(b(e,d,a),e)}return c}goog.array.toMap=module$contents$goog$array_toMap;
function module$contents$goog$array_range(a,b,c){const d=[];let e=0,f=a;c=c||1;void 0!==b&&(e=a,f=b);if(0>c*(f-e))return[];if(0<c)for(a=e;a<f;a+=c)d.push(a);else for(a=e;a>f;a+=c)d.push(a);return d}goog.array.range=module$contents$goog$array_range;function module$contents$goog$array_repeat(a,b){const c=[];for(let d=0;d<b;d++)c[d]=a;return c}goog.array.repeat=module$contents$goog$array_repeat;
function module$contents$goog$array_flatten(a){const b=[];for(let d=0;d<arguments.length;d++){const e=arguments[d];if(Array.isArray(e))for(let f=0;f<e.length;f+=8192){var c=module$contents$goog$array_slice(e,f,f+8192);c=module$contents$goog$array_flatten.apply(null,c);for(let g=0;g<c.length;g++)b.push(c[g])}else b.push(e)}return b}goog.array.flatten=module$contents$goog$array_flatten;
function module$contents$goog$array_rotate(a,b){goog.asserts.assert(null!=a.length);a.length&&(b%=a.length,0<b?Array.prototype.unshift.apply(a,a.splice(-b,b)):0>b&&Array.prototype.push.apply(a,a.splice(0,-b)));return a}goog.array.rotate=module$contents$goog$array_rotate;function module$contents$goog$array_moveItem(a,b,c){goog.asserts.assert(0<=b&&b<a.length);goog.asserts.assert(0<=c&&c<a.length);b=Array.prototype.splice.call(a,b,1);Array.prototype.splice.call(a,c,0,b[0])}goog.array.moveItem=module$contents$goog$array_moveItem;
function module$contents$goog$array_zip(a){if(!arguments.length)return[];const b=[];let c=arguments[0].length;for(var d=1;d<arguments.length;d++)arguments[d].length<c&&(c=arguments[d].length);for(d=0;d<c;d++){const e=[];for(let f=0;f<arguments.length;f++)e.push(arguments[f][d]);b.push(e)}return b}goog.array.zip=module$contents$goog$array_zip;function module$contents$goog$array_shuffle(a,b){b=b||Math.random;for(let c=a.length-1;0<c;c--){const d=Math.floor(b()*(c+1)),e=a[c];a[c]=a[d];a[d]=e}}
goog.array.shuffle=module$contents$goog$array_shuffle;function module$contents$goog$array_copyByIndex(a,b){const c=[];module$contents$goog$array_forEach(b,function(d){c.push(a[d])});return c}goog.array.copyByIndex=module$contents$goog$array_copyByIndex;function module$contents$goog$array_concatMap(a,b,c){return module$contents$goog$array_concat.apply([],module$contents$goog$array_map(a,b,c))}goog.array.concatMap=module$contents$goog$array_concatMap;goog.dom.asserts={};goog.dom.asserts.assertIsLocation=function(a){if(goog.asserts.ENABLE_ASSERTS){var b=goog.dom.asserts.getWindow_(a);b&&(!a||!(a instanceof b.Location)&&a instanceof b.Element)&&goog.asserts.fail("Argument is not a Location (or a non-Element mock); got: %s",goog.dom.asserts.debugStringForType_(a))}return a};
goog.dom.asserts.assertIsElementType_=function(a,b){if(goog.asserts.ENABLE_ASSERTS){var c=goog.dom.asserts.getWindow_(a);c&&"undefined"!=typeof c[b]&&(a&&(a instanceof c[b]||!(a instanceof c.Location||a instanceof c.Element))||goog.asserts.fail("Argument is not a %s (or a non-Element, non-Location mock); got: %s",b,goog.dom.asserts.debugStringForType_(a)))}return a};goog.dom.asserts.assertIsHTMLAnchorElement=function(a){return goog.dom.asserts.assertIsElementType_(a,"HTMLAnchorElement")};
goog.dom.asserts.assertIsHTMLButtonElement=function(a){return goog.dom.asserts.assertIsElementType_(a,"HTMLButtonElement")};goog.dom.asserts.assertIsHTMLLinkElement=function(a){return goog.dom.asserts.assertIsElementType_(a,"HTMLLinkElement")};goog.dom.asserts.assertIsHTMLImageElement=function(a){return goog.dom.asserts.assertIsElementType_(a,"HTMLImageElement")};goog.dom.asserts.assertIsHTMLAudioElement=function(a){return goog.dom.asserts.assertIsElementType_(a,"HTMLAudioElement")};
goog.dom.asserts.assertIsHTMLVideoElement=function(a){return goog.dom.asserts.assertIsElementType_(a,"HTMLVideoElement")};goog.dom.asserts.assertIsHTMLInputElement=function(a){return goog.dom.asserts.assertIsElementType_(a,"HTMLInputElement")};goog.dom.asserts.assertIsHTMLTextAreaElement=function(a){return goog.dom.asserts.assertIsElementType_(a,"HTMLTextAreaElement")};goog.dom.asserts.assertIsHTMLCanvasElement=function(a){return goog.dom.asserts.assertIsElementType_(a,"HTMLCanvasElement")};
goog.dom.asserts.assertIsHTMLEmbedElement=function(a){return goog.dom.asserts.assertIsElementType_(a,"HTMLEmbedElement")};goog.dom.asserts.assertIsHTMLFormElement=function(a){return goog.dom.asserts.assertIsElementType_(a,"HTMLFormElement")};goog.dom.asserts.assertIsHTMLFrameElement=function(a){return goog.dom.asserts.assertIsElementType_(a,"HTMLFrameElement")};goog.dom.asserts.assertIsHTMLIFrameElement=function(a){return goog.dom.asserts.assertIsElementType_(a,"HTMLIFrameElement")};
goog.dom.asserts.assertIsHTMLObjectElement=function(a){return goog.dom.asserts.assertIsElementType_(a,"HTMLObjectElement")};goog.dom.asserts.assertIsHTMLScriptElement=function(a){return goog.dom.asserts.assertIsElementType_(a,"HTMLScriptElement")};
goog.dom.asserts.debugStringForType_=function(a){if(goog.isObject(a))try{return a.constructor.displayName||a.constructor.name||Object.prototype.toString.call(a)}catch(b){return"<object could not be stringified>"}else return void 0===a?"undefined":null===a?"null":typeof a};goog.dom.asserts.getWindow_=function(a){try{var b=a&&a.ownerDocument,c=b&&(b.defaultView||b.parentWindow);c=c||goog.global;if(c.Element&&c.Location)return c}catch(d){}return null};goog.functions={};goog.functions.constant=function(a){return function(){return a}};goog.functions.FALSE=function(){return!1};goog.functions.TRUE=function(){return!0};goog.functions.NULL=function(){return null};goog.functions.UNDEFINED=function(){};goog.functions.EMPTY=goog.functions.UNDEFINED;goog.functions.identity=function(a,b){return a};goog.functions.error=function(a){return function(){throw Error(a);}};goog.functions.fail=function(a){return function(){throw a;}};
goog.functions.lock=function(a,b){b=b||0;return function(){return a.apply(this,Array.prototype.slice.call(arguments,0,b))}};goog.functions.nth=function(a){return function(){return arguments[a]}};goog.functions.partialRight=function(a,b){const c=Array.prototype.slice.call(arguments,1);return function(){let d=this;d===goog.global&&(d=void 0);const e=Array.prototype.slice.call(arguments);e.push.apply(e,c);return a.apply(d,e)}};
goog.functions.withReturnValue=function(a,b){return goog.functions.sequence(a,goog.functions.constant(b))};goog.functions.equalTo=function(a,b){return function(c){return b?a==c:a===c}};goog.functions.compose=function(a,b){const c=arguments,d=c.length;return function(){let e;d&&(e=c[d-1].apply(this,arguments));for(let f=d-2;0<=f;f--)e=c[f].call(this,e);return e}};
goog.functions.sequence=function(a){const b=arguments,c=b.length;return function(){let d;for(let e=0;e<c;e++)d=b[e].apply(this,arguments);return d}};goog.functions.and=function(a){const b=arguments,c=b.length;return function(){for(let d=0;d<c;d++)if(!b[d].apply(this,arguments))return!1;return!0}};goog.functions.or=function(a){const b=arguments,c=b.length;return function(){for(let d=0;d<c;d++)if(b[d].apply(this,arguments))return!0;return!1}};
goog.functions.not=function(a){return function(){return!a.apply(this,arguments)}};goog.functions.create=function(a,b){var c=function(){};c.prototype=a.prototype;c=new c;a.apply(c,Array.prototype.slice.call(arguments,1));return c};goog.functions.CACHE_RETURN_VALUE=!0;goog.functions.cacheReturnValue=function(a){let b=!1,c;return function(){if(!goog.functions.CACHE_RETURN_VALUE)return a();b||(c=a(),b=!0);return c}};goog.functions.once=function(a){let b=a;return function(){if(b){const c=b;b=null;c()}}};
goog.functions.debounce=function(a,b,c){let d=0;return function(e){goog.global.clearTimeout(d);const f=arguments;d=goog.global.setTimeout(function(){a.apply(c,f)},b)}};goog.functions.throttle=function(a,b,c){let d=0,e=!1,f=[];const g=function(){d=0;e&&(e=!1,h())},h=function(){d=goog.global.setTimeout(g,b);let k=f;f=[];a.apply(c,k)};return function(k){f=arguments;d?e=!0:h()}};
goog.functions.rateLimit=function(a,b,c){let d=0;const e=function(){d=0};return function(f){d||(d=goog.global.setTimeout(e,b),a.apply(c,arguments))}};goog.functions.isFunction=a=>"function"===typeof a;goog.string={};goog.string.TypedString=function(){};goog.string.Const=function(a,b){this.stringConstValueWithSecurityContract__googStringSecurityPrivate_=a===goog.string.Const.GOOG_STRING_CONSTRUCTOR_TOKEN_PRIVATE_&&b||"";this.STRING_CONST_TYPE_MARKER__GOOG_STRING_SECURITY_PRIVATE_=goog.string.Const.TYPE_MARKER_};goog.string.Const.prototype.implementsGoogStringTypedString=!0;goog.string.Const.prototype.getTypedStringValue=function(){return this.stringConstValueWithSecurityContract__googStringSecurityPrivate_};
goog.DEBUG&&(goog.string.Const.prototype.toString=function(){return"Const{"+this.stringConstValueWithSecurityContract__googStringSecurityPrivate_+"}"});goog.string.Const.unwrap=function(a){if(a instanceof goog.string.Const&&a.constructor===goog.string.Const&&a.STRING_CONST_TYPE_MARKER__GOOG_STRING_SECURITY_PRIVATE_===goog.string.Const.TYPE_MARKER_)return a.stringConstValueWithSecurityContract__googStringSecurityPrivate_;goog.asserts.fail("expected object of type Const, got '"+a+"'");return"type_error:Const"};
goog.string.Const.from=function(a){return new goog.string.Const(goog.string.Const.GOOG_STRING_CONSTRUCTOR_TOKEN_PRIVATE_,a)};goog.string.Const.TYPE_MARKER_={};goog.string.Const.GOOG_STRING_CONSTRUCTOR_TOKEN_PRIVATE_={};goog.string.Const.EMPTY=goog.string.Const.from("");goog.html={};goog.html.trustedtypes={};goog.html.trustedtypes.POLICY_NAME=goog.TRUSTED_TYPES_POLICY_NAME?goog.TRUSTED_TYPES_POLICY_NAME+"#html":"";goog.html.trustedtypes.getPolicyPrivateDoNotAccessOrElse=function(){if(!goog.html.trustedtypes.POLICY_NAME)return null;void 0===goog.html.trustedtypes.cachedPolicy_&&(goog.html.trustedtypes.cachedPolicy_=goog.createTrustedTypesPolicy(goog.html.trustedtypes.POLICY_NAME));return goog.html.trustedtypes.cachedPolicy_};const module$contents$goog$html$SafeScript_CONSTRUCTOR_TOKEN_PRIVATE={};
class module$contents$goog$html$SafeScript_SafeScript{constructor(a,b){this.privateDoNotAccessOrElseSafeScriptWrappedValue_=b===module$contents$goog$html$SafeScript_CONSTRUCTOR_TOKEN_PRIVATE?a:"";this.implementsGoogStringTypedString=!0}toString(){return this.privateDoNotAccessOrElseSafeScriptWrappedValue_.toString()}static fromConstant(a){a=goog.string.Const.unwrap(a);return 0===a.length?module$contents$goog$html$SafeScript_SafeScript.EMPTY:module$contents$goog$html$SafeScript_SafeScript.createSafeScriptSecurityPrivateDoNotAccessOrElse(a)}static fromJson(a){return module$contents$goog$html$SafeScript_SafeScript.createSafeScriptSecurityPrivateDoNotAccessOrElse(module$contents$goog$html$SafeScript_SafeScript.stringify_(a))}getTypedStringValue(){return this.privateDoNotAccessOrElseSafeScriptWrappedValue_.toString()}static unwrap(a){return module$contents$goog$html$SafeScript_SafeScript.unwrapTrustedScript(a).toString()}static unwrapTrustedScript(a){if(a instanceof
module$contents$goog$html$SafeScript_SafeScript&&a.constructor===module$contents$goog$html$SafeScript_SafeScript)return a.privateDoNotAccessOrElseSafeScriptWrappedValue_;(0,goog.asserts.fail)("expected object of type SafeScript, got '"+a+"' of type "+goog.typeOf(a));return"type_error:SafeScript"}static stringify_(a){return JSON.stringify(a).replace(/</g,"\\\\x3c")}static createSafeScriptSecurityPrivateDoNotAccessOrElse(a){const b=goog.html.trustedtypes.getPolicyPrivateDoNotAccessOrElse();a=b?b.createScript(a):
a;return new module$contents$goog$html$SafeScript_SafeScript(a,module$contents$goog$html$SafeScript_CONSTRUCTOR_TOKEN_PRIVATE)}}module$contents$goog$html$SafeScript_SafeScript.EMPTY=function(){return module$contents$goog$html$SafeScript_SafeScript.createSafeScriptSecurityPrivateDoNotAccessOrElse("")}();goog.html.SafeScript=module$contents$goog$html$SafeScript_SafeScript;goog.fs={};goog.fs.url={};goog.fs.url.createObjectUrl=function(a){return goog.fs.url.getUrlObject_().createObjectURL(a)};goog.fs.url.revokeObjectUrl=function(a){goog.fs.url.getUrlObject_().revokeObjectURL(a)};goog.fs.url.UrlObject_=function(){};goog.fs.url.UrlObject_.prototype.createObjectURL=function(a){};goog.fs.url.UrlObject_.prototype.revokeObjectURL=function(a){};
goog.fs.url.getUrlObject_=function(){const a=goog.fs.url.findUrlObject_();if(null!=a)return a;throw Error("This browser doesn't seem to support blob URLs");};goog.fs.url.findUrlObject_=function(){return void 0!==goog.global.URL&&void 0!==goog.global.URL.createObjectURL?goog.global.URL:void 0!==goog.global.createObjectURL?goog.global:null};goog.fs.url.browserSupportsObjectUrls=function(){return null!=goog.fs.url.findUrlObject_()};goog.fs.blob={};goog.fs.blob.getBlob=function(a){var b=goog.global.BlobBuilder||goog.global.WebKitBlobBuilder;if(void 0!==b){b=new b;for(let c=0;c<arguments.length;c++)b.append(arguments[c]);return b.getBlob()}return goog.fs.blob.getBlobWithProperties(Array.prototype.slice.call(arguments))};
goog.fs.blob.getBlobWithProperties=function(a,b,c){var d=goog.global.BlobBuilder||goog.global.WebKitBlobBuilder;if(void 0!==d){d=new d;for(let e=0;e<a.length;e++)d.append(a[e],c);return d.getBlob(b)}if(void 0!==goog.global.Blob)return d={},b&&(d.type=b),c&&(d.endings=c),new Blob(a,d);throw Error("This browser doesn't seem to support creating Blobs");};goog.html.TrustedResourceUrl=class{constructor(a,b){this.privateDoNotAccessOrElseTrustedResourceUrlWrappedValue_=b===goog.html.TrustedResourceUrl.CONSTRUCTOR_TOKEN_PRIVATE_?a:""}toString(){return this.privateDoNotAccessOrElseTrustedResourceUrlWrappedValue_+""}};goog.html.TrustedResourceUrl.prototype.implementsGoogStringTypedString=!0;goog.html.TrustedResourceUrl.prototype.getTypedStringValue=function(){return this.privateDoNotAccessOrElseTrustedResourceUrlWrappedValue_.toString()};
goog.html.TrustedResourceUrl.prototype.cloneWithParams=function(a,b){var c=goog.html.TrustedResourceUrl.unwrap(this);c=goog.html.TrustedResourceUrl.URL_PARAM_PARSER_.exec(c);var d=c[3]||"";return goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(c[1]+goog.html.TrustedResourceUrl.stringifyParams_("?",c[2]||"",a)+goog.html.TrustedResourceUrl.stringifyParams_("#",d,b))};goog.html.TrustedResourceUrl.unwrap=function(a){return goog.html.TrustedResourceUrl.unwrapTrustedScriptURL(a).toString()};
goog.html.TrustedResourceUrl.unwrapTrustedScriptURL=function(a){if(a instanceof goog.html.TrustedResourceUrl&&a.constructor===goog.html.TrustedResourceUrl)return a.privateDoNotAccessOrElseTrustedResourceUrlWrappedValue_;goog.asserts.fail("expected object of type TrustedResourceUrl, got '"+a+"' of type "+goog.typeOf(a));return"type_error:TrustedResourceUrl"};
goog.html.TrustedResourceUrl.format=function(a,b){var c=goog.string.Const.unwrap(a);if(!goog.html.TrustedResourceUrl.BASE_URL_.test(c))throw Error("Invalid TrustedResourceUrl format: "+c);a=c.replace(goog.html.TrustedResourceUrl.FORMAT_MARKER_,function(d,e){if(!Object.prototype.hasOwnProperty.call(b,e))throw Error('Found marker, "'+e+'", in format string, "'+c+'", but no valid label mapping found in args: '+JSON.stringify(b));d=b[e];return d instanceof goog.string.Const?goog.string.Const.unwrap(d):
encodeURIComponent(String(d))});return goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(a)};goog.html.TrustedResourceUrl.FORMAT_MARKER_=/%{(\\w+)}/g;goog.html.TrustedResourceUrl.BASE_URL_=RegExp("^((https:)?//[0-9a-z.:[\\\\]-]+/|/[^/\\\\\\\\]|[^:/\\\\\\\\%]+/|[^:/\\\\\\\\%]*[?#]|about:blank#)","i");goog.html.TrustedResourceUrl.URL_PARAM_PARSER_=/^([^?#]*)(\\?[^#]*)?(#[\\s\\S]*)?/;
goog.html.TrustedResourceUrl.formatWithParams=function(a,b,c,d){return goog.html.TrustedResourceUrl.format(a,b).cloneWithParams(c,d)};goog.html.TrustedResourceUrl.fromConstant=function(a){return goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(goog.string.Const.unwrap(a))};goog.html.TrustedResourceUrl.fromConstants=function(a){for(var b="",c=0;c<a.length;c++)b+=goog.string.Const.unwrap(a[c]);return goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(b)};
goog.html.TrustedResourceUrl.fromSafeScript=function(a){a=goog.fs.blob.getBlobWithProperties([module$contents$goog$html$SafeScript_SafeScript.unwrap(a)],"text/javascript");a=goog.fs.url.createObjectUrl(a);return goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(a)};goog.html.TrustedResourceUrl.CONSTRUCTOR_TOKEN_PRIVATE_={};
goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse=function(a){const b=goog.html.trustedtypes.getPolicyPrivateDoNotAccessOrElse();a=b?b.createScriptURL(a):a;return new goog.html.TrustedResourceUrl(a,goog.html.TrustedResourceUrl.CONSTRUCTOR_TOKEN_PRIVATE_)};
goog.html.TrustedResourceUrl.stringifyParams_=function(a,b,c){if(null==c)return b;if("string"===typeof c)return c?a+encodeURIComponent(c):"";for(var d in c)if(Object.prototype.hasOwnProperty.call(c,d)){var e=c[d];e=Array.isArray(e)?e:[e];for(var f=0;f<e.length;f++){var g=e[f];null!=g&&(b||(b=a),b+=(b.length>a.length?"&":"")+encodeURIComponent(d)+"="+encodeURIComponent(String(g)))}}return b};goog.string.internal={};goog.string.internal.startsWith=function(a,b){return 0==a.lastIndexOf(b,0)};goog.string.internal.endsWith=function(a,b){const c=a.length-b.length;return 0<=c&&a.indexOf(b,c)==c};goog.string.internal.caseInsensitiveStartsWith=function(a,b){return 0==goog.string.internal.caseInsensitiveCompare(b,a.slice(0,b.length))};goog.string.internal.caseInsensitiveEndsWith=function(a,b){return 0==goog.string.internal.caseInsensitiveCompare(b,a.slice(a.length-b.length))};
goog.string.internal.caseInsensitiveEquals=function(a,b){return a.toLowerCase()==b.toLowerCase()};goog.string.internal.isEmptyOrWhitespace=function(a){return/^[\\s\\xa0]*$/.test(a)};goog.string.internal.trim=goog.TRUSTED_SITE&&String.prototype.trim?function(a){return a.trim()}:function(a){return/^[\\s\\xa0]*([\\s\\S]*?)[\\s\\xa0]*$/.exec(a)[1]};goog.string.internal.caseInsensitiveCompare=function(a,b){a=String(a).toLowerCase();b=String(b).toLowerCase();return a<b?-1:a==b?0:1};
goog.string.internal.newLineToBr=function(a,b){return a.replace(/(\\r\\n|\\r|\\n)/g,b?"<br />":"<br>")};
goog.string.internal.htmlEscape=function(a,b){if(b)a=a.replace(goog.string.internal.AMP_RE_,"&amp;").replace(goog.string.internal.LT_RE_,"&lt;").replace(goog.string.internal.GT_RE_,"&gt;").replace(goog.string.internal.QUOT_RE_,"&quot;").replace(goog.string.internal.SINGLE_QUOTE_RE_,"&#39;").replace(goog.string.internal.NULL_RE_,"&#0;");else{if(!goog.string.internal.ALL_RE_.test(a))return a;-1!=a.indexOf("&")&&(a=a.replace(goog.string.internal.AMP_RE_,"&amp;"));-1!=a.indexOf("<")&&(a=a.replace(goog.string.internal.LT_RE_,
"&lt;"));-1!=a.indexOf(">")&&(a=a.replace(goog.string.internal.GT_RE_,"&gt;"));-1!=a.indexOf('"')&&(a=a.replace(goog.string.internal.QUOT_RE_,"&quot;"));-1!=a.indexOf("'")&&(a=a.replace(goog.string.internal.SINGLE_QUOTE_RE_,"&#39;"));-1!=a.indexOf("\\x00")&&(a=a.replace(goog.string.internal.NULL_RE_,"&#0;"))}return a};goog.string.internal.AMP_RE_=/&/g;goog.string.internal.LT_RE_=/</g;goog.string.internal.GT_RE_=/>/g;goog.string.internal.QUOT_RE_=/"/g;goog.string.internal.SINGLE_QUOTE_RE_=/'/g;
goog.string.internal.NULL_RE_=/\\x00/g;goog.string.internal.ALL_RE_=/[\\x00&<>"']/;goog.string.internal.whitespaceEscape=function(a,b){return goog.string.internal.newLineToBr(a.replace(/  /g," &#160;"),b)};goog.string.internal.contains=function(a,b){return-1!=a.indexOf(b)};goog.string.internal.caseInsensitiveContains=function(a,b){return goog.string.internal.contains(a.toLowerCase(),b.toLowerCase())};
goog.string.internal.compareVersions=function(a,b){var c=0;a=goog.string.internal.trim(String(a)).split(".");b=goog.string.internal.trim(String(b)).split(".");const d=Math.max(a.length,b.length);for(let g=0;0==c&&g<d;g++){var e=a[g]||"",f=b[g]||"";do{e=/(\\d*)(\\D*)(.*)/.exec(e)||["","","",""];f=/(\\d*)(\\D*)(.*)/.exec(f)||["","","",""];if(0==e[0].length&&0==f[0].length)break;c=0==e[1].length?0:parseInt(e[1],10);const h=0==f[1].length?0:parseInt(f[1],10);c=goog.string.internal.compareElements_(c,h)||
goog.string.internal.compareElements_(0==e[2].length,0==f[2].length)||goog.string.internal.compareElements_(e[2],f[2]);e=e[3];f=f[3]}while(0==c)}return c};goog.string.internal.compareElements_=function(a,b){return a<b?-1:a>b?1:0};goog.html.SafeUrl=class{constructor(a,b){this.privateDoNotAccessOrElseSafeUrlWrappedValue_=b===goog.html.SafeUrl.CONSTRUCTOR_TOKEN_PRIVATE_?a:""}toString(){return this.privateDoNotAccessOrElseSafeUrlWrappedValue_.toString()}};goog.html.SafeUrl.INNOCUOUS_STRING="about:invalid#zClosurez";goog.html.SafeUrl.prototype.implementsGoogStringTypedString=!0;goog.html.SafeUrl.prototype.getTypedStringValue=function(){return this.privateDoNotAccessOrElseSafeUrlWrappedValue_.toString()};
goog.html.SafeUrl.unwrap=function(a){if(a instanceof goog.html.SafeUrl&&a.constructor===goog.html.SafeUrl)return a.privateDoNotAccessOrElseSafeUrlWrappedValue_;goog.asserts.fail("expected object of type SafeUrl, got '"+a+"' of type "+goog.typeOf(a));return"type_error:SafeUrl"};goog.html.SafeUrl.fromConstant=function(a){return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(goog.string.Const.unwrap(a))};
goog.html.SAFE_MIME_TYPE_PATTERN_=RegExp('^(?:audio/(?:3gpp2|3gpp|aac|L16|midi|mp3|mp4|mpeg|oga|ogg|opus|x-m4a|x-matroska|x-wav|wav|webm)|font/\\\\w+|image/(?:bmp|gif|jpeg|jpg|png|tiff|webp|x-icon|heic|heif)|video/(?:mpeg|mp4|ogg|webm|quicktime|x-matroska))(?:;\\\\w+=(?:\\\\w+|"[\\\\w;,= ]+"))*$',"i");goog.html.SafeUrl.isSafeMimeType=function(a){return goog.html.SAFE_MIME_TYPE_PATTERN_.test(a)};
goog.html.SafeUrl.fromBlob=function(a){a=goog.html.SafeUrl.isSafeMimeType(a.type)?goog.fs.url.createObjectUrl(a):goog.html.SafeUrl.INNOCUOUS_STRING;return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(a)};goog.html.SafeUrl.revokeObjectUrl=function(a){a=a.getTypedStringValue();a!==goog.html.SafeUrl.INNOCUOUS_STRING&&goog.fs.url.revokeObjectUrl(a)};
goog.html.SafeUrl.fromMediaSource=function(a){goog.asserts.assert("MediaSource"in goog.global,"No support for MediaSource");a=a instanceof MediaSource?goog.fs.url.createObjectUrl(a):goog.html.SafeUrl.INNOCUOUS_STRING;return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(a)};goog.html.DATA_URL_PATTERN_=/^data:(.*);base64,[a-z0-9+\\/]+=*$/i;
goog.html.SafeUrl.tryFromDataUrl=function(a){a=String(a);a=a.replace(/(%0A|%0D)/g,"");return a.match(goog.html.DATA_URL_PATTERN_)?goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(a):null};goog.html.SafeUrl.fromDataUrl=function(a){return goog.html.SafeUrl.tryFromDataUrl(a)||goog.html.SafeUrl.INNOCUOUS_URL};goog.html.SafeUrl.fromTelUrl=function(a){goog.string.internal.caseInsensitiveStartsWith(a,"tel:")||(a=goog.html.SafeUrl.INNOCUOUS_STRING);return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(a)};
goog.html.SIP_URL_PATTERN_=RegExp("^sip[s]?:[+a-z0-9_.!$%&'*\\\\/=^\`{|}~-]+@([a-z0-9-]+\\\\.)+[a-z0-9]{2,63}$","i");goog.html.SafeUrl.fromSipUrl=function(a){goog.html.SIP_URL_PATTERN_.test(decodeURIComponent(a))||(a=goog.html.SafeUrl.INNOCUOUS_STRING);return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(a)};goog.html.SafeUrl.fromFacebookMessengerUrl=function(a){goog.string.internal.caseInsensitiveStartsWith(a,"fb-messenger://share")||(a=goog.html.SafeUrl.INNOCUOUS_STRING);return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(a)};
goog.html.SafeUrl.fromWhatsAppUrl=function(a){goog.string.internal.caseInsensitiveStartsWith(a,"whatsapp://send")||(a=goog.html.SafeUrl.INNOCUOUS_STRING);return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(a)};goog.html.SafeUrl.fromSmsUrl=function(a){goog.string.internal.caseInsensitiveStartsWith(a,"sms:")&&goog.html.SafeUrl.isSmsUrlBodyValid_(a)||(a=goog.html.SafeUrl.INNOCUOUS_STRING);return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(a)};
goog.html.SafeUrl.isSmsUrlBodyValid_=function(a){var b=a.indexOf("#");0<b&&(a=a.substring(0,b));b=a.match(/[?&]body=/gi);if(!b)return!0;if(1<b.length)return!1;a=a.match(/[?&]body=([^&]*)/)[1];if(!a)return!0;try{decodeURIComponent(a)}catch(c){return!1}return/^(?:[a-z0-9\\-_.~]|%[0-9a-f]{2})+$/i.test(a)};goog.html.SafeUrl.fromSshUrl=function(a){goog.string.internal.caseInsensitiveStartsWith(a,"ssh://")||(a=goog.html.SafeUrl.INNOCUOUS_STRING);return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(a)};
goog.html.SafeUrl.sanitizeChromeExtensionUrl=function(a,b){return goog.html.SafeUrl.sanitizeExtensionUrl_(/^chrome-extension:\\/\\/([^\\/]+)\\//,a,b)};goog.html.SafeUrl.sanitizeFirefoxExtensionUrl=function(a,b){return goog.html.SafeUrl.sanitizeExtensionUrl_(/^moz-extension:\\/\\/([^\\/]+)\\//,a,b)};goog.html.SafeUrl.sanitizeEdgeExtensionUrl=function(a,b){return goog.html.SafeUrl.sanitizeExtensionUrl_(/^ms-browser-extension:\\/\\/([^\\/]+)\\//,a,b)};
goog.html.SafeUrl.sanitizeExtensionUrl_=function(a,b,c){(a=a.exec(b))?(a=a[1],-1==(c instanceof goog.string.Const?[goog.string.Const.unwrap(c)]:c.map(function(d){return goog.string.Const.unwrap(d)})).indexOf(a)&&(b=goog.html.SafeUrl.INNOCUOUS_STRING)):b=goog.html.SafeUrl.INNOCUOUS_STRING;return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(b)};goog.html.SafeUrl.fromTrustedResourceUrl=function(a){return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(goog.html.TrustedResourceUrl.unwrap(a))};
goog.html.SAFE_URL_PATTERN_=/^(?:(?:https?|mailto|ftp):|[^:/?#]*(?:[/?#]|$))/i;goog.html.SafeUrl.SAFE_URL_PATTERN=goog.html.SAFE_URL_PATTERN_;goog.html.SafeUrl.trySanitize=function(a){if(a instanceof goog.html.SafeUrl)return a;a="object"==typeof a&&a.implementsGoogStringTypedString?a.getTypedStringValue():String(a);return goog.html.SAFE_URL_PATTERN_.test(a)?goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(a):goog.html.SafeUrl.tryFromDataUrl(a)};
goog.html.SafeUrl.sanitize=function(a){return goog.html.SafeUrl.trySanitize(a)||goog.html.SafeUrl.INNOCUOUS_URL};
goog.html.SafeUrl.sanitizeAssertUnchanged=function(a,b){if(a instanceof goog.html.SafeUrl)return a;a="object"==typeof a&&a.implementsGoogStringTypedString?a.getTypedStringValue():String(a);if(b&&/^data:/i.test(a)&&(b=goog.html.SafeUrl.fromDataUrl(a),b.getTypedStringValue()==a))return b;goog.asserts.assert(goog.html.SAFE_URL_PATTERN_.test(a),"%s does not match the safe URL pattern",a)||(a=goog.html.SafeUrl.INNOCUOUS_STRING);return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(a)};
goog.html.SafeUrl.CONSTRUCTOR_TOKEN_PRIVATE_={};goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse=function(a){return new goog.html.SafeUrl(a,goog.html.SafeUrl.CONSTRUCTOR_TOKEN_PRIVATE_)};goog.html.SafeUrl.INNOCUOUS_URL=goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(goog.html.SafeUrl.INNOCUOUS_STRING);goog.html.SafeUrl.ABOUT_BLANK=goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse("about:blank");const module$contents$goog$html$SafeStyle_CONSTRUCTOR_TOKEN_PRIVATE={};
class module$contents$goog$html$SafeStyle_SafeStyle{constructor(a,b){this.privateDoNotAccessOrElseSafeStyleWrappedValue_=b===module$contents$goog$html$SafeStyle_CONSTRUCTOR_TOKEN_PRIVATE?a:"";this.implementsGoogStringTypedString=!0}static fromConstant(a){a=goog.string.Const.unwrap(a);if(0===a.length)return module$contents$goog$html$SafeStyle_SafeStyle.EMPTY;(0,goog.asserts.assert)((0,goog.string.internal.endsWith)(a,";"),\`Last character of style string is not ';': \${a}\`);(0,goog.asserts.assert)((0,goog.string.internal.contains)(a,
":"),"Style string must contain at least one ':', to specify a \\"name: value\\" pair: "+a);return module$contents$goog$html$SafeStyle_SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse(a)}getTypedStringValue(){return this.privateDoNotAccessOrElseSafeStyleWrappedValue_}toString(){return this.privateDoNotAccessOrElseSafeStyleWrappedValue_.toString()}static unwrap(a){if(a instanceof module$contents$goog$html$SafeStyle_SafeStyle&&a.constructor===module$contents$goog$html$SafeStyle_SafeStyle)return a.privateDoNotAccessOrElseSafeStyleWrappedValue_;
(0,goog.asserts.fail)(\`expected object of type SafeStyle, got '\${a}\`+"' of type "+goog.typeOf(a));return"type_error:SafeStyle"}static createSafeStyleSecurityPrivateDoNotAccessOrElse(a){return new module$contents$goog$html$SafeStyle_SafeStyle(a,module$contents$goog$html$SafeStyle_CONSTRUCTOR_TOKEN_PRIVATE)}static create(a){let b="";for(let c in a)if(Object.prototype.hasOwnProperty.call(a,c)){if(!/^[-_a-zA-Z0-9]+$/.test(c))throw Error(\`Name allows only [-_a-zA-Z0-9], got: \${c}\`);let d=a[c];null!=d&&
(d=Array.isArray(d)?d.map(module$contents$goog$html$SafeStyle_sanitizePropertyValue).join(" "):module$contents$goog$html$SafeStyle_sanitizePropertyValue(d),b+=\`\${c}:\${d};\`)}return b?module$contents$goog$html$SafeStyle_SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse(b):module$contents$goog$html$SafeStyle_SafeStyle.EMPTY}static concat(a){let b="";const c=d=>{Array.isArray(d)?d.forEach(c):b+=module$contents$goog$html$SafeStyle_SafeStyle.unwrap(d)};Array.prototype.forEach.call(arguments,c);
return b?module$contents$goog$html$SafeStyle_SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse(b):module$contents$goog$html$SafeStyle_SafeStyle.EMPTY}}module$contents$goog$html$SafeStyle_SafeStyle.EMPTY=module$contents$goog$html$SafeStyle_SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse("");module$contents$goog$html$SafeStyle_SafeStyle.INNOCUOUS_STRING="zClosurez";
function module$contents$goog$html$SafeStyle_sanitizePropertyValue(a){if(a instanceof goog.html.SafeUrl)return'url("'+goog.html.SafeUrl.unwrap(a).replace(/</g,"%3c").replace(/[\\\\"]/g,"\\\\$&")+'")';a=a instanceof goog.string.Const?goog.string.Const.unwrap(a):module$contents$goog$html$SafeStyle_sanitizePropertyValueString(String(a));if(/[{;}]/.test(a))throw new module$contents$goog$asserts_AssertionError("Value does not allow [{;}], got: %s.",[a]);return a}
function module$contents$goog$html$SafeStyle_sanitizePropertyValueString(a){const b=a.replace(module$contents$goog$html$SafeStyle_FUNCTIONS_RE,"$1").replace(module$contents$goog$html$SafeStyle_FUNCTIONS_RE,"$1").replace(module$contents$goog$html$SafeStyle_URL_RE,"url");if(module$contents$goog$html$SafeStyle_VALUE_RE.test(b)){if(module$contents$goog$html$SafeStyle_COMMENT_RE.test(a))return(0,goog.asserts.fail)(\`String value disallows comments, got: \${a}\`),module$contents$goog$html$SafeStyle_SafeStyle.INNOCUOUS_STRING;
if(!module$contents$goog$html$SafeStyle_hasBalancedQuotes(a))return(0,goog.asserts.fail)(\`String value requires balanced quotes, got: \${a}\`),module$contents$goog$html$SafeStyle_SafeStyle.INNOCUOUS_STRING;if(!module$contents$goog$html$SafeStyle_hasBalancedSquareBrackets(a))return(0,goog.asserts.fail)("String value requires balanced square brackets and one identifier per pair of brackets, got: "+a),module$contents$goog$html$SafeStyle_SafeStyle.INNOCUOUS_STRING}else return(0,goog.asserts.fail)(\`String value allows only \${module$contents$goog$html$SafeStyle_VALUE_ALLOWED_CHARS}\`+
" and simple functions, got: "+a),module$contents$goog$html$SafeStyle_SafeStyle.INNOCUOUS_STRING;return module$contents$goog$html$SafeStyle_sanitizeUrl(a)}function module$contents$goog$html$SafeStyle_hasBalancedQuotes(a){let b=!0,c=!0;for(let d=0;d<a.length;d++){const e=a.charAt(d);"'"==e&&c?b=!b:'"'==e&&b&&(c=!c)}return b&&c}
function module$contents$goog$html$SafeStyle_hasBalancedSquareBrackets(a){let b=!0;const c=/^[-_a-zA-Z0-9]$/;for(let d=0;d<a.length;d++){const e=a.charAt(d);if("]"==e){if(b)return!1;b=!0}else if("["==e){if(!b)return!1;b=!1}else if(!b&&!c.test(e))return!1}return b}
const module$contents$goog$html$SafeStyle_VALUE_ALLOWED_CHARS="[-,.\\"'%_!#/ a-zA-Z0-9\\\\[\\\\]]",module$contents$goog$html$SafeStyle_VALUE_RE=new RegExp(\`^\${module$contents$goog$html$SafeStyle_VALUE_ALLOWED_CHARS}+\\$\`),module$contents$goog$html$SafeStyle_URL_RE=RegExp("\\\\b(url\\\\([ \\t\\n]*)('[ -&(-\\\\[\\\\]-~]*'|\\"[ !#-\\\\[\\\\]-~]*\\"|[!#-&*-\\\\[\\\\]-~]*)([ \\t\\n]*\\\\))","g"),module$contents$goog$html$SafeStyle_ALLOWED_FUNCTIONS="calc cubic-bezier fit-content hsl hsla linear-gradient matrix minmax radial-gradient repeat rgb rgba (rotate|scale|translate)(X|Y|Z|3d)? steps var".split(" "),
module$contents$goog$html$SafeStyle_FUNCTIONS_RE=new RegExp("\\\\b("+module$contents$goog$html$SafeStyle_ALLOWED_FUNCTIONS.join("|")+")\\\\([-+*/0-9a-zA-Z.%#\\\\[\\\\], ]+\\\\)","g"),module$contents$goog$html$SafeStyle_COMMENT_RE=/\\/\\*/;function module$contents$goog$html$SafeStyle_sanitizeUrl(a){return a.replace(module$contents$goog$html$SafeStyle_URL_RE,(b,c,d,e)=>{let f="";d=d.replace(/^(['"])(.*)\\1$/,(g,h,k)=>{f=h;return k});b=goog.html.SafeUrl.sanitize(d).getTypedStringValue();return c+f+b+f+e})}
goog.html.SafeStyle=module$contents$goog$html$SafeStyle_SafeStyle;goog.object={};function module$contents$goog$object_forEach(a,b,c){for(const d in a)b.call(c,a[d],d,a)}function module$contents$goog$object_filter(a,b,c){const d={};for(const e in a)b.call(c,a[e],e,a)&&(d[e]=a[e]);return d}function module$contents$goog$object_map(a,b,c){const d={};for(const e in a)d[e]=b.call(c,a[e],e,a);return d}function module$contents$goog$object_some(a,b,c){for(const d in a)if(b.call(c,a[d],d,a))return!0;return!1}
function module$contents$goog$object_every(a,b,c){for(const d in a)if(!b.call(c,a[d],d,a))return!1;return!0}function module$contents$goog$object_getCount(a){let b=0;for(const c in a)b++;return b}function module$contents$goog$object_getAnyKey(a){for(const b in a)return b}function module$contents$goog$object_getAnyValue(a){for(const b in a)return a[b]}function module$contents$goog$object_contains(a,b){return module$contents$goog$object_containsValue(a,b)}
function module$contents$goog$object_getValues(a){const b=[];let c=0;for(const d in a)b[c++]=a[d];return b}function module$contents$goog$object_getKeys(a){const b=[];let c=0;for(const d in a)b[c++]=d;return b}function module$contents$goog$object_getValueByKeys(a,b){var c=goog.isArrayLike(b);const d=c?b:arguments;for(c=c?0:1;c<d.length;c++){if(null==a)return;a=a[d[c]]}return a}function module$contents$goog$object_containsKey(a,b){return null!==a&&b in a}
function module$contents$goog$object_containsValue(a,b){for(const c in a)if(a[c]==b)return!0;return!1}function module$contents$goog$object_findKey(a,b,c){for(const d in a)if(b.call(c,a[d],d,a))return d}function module$contents$goog$object_findValue(a,b,c){return(b=module$contents$goog$object_findKey(a,b,c))&&a[b]}function module$contents$goog$object_isEmpty(a){for(const b in a)return!1;return!0}function module$contents$goog$object_clear(a){for(const b in a)delete a[b]}
function module$contents$goog$object_remove(a,b){let c;(c=b in a)&&delete a[b];return c}function module$contents$goog$object_add(a,b,c){if(null!==a&&b in a)throw Error(\`The object already contains the key "\${b}"\`);module$contents$goog$object_set(a,b,c)}function module$contents$goog$object_get(a,b,c){return null!==a&&b in a?a[b]:c}function module$contents$goog$object_set(a,b,c){a[b]=c}function module$contents$goog$object_setIfUndefined(a,b,c){return b in a?a[b]:a[b]=c}
function module$contents$goog$object_setWithReturnValueIfNotSet(a,b,c){if(b in a)return a[b];c=c();return a[b]=c}function module$contents$goog$object_equals(a,b){for(const c in a)if(!(c in b)||a[c]!==b[c])return!1;for(const c in b)if(!(c in a))return!1;return!0}function module$contents$goog$object_clone(a){const b={};for(const c in a)b[c]=a[c];return b}
function module$contents$goog$object_unsafeClone(a){if(!a||"object"!==typeof a)return a;if("function"===typeof a.clone)return a.clone();if("undefined"!==typeof Map&&a instanceof Map)return new Map(a);if("undefined"!==typeof Set&&a instanceof Set)return new Set(a);if(a instanceof Date)return new Date(a.getTime());const b=Array.isArray(a)?[]:"function"!==typeof ArrayBuffer||"function"!==typeof ArrayBuffer.isView||!ArrayBuffer.isView(a)||a instanceof DataView?{}:new a.constructor(a.length);for(const c in a)b[c]=
module$contents$goog$object_unsafeClone(a[c]);return b}function module$contents$goog$object_transpose(a){const b={};for(const c in a)b[a[c]]=c;return b}const module$contents$goog$object_PROTOTYPE_FIELDS="constructor hasOwnProperty isPrototypeOf propertyIsEnumerable toLocaleString toString valueOf".split(" ");
function module$contents$goog$object_extend(a,b){let c,d;for(let e=1;e<arguments.length;e++){d=arguments[e];for(c in d)a[c]=d[c];for(let f=0;f<module$contents$goog$object_PROTOTYPE_FIELDS.length;f++)c=module$contents$goog$object_PROTOTYPE_FIELDS[f],Object.prototype.hasOwnProperty.call(d,c)&&(a[c]=d[c])}}
function module$contents$goog$object_create(a){const b=arguments.length;if(1==b&&Array.isArray(arguments[0]))return module$contents$goog$object_create.apply(null,arguments[0]);if(b%2)throw Error("Uneven number of arguments");const c={};for(let d=0;d<b;d+=2)c[arguments[d]]=arguments[d+1];return c}
function module$contents$goog$object_createSet(a){const b=arguments.length;if(1==b&&Array.isArray(arguments[0]))return module$contents$goog$object_createSet.apply(null,arguments[0]);const c={};for(let d=0;d<b;d++)c[arguments[d]]=!0;return c}function module$contents$goog$object_createImmutableView(a){let b=a;Object.isFrozen&&!Object.isFrozen(a)&&(b=Object.create(a),Object.freeze(b));return b}function module$contents$goog$object_isImmutableView(a){return!!Object.isFrozen&&Object.isFrozen(a)}
function module$contents$goog$object_getAllPropertyNames(a,b,c){if(!a)return[];if(!Object.getOwnPropertyNames||!Object.getPrototypeOf)return module$contents$goog$object_getKeys(a);const d={};for(;a&&(a!==Object.prototype||b)&&(a!==Function.prototype||c);){const e=Object.getOwnPropertyNames(a);for(let f=0;f<e.length;f++)d[e[f]]=!0;a=Object.getPrototypeOf(a)}return module$contents$goog$object_getKeys(d)}
function module$contents$goog$object_getSuperClass(a){return(a=Object.getPrototypeOf(a.prototype))&&a.constructor}goog.object.add=module$contents$goog$object_add;goog.object.clear=module$contents$goog$object_clear;goog.object.clone=module$contents$goog$object_clone;goog.object.contains=module$contents$goog$object_contains;goog.object.containsKey=module$contents$goog$object_containsKey;goog.object.containsValue=module$contents$goog$object_containsValue;goog.object.create=module$contents$goog$object_create;
goog.object.createImmutableView=module$contents$goog$object_createImmutableView;goog.object.createSet=module$contents$goog$object_createSet;goog.object.equals=module$contents$goog$object_equals;goog.object.every=module$contents$goog$object_every;goog.object.extend=module$contents$goog$object_extend;goog.object.filter=module$contents$goog$object_filter;goog.object.findKey=module$contents$goog$object_findKey;goog.object.findValue=module$contents$goog$object_findValue;goog.object.forEach=module$contents$goog$object_forEach;
goog.object.get=module$contents$goog$object_get;goog.object.getAllPropertyNames=module$contents$goog$object_getAllPropertyNames;goog.object.getAnyKey=module$contents$goog$object_getAnyKey;goog.object.getAnyValue=module$contents$goog$object_getAnyValue;goog.object.getCount=module$contents$goog$object_getCount;goog.object.getKeys=module$contents$goog$object_getKeys;goog.object.getSuperClass=module$contents$goog$object_getSuperClass;goog.object.getValueByKeys=module$contents$goog$object_getValueByKeys;
goog.object.getValues=module$contents$goog$object_getValues;goog.object.isEmpty=module$contents$goog$object_isEmpty;goog.object.isImmutableView=module$contents$goog$object_isImmutableView;goog.object.map=module$contents$goog$object_map;goog.object.remove=module$contents$goog$object_remove;goog.object.set=module$contents$goog$object_set;goog.object.setIfUndefined=module$contents$goog$object_setIfUndefined;goog.object.setWithReturnValueIfNotSet=module$contents$goog$object_setWithReturnValueIfNotSet;
goog.object.some=module$contents$goog$object_some;goog.object.transpose=module$contents$goog$object_transpose;goog.object.unsafeClone=module$contents$goog$object_unsafeClone;const module$contents$goog$html$SafeStyleSheet_CONSTRUCTOR_TOKEN_PRIVATE={};
class module$contents$goog$html$SafeStyleSheet_SafeStyleSheet{constructor(a,b){this.privateDoNotAccessOrElseSafeStyleSheetWrappedValue_=b===module$contents$goog$html$SafeStyleSheet_CONSTRUCTOR_TOKEN_PRIVATE?a:"";this.implementsGoogStringTypedString=!0}toString(){return this.privateDoNotAccessOrElseSafeStyleSheetWrappedValue_.toString()}static createRule(a,b){if((0,goog.string.internal.contains)(a,"<"))throw Error(\`Selector does not allow '<', got: \${a}\`);const c=a.replace(/('|")((?!\\1)[^\\r\\n\\f\\\\]|\\\\[\\s\\S])*\\1/g,
"");if(!/^[-_a-zA-Z0-9#.:* ,>+~[\\]()=^$|]+$/.test(c))throw Error("Selector allows only [-_a-zA-Z0-9#.:* ,>+~[\\\\]()=^$|] and strings, got: "+a);if(!module$contents$goog$html$SafeStyleSheet_SafeStyleSheet.hasBalancedBrackets_(c))throw Error("() and [] in selector must be balanced, got: "+a);b instanceof module$contents$goog$html$SafeStyle_SafeStyle||(b=module$contents$goog$html$SafeStyle_SafeStyle.create(b));a=\`\${a}{\`+module$contents$goog$html$SafeStyle_SafeStyle.unwrap(b).replace(/</g,"\\\\3C ")+"}";
return module$contents$goog$html$SafeStyleSheet_SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse(a)}static hasBalancedBrackets_(a){const b={"(":")","[":"]"},c=[];for(let d=0;d<a.length;d++){const e=a[d];if(b[e])c.push(b[e]);else if(module$contents$goog$object_contains(b,e)&&c.pop()!=e)return!1}return 0==c.length}static concat(a){let b="";const c=d=>{Array.isArray(d)?d.forEach(c):b+=module$contents$goog$html$SafeStyleSheet_SafeStyleSheet.unwrap(d)};Array.prototype.forEach.call(arguments,
c);return module$contents$goog$html$SafeStyleSheet_SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse(b)}static fromConstant(a){a=goog.string.Const.unwrap(a);if(0===a.length)return module$contents$goog$html$SafeStyleSheet_SafeStyleSheet.EMPTY;(0,goog.asserts.assert)(!(0,goog.string.internal.contains)(a,"<"),\`Forbidden '<' character in style sheet string: \${a}\`);return module$contents$goog$html$SafeStyleSheet_SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse(a)}getTypedStringValue(){return this.privateDoNotAccessOrElseSafeStyleSheetWrappedValue_}static unwrap(a){if(a instanceof
module$contents$goog$html$SafeStyleSheet_SafeStyleSheet&&a.constructor===module$contents$goog$html$SafeStyleSheet_SafeStyleSheet)return a.privateDoNotAccessOrElseSafeStyleSheetWrappedValue_;(0,goog.asserts.fail)("expected object of type SafeStyleSheet, got '"+a+"' of type "+goog.typeOf(a));return"type_error:SafeStyleSheet"}static createSafeStyleSheetSecurityPrivateDoNotAccessOrElse(a){return new module$contents$goog$html$SafeStyleSheet_SafeStyleSheet(a,module$contents$goog$html$SafeStyleSheet_CONSTRUCTOR_TOKEN_PRIVATE)}}
module$contents$goog$html$SafeStyleSheet_SafeStyleSheet.EMPTY=module$contents$goog$html$SafeStyleSheet_SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse("");goog.html.SafeStyleSheet=module$contents$goog$html$SafeStyleSheet_SafeStyleSheet;goog.dom.HtmlElement=function(){};goog.dom.TagName=class{static cast(a,b){return a}constructor(){}toString(){}};goog.dom.TagName.A="A";goog.dom.TagName.ABBR="ABBR";goog.dom.TagName.ACRONYM="ACRONYM";goog.dom.TagName.ADDRESS="ADDRESS";goog.dom.TagName.APPLET="APPLET";goog.dom.TagName.AREA="AREA";goog.dom.TagName.ARTICLE="ARTICLE";goog.dom.TagName.ASIDE="ASIDE";goog.dom.TagName.AUDIO="AUDIO";goog.dom.TagName.B="B";goog.dom.TagName.BASE="BASE";goog.dom.TagName.BASEFONT="BASEFONT";goog.dom.TagName.BDI="BDI";goog.dom.TagName.BDO="BDO";
goog.dom.TagName.BIG="BIG";goog.dom.TagName.BLOCKQUOTE="BLOCKQUOTE";goog.dom.TagName.BODY="BODY";goog.dom.TagName.BR="BR";goog.dom.TagName.BUTTON="BUTTON";goog.dom.TagName.CANVAS="CANVAS";goog.dom.TagName.CAPTION="CAPTION";goog.dom.TagName.CENTER="CENTER";goog.dom.TagName.CITE="CITE";goog.dom.TagName.CODE="CODE";goog.dom.TagName.COL="COL";goog.dom.TagName.COLGROUP="COLGROUP";goog.dom.TagName.COMMAND="COMMAND";goog.dom.TagName.DATA="DATA";goog.dom.TagName.DATALIST="DATALIST";goog.dom.TagName.DD="DD";
goog.dom.TagName.DEL="DEL";goog.dom.TagName.DETAILS="DETAILS";goog.dom.TagName.DFN="DFN";goog.dom.TagName.DIALOG="DIALOG";goog.dom.TagName.DIR="DIR";goog.dom.TagName.DIV="DIV";goog.dom.TagName.DL="DL";goog.dom.TagName.DT="DT";goog.dom.TagName.EM="EM";goog.dom.TagName.EMBED="EMBED";goog.dom.TagName.FIELDSET="FIELDSET";goog.dom.TagName.FIGCAPTION="FIGCAPTION";goog.dom.TagName.FIGURE="FIGURE";goog.dom.TagName.FONT="FONT";goog.dom.TagName.FOOTER="FOOTER";goog.dom.TagName.FORM="FORM";
goog.dom.TagName.FRAME="FRAME";goog.dom.TagName.FRAMESET="FRAMESET";goog.dom.TagName.H1="H1";goog.dom.TagName.H2="H2";goog.dom.TagName.H3="H3";goog.dom.TagName.H4="H4";goog.dom.TagName.H5="H5";goog.dom.TagName.H6="H6";goog.dom.TagName.HEAD="HEAD";goog.dom.TagName.HEADER="HEADER";goog.dom.TagName.HGROUP="HGROUP";goog.dom.TagName.HR="HR";goog.dom.TagName.HTML="HTML";goog.dom.TagName.I="I";goog.dom.TagName.IFRAME="IFRAME";goog.dom.TagName.IMG="IMG";goog.dom.TagName.INPUT="INPUT";
goog.dom.TagName.INS="INS";goog.dom.TagName.ISINDEX="ISINDEX";goog.dom.TagName.KBD="KBD";goog.dom.TagName.KEYGEN="KEYGEN";goog.dom.TagName.LABEL="LABEL";goog.dom.TagName.LEGEND="LEGEND";goog.dom.TagName.LI="LI";goog.dom.TagName.LINK="LINK";goog.dom.TagName.MAIN="MAIN";goog.dom.TagName.MAP="MAP";goog.dom.TagName.MARK="MARK";goog.dom.TagName.MATH="MATH";goog.dom.TagName.MENU="MENU";goog.dom.TagName.MENUITEM="MENUITEM";goog.dom.TagName.META="META";goog.dom.TagName.METER="METER";
goog.dom.TagName.NAV="NAV";goog.dom.TagName.NOFRAMES="NOFRAMES";goog.dom.TagName.NOSCRIPT="NOSCRIPT";goog.dom.TagName.OBJECT="OBJECT";goog.dom.TagName.OL="OL";goog.dom.TagName.OPTGROUP="OPTGROUP";goog.dom.TagName.OPTION="OPTION";goog.dom.TagName.OUTPUT="OUTPUT";goog.dom.TagName.P="P";goog.dom.TagName.PARAM="PARAM";goog.dom.TagName.PICTURE="PICTURE";goog.dom.TagName.PRE="PRE";goog.dom.TagName.PROGRESS="PROGRESS";goog.dom.TagName.Q="Q";goog.dom.TagName.RP="RP";goog.dom.TagName.RT="RT";
goog.dom.TagName.RTC="RTC";goog.dom.TagName.RUBY="RUBY";goog.dom.TagName.S="S";goog.dom.TagName.SAMP="SAMP";goog.dom.TagName.SCRIPT="SCRIPT";goog.dom.TagName.SECTION="SECTION";goog.dom.TagName.SELECT="SELECT";goog.dom.TagName.SMALL="SMALL";goog.dom.TagName.SOURCE="SOURCE";goog.dom.TagName.SPAN="SPAN";goog.dom.TagName.STRIKE="STRIKE";goog.dom.TagName.STRONG="STRONG";goog.dom.TagName.STYLE="STYLE";goog.dom.TagName.SUB="SUB";goog.dom.TagName.SUMMARY="SUMMARY";goog.dom.TagName.SUP="SUP";
goog.dom.TagName.SVG="SVG";goog.dom.TagName.TABLE="TABLE";goog.dom.TagName.TBODY="TBODY";goog.dom.TagName.TD="TD";goog.dom.TagName.TEMPLATE="TEMPLATE";goog.dom.TagName.TEXTAREA="TEXTAREA";goog.dom.TagName.TFOOT="TFOOT";goog.dom.TagName.TH="TH";goog.dom.TagName.THEAD="THEAD";goog.dom.TagName.TIME="TIME";goog.dom.TagName.TITLE="TITLE";goog.dom.TagName.TR="TR";goog.dom.TagName.TRACK="TRACK";goog.dom.TagName.TT="TT";goog.dom.TagName.U="U";goog.dom.TagName.UL="UL";goog.dom.TagName.VAR="VAR";
goog.dom.TagName.VIDEO="VIDEO";goog.dom.TagName.WBR="WBR";goog.labs={};goog.labs.userAgent={};const module$contents$goog$labs$userAgent_USE_CLIENT_HINTS_OVERRIDE="",module$contents$goog$labs$userAgent_USE_CLIENT_HINTS=!1;let module$contents$goog$labs$userAgent_forceClientHintsInTests=!1;goog.labs.userAgent.setUseClientHintsForTesting=a=>{module$contents$goog$labs$userAgent_forceClientHintsInTests=a};
const module$contents$goog$labs$userAgent_useClientHintsRuntimeOverride=module$contents$goog$labs$userAgent_USE_CLIENT_HINTS_OVERRIDE?!!goog.getObjectByName(module$contents$goog$labs$userAgent_USE_CLIENT_HINTS_OVERRIDE):!1;goog.labs.userAgent.useClientHints=()=>module$contents$goog$labs$userAgent_USE_CLIENT_HINTS||module$contents$goog$labs$userAgent_useClientHintsRuntimeOverride||module$contents$goog$labs$userAgent_forceClientHintsInTests;goog.labs.userAgent.util={};const module$contents$goog$labs$userAgent$util_ASSUME_CLIENT_HINTS_SUPPORT=!1;function module$contents$goog$labs$userAgent$util_getNativeUserAgentString(){var a=module$contents$goog$labs$userAgent$util_getNavigator();return a&&(a=a.userAgent)?a:""}function module$contents$goog$labs$userAgent$util_getNativeUserAgentData(){const a=module$contents$goog$labs$userAgent$util_getNavigator();return a?a.userAgentData||null:null}
function module$contents$goog$labs$userAgent$util_getNavigator(){return goog.global.navigator}let module$contents$goog$labs$userAgent$util_userAgentInternal=null,module$contents$goog$labs$userAgent$util_userAgentDataInternal=module$contents$goog$labs$userAgent$util_getNativeUserAgentData();
function module$contents$goog$labs$userAgent$util_setUserAgent(a){module$contents$goog$labs$userAgent$util_userAgentInternal="string"===typeof a?a:module$contents$goog$labs$userAgent$util_getNativeUserAgentString()}function module$contents$goog$labs$userAgent$util_getUserAgent(){return null==module$contents$goog$labs$userAgent$util_userAgentInternal?module$contents$goog$labs$userAgent$util_getNativeUserAgentString():module$contents$goog$labs$userAgent$util_userAgentInternal}
function module$contents$goog$labs$userAgent$util_setUserAgentData(a){module$contents$goog$labs$userAgent$util_userAgentDataInternal=a}function module$contents$goog$labs$userAgent$util_resetUserAgentData(){module$contents$goog$labs$userAgent$util_userAgentDataInternal=module$contents$goog$labs$userAgent$util_getNativeUserAgentData()}function module$contents$goog$labs$userAgent$util_getUserAgentData(){return module$contents$goog$labs$userAgent$util_userAgentDataInternal}
function module$contents$goog$labs$userAgent$util_matchUserAgentDataBrand(a){if(!(0,goog.labs.userAgent.useClientHints)())return!1;const b=module$contents$goog$labs$userAgent$util_getUserAgentData();return b?b.brands.some(({brand:c})=>c&&(0,goog.string.internal.contains)(c,a)):!1}function module$contents$goog$labs$userAgent$util_matchUserAgent(a){const b=module$contents$goog$labs$userAgent$util_getUserAgent();return(0,goog.string.internal.contains)(b,a)}
function module$contents$goog$labs$userAgent$util_matchUserAgentIgnoreCase(a){const b=module$contents$goog$labs$userAgent$util_getUserAgent();return(0,goog.string.internal.caseInsensitiveContains)(b,a)}function module$contents$goog$labs$userAgent$util_extractVersionTuples(a){const b=RegExp("([A-Z][\\\\w ]+)/([^\\\\s]+)\\\\s*(?:\\\\((.*?)\\\\))?","g"),c=[];let d;for(;d=b.exec(a);)c.push([d[1],d[2],d[3]||void 0]);return c}goog.labs.userAgent.util.ASSUME_CLIENT_HINTS_SUPPORT=module$contents$goog$labs$userAgent$util_ASSUME_CLIENT_HINTS_SUPPORT;
goog.labs.userAgent.util.extractVersionTuples=module$contents$goog$labs$userAgent$util_extractVersionTuples;goog.labs.userAgent.util.getNativeUserAgentString=module$contents$goog$labs$userAgent$util_getNativeUserAgentString;goog.labs.userAgent.util.getUserAgent=module$contents$goog$labs$userAgent$util_getUserAgent;goog.labs.userAgent.util.getUserAgentData=module$contents$goog$labs$userAgent$util_getUserAgentData;goog.labs.userAgent.util.matchUserAgent=module$contents$goog$labs$userAgent$util_matchUserAgent;
goog.labs.userAgent.util.matchUserAgentDataBrand=module$contents$goog$labs$userAgent$util_matchUserAgentDataBrand;goog.labs.userAgent.util.matchUserAgentIgnoreCase=module$contents$goog$labs$userAgent$util_matchUserAgentIgnoreCase;goog.labs.userAgent.util.resetUserAgentData=module$contents$goog$labs$userAgent$util_resetUserAgentData;goog.labs.userAgent.util.setUserAgent=module$contents$goog$labs$userAgent$util_setUserAgent;goog.labs.userAgent.util.setUserAgentData=module$contents$goog$labs$userAgent$util_setUserAgentData;var module$exports$goog$labs$userAgent$highEntropy$highEntropyValue={AsyncValue:class{getIfLoaded(){}load(){}},HighEntropyValue:class{constructor(a){this.key_=a;this.promise_=this.value_=void 0;this.pending_=!1}getIfLoaded(){if(module$contents$goog$labs$userAgent$util_getUserAgentData())return this.value_}async load(){const a=module$contents$goog$labs$userAgent$util_getUserAgentData();if(a)return this.promise_||(this.pending_=!0,this.promise_=(async()=>{try{return this.value_=(await a.getHighEntropyValues([this.key_]))[this.key_]}finally{this.pending_=
!1}})()),await this.promise_}resetForTesting(){if(this.pending_)throw Error("Unsafe call to resetForTesting");this.value_=this.promise_=void 0;this.pending_=!1}},Version:class{constructor(a){this.versionString_=a}toVersionStringForLogging(){return this.versionString_}isAtLeast(a){return 0<=(0,goog.string.internal.compareVersions)(this.versionString_,a)}}};var module$exports$goog$labs$userAgent$highEntropy$highEntropyData={};module$exports$goog$labs$userAgent$highEntropy$highEntropyData.fullVersionList=new module$exports$goog$labs$userAgent$highEntropy$highEntropyValue.HighEntropyValue("fullVersionList");module$exports$goog$labs$userAgent$highEntropy$highEntropyData.platformVersion=new module$exports$goog$labs$userAgent$highEntropy$highEntropyValue.HighEntropyValue("platformVersion");goog.labs.userAgent.browser={};const module$contents$goog$labs$userAgent$browser_Brand={ANDROID_BROWSER:"Android Browser",CHROMIUM:"Chromium",EDGE:"Microsoft Edge",FIREFOX:"Firefox",IE:"Internet Explorer",OPERA:"Opera",SAFARI:"Safari",SILK:"Silk"};goog.labs.userAgent.browser.Brand=module$contents$goog$labs$userAgent$browser_Brand;
function module$contents$goog$labs$userAgent$browser_useUserAgentDataBrand(a=!1){if(module$contents$goog$labs$userAgent$util_ASSUME_CLIENT_HINTS_SUPPORT)return!0;if(!a&&!(0,goog.labs.userAgent.useClientHints)())return!1;a=module$contents$goog$labs$userAgent$util_getUserAgentData();return!!a&&0<a.brands.length}
function module$contents$goog$labs$userAgent$browser_hasFullVersionList(){return module$contents$goog$labs$userAgent$browser_isAtLeast(module$contents$goog$labs$userAgent$browser_Brand.CHROMIUM,98)}function module$contents$goog$labs$userAgent$browser_matchOpera(){return module$contents$goog$labs$userAgent$browser_useUserAgentDataBrand()?!1:module$contents$goog$labs$userAgent$util_matchUserAgent("Opera")}
function module$contents$goog$labs$userAgent$browser_matchIE(){return module$contents$goog$labs$userAgent$browser_useUserAgentDataBrand()?!1:module$contents$goog$labs$userAgent$util_matchUserAgent("Trident")||module$contents$goog$labs$userAgent$util_matchUserAgent("MSIE")}function module$contents$goog$labs$userAgent$browser_matchEdgeHtml(){return module$contents$goog$labs$userAgent$browser_useUserAgentDataBrand()?!1:module$contents$goog$labs$userAgent$util_matchUserAgent("Edge")}
function module$contents$goog$labs$userAgent$browser_matchEdgeChromium(){return module$contents$goog$labs$userAgent$browser_useUserAgentDataBrand()?module$contents$goog$labs$userAgent$util_matchUserAgentDataBrand(module$contents$goog$labs$userAgent$browser_Brand.EDGE):module$contents$goog$labs$userAgent$util_matchUserAgent("Edg/")}
function module$contents$goog$labs$userAgent$browser_matchOperaChromium(){return module$contents$goog$labs$userAgent$browser_useUserAgentDataBrand()?module$contents$goog$labs$userAgent$util_matchUserAgentDataBrand(module$contents$goog$labs$userAgent$browser_Brand.OPERA):module$contents$goog$labs$userAgent$util_matchUserAgent("OPR")}
function module$contents$goog$labs$userAgent$browser_matchFirefox(){return module$contents$goog$labs$userAgent$util_matchUserAgent("Firefox")||module$contents$goog$labs$userAgent$util_matchUserAgent("FxiOS")}
function module$contents$goog$labs$userAgent$browser_matchSafari(){return module$contents$goog$labs$userAgent$util_matchUserAgent("Safari")&&!(module$contents$goog$labs$userAgent$browser_matchChrome()||module$contents$goog$labs$userAgent$browser_matchCoast()||module$contents$goog$labs$userAgent$browser_matchOpera()||module$contents$goog$labs$userAgent$browser_matchEdgeHtml()||module$contents$goog$labs$userAgent$browser_matchEdgeChromium()||module$contents$goog$labs$userAgent$browser_matchOperaChromium()||
module$contents$goog$labs$userAgent$browser_matchFirefox()||module$contents$goog$labs$userAgent$browser_isSilk()||module$contents$goog$labs$userAgent$util_matchUserAgent("Android"))}function module$contents$goog$labs$userAgent$browser_matchCoast(){return module$contents$goog$labs$userAgent$browser_useUserAgentDataBrand()?!1:module$contents$goog$labs$userAgent$util_matchUserAgent("Coast")}
function module$contents$goog$labs$userAgent$browser_matchIosWebview(){return(module$contents$goog$labs$userAgent$util_matchUserAgent("iPad")||module$contents$goog$labs$userAgent$util_matchUserAgent("iPhone"))&&!module$contents$goog$labs$userAgent$browser_matchSafari()&&!module$contents$goog$labs$userAgent$browser_matchChrome()&&!module$contents$goog$labs$userAgent$browser_matchCoast()&&!module$contents$goog$labs$userAgent$browser_matchFirefox()&&module$contents$goog$labs$userAgent$util_matchUserAgent("AppleWebKit")}
function module$contents$goog$labs$userAgent$browser_matchChrome(){return module$contents$goog$labs$userAgent$browser_useUserAgentDataBrand()?module$contents$goog$labs$userAgent$util_matchUserAgentDataBrand(module$contents$goog$labs$userAgent$browser_Brand.CHROMIUM):(module$contents$goog$labs$userAgent$util_matchUserAgent("Chrome")||module$contents$goog$labs$userAgent$util_matchUserAgent("CriOS"))&&!module$contents$goog$labs$userAgent$browser_matchEdgeHtml()||module$contents$goog$labs$userAgent$browser_isSilk()}
function module$contents$goog$labs$userAgent$browser_matchAndroidBrowser(){return module$contents$goog$labs$userAgent$util_matchUserAgent("Android")&&!(module$contents$goog$labs$userAgent$browser_matchChrome()||module$contents$goog$labs$userAgent$browser_matchFirefox()||module$contents$goog$labs$userAgent$browser_matchOpera()||module$contents$goog$labs$userAgent$browser_isSilk())}const module$contents$goog$labs$userAgent$browser_isOpera=module$contents$goog$labs$userAgent$browser_matchOpera;
goog.labs.userAgent.browser.isOpera=module$contents$goog$labs$userAgent$browser_matchOpera;const module$contents$goog$labs$userAgent$browser_isIE=module$contents$goog$labs$userAgent$browser_matchIE;goog.labs.userAgent.browser.isIE=module$contents$goog$labs$userAgent$browser_matchIE;const module$contents$goog$labs$userAgent$browser_isEdge=module$contents$goog$labs$userAgent$browser_matchEdgeHtml;goog.labs.userAgent.browser.isEdge=module$contents$goog$labs$userAgent$browser_matchEdgeHtml;
const module$contents$goog$labs$userAgent$browser_isEdgeChromium=module$contents$goog$labs$userAgent$browser_matchEdgeChromium;goog.labs.userAgent.browser.isEdgeChromium=module$contents$goog$labs$userAgent$browser_matchEdgeChromium;const module$contents$goog$labs$userAgent$browser_isOperaChromium=module$contents$goog$labs$userAgent$browser_matchOperaChromium;goog.labs.userAgent.browser.isOperaChromium=module$contents$goog$labs$userAgent$browser_matchOperaChromium;
const module$contents$goog$labs$userAgent$browser_isFirefox=module$contents$goog$labs$userAgent$browser_matchFirefox;goog.labs.userAgent.browser.isFirefox=module$contents$goog$labs$userAgent$browser_matchFirefox;const module$contents$goog$labs$userAgent$browser_isSafari=module$contents$goog$labs$userAgent$browser_matchSafari;goog.labs.userAgent.browser.isSafari=module$contents$goog$labs$userAgent$browser_matchSafari;const module$contents$goog$labs$userAgent$browser_isCoast=module$contents$goog$labs$userAgent$browser_matchCoast;
goog.labs.userAgent.browser.isCoast=module$contents$goog$labs$userAgent$browser_matchCoast;const module$contents$goog$labs$userAgent$browser_isIosWebview=module$contents$goog$labs$userAgent$browser_matchIosWebview;goog.labs.userAgent.browser.isIosWebview=module$contents$goog$labs$userAgent$browser_matchIosWebview;const module$contents$goog$labs$userAgent$browser_isChrome=module$contents$goog$labs$userAgent$browser_matchChrome;goog.labs.userAgent.browser.isChrome=module$contents$goog$labs$userAgent$browser_matchChrome;
const module$contents$goog$labs$userAgent$browser_isAndroidBrowser=module$contents$goog$labs$userAgent$browser_matchAndroidBrowser;goog.labs.userAgent.browser.isAndroidBrowser=module$contents$goog$labs$userAgent$browser_matchAndroidBrowser;function module$contents$goog$labs$userAgent$browser_isSilk(){return module$contents$goog$labs$userAgent$util_matchUserAgent("Silk")}goog.labs.userAgent.browser.isSilk=module$contents$goog$labs$userAgent$browser_isSilk;
function module$contents$goog$labs$userAgent$browser_createVersionMap(a){const b={};a.forEach(c=>{b[c[0]]=c[1]});return c=>b[c.find(d=>d in b)]||""}
function module$contents$goog$labs$userAgent$browser_getVersion(){var a=module$contents$goog$labs$userAgent$util_getUserAgent();if(module$contents$goog$labs$userAgent$browser_matchIE())return module$contents$goog$labs$userAgent$browser_getIEVersion(a);a=module$contents$goog$labs$userAgent$util_extractVersionTuples(a);const b=module$contents$goog$labs$userAgent$browser_createVersionMap(a);return module$contents$goog$labs$userAgent$browser_matchOpera()?b(["Version","Opera"]):module$contents$goog$labs$userAgent$browser_matchEdgeHtml()?
b(["Edge"]):module$contents$goog$labs$userAgent$browser_matchEdgeChromium()?b(["Edg"]):module$contents$goog$labs$userAgent$browser_isSilk()?b(["Silk"]):module$contents$goog$labs$userAgent$browser_matchChrome()?b(["Chrome","CriOS","HeadlessChrome"]):(a=a[2])&&a[1]||""}goog.labs.userAgent.browser.getVersion=module$contents$goog$labs$userAgent$browser_getVersion;
function module$contents$goog$labs$userAgent$browser_isVersionOrHigher(a){return 0<=(0,goog.string.internal.compareVersions)(module$contents$goog$labs$userAgent$browser_getVersion(),a)}goog.labs.userAgent.browser.isVersionOrHigher=module$contents$goog$labs$userAgent$browser_isVersionOrHigher;
function module$contents$goog$labs$userAgent$browser_getIEVersion(a){var b=/rv: *([\\d\\.]*)/.exec(a);if(b&&b[1])return b[1];b="";const c=/MSIE +([\\d\\.]+)/.exec(a);if(c&&c[1])if(a=/Trident\\/(\\d.\\d)/.exec(a),"7.0"==c[1])if(a&&a[1])switch(a[1]){case "4.0":b="8.0";break;case "5.0":b="9.0";break;case "6.0":b="10.0";break;case "7.0":b="11.0"}else b="7.0";else b=c[1];return b}
function module$contents$goog$labs$userAgent$browser_getFullVersionFromUserAgentString(a){var b=module$contents$goog$labs$userAgent$util_getUserAgent();if(a===module$contents$goog$labs$userAgent$browser_Brand.IE)return module$contents$goog$labs$userAgent$browser_matchIE()?module$contents$goog$labs$userAgent$browser_getIEVersion(b):"";b=module$contents$goog$labs$userAgent$util_extractVersionTuples(b);const c=module$contents$goog$labs$userAgent$browser_createVersionMap(b);switch(a){case module$contents$goog$labs$userAgent$browser_Brand.OPERA:if(module$contents$goog$labs$userAgent$browser_matchOpera())return c(["Version",
"Opera"]);if(module$contents$goog$labs$userAgent$browser_matchOperaChromium())return c(["OPR"]);break;case module$contents$goog$labs$userAgent$browser_Brand.EDGE:if(module$contents$goog$labs$userAgent$browser_matchEdgeHtml())return c(["Edge"]);if(module$contents$goog$labs$userAgent$browser_matchEdgeChromium())return c(["Edg"]);break;case module$contents$goog$labs$userAgent$browser_Brand.CHROMIUM:if(module$contents$goog$labs$userAgent$browser_matchChrome())return c(["Chrome","CriOS","HeadlessChrome"])}return a===
module$contents$goog$labs$userAgent$browser_Brand.FIREFOX&&module$contents$goog$labs$userAgent$browser_matchFirefox()||a===module$contents$goog$labs$userAgent$browser_Brand.SAFARI&&module$contents$goog$labs$userAgent$browser_matchSafari()||a===module$contents$goog$labs$userAgent$browser_Brand.ANDROID_BROWSER&&module$contents$goog$labs$userAgent$browser_matchAndroidBrowser()||a===module$contents$goog$labs$userAgent$browser_Brand.SILK&&module$contents$goog$labs$userAgent$browser_isSilk()?(a=b[2])&&
a[1]||"":""}
function module$contents$goog$labs$userAgent$browser_versionOf_(a){if(module$contents$goog$labs$userAgent$browser_useUserAgentDataBrand()&&a!==module$contents$goog$labs$userAgent$browser_Brand.SILK){var b=module$contents$goog$labs$userAgent$util_getUserAgentData().brands.find(({brand:c})=>c===a);if(!b||!b.version)return NaN;b=b.version.split(".")}else{b=module$contents$goog$labs$userAgent$browser_getFullVersionFromUserAgentString(a);if(""===b)return NaN;b=b.split(".")}return 0===b.length?NaN:Number(b[0])}
function module$contents$goog$labs$userAgent$browser_isAtLeast(a,b){(0,goog.asserts.assert)(Math.floor(b)===b,"Major version must be an integer");return module$contents$goog$labs$userAgent$browser_versionOf_(a)>=b}goog.labs.userAgent.browser.isAtLeast=module$contents$goog$labs$userAgent$browser_isAtLeast;
function module$contents$goog$labs$userAgent$browser_isAtMost(a,b){(0,goog.asserts.assert)(Math.floor(b)===b,"Major version must be an integer");return module$contents$goog$labs$userAgent$browser_versionOf_(a)<=b}goog.labs.userAgent.browser.isAtMost=module$contents$goog$labs$userAgent$browser_isAtMost;
class module$contents$goog$labs$userAgent$browser_HighEntropyBrandVersion{constructor(a,b,c){this.brand_=a;this.version_=new module$exports$goog$labs$userAgent$highEntropy$highEntropyValue.Version(c);this.useUach_=b}getIfLoaded(){if(this.useUach_){var a=module$exports$goog$labs$userAgent$highEntropy$highEntropyData.fullVersionList.getIfLoaded();if(void 0!==a)return a=a.find(({brand:b})=>this.brand_===b),(0,goog.asserts.assertExists)(a),new module$exports$goog$labs$userAgent$highEntropy$highEntropyValue.Version(a.version)}if(module$contents$goog$labs$userAgent$browser_preUachHasLoaded)return this.version_}async load(){if(this.useUach_){var a=
await module$exports$goog$labs$userAgent$highEntropy$highEntropyData.fullVersionList.load();if(void 0!==a)return a=a.find(({brand:b})=>this.brand_===b),(0,goog.asserts.assertExists)(a),new module$exports$goog$labs$userAgent$highEntropy$highEntropyValue.Version(a.version)}else await 0;module$contents$goog$labs$userAgent$browser_preUachHasLoaded=!0;return this.version_}}let module$contents$goog$labs$userAgent$browser_preUachHasLoaded=!1;
async function module$contents$goog$labs$userAgent$browser_loadFullVersions(){module$contents$goog$labs$userAgent$browser_useUserAgentDataBrand(!0)&&await module$exports$goog$labs$userAgent$highEntropy$highEntropyData.fullVersionList.load();module$contents$goog$labs$userAgent$browser_preUachHasLoaded=!0}goog.labs.userAgent.browser.loadFullVersions=module$contents$goog$labs$userAgent$browser_loadFullVersions;
goog.labs.userAgent.browser.resetForTesting=()=>{module$contents$goog$labs$userAgent$browser_preUachHasLoaded=!1;module$exports$goog$labs$userAgent$highEntropy$highEntropyData.fullVersionList.resetForTesting()};
function module$contents$goog$labs$userAgent$browser_fullVersionOf(a){let b="";module$contents$goog$labs$userAgent$browser_hasFullVersionList()||(b=module$contents$goog$labs$userAgent$browser_getFullVersionFromUserAgentString(a));const c=a!==module$contents$goog$labs$userAgent$browser_Brand.SILK&&module$contents$goog$labs$userAgent$browser_useUserAgentDataBrand(!0);if(c){if(!module$contents$goog$labs$userAgent$util_getUserAgentData().brands.find(({brand:d})=>d===a))return}else if(""===b)return;return new module$contents$goog$labs$userAgent$browser_HighEntropyBrandVersion(a,
c,b)}goog.labs.userAgent.browser.fullVersionOf=module$contents$goog$labs$userAgent$browser_fullVersionOf;
function module$contents$goog$labs$userAgent$browser_getVersionStringForLogging(a){if(module$contents$goog$labs$userAgent$browser_useUserAgentDataBrand(!0)){var b=module$contents$goog$labs$userAgent$browser_fullVersionOf(a);if(b){if(b=b.getIfLoaded())return b.toVersionStringForLogging();b=module$contents$goog$labs$userAgent$util_getUserAgentData().brands.find(({brand:c})=>c===a);(0,goog.asserts.assertExists)(b);return b.version}return""}return module$contents$goog$labs$userAgent$browser_getFullVersionFromUserAgentString(a)}
goog.labs.userAgent.browser.getVersionStringForLogging=module$contents$goog$labs$userAgent$browser_getVersionStringForLogging;goog.dom.tags={};goog.dom.tags.VOID_TAGS_={area:!0,base:!0,br:!0,col:!0,command:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0};goog.dom.tags.isVoidTag=function(a){return!0===goog.dom.tags.VOID_TAGS_[a]};const module$contents$goog$html$SafeHtml_CONSTRUCTOR_TOKEN_PRIVATE={};
class module$contents$goog$html$SafeHtml_SafeHtml{constructor(a,b){this.privateDoNotAccessOrElseSafeHtmlWrappedValue_=b===module$contents$goog$html$SafeHtml_CONSTRUCTOR_TOKEN_PRIVATE?a:"";this.implementsGoogStringTypedString=!0}getTypedStringValue(){return this.privateDoNotAccessOrElseSafeHtmlWrappedValue_.toString()}toString(){return this.privateDoNotAccessOrElseSafeHtmlWrappedValue_.toString()}static unwrap(a){return module$contents$goog$html$SafeHtml_SafeHtml.unwrapTrustedHTML(a).toString()}static unwrapTrustedHTML(a){if(a instanceof module$contents$goog$html$SafeHtml_SafeHtml&&
a.constructor===module$contents$goog$html$SafeHtml_SafeHtml)return a.privateDoNotAccessOrElseSafeHtmlWrappedValue_;goog.asserts.fail(\`expected object of type SafeHtml, got '\${a}' of type \`+goog.typeOf(a));return"type_error:SafeHtml"}static htmlEscape(a){if(a instanceof module$contents$goog$html$SafeHtml_SafeHtml)return a;a="object"==typeof a&&a.implementsGoogStringTypedString?a.getTypedStringValue():String(a);return module$contents$goog$html$SafeHtml_SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(goog.string.internal.htmlEscape(a))}static htmlEscapePreservingNewlines(a){if(a instanceof
module$contents$goog$html$SafeHtml_SafeHtml)return a;a=module$contents$goog$html$SafeHtml_SafeHtml.htmlEscape(a);return module$contents$goog$html$SafeHtml_SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(goog.string.internal.newLineToBr(module$contents$goog$html$SafeHtml_SafeHtml.unwrap(a)))}static htmlEscapePreservingNewlinesAndSpaces(a){if(a instanceof module$contents$goog$html$SafeHtml_SafeHtml)return a;a=module$contents$goog$html$SafeHtml_SafeHtml.htmlEscape(a);return module$contents$goog$html$SafeHtml_SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(goog.string.internal.whitespaceEscape(module$contents$goog$html$SafeHtml_SafeHtml.unwrap(a)))}static comment(a){return module$contents$goog$html$SafeHtml_SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse("\\x3c!--"+
goog.string.internal.htmlEscape(a)+"--\\x3e")}static create(a,b,c){module$contents$goog$html$SafeHtml_SafeHtml.verifyTagName(String(a));return module$contents$goog$html$SafeHtml_SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse(String(a),b,c)}static verifyTagName(a){if(!module$contents$goog$html$SafeHtml_VALID_NAMES_IN_TAG.test(a))throw Error(module$contents$goog$html$SafeHtml_SafeHtml.ENABLE_ERROR_MESSAGES?\`Invalid tag name <\${a}>.\`:"");if(a.toUpperCase()in module$contents$goog$html$SafeHtml_NOT_ALLOWED_TAG_NAMES)throw Error(module$contents$goog$html$SafeHtml_SafeHtml.ENABLE_ERROR_MESSAGES?
\`Tag name <\${a}> is not allowed for SafeHtml.\`:"");}static createIframe(a,b,c,d){a&&goog.html.TrustedResourceUrl.unwrap(a);const e={};e.src=a||null;e.srcdoc=b&&module$contents$goog$html$SafeHtml_SafeHtml.unwrap(b);a=module$contents$goog$html$SafeHtml_SafeHtml.combineAttributes(e,{sandbox:""},c);return module$contents$goog$html$SafeHtml_SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse("iframe",a,d)}static createSandboxIframe(a,b,c,d){if(!module$contents$goog$html$SafeHtml_SafeHtml.canUseSandboxIframe())throw Error(module$contents$goog$html$SafeHtml_SafeHtml.ENABLE_ERROR_MESSAGES?
"The browser does not support sandboxed iframes.":"");const e={};e.src=a?goog.html.SafeUrl.unwrap(goog.html.SafeUrl.sanitize(a)):null;e.srcdoc=b||null;e.sandbox="";a=module$contents$goog$html$SafeHtml_SafeHtml.combineAttributes(e,{},c);return module$contents$goog$html$SafeHtml_SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse("iframe",a,d)}static canUseSandboxIframe(){return goog.global.HTMLIFrameElement&&"sandbox"in goog.global.HTMLIFrameElement.prototype}static createScriptSrc(a,b){goog.html.TrustedResourceUrl.unwrap(a);
a=module$contents$goog$html$SafeHtml_SafeHtml.combineAttributes({src:a},{},b);return module$contents$goog$html$SafeHtml_SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse("script",a)}static createScript(a,b){for(var c in b)if(Object.prototype.hasOwnProperty.call(b,c)){var d=c.toLowerCase();if("language"==d||"src"==d||"text"==d)throw Error(module$contents$goog$html$SafeHtml_SafeHtml.ENABLE_ERROR_MESSAGES?\`Cannot set "\${d}" attribute\`:"");}c="";a=module$contents$goog$array_concat(a);for(d=0;d<
a.length;d++)c+=module$contents$goog$html$SafeScript_SafeScript.unwrap(a[d]);a=module$contents$goog$html$SafeHtml_SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(c);return module$contents$goog$html$SafeHtml_SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse("script",b,a)}static createStyle(a,b){b=module$contents$goog$html$SafeHtml_SafeHtml.combineAttributes({type:"text/css"},{},b);let c="";a=module$contents$goog$array_concat(a);for(let d=0;d<a.length;d++)c+=module$contents$goog$html$SafeStyleSheet_SafeStyleSheet.unwrap(a[d]);
a=module$contents$goog$html$SafeHtml_SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(c);return module$contents$goog$html$SafeHtml_SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse("style",b,a)}static createMetaRefresh(a,b){a=goog.html.SafeUrl.unwrap(goog.html.SafeUrl.sanitize(a));(module$contents$goog$labs$userAgent$browser_matchIE()||module$contents$goog$labs$userAgent$browser_matchEdgeHtml())&&goog.string.internal.contains(a,";")&&(a="'"+a.replace(/'/g,"%27")+"'");return module$contents$goog$html$SafeHtml_SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse("meta",
{"http-equiv":"refresh",content:(b||0)+"; url="+a})}static join(a,b){a=module$contents$goog$html$SafeHtml_SafeHtml.htmlEscape(a);const c=[],d=e=>{Array.isArray(e)?e.forEach(d):(e=module$contents$goog$html$SafeHtml_SafeHtml.htmlEscape(e),c.push(module$contents$goog$html$SafeHtml_SafeHtml.unwrap(e)))};b.forEach(d);return module$contents$goog$html$SafeHtml_SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(c.join(module$contents$goog$html$SafeHtml_SafeHtml.unwrap(a)))}static concat(a){return module$contents$goog$html$SafeHtml_SafeHtml.join(module$contents$goog$html$SafeHtml_SafeHtml.EMPTY,
Array.prototype.slice.call(arguments))}static createSafeHtmlSecurityPrivateDoNotAccessOrElse(a){const b=goog.html.trustedtypes.getPolicyPrivateDoNotAccessOrElse();a=b?b.createHTML(a):a;return new module$contents$goog$html$SafeHtml_SafeHtml(a,module$contents$goog$html$SafeHtml_CONSTRUCTOR_TOKEN_PRIVATE)}static createSafeHtmlTagSecurityPrivateDoNotAccessOrElse(a,b,c){b=\`<\${a}\`+module$contents$goog$html$SafeHtml_SafeHtml.stringifyAttributes(a,b);null==c?c=[]:Array.isArray(c)||(c=[c]);goog.dom.tags.isVoidTag(a.toLowerCase())?
(goog.asserts.assert(!c.length,\`Void tag <\${a}> does not allow content.\`),b+=">"):(c=module$contents$goog$html$SafeHtml_SafeHtml.concat(c),b+=">"+module$contents$goog$html$SafeHtml_SafeHtml.unwrap(c)+"</"+a+">");return module$contents$goog$html$SafeHtml_SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(b)}static stringifyAttributes(a,b){let c="";if(b)for(let d in b)if(Object.prototype.hasOwnProperty.call(b,d)){if(!module$contents$goog$html$SafeHtml_VALID_NAMES_IN_TAG.test(d))throw Error(module$contents$goog$html$SafeHtml_SafeHtml.ENABLE_ERROR_MESSAGES?
\`Invalid attribute name "\${d}".\`:"");const e=b[d];null!=e&&(c+=" "+module$contents$goog$html$SafeHtml_getAttrNameAndValue(a,d,e))}return c}static combineAttributes(a,b,c){const d={};for(var e in a)Object.prototype.hasOwnProperty.call(a,e)&&(goog.asserts.assert(e.toLowerCase()==e,"Must be lower case"),d[e]=a[e]);for(const f in b)Object.prototype.hasOwnProperty.call(b,f)&&(goog.asserts.assert(f.toLowerCase()==f,"Must be lower case"),d[f]=b[f]);if(c)for(const f in c)if(Object.prototype.hasOwnProperty.call(c,
f)){e=f.toLowerCase();if(e in a)throw Error(module$contents$goog$html$SafeHtml_SafeHtml.ENABLE_ERROR_MESSAGES?\`Cannot override "\${e}" attribute, got "\`+f+'" with value "'+c[f]+'"':"");e in b&&delete d[e];d[f]=c[f]}return d}}module$contents$goog$html$SafeHtml_SafeHtml.ENABLE_ERROR_MESSAGES=goog.DEBUG;module$contents$goog$html$SafeHtml_SafeHtml.SUPPORT_STYLE_ATTRIBUTE=!0;module$contents$goog$html$SafeHtml_SafeHtml.from=module$contents$goog$html$SafeHtml_SafeHtml.htmlEscape;
const module$contents$goog$html$SafeHtml_VALID_NAMES_IN_TAG=/^[a-zA-Z0-9-]+$/,module$contents$goog$html$SafeHtml_URL_ATTRIBUTES={action:!0,cite:!0,data:!0,formaction:!0,href:!0,manifest:!0,poster:!0,src:!0},module$contents$goog$html$SafeHtml_NOT_ALLOWED_TAG_NAMES={[goog.dom.TagName.APPLET]:!0,[goog.dom.TagName.BASE]:!0,[goog.dom.TagName.EMBED]:!0,[goog.dom.TagName.IFRAME]:!0,[goog.dom.TagName.LINK]:!0,[goog.dom.TagName.MATH]:!0,[goog.dom.TagName.META]:!0,[goog.dom.TagName.OBJECT]:!0,[goog.dom.TagName.SCRIPT]:!0,
[goog.dom.TagName.STYLE]:!0,[goog.dom.TagName.SVG]:!0,[goog.dom.TagName.TEMPLATE]:!0};
function module$contents$goog$html$SafeHtml_getAttrNameAndValue(a,b,c){if(c instanceof goog.string.Const)c=goog.string.Const.unwrap(c);else if("style"==b.toLowerCase())if(module$contents$goog$html$SafeHtml_SafeHtml.SUPPORT_STYLE_ATTRIBUTE)c=module$contents$goog$html$SafeHtml_getStyleValue(c);else throw Error(module$contents$goog$html$SafeHtml_SafeHtml.ENABLE_ERROR_MESSAGES?'Attribute "style" not supported.':"");else{if(/^on/i.test(b))throw Error(module$contents$goog$html$SafeHtml_SafeHtml.ENABLE_ERROR_MESSAGES?
\`Attribute "\${b}\`+'" requires goog.string.Const value, "'+c+'" given.':"");if(b.toLowerCase()in module$contents$goog$html$SafeHtml_URL_ATTRIBUTES)if(c instanceof goog.html.TrustedResourceUrl)c=goog.html.TrustedResourceUrl.unwrap(c);else if(c instanceof goog.html.SafeUrl)c=goog.html.SafeUrl.unwrap(c);else if("string"===typeof c)c=goog.html.SafeUrl.sanitize(c).getTypedStringValue();else throw Error(module$contents$goog$html$SafeHtml_SafeHtml.ENABLE_ERROR_MESSAGES?\`Attribute "\${b}" on tag "\${a}\`+'" requires goog.html.SafeUrl, goog.string.Const, or string, value "'+
c+'" given.':"");}c.implementsGoogStringTypedString&&(c=c.getTypedStringValue());goog.asserts.assert("string"===typeof c||"number"===typeof c,"String or number value expected, got "+typeof c+" with value: "+c);return\`\${b}="\`+goog.string.internal.htmlEscape(String(c))+'"'}
function module$contents$goog$html$SafeHtml_getStyleValue(a){if(!goog.isObject(a))throw Error(module$contents$goog$html$SafeHtml_SafeHtml.ENABLE_ERROR_MESSAGES?'The "style" attribute requires goog.html.SafeStyle or map of style properties, '+typeof a+" given: "+a:"");a instanceof module$contents$goog$html$SafeStyle_SafeStyle||(a=module$contents$goog$html$SafeStyle_SafeStyle.create(a));return module$contents$goog$html$SafeStyle_SafeStyle.unwrap(a)}
module$contents$goog$html$SafeHtml_SafeHtml.DOCTYPE_HTML=function(){return module$contents$goog$html$SafeHtml_SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse("<!DOCTYPE html>")}();module$contents$goog$html$SafeHtml_SafeHtml.EMPTY=new module$contents$goog$html$SafeHtml_SafeHtml(goog.global.trustedTypes&&goog.global.trustedTypes.emptyHTML||"",module$contents$goog$html$SafeHtml_CONSTRUCTOR_TOKEN_PRIVATE);module$contents$goog$html$SafeHtml_SafeHtml.BR=function(){return module$contents$goog$html$SafeHtml_SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse("<br>")}();
goog.html.SafeHtml=module$contents$goog$html$SafeHtml_SafeHtml;goog.html.uncheckedconversions={};goog.html.uncheckedconversions.safeHtmlFromStringKnownToSatisfyTypeContract=function(a,b){goog.asserts.assertString(goog.string.Const.unwrap(a),"must provide justification");goog.asserts.assert(!goog.string.internal.isEmptyOrWhitespace(goog.string.Const.unwrap(a)),"must provide non-empty justification");return module$contents$goog$html$SafeHtml_SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(b)};
goog.html.uncheckedconversions.safeScriptFromStringKnownToSatisfyTypeContract=function(a,b){goog.asserts.assertString(goog.string.Const.unwrap(a),"must provide justification");goog.asserts.assert(!goog.string.internal.isEmptyOrWhitespace(goog.string.Const.unwrap(a)),"must provide non-empty justification");return module$contents$goog$html$SafeScript_SafeScript.createSafeScriptSecurityPrivateDoNotAccessOrElse(b)};
goog.html.uncheckedconversions.safeStyleFromStringKnownToSatisfyTypeContract=function(a,b){goog.asserts.assertString(goog.string.Const.unwrap(a),"must provide justification");goog.asserts.assert(!goog.string.internal.isEmptyOrWhitespace(goog.string.Const.unwrap(a)),"must provide non-empty justification");return module$contents$goog$html$SafeStyle_SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse(b)};
goog.html.uncheckedconversions.safeStyleSheetFromStringKnownToSatisfyTypeContract=function(a,b){goog.asserts.assertString(goog.string.Const.unwrap(a),"must provide justification");goog.asserts.assert(!goog.string.internal.isEmptyOrWhitespace(goog.string.Const.unwrap(a)),"must provide non-empty justification");return module$contents$goog$html$SafeStyleSheet_SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse(b)};
goog.html.uncheckedconversions.safeUrlFromStringKnownToSatisfyTypeContract=function(a,b){goog.asserts.assertString(goog.string.Const.unwrap(a),"must provide justification");goog.asserts.assert(!goog.string.internal.isEmptyOrWhitespace(goog.string.Const.unwrap(a)),"must provide non-empty justification");return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(b)};
goog.html.uncheckedconversions.trustedResourceUrlFromStringKnownToSatisfyTypeContract=function(a,b){goog.asserts.assertString(goog.string.Const.unwrap(a),"must provide justification");goog.asserts.assert(!goog.string.internal.isEmptyOrWhitespace(goog.string.Const.unwrap(a)),"must provide non-empty justification");return goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(b)};goog.dom.safe={};goog.dom.safe.InsertAdjacentHtmlPosition={AFTERBEGIN:"afterbegin",AFTEREND:"afterend",BEFOREBEGIN:"beforebegin",BEFOREEND:"beforeend"};goog.dom.safe.insertAdjacentHtml=function(a,b,c){a.insertAdjacentHTML(b,module$contents$goog$html$SafeHtml_SafeHtml.unwrapTrustedHTML(c))};goog.dom.safe.SET_INNER_HTML_DISALLOWED_TAGS_={MATH:!0,SCRIPT:!0,STYLE:!0,SVG:!0,TEMPLATE:!0};
goog.dom.safe.isInnerHtmlCleanupRecursive_=goog.functions.cacheReturnValue(function(){if(goog.DEBUG&&"undefined"===typeof document)return!1;var a=document.createElement("div"),b=document.createElement("div");b.appendChild(document.createElement("div"));a.appendChild(b);if(goog.DEBUG&&!a.firstChild)return!1;b=a.firstChild.firstChild;a.innerHTML=module$contents$goog$html$SafeHtml_SafeHtml.unwrapTrustedHTML(module$contents$goog$html$SafeHtml_SafeHtml.EMPTY);return!b.parentElement});
goog.dom.safe.unsafeSetInnerHtmlDoNotUseOrElse=function(a,b){if(goog.dom.safe.isInnerHtmlCleanupRecursive_())for(;a.lastChild;)a.removeChild(a.lastChild);a.innerHTML=module$contents$goog$html$SafeHtml_SafeHtml.unwrapTrustedHTML(b)};
goog.dom.safe.setInnerHtml=function(a,b){if(goog.asserts.ENABLE_ASSERTS&&a.tagName){var c=a.tagName.toUpperCase();if(goog.dom.safe.SET_INNER_HTML_DISALLOWED_TAGS_[c])throw Error("goog.dom.safe.setInnerHtml cannot be used to set content of "+a.tagName+".");}goog.dom.safe.unsafeSetInnerHtmlDoNotUseOrElse(a,b)};
goog.dom.safe.setInnerHtmlFromConstant=function(a,b){goog.dom.safe.setInnerHtml(a,goog.html.uncheckedconversions.safeHtmlFromStringKnownToSatisfyTypeContract(goog.string.Const.from("Constant HTML to be immediatelly used."),goog.string.Const.unwrap(b)))};goog.dom.safe.setOuterHtml=function(a,b){a.outerHTML=module$contents$goog$html$SafeHtml_SafeHtml.unwrapTrustedHTML(b)};
goog.dom.safe.setFormElementAction=function(a,b){b=b instanceof goog.html.SafeUrl?b:goog.html.SafeUrl.sanitizeAssertUnchanged(b);goog.dom.asserts.assertIsHTMLFormElement(a).action=goog.html.SafeUrl.unwrap(b)};goog.dom.safe.setButtonFormAction=function(a,b){b=b instanceof goog.html.SafeUrl?b:goog.html.SafeUrl.sanitizeAssertUnchanged(b);goog.dom.asserts.assertIsHTMLButtonElement(a).formAction=goog.html.SafeUrl.unwrap(b)};
goog.dom.safe.setInputFormAction=function(a,b){b=b instanceof goog.html.SafeUrl?b:goog.html.SafeUrl.sanitizeAssertUnchanged(b);goog.dom.asserts.assertIsHTMLInputElement(a).formAction=goog.html.SafeUrl.unwrap(b)};goog.dom.safe.setStyle=function(a,b){a.style.cssText=module$contents$goog$html$SafeStyle_SafeStyle.unwrap(b)};goog.dom.safe.documentWrite=function(a,b){a.write(module$contents$goog$html$SafeHtml_SafeHtml.unwrapTrustedHTML(b))};
goog.dom.safe.setAnchorHref=function(a,b){goog.dom.asserts.assertIsHTMLAnchorElement(a);b=b instanceof goog.html.SafeUrl?b:goog.html.SafeUrl.sanitizeAssertUnchanged(b);a.href=goog.html.SafeUrl.unwrap(b)};goog.dom.safe.setAudioSrc=function(a,b){goog.dom.asserts.assertIsHTMLAudioElement(a);if(!(b instanceof goog.html.SafeUrl)){var c=/^data:audio\\//i.test(b);b=goog.html.SafeUrl.sanitizeAssertUnchanged(b,c)}a.src=goog.html.SafeUrl.unwrap(b)};
goog.dom.safe.setVideoSrc=function(a,b){goog.dom.asserts.assertIsHTMLVideoElement(a);if(!(b instanceof goog.html.SafeUrl)){var c=/^data:video\\//i.test(b);b=goog.html.SafeUrl.sanitizeAssertUnchanged(b,c)}a.src=goog.html.SafeUrl.unwrap(b)};goog.dom.safe.setEmbedSrc=function(a,b){goog.dom.asserts.assertIsHTMLEmbedElement(a);a.src=goog.html.TrustedResourceUrl.unwrapTrustedScriptURL(b)};goog.dom.safe.setFrameSrc=function(a,b){goog.dom.asserts.assertIsHTMLFrameElement(a);a.src=goog.html.TrustedResourceUrl.unwrap(b)};
goog.dom.safe.setIframeSrc=function(a,b){goog.dom.asserts.assertIsHTMLIFrameElement(a);a.src=goog.html.TrustedResourceUrl.unwrap(b)};goog.dom.safe.setIframeSrcdoc=function(a,b){goog.dom.asserts.assertIsHTMLIFrameElement(a);a.srcdoc=module$contents$goog$html$SafeHtml_SafeHtml.unwrapTrustedHTML(b)};
goog.dom.safe.setLinkHrefAndRel=function(a,b,c){goog.dom.asserts.assertIsHTMLLinkElement(a);a.rel=c;goog.string.internal.caseInsensitiveContains(c,"stylesheet")?(goog.asserts.assert(b instanceof goog.html.TrustedResourceUrl,'URL must be TrustedResourceUrl because "rel" contains "stylesheet"'),a.href=goog.html.TrustedResourceUrl.unwrap(b),(b=goog.dom.safe.getStyleNonce(a.ownerDocument&&a.ownerDocument.defaultView))&&a.setAttribute("nonce",b)):a.href=b instanceof goog.html.TrustedResourceUrl?goog.html.TrustedResourceUrl.unwrap(b):
b instanceof goog.html.SafeUrl?goog.html.SafeUrl.unwrap(b):goog.html.SafeUrl.unwrap(goog.html.SafeUrl.sanitizeAssertUnchanged(b))};goog.dom.safe.setObjectData=function(a,b){goog.dom.asserts.assertIsHTMLObjectElement(a);a.data=goog.html.TrustedResourceUrl.unwrapTrustedScriptURL(b)};goog.dom.safe.setScriptSrc=function(a,b){goog.dom.asserts.assertIsHTMLScriptElement(a);goog.dom.safe.setNonceForScriptElement_(a);a.src=goog.html.TrustedResourceUrl.unwrapTrustedScriptURL(b)};
goog.dom.safe.setScriptContent=function(a,b){goog.dom.asserts.assertIsHTMLScriptElement(a);goog.dom.safe.setNonceForScriptElement_(a);a.textContent=module$contents$goog$html$SafeScript_SafeScript.unwrapTrustedScript(b)};goog.dom.safe.setNonceForScriptElement_=function(a){const b=goog.dom.safe.getScriptNonce(a.ownerDocument&&a.ownerDocument.defaultView);b&&a.setAttribute("nonce",b)};
goog.dom.safe.setLocationHref=function(a,b){goog.dom.asserts.assertIsLocation(a);b=b instanceof goog.html.SafeUrl?b:goog.html.SafeUrl.sanitizeAssertUnchanged(b);a.href=goog.html.SafeUrl.unwrap(b)};goog.dom.safe.assignLocation=function(a,b){goog.dom.asserts.assertIsLocation(a);b=b instanceof goog.html.SafeUrl?b:goog.html.SafeUrl.sanitizeAssertUnchanged(b);a.assign(goog.html.SafeUrl.unwrap(b))};
goog.dom.safe.replaceLocation=function(a,b){b=b instanceof goog.html.SafeUrl?b:goog.html.SafeUrl.sanitizeAssertUnchanged(b);a.replace(goog.html.SafeUrl.unwrap(b))};goog.dom.safe.openInWindow=function(a,b,c,d){a=a instanceof goog.html.SafeUrl?a:goog.html.SafeUrl.sanitizeAssertUnchanged(a);b=b||goog.global;c=c instanceof goog.string.Const?goog.string.Const.unwrap(c):c||"";return void 0!==d?b.open(goog.html.SafeUrl.unwrap(a),c,d):b.open(goog.html.SafeUrl.unwrap(a),c)};
goog.dom.safe.parseFromStringHtml=function(a,b){return goog.dom.safe.parseFromString(a,b,"text/html")};goog.dom.safe.parseFromString=function(a,b,c){return a.parseFromString(module$contents$goog$html$SafeHtml_SafeHtml.unwrapTrustedHTML(b),c)};
goog.dom.safe.createImageFromBlob=function(a){if(!/^image\\/.*/g.test(a.type))throw Error("goog.dom.safe.createImageFromBlob only accepts MIME type image/.*.");var b=goog.global.URL.createObjectURL(a);a=new goog.global.Image;a.onload=function(){goog.global.URL.revokeObjectURL(b)};a.src=b;return a};goog.dom.safe.createContextualFragment=function(a,b){return a.createContextualFragment(module$contents$goog$html$SafeHtml_SafeHtml.unwrapTrustedHTML(b))};
goog.dom.safe.getScriptNonce=function(a){return goog.dom.safe.getNonce_("script[nonce]",a)};goog.dom.safe.getStyleNonce=function(a){return goog.dom.safe.getNonce_('style[nonce],link[rel="stylesheet"][nonce]',a)};goog.dom.safe.NONCE_PATTERN_=/^[\\w+/_-]+[=]{0,2}$/;goog.dom.safe.getNonce_=function(a,b){b=(b||goog.global).document;return b.querySelector?(a=b.querySelector(a))&&(a=a.nonce||a.getAttribute("nonce"))&&goog.dom.safe.NONCE_PATTERN_.test(a)?a:"":""};goog.string.DETECT_DOUBLE_ESCAPING=!1;goog.string.FORCE_NON_DOM_HTML_UNESCAPING=!1;goog.string.Unicode={NBSP:"\\u00a0",ZERO_WIDTH_SPACE:"\\u200b"};goog.string.startsWith=goog.string.internal.startsWith;goog.string.endsWith=goog.string.internal.endsWith;goog.string.caseInsensitiveStartsWith=goog.string.internal.caseInsensitiveStartsWith;goog.string.caseInsensitiveEndsWith=goog.string.internal.caseInsensitiveEndsWith;goog.string.caseInsensitiveEquals=goog.string.internal.caseInsensitiveEquals;
goog.string.subs=function(a,b){const c=a.split("%s");let d="";const e=Array.prototype.slice.call(arguments,1);for(;e.length&&1<c.length;)d+=c.shift()+e.shift();return d+c.join("%s")};goog.string.collapseWhitespace=function(a){return a.replace(/[\\s\\xa0]+/g," ").replace(/^\\s+|\\s+$/g,"")};goog.string.isEmptyOrWhitespace=goog.string.internal.isEmptyOrWhitespace;goog.string.isEmptyString=function(a){return 0==a.length};goog.string.isEmpty=goog.string.isEmptyOrWhitespace;
goog.string.isEmptyOrWhitespaceSafe=function(a){return goog.string.isEmptyOrWhitespace(goog.string.makeSafe(a))};goog.string.isEmptySafe=goog.string.isEmptyOrWhitespaceSafe;goog.string.isBreakingWhitespace=function(a){return!/[^\\t\\n\\r ]/.test(a)};goog.string.isAlpha=function(a){return!/[^a-zA-Z]/.test(a)};goog.string.isNumeric=function(a){return!/[^0-9]/.test(a)};goog.string.isAlphaNumeric=function(a){return!/[^a-zA-Z0-9]/.test(a)};goog.string.isSpace=function(a){return" "==a};
goog.string.isUnicodeChar=function(a){return 1==a.length&&" "<=a&&"~">=a||"\\u0080"<=a&&"\\ufffd">=a};goog.string.stripNewlines=function(a){return a.replace(/(\\r\\n|\\r|\\n)+/g," ")};goog.string.canonicalizeNewlines=function(a){return a.replace(/(\\r\\n|\\r|\\n)/g,"\\n")};goog.string.normalizeWhitespace=function(a){return a.replace(/\\xa0|\\s/g," ")};goog.string.normalizeSpaces=function(a){return a.replace(/\\xa0|[ \\t]+/g," ")};
goog.string.collapseBreakingSpaces=function(a){return a.replace(/[\\t\\r\\n ]+/g," ").replace(/^[\\t\\r\\n ]+|[\\t\\r\\n ]+$/g,"")};goog.string.trim=goog.string.internal.trim;goog.string.trimLeft=function(a){return a.replace(/^[\\s\\xa0]+/,"")};goog.string.trimRight=function(a){return a.replace(/[\\s\\xa0]+$/,"")};goog.string.caseInsensitiveCompare=goog.string.internal.caseInsensitiveCompare;
goog.string.numberAwareCompare_=function(a,b,c){if(a==b)return 0;if(!a)return-1;if(!b)return 1;const d=a.toLowerCase().match(c),e=b.toLowerCase().match(c),f=Math.min(d.length,e.length);for(let g=0;g<f;g++){c=d[g];const h=e[g];if(c!=h)return a=parseInt(c,10),!isNaN(a)&&(b=parseInt(h,10),!isNaN(b)&&a-b)?a-b:c<h?-1:1}return d.length!=e.length?d.length-e.length:a<b?-1:1};goog.string.intAwareCompare=function(a,b){return goog.string.numberAwareCompare_(a,b,/\\d+|\\D+/g)};
goog.string.floatAwareCompare=function(a,b){return goog.string.numberAwareCompare_(a,b,/\\d+|\\.\\d+|\\D+/g)};goog.string.numerateCompare=goog.string.floatAwareCompare;goog.string.urlEncode=function(a){return encodeURIComponent(String(a))};goog.string.urlDecode=function(a){return decodeURIComponent(a.replace(/\\+/g," "))};goog.string.newLineToBr=goog.string.internal.newLineToBr;
goog.string.htmlEscape=function(a,b){a=goog.string.internal.htmlEscape(a,b);goog.string.DETECT_DOUBLE_ESCAPING&&(a=a.replace(goog.string.E_RE_,"&#101;"));return a};goog.string.E_RE_=/e/g;goog.string.unescapeEntities=function(a){return goog.string.contains(a,"&")?!goog.string.FORCE_NON_DOM_HTML_UNESCAPING&&"document"in goog.global?goog.string.unescapeEntitiesUsingDom_(a):goog.string.unescapePureXmlEntities_(a):a};
goog.string.unescapeEntitiesWithDocument=function(a,b){return goog.string.contains(a,"&")?goog.string.unescapeEntitiesUsingDom_(a,b):a};
goog.string.unescapeEntitiesUsingDom_=function(a,b){const c={"&amp;":"&","&lt;":"<","&gt;":">","&quot;":'"'};let d;d=b?b.createElement("div"):goog.global.document.createElement("div");return a.replace(goog.string.HTML_ENTITY_PATTERN_,function(e,f){let g=c[e];if(g)return g;"#"==f.charAt(0)&&(f=Number("0"+f.slice(1)),isNaN(f)||(g=String.fromCharCode(f)));g||(goog.dom.safe.setInnerHtml(d,goog.html.uncheckedconversions.safeHtmlFromStringKnownToSatisfyTypeContract(goog.string.Const.from("Single HTML entity."),
e+" ")),g=d.firstChild.nodeValue.slice(0,-1));return c[e]=g})};goog.string.unescapePureXmlEntities_=function(a){return a.replace(/&([^;]+);/g,function(b,c){switch(c){case "amp":return"&";case "lt":return"<";case "gt":return">";case "quot":return'"';default:return"#"!=c.charAt(0)||(c=Number("0"+c.slice(1)),isNaN(c))?b:String.fromCharCode(c)}})};goog.string.HTML_ENTITY_PATTERN_=/&([^;\\s<&]+);?/g;goog.string.whitespaceEscape=function(a,b){return goog.string.newLineToBr(a.replace(/  /g," &#160;"),b)};
goog.string.preserveSpaces=function(a){return a.replace(/(^|[\\n ]) /g,"$1"+goog.string.Unicode.NBSP)};goog.string.stripQuotes=function(a,b){const c=b.length;for(let d=0;d<c;d++){const e=1==c?b:b.charAt(d);if(a.charAt(0)==e&&a.charAt(a.length-1)==e)return a.substring(1,a.length-1)}return a};goog.string.truncate=function(a,b,c){c&&(a=goog.string.unescapeEntities(a));a.length>b&&(a=a.substring(0,b-3)+"...");c&&(a=goog.string.htmlEscape(a));return a};
goog.string.truncateMiddle=function(a,b,c,d){c&&(a=goog.string.unescapeEntities(a));if(d&&a.length>b){d>b&&(d=b);var e=a.length-d;a=a.substring(0,b-d)+"..."+a.substring(e)}else a.length>b&&(d=Math.floor(b/2),e=a.length-d,a=a.substring(0,d+b%2)+"..."+a.substring(e));c&&(a=goog.string.htmlEscape(a));return a};goog.string.specialEscapeChars_={"\\x00":"\\\\0","\\b":"\\\\b","\\f":"\\\\f","\\n":"\\\\n","\\r":"\\\\r","\\t":"\\\\t","\\v":"\\\\x0B",'"':'\\\\"',"\\\\":"\\\\\\\\","<":"\\\\u003C"};goog.string.jsEscapeCache_={"'":"\\\\'"};
goog.string.quote=function(a){a=String(a);const b=['"'];for(let c=0;c<a.length;c++){const d=a.charAt(c),e=d.charCodeAt(0);b[c+1]=goog.string.specialEscapeChars_[d]||(31<e&&127>e?d:goog.string.escapeChar(d))}b.push('"');return b.join("")};goog.string.escapeString=function(a){const b=[];for(let c=0;c<a.length;c++)b[c]=goog.string.escapeChar(a.charAt(c));return b.join("")};
goog.string.escapeChar=function(a){if(a in goog.string.jsEscapeCache_)return goog.string.jsEscapeCache_[a];if(a in goog.string.specialEscapeChars_)return goog.string.jsEscapeCache_[a]=goog.string.specialEscapeChars_[a];let b;const c=a.charCodeAt(0);if(31<c&&127>c)b=a;else{if(256>c){if(b="\\\\x",16>c||256<c)b+="0"}else b="\\\\u",4096>c&&(b+="0");b+=c.toString(16).toUpperCase()}return goog.string.jsEscapeCache_[a]=b};goog.string.contains=goog.string.internal.contains;
goog.string.caseInsensitiveContains=goog.string.internal.caseInsensitiveContains;goog.string.countOf=function(a,b){return a&&b?a.split(b).length-1:0};goog.string.removeAt=function(a,b,c){let d=a;0<=b&&b<a.length&&0<c&&(d=a.slice(0,b)+a.slice(b+c));return d};goog.string.remove=function(a,b){return a.replace(b,"")};goog.string.removeAll=function(a,b){b=new RegExp(goog.string.regExpEscape(b),"g");return a.replace(b,"")};
goog.string.replaceAll=function(a,b,c){b=new RegExp(goog.string.regExpEscape(b),"g");return a.replace(b,c.replace(/\\$/g,"$$$$"))};goog.string.regExpEscape=function(a){return String(a).replace(/([-()\\[\\]{}+?*.$\\^|,:#<!\\\\])/g,"\\\\$1").replace(/\\x08/g,"\\\\x08")};goog.string.repeat=String.prototype.repeat?function(a,b){return a.repeat(b)}:function(a,b){return Array(b+1).join(a)};
goog.string.padNumber=function(a,b,c){if(!Number.isFinite(a))return String(a);a=void 0!==c?a.toFixed(c):String(a);c=a.indexOf(".");-1===c&&(c=a.length);const d="-"===a[0]?"-":"";d&&(a=a.substring(1));return d+goog.string.repeat("0",Math.max(0,b-c))+a};goog.string.makeSafe=function(a){return null==a?"":String(a)};goog.string.getRandomString=function(){return Math.floor(2147483648*Math.random()).toString(36)+Math.abs(Math.floor(2147483648*Math.random())^goog.now()).toString(36)};
goog.string.compareVersions=goog.string.internal.compareVersions;goog.string.hashCode=function(a){let b=0;for(let c=0;c<a.length;++c)b=31*b+a.charCodeAt(c)>>>0;return b};goog.string.uniqueStringCounter_=2147483648*Math.random()|0;goog.string.createUniqueString=function(){return"goog_"+goog.string.uniqueStringCounter_++};goog.string.toNumber=function(a){const b=Number(a);return 0==b&&goog.string.isEmptyOrWhitespace(a)?NaN:b};goog.string.isLowerCamelCase=function(a){return/^[a-z]+([A-Z][a-z]*)*$/.test(a)};
goog.string.isUpperCamelCase=function(a){return/^([A-Z][a-z]*)+$/.test(a)};goog.string.toCamelCase=function(a){return String(a).replace(/\\-([a-z])/g,function(b,c){return c.toUpperCase()})};goog.string.toSelectorCase=function(a){return String(a).replace(/([A-Z])/g,"-$1").toLowerCase()};goog.string.toTitleCase=function(a,b){b="string"===typeof b?goog.string.regExpEscape(b):"\\\\s";return a.replace(new RegExp("(^"+(b?"|["+b+"]+":"")+")([a-z])","g"),function(c,d,e){return d+e.toUpperCase()})};
goog.string.capitalize=function(a){return String(a.charAt(0)).toUpperCase()+String(a.slice(1)).toLowerCase()};goog.string.parseInt=function(a){isFinite(a)&&(a=String(a));return"string"===typeof a?/^\\s*-?0x/i.test(a)?parseInt(a,16):parseInt(a,10):NaN};goog.string.splitLimit=function(a,b,c){a=a.split(b);const d=[];for(;0<c&&a.length;)d.push(a.shift()),c--;a.length&&d.push(a.join(b));return d};
goog.string.lastComponent=function(a,b){if(b)"string"==typeof b&&(b=[b]);else return a;let c=-1;for(let d=0;d<b.length;d++){if(""==b[d])continue;const e=a.lastIndexOf(b[d]);e>c&&(c=e)}return-1==c?a:a.slice(c+1)};
goog.string.editDistance=function(a,b){const c=[],d=[];if(a==b)return 0;if(!a.length||!b.length)return Math.max(a.length,b.length);for(var e=0;e<b.length+1;e++)c[e]=e;for(e=0;e<a.length;e++){d[0]=e+1;for(var f=0;f<b.length;f++)d[f+1]=Math.min(d[f]+1,c[f+1]+1,c[f]+Number(a[e]!=b[f]));for(f=0;f<c.length;f++)c[f]=d[f]}return d[b.length]};goog.string.path={};goog.string.path.baseName=function(a){const b=a.lastIndexOf("/")+1;return a.slice(b)};goog.string.path.basename=goog.string.path.baseName;goog.string.path.dirname=function(a){const b=a.lastIndexOf("/")+1;a=a.slice(0,b);/^\\/+$/.test(a)||(a=a.replace(/\\/+$/,""));return a};goog.string.path.extension=function(a){a=goog.string.path.baseName(a).replace(/\\.+/g,".");const b=a.lastIndexOf(".");return 0>=b?"":a.slice(b+1)};
goog.string.path.join=function(a){let b=arguments[0];for(let c=1;c<arguments.length;c++){const d=arguments[c];b=goog.string.startsWith(d,"/")?d:""==b||goog.string.endsWith(b,"/")?b+d:b+("/"+d)}return b};
goog.string.path.normalizePath=function(a){if(""==a)return".";let b="";goog.string.startsWith(a,"/")&&(b="/",goog.string.startsWith(a,"//")&&!goog.string.startsWith(a,"///")&&(b="//"));a=a.split("/");const c=[];for(let d=0;d<a.length;d++){const e=a[d];""!=e&&"."!=e&&(".."!=e||!b&&!c.length||".."==module$contents$goog$array_peek(c)?c.push(e):c.pop())}return b+c.join("/")||"."};goog.string.path.split=function(a){const b=goog.string.path.dirname(a);a=goog.string.path.baseName(a);return[b,a]};const DEBUG_WASI$$module$src$filesystem$wasi=!1;function assertLeadingSlash$$module$src$filesystem$wasi(a){return/^\\//g.test(a)?a:\`/\${a}\`}function removeLeadingSlash$$module$src$filesystem$wasi(a){return a.replace(/^\\//g,"")}function shouldOpenReader$$module$src$filesystem$wasi(a){return(a&(WASI_RIGHT_FD_READ$$module$src$filesystem$constants|WASI_RIGHT_FD_READDIR$$module$src$filesystem$constants))!==goog.global.BigInt(0)}
function performanceNowPoly$$module$src$filesystem$wasi(){if("undefined"===typeof performance||"undefined"===typeof performance.now){const a=Date.now();return Date.now()-a}return performance.now()}function concatUint8Arrays$$module$src$filesystem$wasi(a){var b=a.reduce((d,e)=>d+e.length,0);if(0!==a.length){b=new Uint8Array(b);var c=0;for(const d of a)b.set(d,c),c+=d.length;return b}}
const WASI$$module$src$filesystem$wasi=function({}){this.fd=Array.from({length:4});this.fd[0]={fd:0,path:"/dev/stdin",seekPos:goog.global.BigInt(0),buffers:[],open:!1};this.fd[1]={fd:1,path:"/dev/stdout",seekPos:goog.global.BigInt(0),buffers:[],open:!1};this.fd[2]={fd:2,path:"/dev/stderr",seekPos:goog.global.BigInt(0),buffers:[],open:!1};this.fd[3]={fd:3,path:"/",seekPos:goog.global.BigInt(0),buffers:[],open:!1};this.getMemory=this.getMemory.bind(this);this.CPUTIME_START=0};
WASI$$module$src$filesystem$wasi.prototype.start=function(a){this.CPUTIME_START=performanceNowPoly$$module$src$filesystem$wasi();a.exports._start()};WASI$$module$src$filesystem$wasi.prototype.getImports=function(a){const b={};a=WebAssembly.Module.imports(a);for(const c of a)"function"===c.kind&&c.module.startsWith("wasi_")&&("object"!==typeof b[c.module]&&(b[c.module]={}),b[c.module][c.name]=this[c.name].bind(this));return b};
WASI$$module$src$filesystem$wasi.prototype.setMemory=function(a){this.memory=a};WASI$$module$src$filesystem$wasi.prototype.getMemory=function(){this.view&&this.view.buffer&&this.view.buffer.byteLength||(this.view=new DataView(this.memory.buffer));return this.view};WASI$$module$src$filesystem$wasi.prototype.msToNs=function(a){const b=Math.trunc(a);a=goog.global.BigInt(Math.round(1E6*(a-b)));return goog.global.BigInt(b)*goog.global.BigInt(1E6)+a};
WASI$$module$src$filesystem$wasi.prototype.now=function(a){switch(a){case WASI_CLOCK_MONOTONIC$$module$src$filesystem$constants:return Math.floor(performanceNowPoly$$module$src$filesystem$wasi());case WASI_CLOCK_REALTIME$$module$src$filesystem$constants:return this.msToNs(Date.now());case WASI_CLOCK_PROCESS_CPUTIME_ID$$module$src$filesystem$constants:case WASI_CLOCK_THREAD_CPUTIME_ID$$module$src$filesystem$constants:return Math.floor(performanceNowPoly$$module$src$filesystem$wasi()-this.CPUTIME_START);
default:return 0}};WASI$$module$src$filesystem$wasi.prototype.args_get=function(a,b){DEBUG_WASI$$module$src$filesystem$wasi&&console.log("args_get",a,b,module$src$filesystem$constants);return WASI_ESUCCESS$$module$src$filesystem$constants};WASI$$module$src$filesystem$wasi.prototype.args_sizes_get=function(a,b){DEBUG_WASI$$module$src$filesystem$wasi&&console.log("args_sizes_get",a,b,arguments);return WASI_ESUCCESS$$module$src$filesystem$constants};
WASI$$module$src$filesystem$wasi.prototype.clock_res_get=function(a,b){DEBUG_WASI$$module$src$filesystem$wasi&&console.log("args_get",a,b,arguments);return WASI_ESUCCESS$$module$src$filesystem$constants};WASI$$module$src$filesystem$wasi.prototype.clock_time_get=function(a,b,c){DEBUG_WASI$$module$src$filesystem$wasi&&console.log("clock_time_get",a,b,c,arguments);const d=this.getMemory(),e=this.now(a);d.setBigUint64(c,goog.global.BigInt(e),!0);return WASI_ESUCCESS$$module$src$filesystem$constants};
WASI$$module$src$filesystem$wasi.prototype.environ_get=function(a,b){DEBUG_WASI$$module$src$filesystem$wasi&&console.log("environ_get",a,b,arguments);return WASI_ESUCCESS$$module$src$filesystem$constants};WASI$$module$src$filesystem$wasi.prototype.environ_sizes_get=function(a,b){DEBUG_WASI$$module$src$filesystem$wasi&&console.log("environ_sizes_get",a,b,arguments);return WASI_ESUCCESS$$module$src$filesystem$constants};
WASI$$module$src$filesystem$wasi.prototype.fd_advise=function(a,b,c,d){DEBUG_WASI$$module$src$filesystem$wasi&&console.log("fd_advise",a,b,c,d,arguments);return WASI_ENOSYS$$module$src$filesystem$constants};WASI$$module$src$filesystem$wasi.prototype.fd_allocate=function(a,b,c){DEBUG_WASI$$module$src$filesystem$wasi&&console.log("fd_allocate",a,b,c,arguments);return WASI_ENOSYS$$module$src$filesystem$constants};
WASI$$module$src$filesystem$wasi.prototype.fd_close=function(a){DEBUG_WASI$$module$src$filesystem$wasi&&console.log("fd_close",a,arguments);this.fd[a]&&(this.fd[a].open=!1);return WASI_ESUCCESS$$module$src$filesystem$constants};WASI$$module$src$filesystem$wasi.prototype.fd_datasync=function(a){DEBUG_WASI$$module$src$filesystem$wasi&&console.log("fd_datasync",a,arguments);return WASI_ESUCCESS$$module$src$filesystem$constants};
WASI$$module$src$filesystem$wasi.prototype.fd_fdstat_get=function(a,b){DEBUG_WASI$$module$src$filesystem$wasi&&console.log("fd_fdstat_get",a,b,arguments);const c=this.getMemory();c.setUint8(b+4,WASI_FILETYPE_REGULAR_FILE$$module$src$filesystem$constants);c.setUint16(b+2,0,!0);c.setUint16(b+4,0,!0);c.setBigUint64(b+8,goog.global.BigInt(RIGHTS_REGULAR_FILE_BASE$$module$src$filesystem$constants),!0);c.setBigUint64(b+8+8,goog.global.BigInt(RIGHTS_REGULAR_FILE_INHERITING$$module$src$filesystem$constants),
!0);return WASI_ESUCCESS$$module$src$filesystem$constants};WASI$$module$src$filesystem$wasi.prototype.fd_fdstat_set_flags=function(a,b){DEBUG_WASI$$module$src$filesystem$wasi&&console.log("fd_fdstat_set_flags",a,b,arguments);return WASI_ENOSYS$$module$src$filesystem$constants};WASI$$module$src$filesystem$wasi.prototype.fd_fdstat_set_rights=function(a,b,c){DEBUG_WASI$$module$src$filesystem$wasi&&console.log("fd_fdstat_set_rights",a,b,c,arguments);return WASI_ESUCCESS$$module$src$filesystem$constants};
WASI$$module$src$filesystem$wasi.prototype.fd_filestat_get=function(a,b){DEBUG_WASI$$module$src$filesystem$wasi&&console.log("fd_filestat_get",a,b,arguments);let c=0;this.fd[a]&&(c=this.fd[a].buffers.reduce(function(e,f){return e+(null==f?void 0:f.byteLength)?null==f?void 0:f.byteLength:0},0));const d=this.getMemory();d.setBigUint64(b,goog.global.BigInt(a),!0);b+=8;d.setBigUint64(b,goog.global.BigInt(a),!0);b+=8;d.setUint8(b,WASI_FILETYPE_REGULAR_FILE$$module$src$filesystem$constants);b+=8;d.setBigUint64(b,
goog.global.BigInt(1),!0);b+=8;d.setBigUint64(b,goog.global.BigInt(c),!0);b+=8;d.setBigUint64(b,this.msToNs(this.CPUTIME_START),!0);b+=8;d.setBigUint64(b,this.msToNs(this.CPUTIME_START),!0);d.setBigUint64(b+8,this.msToNs(this.CPUTIME_START),!0);return WASI_ESUCCESS$$module$src$filesystem$constants};WASI$$module$src$filesystem$wasi.prototype.fd_filestat_set_size=function(a,b){DEBUG_WASI$$module$src$filesystem$wasi&&console.log("fd_filestat_set_size",a,b,arguments);return WASI_ESUCCESS$$module$src$filesystem$constants};
WASI$$module$src$filesystem$wasi.prototype.fd_filestat_set_times=function(a,b,c,d){DEBUG_WASI$$module$src$filesystem$wasi&&console.log("fd_filestat_set_times",a,b,c,d,arguments);return WASI_ESUCCESS$$module$src$filesystem$constants};WASI$$module$src$filesystem$wasi.prototype.fd_pread=function(a,b,c,d,e){DEBUG_WASI$$module$src$filesystem$wasi&&console.log("fd_pread",a,b,c,d,e,arguments);return WASI_ESUCCESS$$module$src$filesystem$constants};
WASI$$module$src$filesystem$wasi.prototype.fd_prestat_dir_name=function(a,b,c){DEBUG_WASI$$module$src$filesystem$wasi&&console.log("fd_prestat_dir_name",a,b,c,this.fd[a]);if(!this.fd[a]&&!this.fd[a-1])return WASI_EBADF$$module$src$filesystem$constants;({path:c}=this.fd[a]);a=this.getMemory();c=encoder$$module$src$utils$text_encoders.encode(c);(new Uint8Array(a.buffer)).set(c,b);return WASI_ESUCCESS$$module$src$filesystem$constants};
WASI$$module$src$filesystem$wasi.prototype.fd_prestat_get=function(a,b){DEBUG_WASI$$module$src$filesystem$wasi&&console.log("fd_prestat_get",a,b,this.fd[a]);if(!this.fd[a])return WASI_EBADF$$module$src$filesystem$constants;var {path:c}=this.fd[a];a=this.getMemory();c=encoder$$module$src$utils$text_encoders.encode(c);a.setUint8(b,WASI_PREOPENTYPE_DIR$$module$src$filesystem$constants);a.setUint32(b+4,c.byteLength,!0);return WASI_ESUCCESS$$module$src$filesystem$constants};
WASI$$module$src$filesystem$wasi.prototype.fd_pwrite=function(a,b,c,d,e){console.log("fd_pwrite",a,b,c,d,e,arguments);return WASI_ESUCCESS$$module$src$filesystem$constants};
WASI$$module$src$filesystem$wasi.prototype.fd_read=function(a,b,c,d){DEBUG_WASI$$module$src$filesystem$wasi&&console.log("fd_read",a,b,c,d,arguments);const e=this.fd[a]&&this.fd[a].buffers;var f=e.reduce((m,p)=>m+p.length,0);const g=this.getMemory();if(e&&0!==e.length){var h=Number(this.fd[a].seekPos),k=0,l=!1;if(h>=f)return k=g.getUint32(b,!0),g.setUint8(k,"\\x00"),g.setUint32(d,0,!0),WASI_ESUCCESS$$module$src$filesystem$constants;for(f=0;f<c;f++){var n=b+8*f;const m=g.getUint32(n,!0);n=g.getUint32(n+
4,!0);l||(k+=n,Array.from({length:n},(p,q)=>q).reduce((p,q)=>{if(l)return p;const [B,r]=p;let v=p=0,D=!1,y=0,u;if(0===q)for(;!D;)u=e[p]?e[p].byteLength:0,y<=h&&u+y>h?(D=!0,v=h-y):(y+=u,p+=1);else p=B,v=r;e[p]?(g.setUint8(m+q,e[p][v]),v+1>=e[p].byteLength?(p=B+1,v=0):v+=1):(g.setUint8(m+q,"\\x00"),h+=q,l=!0);return[p,v]},[0,0]),l||(h+=n))}this.fd[a].seekPos=goog.global.BigInt(h);g.setUint32(d,k,!0);return WASI_ESUCCESS$$module$src$filesystem$constants}console.error("Reading non existent file",a,this.fd[a])};
WASI$$module$src$filesystem$wasi.prototype.fd_readdir=function(a,b,c,d,e){DEBUG_WASI$$module$src$filesystem$wasi&&console.log("fd_readdir",a,b,c,d,e,arguments);return WASI_ESUCCESS$$module$src$filesystem$constants};WASI$$module$src$filesystem$wasi.prototype.fd_renumber=function(a,b){DEBUG_WASI$$module$src$filesystem$wasi&&console.log("fd_renumber",a,b,arguments);return WASI_ESUCCESS$$module$src$filesystem$constants};
WASI$$module$src$filesystem$wasi.prototype.fd_seek=function(a,b,c,d){DEBUG_WASI$$module$src$filesystem$wasi&&console.log("fd_seek",a,b,c,d,arguments);const e=this.getMemory();switch(c){case WASI_WHENCE_CUR$$module$src$filesystem$constants:var f;this.fd[a].seekPos=(null!=(f=this.fd[a].seekPos)?f:goog.global.BigInt(0))+goog.global.BigInt(b);break;case WASI_WHENCE_END$$module$src$filesystem$constants:f=(this.fd[a].buffers||[]).reduce((g,h)=>g+h.length,0);this.fd[a].seekPos=BigInt(f)+BigInt(b);break;
case WASI_WHENCE_SET$$module$src$filesystem$constants:this.fd[a].seekPos=BigInt(b)}e.setBigUint64(d,this.fd[a].seekPos,!0);return WASI_ESUCCESS$$module$src$filesystem$constants};WASI$$module$src$filesystem$wasi.prototype.fd_sync=function(a){DEBUG_WASI$$module$src$filesystem$wasi&&console.log("fd_sync",a,arguments);return WASI_ESUCCESS$$module$src$filesystem$constants};
WASI$$module$src$filesystem$wasi.prototype.fd_tell=function(a,b){DEBUG_WASI$$module$src$filesystem$wasi&&console.log("fd_tell",a,b,arguments);const c=this.getMemory();this.fd[a].seekPos||(this.fd[a].seekPos=goog.global.BigInt(0));c.setBigUint64(b,this.fd[a].seekPos,!0);return WASI_ESUCCESS$$module$src$filesystem$constants};
WASI$$module$src$filesystem$wasi.prototype.fd_write=function(a,b,c,d){DEBUG_WASI$$module$src$filesystem$wasi&&console.log("fd_write",{fd:a,iovs:b,iovsLength:c,nwritten:d});const e=this.getMemory();this.fd[a].buffers=this.fd[a].buffers||[];this.fd[a].buffers=0<this.fd[a].buffers.length?[concatUint8Arrays$$module$src$filesystem$wasi(this.fd[a].buffers)]:this.fd[a].buffers;let f=0;for(let k=0;k<c;k++){var g=b+8*k,h=e.getUint32(g,!0);g=e.getUint32(g+4,!0);f+=g;h=new Uint8Array(e.buffer,h,g);if(this.fd[a].buffers[0]&&
this.fd[a].seekPos<this.fd[a].buffers[0].length){const l=Number(this.fd[a].seekPos);h.slice(0,g).forEach((n,m)=>{this.fd[a].buffers[0][l+m]=n})}else this.fd[a].buffers.push(h.slice(0,g))}this.fd[a].seekPos+=goog.global.BigInt(f);e.setUint32(d,f,!0);[1,2].includes(a)&&console.log(decoder$$module$src$utils$text_encoders.decode(concatUint8Arrays$$module$src$filesystem$wasi(this.fd[a].buffers)));return WASI_ESUCCESS$$module$src$filesystem$constants};
WASI$$module$src$filesystem$wasi.prototype.path_create_directory=function(a,b,c){DEBUG_WASI$$module$src$filesystem$wasi&&console.log("path_create_directory",a,b,c,arguments);return WASI_ESUCCESS$$module$src$filesystem$constants};WASI$$module$src$filesystem$wasi.prototype.path_filestat_get=function(a,b,c,d,e){DEBUG_WASI$$module$src$filesystem$wasi&&console.log("path_filestat_get",a,b,c,d,e,arguments);return WASI_ESUCCESS$$module$src$filesystem$constants};
WASI$$module$src$filesystem$wasi.prototype.path_filestat_set_times=function(a,b,c,d,e,f,g){DEBUG_WASI$$module$src$filesystem$wasi&&console.log("path_filestat_set_times",a,b,c,d,e,f,g,arguments);return WASI_ESUCCESS$$module$src$filesystem$constants};WASI$$module$src$filesystem$wasi.prototype.path_link=function(a,b,c,d,e,f,g){DEBUG_WASI$$module$src$filesystem$wasi&&console.log("path_link",a,b,c,d,e,f,g,arguments);return WASI_ESUCCESS$$module$src$filesystem$constants};
WASI$$module$src$filesystem$wasi.prototype.path_open=function(a,b,c,d,e,f,g,h,k){DEBUG_WASI$$module$src$filesystem$wasi&&console.log("path_open",a,b,c,d,e,f,g,h,k,arguments);const l=this.getMemory();var n=(this.fd[a]||{path:"/"}).path,m=new Uint8Array(l.buffer,c,d);m=decoder$$module$src$utils$text_encoders.decode(m);const p=assertLeadingSlash$$module$src$filesystem$wasi((0,goog.string.path.normalizePath)(goog.string.path.join(3===a?"":n,m)));DEBUG_WASI$$module$src$filesystem$wasi&&console.log(";; opening path",
p,"withREader",shouldOpenReader$$module$src$filesystem$wasi(f));if(p.startsWith("/..")||"/._"===p||"/.AppleDouble"===p)return WASI_EBADF$$module$src$filesystem$constants;(n=Object.values(this.fd).find(q=>q.path===p&&Array.isArray(q.buffers)))?m=n.fd:(m=this.fd.length,this.fd[m]={fd:m});this.fd[m]={...this.fd[m],path:p,type:"file",seekPos:goog.global.BigInt(0),buffers:n?this.fd[m].buffers:[],open:!0};shouldOpenReader$$module$src$filesystem$wasi(f)&&DEBUG_WASI$$module$src$filesystem$wasi&&console.log("should open a read handle for",
p);l.setUint32(k,m,!0);return WASI_ESUCCESS$$module$src$filesystem$constants};WASI$$module$src$filesystem$wasi.prototype.path_readlink=function(a,b,c,d,e,f){DEBUG_WASI$$module$src$filesystem$wasi&&console.log("path_readlink",a,b,c,d,e,f,arguments);return WASI_ESUCCESS$$module$src$filesystem$constants};WASI$$module$src$filesystem$wasi.prototype.path_remove_directory=function(a,b,c){DEBUG_WASI$$module$src$filesystem$wasi&&console.log("path_remove_directory",a,b,c);return WASI_ESUCCESS$$module$src$filesystem$constants};
WASI$$module$src$filesystem$wasi.prototype.path_rename=function(a,b,c,d,e,f){DEBUG_WASI$$module$src$filesystem$wasi&&console.log("path_rename",a,b,c,d,e,f,arguments);return WASI_ESUCCESS$$module$src$filesystem$constants};WASI$$module$src$filesystem$wasi.prototype.path_symlink=function(a,b,c,d,e){DEBUG_WASI$$module$src$filesystem$wasi&&console.log("path_symlink",a,b,c,d,e,arguments);return WASI_ESUCCESS$$module$src$filesystem$constants};
WASI$$module$src$filesystem$wasi.prototype.path_unlink_file=function(a,b,c){3<a&&DEBUG_WASI$$module$src$filesystem$wasi&&console.log("path_unlink_file",a,b,c,arguments);return WASI_ESUCCESS$$module$src$filesystem$constants};WASI$$module$src$filesystem$wasi.prototype.poll_oneoff=function(a,b,c,d){DEBUG_WASI$$module$src$filesystem$wasi&&console.log("poll_oneoff",a,b,c,d,arguments);return WASI_ESUCCESS$$module$src$filesystem$constants};
WASI$$module$src$filesystem$wasi.prototype.proc_exit=function(a){DEBUG_WASI$$module$src$filesystem$wasi&&console.log("proc_exit",a,arguments);return WASI_ESUCCESS$$module$src$filesystem$constants};WASI$$module$src$filesystem$wasi.prototype.proc_raise=function(a){DEBUG_WASI$$module$src$filesystem$wasi&&console.log("proc_raise",a,arguments);return WASI_ESUCCESS$$module$src$filesystem$constants};
WASI$$module$src$filesystem$wasi.prototype.random_get=function(a,b){DEBUG_WASI$$module$src$filesystem$wasi&&console.log("random_get",a,b);return WASI_ESUCCESS$$module$src$filesystem$constants};WASI$$module$src$filesystem$wasi.prototype.sched_yield=function(){DEBUG_WASI$$module$src$filesystem$wasi&&console.log("sched_yield",arguments);return WASI_ESUCCESS$$module$src$filesystem$constants};
WASI$$module$src$filesystem$wasi.prototype.sock_recv=function(){DEBUG_WASI$$module$src$filesystem$wasi&&console.log("sock_recv",arguments);return WASI_ENOSYS$$module$src$filesystem$constants};WASI$$module$src$filesystem$wasi.prototype.sock_send=function(){DEBUG_WASI$$module$src$filesystem$wasi&&console.log("sock_send",arguments);return WASI_ENOSYS$$module$src$filesystem$constants};
WASI$$module$src$filesystem$wasi.prototype.sock_shutdown=function(){DEBUG_WASI$$module$src$filesystem$wasi&&console.log("sock_shutdown",arguments);return WASI_ENOSYS$$module$src$filesystem$constants};WASI$$module$src$filesystem$wasi.prototype.findBuffers=function(a){const b=Object.values(this.fd).find(({path:c})=>c===a);return[b&&b.buffers,b.fd]};
WASI$$module$src$filesystem$wasi.prototype.readdir=function(a){const b=(assertLeadingSlash$$module$src$filesystem$wasi((0,goog.string.path.normalizePath)(a))+"/").replace("//","/"),c=[];Object.values(this.fd).forEach(({path:d})=>!/\\//g.test(d.replace(b,""))&&c.push(d));return c.map(d=>removeLeadingSlash$$module$src$filesystem$wasi(d.replace(b,""))).filter(d=>!!d)};
WASI$$module$src$filesystem$wasi.prototype.writeFile=function(a,b){const c=assertLeadingSlash$$module$src$filesystem$wasi((0,goog.string.path.normalizePath)(a));a=Object.keys(this.fd).length;const d=Object.values(this.fd).find(({path:e})=>e===c);this.fd[a]={fd:a,path:c,seekPos:goog.global.BigInt(0),buffers:[b]};d&&delete this.fd[d]};
WASI$$module$src$filesystem$wasi.prototype.appendFile=function(a,b){var c=assertLeadingSlash$$module$src$filesystem$wasi((0,goog.string.path.normalizePath)(a));[c]=this.findBuffers(c);c?c.push(b):console.error(\`Can't append to non-existing file \${a}\`)};
WASI$$module$src$filesystem$wasi.prototype.readFile=function(a){const b=assertLeadingSlash$$module$src$filesystem$wasi((0,goog.string.path.normalizePath)(a)),[c,d]=this.findBuffers(b);this.fd[d]&&this.fd[d].open&&console.warn(\`readFile: file \${a} hasn't been closed yet!\`);if(c)return concatUint8Arrays$$module$src$filesystem$wasi(c)};
WASI$$module$src$filesystem$wasi.prototype.readStdOut=function(){const a=Object.values(this.fd[0]);return concatUint8Arrays$$module$src$filesystem$wasi(a&&a.buffers||[])};WASI$$module$src$filesystem$wasi.prototype.unlink=function(a){const b=assertLeadingSlash$$module$src$filesystem$wasi((0,goog.string.path.normalizePath)(a));(a=Object.values(this.fd).find(({path:c})=>c===b))?delete this.fd[a]:console.error(\`While trying to unlink \${b}, path not found\`)};
WASI$$module$src$filesystem$wasi.prototype.mkdir=function(a){const b=assertLeadingSlash$$module$src$filesystem$wasi((0,goog.string.path.normalizePath)(a)),c=[];Object.values(this.fd).forEach(({path:d})=>d.startsWith(b)&&c.push(d));0<c.length?console.warn(\`mkdir: path \${a} already exists\`):(a=Object.keys(this.fd).length,this.fd[a]={fd:a,path:b})};var module$src$filesystem$wasi={};module$src$filesystem$wasi.WASI=WASI$$module$src$filesystem$wasi;function clearArray$$module$src$utils$clear_array(a){for(;0<a.length;)a.pop()}var module$src$utils$clear_array={};module$src$utils$clear_array.clearArray=clearArray$$module$src$utils$clear_array;var module$node_modules$lines_logger$lib$index={default:{}};module$node_modules$lines_logger$lib$index.default.__esModule=!0;module$node_modules$lines_logger$lib$index.default.LoggerFactory=module$node_modules$lines_logger$lib$index.default.logLevels=void 0;module$node_modules$lines_logger$lib$index.default.logLevels={log_raise_error:1,log_with_warnings:2,trace:3,debug:4,info:5,warn:6,error:7,disable:8};
var LoggerFactory$$module$node_modules$lines_logger$lib$index=function(){function a(b,c){if(void 0===b&&(b="log_with_warnings"),void 0===c&&(c=null),this.logLevel=b,!module$node_modules$lines_logger$lib$index.default.logLevels[b])throw Error("Invalid log level "+b+" allowed: "+JSON.stringify(module$node_modules$lines_logger$lib$index.default.logLevels));this.mockConsole=c||console}return a.prototype.dummy=function(){},a.prototype.setLogWarnings=function(b){this.logLevel=b},a.prototype.getLogWarnings=
function(){return this.logLevel},a.prototype.getSingleLoggerColor=function(b,c,d){return this.getSingleLoggerStyle(b,this.getColorStyle(c),d)},a.prototype.getSingleLogger=function(b,c){var d=this.getRandomColor(b);return this.getSingleLoggerStyle(b,this.getColorStyle(d),c)},a.prototype.getSingleLoggerStyle=function(b,c,d,e){var f=this;return void 0===e&&(e="log_with_warnings"),function(){for(var g=[],h=0;h<arguments.length;h++)g[h]=arguments[h];if(module$node_modules$lines_logger$lib$index.default.logLevels[f.logLevel]>
module$node_modules$lines_logger$lib$index.default.logLevels[e])return f.dummy;g=Array.prototype.slice.call(g);h=g.shift().split("{}");for(var k=[f.mockConsole,"%c"+b,c],l=0;l<h.length;l++)k.push(h[l]),void 0!==g[l]&&k.push(g[l]);if(h.length-1!==g.length)if("log_with_warnings"===f.logLevel)f.mockConsole.error("MissMatch amount of arguments");else if("log_raise_error"===f.logLevel)throw Error("MissMatch amount of arguments");return Function.prototype.bind.apply(d,k)}},a.prototype.getLoggerColor=function(b,
c){return this.getLoggerStyle(b,this.getColorStyle(c))},a.prototype.getColorStyle=function(b){return"color: white; background-color: "+b+"; padding: 2px 6px; border-radius: 2px; font-size: 10px"},a.getHash=function(b,c){void 0===c&&(c=0);var d=3735928559^c;c^=1103547991;for(var e=0,f;e<b.length;e++)f=b.charCodeAt(e),d=Math.imul(d^f,2654435761),c=Math.imul(c^f,1597334677);return d=Math.imul(d^d>>>16,2246822507)^Math.imul(c^c>>>13,3266489909),4294967296*(2097151&(Math.imul(c^c>>>16,2246822507)^Math.imul(d^
d>>>13,3266489909)))+(d>>>0)},a.prototype.getRandomColor=function(b){void 0===b&&(b="");b=a.getHash(b);for(var c="#",d=0;3>d;d++)c+=("00"+(8+(b>>7*d&127)).toString(16)).substr(-2);return c},a.prototype.getLogger=function(b){return this.getLoggerColor(b,this.getRandomColor(b))},a.prototype.getLoggerStyle=function(b,c){return{trace:this.getSingleLoggerStyle(b,c,this.mockConsole.trace,"trace"),debug:this.getSingleLoggerStyle(b,c,this.mockConsole.debug,"debug"),log:this.getSingleLoggerStyle(b,c,this.mockConsole.log,
"info"),warn:this.getSingleLoggerStyle(b,c,this.mockConsole.warn,"warn"),error:this.getSingleLoggerStyle(b,c,this.mockConsole.error,"error")}},a}();module$node_modules$lines_logger$lib$index.default.LoggerFactory=LoggerFactory$$module$node_modules$lines_logger$lib$index;let logWorkletMain$$module$src$logger,logWorkletWorker$$module$src$logger,logSABMain$$module$src$logger,logSABWorker$$module$src$logger,logVANMain$$module$src$logger,logVANWorker$$module$src$logger,logOldSpnMain$$module$src$logger,logOldSpnWorker$$module$src$logger,logIndex$$module$src$logger,logSPNMainSingle$$module$src$logger,logSinglethreadWorkletMain$$module$src$logger,logSinglethreadWorkletWorker$$module$src$logger,logCommonUtils$$module$src$logger,logWasmModule$$module$src$logger,logMidiRequest$$module$src$logger;
const isProd$$module$src$logger=1;logWorkletMain$$module$src$logger=a=>b=>{};logWorkletWorker$$module$src$logger=a=>b=>{};logSABMain$$module$src$logger=a=>b=>{};logSABWorker$$module$src$logger=a=>b=>{};logVANMain$$module$src$logger=a=>b=>{};logVANWorker$$module$src$logger=a=>b=>{};logOldSpnMain$$module$src$logger=a=>b=>{};logOldSpnWorker$$module$src$logger=a=>b=>{};logIndex$$module$src$logger=a=>b=>{};logSPNMainSingle$$module$src$logger=a=>b=>{};
logSinglethreadWorkletMain$$module$src$logger=a=>b=>{};logSinglethreadWorkletWorker$$module$src$logger=a=>b=>{};logCommonUtils$$module$src$logger=a=>b=>{};logWasmModule$$module$src$logger=a=>b=>{};logMidiRequest$$module$src$logger=a=>b=>{};var $jscompDefaultExport$$module$src$logger=a=>b=>{},module$src$logger={};module$src$logger.default=$jscompDefaultExport$$module$src$logger;module$src$logger.logCommonUtils=logCommonUtils$$module$src$logger;module$src$logger.logIndex=logIndex$$module$src$logger;
module$src$logger.logMidiRequest=logMidiRequest$$module$src$logger;module$src$logger.logOldSpnMain=logOldSpnMain$$module$src$logger;module$src$logger.logOldSpnWorker=logOldSpnWorker$$module$src$logger;module$src$logger.logSABMain=logSABMain$$module$src$logger;module$src$logger.logSABWorker=logSABWorker$$module$src$logger;module$src$logger.logSPNMainSingle=logSPNMainSingle$$module$src$logger;module$src$logger.logSinglethreadWorkletMain=logSinglethreadWorkletMain$$module$src$logger;
module$src$logger.logSinglethreadWorkletWorker=logSinglethreadWorkletWorker$$module$src$logger;module$src$logger.logVANMain=logVANMain$$module$src$logger;module$src$logger.logVANWorker=logVANWorker$$module$src$logger;module$src$logger.logWasmModule=logWasmModule$$module$src$logger;module$src$logger.logWorkletMain=logWorkletMain$$module$src$logger;module$src$logger.logWorkletWorker=logWorkletWorker$$module$src$logger;const CompressionMethod$$module$src$zlib$zlib={DEFLATE:8,RESERVED:15};var module$src$zlib$zlib={};module$src$zlib$zlib.CompressionMethod=CompressionMethod$$module$src$zlib$zlib;/*
 zlib.js 2012 - imaya [ https://github.com/imaya/zlib.js ] The MIT License */
function Huffman$$module$src$zlib$huffman(a){const b=a.length;let c=0,d=Number.POSITIVE_INFINITY,e,f,g,h;let k,l;for(k=0;k<b;++k)a[k]>c&&(c=a[k]),a[k]<d&&(d=a[k]);const n=1<<c,m=new Uint32Array(n);e=1;f=0;for(g=2;e<=c;){for(k=0;k<b;++k)if(a[k]===e){h=0;var p=f;for(l=0;l<e;++l)h=h<<1|p&1,p>>=1;p=e<<16|k;for(l=h;l<n;l+=g)m[l]=p;++f}++e;f<<=1;g<<=1}return[m,c,d]}var module$src$zlib$huffman={};module$src$zlib$huffman.Huffman=Huffman$$module$src$zlib$huffman;const ZLIB_RAW_INFLATE_BUFFER_SIZE$$module$src$zlib$rawinflate=32768;
function RawInflate$$module$src$zlib$rawinflate(a,b){this.blocks=[];this.bufferSize=ZLIB_RAW_INFLATE_BUFFER_SIZE$$module$src$zlib$rawinflate;this.bitsbuflen=this.bitsbuf=this.ip=this.totalpos=0;this.input=new Uint8Array(a);this.bfinal=!1;this.bufferType=RawInflate$$module$src$zlib$rawinflate.BufferType.ADAPTIVE;this.resize=!1;if(b||!(b={}))b.index&&(this.ip=b.index),b.bufferSize&&(this.bufferSize=b.bufferSize),b.bufferType&&(this.bufferType=b.bufferType),b.resize&&(this.resize=b.resize);switch(this.bufferType){case RawInflate$$module$src$zlib$rawinflate.BufferType.BLOCK:this.op=
RawInflate$$module$src$zlib$rawinflate.MaxBackwardLength;this.output=new Uint8Array(RawInflate$$module$src$zlib$rawinflate.MaxBackwardLength+this.bufferSize+RawInflate$$module$src$zlib$rawinflate.MaxCopyLength);break;case RawInflate$$module$src$zlib$rawinflate.BufferType.ADAPTIVE:this.op=0;this.output=new Uint8Array(this.bufferSize);break;default:throw Error("invalid inflate mode");}}RawInflate$$module$src$zlib$rawinflate.BufferType={BLOCK:0,ADAPTIVE:1};
RawInflate$$module$src$zlib$rawinflate.prototype.decompress=function(){for(;!this.bfinal;)this.parseBlock();switch(this.bufferType){case RawInflate$$module$src$zlib$rawinflate.BufferType.BLOCK:return this.concatBufferBlock();case RawInflate$$module$src$zlib$rawinflate.BufferType.ADAPTIVE:return this.concatBufferDynamic();default:throw Error("invalid inflate mode");}};RawInflate$$module$src$zlib$rawinflate.MaxBackwardLength=32768;RawInflate$$module$src$zlib$rawinflate.MaxCopyLength=258;
RawInflate$$module$src$zlib$rawinflate.Order=function(a){return new Uint16Array(a)}([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]);RawInflate$$module$src$zlib$rawinflate.LengthCodeTable=function(a){return new Uint16Array(a)}([3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258,258,258]);RawInflate$$module$src$zlib$rawinflate.LengthExtraTable=function(a){return new Uint8Array(a)}([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,0,0]);
RawInflate$$module$src$zlib$rawinflate.DistCodeTable=function(a){return new Uint16Array(a)}([1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577]);RawInflate$$module$src$zlib$rawinflate.DistExtraTable=function(a){return new Uint8Array(a)}([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13]);
RawInflate$$module$src$zlib$rawinflate.FixedLiteralLengthTable=function(a){return a}(function(){const a=new Uint8Array(288);let b,c;b=0;for(c=a.length;b<c;++b)a[b]=143>=b?8:255>=b?9:279>=b?7:8;return Huffman$$module$src$zlib$huffman(a)}());RawInflate$$module$src$zlib$rawinflate.FixedDistanceTable=function(a){return a}(function(){const a=new Uint8Array(30);let b,c;b=0;for(c=a.length;b<c;++b)a[b]=5;return Huffman$$module$src$zlib$huffman(a)}());
RawInflate$$module$src$zlib$rawinflate.prototype.parseBlock=function(){let a=this.readBits(3);a&1&&(this.bfinal=!0);a>>>=1;switch(a){case 0:this.parseUncompressedBlock();break;case 1:this.parseFixedHuffmanBlock();break;case 2:this.parseDynamicHuffmanBlock();break;default:throw Error("unknown BTYPE: "+a);}};
RawInflate$$module$src$zlib$rawinflate.prototype.readBits=function(a){let b=this.bitsbuf,c=this.bitsbuflen;const d=this.input;let e=this.ip;if(e+(a-c+7>>3)>=d.length)throw Error("input buffer is broken");for(;c<a;)b|=d[e++]<<c,c+=8;this.bitsbuf=b>>>a;this.bitsbuflen=c-a;this.ip=e;return b&(1<<a)-1};
RawInflate$$module$src$zlib$rawinflate.prototype.readCodeByTable=function(a){let b=this.bitsbuf,c=this.bitsbuflen;var d=this.input;let e=this.ip;var f=d.length;const g=a[0];for(a=a[1];c<a&&!(e>=f);)b|=d[e++]<<c,c+=8;d=g[b&(1<<a)-1];f=d>>>16;if(f>c)throw Error("invalid code length: "+f);this.bitsbuf=b>>f;this.bitsbuflen=c-f;this.ip=e;return d&65535};
RawInflate$$module$src$zlib$rawinflate.prototype.parseUncompressedBlock=function(){const a=this.input;let b=this.ip,c=this.output,d=this.op;var e=a.length;let f;const g=c.length;this.bitsbuflen=this.bitsbuf=0;if(b+1>=e)throw Error("invalid uncompressed block header: LEN");f=a[b++]|a[b++]<<8;if(b+1>=e)throw Error("invalid uncompressed block header: NLEN");e=a[b++]|a[b++]<<8;if(f===~e)throw Error("invalid uncompressed block header: length verify");if(b+f>a.length)throw Error("input buffer is broken");
switch(this.bufferType){case RawInflate$$module$src$zlib$rawinflate.BufferType.BLOCK:for(;d+f>c.length;)e=g-d,f-=e,c.set(a.subarray(b,b+e),d),d+=e,b+=e,this.op=d,c=this.expandBufferBlock(),d=this.op;break;case RawInflate$$module$src$zlib$rawinflate.BufferType.ADAPTIVE:for(;d+f>c.length;)c=this.expandBufferAdaptive({fixRatio:2});break;default:throw Error("invalid inflate mode");}c.set(a.subarray(b,b+f),d);this.ip=b+f;this.op=d+f;this.output=c};
RawInflate$$module$src$zlib$rawinflate.prototype.parseFixedHuffmanBlock=function(){switch(this.bufferType){case RawInflate$$module$src$zlib$rawinflate.BufferType.ADAPTIVE:this.decodeHuffmanAdaptive(RawInflate$$module$src$zlib$rawinflate.FixedLiteralLengthTable,RawInflate$$module$src$zlib$rawinflate.FixedDistanceTable);break;case RawInflate$$module$src$zlib$rawinflate.BufferType.BLOCK:this.decodeHuffmanBlock(RawInflate$$module$src$zlib$rawinflate.FixedLiteralLengthTable,RawInflate$$module$src$zlib$rawinflate.FixedDistanceTable);
break;default:throw Error("invalid inflate mode");}};
RawInflate$$module$src$zlib$rawinflate.prototype.parseDynamicHuffmanBlock=function(){var a=this.readBits(5)+257,b=this.readBits(5)+1,c=this.readBits(4)+4,d=new Uint8Array(RawInflate$$module$src$zlib$rawinflate.Order.length);let e;for(e=0;e<c;++e)d[RawInflate$$module$src$zlib$rawinflate.Order[e]]=this.readBits(3);d=Huffman$$module$src$zlib$huffman(d);c=new Uint8Array(a+b);e=0;for(b=a+b;e<b;){var f=this.readCodeByTable(d);switch(f){case 16:for(f=3+this.readBits(2);f--;)c[e++]=g;break;case 17:for(f=
3+this.readBits(3);f--;)c[e++]=0;var g=0;break;case 18:for(f=11+this.readBits(7);f--;)c[e++]=0;g=0;break;default:g=c[e++]=f}}g=Huffman$$module$src$zlib$huffman(c.subarray(0,a));a=Huffman$$module$src$zlib$huffman(c.subarray(a));switch(this.bufferType){case RawInflate$$module$src$zlib$rawinflate.BufferType.ADAPTIVE:this.decodeHuffmanAdaptive(g,a);break;case RawInflate$$module$src$zlib$rawinflate.BufferType.BLOCK:this.decodeHuffmanBlock(g,a);break;default:throw Error("invalid inflate mode");}};
RawInflate$$module$src$zlib$rawinflate.prototype.decodeHuffmanBlock=function(a,b){let c=this.output,d=this.op;this.currentLitlenTable=a;const e=c.length-RawInflate$$module$src$zlib$rawinflate.MaxCopyLength;var f;let g,h;const k=RawInflate$$module$src$zlib$rawinflate.LengthCodeTable,l=RawInflate$$module$src$zlib$rawinflate.LengthExtraTable,n=RawInflate$$module$src$zlib$rawinflate.DistCodeTable,m=RawInflate$$module$src$zlib$rawinflate.DistExtraTable;for(;256!==(f=this.readCodeByTable(a));)if(256>f)d>=
e&&(this.op=d,c=this.expandBufferBlock(),d=this.op),c[d++]=f;else for(f-=257,h=k[f],0<l[f]&&(h+=this.readBits(l[f])),f=this.readCodeByTable(b),g=n[f],0<m[f]&&(g+=this.readBits(m[f])),d>=e&&(this.op=d,c=this.expandBufferBlock(),d=this.op);h--;)c[d]=c[d++-g];for(;8<=this.bitsbuflen;)this.bitsbuflen-=8,this.ip--;this.op=d};
RawInflate$$module$src$zlib$rawinflate.prototype.decodeHuffmanAdaptive=function(a,b){let c=this.output,d=this.op;this.currentLitlenTable=a;let e=c.length;var f;let g,h;const k=RawInflate$$module$src$zlib$rawinflate.LengthCodeTable,l=RawInflate$$module$src$zlib$rawinflate.LengthExtraTable,n=RawInflate$$module$src$zlib$rawinflate.DistCodeTable,m=RawInflate$$module$src$zlib$rawinflate.DistExtraTable;for(;256!==(f=this.readCodeByTable(a));)if(256>f)d>=e&&(c=this.expandBufferAdaptive(),e=c.length),c[d++]=
f;else for(f-=257,h=k[f],0<l[f]&&(h+=this.readBits(l[f])),f=this.readCodeByTable(b),g=n[f],0<m[f]&&(g+=this.readBits(m[f])),d+h>e&&(c=this.expandBufferAdaptive(),e=c.length);h--;)c[d]=c[d++-g];for(;8<=this.bitsbuflen;)this.bitsbuflen-=8,this.ip--;this.op=d};
RawInflate$$module$src$zlib$rawinflate.prototype.expandBufferBlock=function(a){a=new Uint8Array(this.op-RawInflate$$module$src$zlib$rawinflate.MaxBackwardLength);const b=this.op-RawInflate$$module$src$zlib$rawinflate.MaxBackwardLength,c=this.output;a.set(c.subarray(RawInflate$$module$src$zlib$rawinflate.MaxBackwardLength,a.length));this.blocks.push(a);this.totalpos+=a.length;c.set(c.subarray(b,b+RawInflate$$module$src$zlib$rawinflate.MaxBackwardLength));this.op=RawInflate$$module$src$zlib$rawinflate.MaxBackwardLength;
return c};RawInflate$$module$src$zlib$rawinflate.prototype.expandBufferAdaptive=function(a){let b=Math.trunc(this.input.length/this.ip+1);const c=this.input,d=this.output;a&&("number"===typeof a.fixRatio&&(b=a.fixRatio),"number"===typeof a.addRatio&&(b+=a.addRatio));2>b?(a=(c.length-this.ip)/this.currentLitlenTable[2],a=Math.trunc(a/2*258),a=a<d.length?d.length+a:d.length<<1):a=d.length*b;a=new Uint8Array(a);a.set(d);return this.output=a};
RawInflate$$module$src$zlib$rawinflate.prototype.concatBufferBlock=function(){let a=0;const b=this.output,c=this.blocks;let d;const e=new Uint8Array(this.totalpos+(this.op-RawInflate$$module$src$zlib$rawinflate.MaxBackwardLength));let f,g,h,k;if(0===c.length)return this.output.subarray(RawInflate$$module$src$zlib$rawinflate.MaxBackwardLength,this.op);f=0;for(g=c.length;f<g;++f)for(d=c[f],h=0,k=d.length;h<k;++h)e[a++]=d[h];f=RawInflate$$module$src$zlib$rawinflate.MaxBackwardLength;for(g=this.op;f<
g;++f)e[a++]=b[f];this.blocks=[];return this.buffer=e};RawInflate$$module$src$zlib$rawinflate.prototype.concatBufferDynamic=function(){let a;const b=this.op;this.resize?(a=new Uint8Array(b),a.set(this.output.subarray(0,b))):a=this.output.subarray(0,b);return this.buffer=a};var module$src$zlib$rawinflate={};module$src$zlib$rawinflate.RawInflate=RawInflate$$module$src$zlib$rawinflate;function Util$$module$src$zlib$util(){}Util$$module$src$zlib$util.stringToByteArray=function(a){a=[...a];let b,c;b=0;for(c=a.length;b<c;b++)a[b]=(a[b].charPointAt(0)&255)>>>0;return new Uint8Array([a])};var module$src$zlib$util={};module$src$zlib$util.Util=Util$$module$src$zlib$util;function Adler32$$module$src$zlib$adler32(a){"string"===typeof a&&(a=Util$$module$src$zlib$util.stringToByteArray(a));return Adler32$$module$src$zlib$adler32.update(1,a)}Adler32$$module$src$zlib$adler32.update=function(a,b){let c=a&65535;a=a>>>16&65535;let d=b.length,e,f=0;for(;0<d;){e=d>Adler32$$module$src$zlib$adler32.OptimizationParameter?Adler32$$module$src$zlib$adler32.OptimizationParameter:d;d-=e;do c+=b[f++],a+=c;while(--e);c%=65521;a%=65521}return(a<<16|c)>>>0};
Adler32$$module$src$zlib$adler32.OptimizationParameter=1024;var module$src$zlib$adler32={};module$src$zlib$adler32.Adler32=Adler32$$module$src$zlib$adler32;function Inflate$$module$src$zlib$inflate(a,b){this.input=a;this.ip=0;if(b||!(b={}))b.index&&(this.ip=b.index),b.verify&&(this.verify=b.verify);const c=a[this.ip++],d=a[this.ip++];switch(c&15){case CompressionMethod$$module$src$zlib$zlib.DEFLATE:this.method=CompressionMethod$$module$src$zlib$zlib.DEFLATE;break;default:throw Error("unsupported compression method");}if(0!==((c<<8)+d)%31)throw Error("invalid fcheck flag:"+((c<<8)+d)%31);if(d&32)throw Error("fdict flag is not supported");this.rawinflate=
new RawInflate$$module$src$zlib$rawinflate(a,{index:this.ip,bufferSize:b.bufferSize,bufferType:b.bufferType,resize:b.resize})}Inflate$$module$src$zlib$inflate.BufferType=RawInflate$$module$src$zlib$rawinflate.BufferType;
Inflate$$module$src$zlib$inflate.prototype.decompress=function(){var a=this.input;const b=this.rawinflate.decompress();this.ip=this.rawinflate.ip;if(this.verify&&(a=(a[this.ip++]<<24|a[this.ip++]<<16|a[this.ip++]<<8|a[this.ip++])>>>0,a!==Adler32$$module$src$zlib$adler32(b)))throw Error("invalid adler-32 checksum");return b};var module$src$zlib$inflate={};module$src$zlib$inflate.Inflate=Inflate$$module$src$zlib$inflate;const PAGE_SIZE$$module$src$module=65536,PAGES_PER_MB$$module$src$module=16,csoundWasiJsMessageCallback$$module$src$module=({memory:a,messagePort:b,streamBuffer:c})=>function(d,e,f,g){if(a){d=new Uint8Array(a.buffer,g,f);d=uint2String$$module$src$utils$text_encoders(d);var h=/\\n$/g.test(d);e=/^\\n/g.test(d);var k=d.split("\\n").filter(n=>0<n.length),l=[];if(0===k.length&&h||e)l.push(c.join("")),clearArray$$module$src$utils$clear_array(c);k.forEach((n,m)=>{m+1===k.length?h?0===m?(l.push(c.join("")+n),
clearArray$$module$src$utils$clear_array(c)):l.push(n):c.push(n):0===m?(l.push(c.join("")+n),clearArray$$module$src$utils$clear_array(c)):l.push(n)});l.forEach(n=>{n.replace(/(\\r\\n|\\n|\\r)/gm,"")&&b.post({log:n})})}},assertPluginExports$$module$src$module=a=>{if(a&&"object"===typeof a&&"object"===typeof a.exports){if(a.exports.__wasm_call_ctors){if(a.exports.csoundModuleCreate||a.exports.csound_opcode_init||a.exports.csound_fgen_init)return!0;console.error(a.exports,"A csound plugin turns out to be neither a plugin, opcode or module.\\nPerhaps csdl.h or module.h wasn't imported correctly?");
return!1}console.error("A csound plugin didn't export __wasm_call_ctors.\\nPlease re-run wasm-ld with either --export-all or include --export=__wasm_call_ctors");return!1}console.error("Error instantiating a csound plugin, instance and/or export is missing!");return!1},getBinaryHeaderData$$module$src$module=a=>{function b(){let l=0,n=1;for(;;){const m=a[c++];l+=(m&127)*n;n*=128;if(!(m&128))break}return l}1836278016!==(new Uint32Array((new Uint8Array(a.subarray(0,24))).buffer))[0]&&console.error("Wasm magic number is missing!");
if(0!==a[8])return logWasmModule$$module$src$logger("Dylink section wasn't found in wasm binary, assuming static wasm."),"static";let c=9;const d=b();c++;(0,goog.asserts.assert)(a[c]==="d".codePointAt(0));c++;(0,goog.asserts.assert)(a[c]==="y".codePointAt(0));c++;(0,goog.asserts.assert)(a[c]==="l".codePointAt(0));c++;(0,goog.asserts.assert)(a[c]==="i".codePointAt(0));c++;(0,goog.asserts.assert)(a[c]==="n".codePointAt(0));c++;(0,goog.asserts.assert)(a[c]==="k".codePointAt(0));c++;(0,goog.asserts.assert)(a[c]===
".".codePointAt(0));c++;(0,goog.asserts.assert)(a[c]==="0".codePointAt(0));c+=3;const e=b(),f=b(),g=b(),h=b(),k=b();return{sectionSize:d,memorySize:e,memoryAlign:f,neededDynlibsCount:k,tableSize:g,tableAlign:h}},loadStaticWasm$$module$src$module=async({wasmBytes:a,wasi:b,messagePort:c})=>{const d=await WebAssembly.compile(a);a=new WebAssembly.Memory({initial:16384});const e=b.getImports(d);e.env=e.env||{};e.env.csoundLoadModules=()=>0;e.env.memory=a;e.env.csoundWasiJsMessageCallback=csoundWasiJsMessageCallback$$module$src$module({memory:e.env.memory,
streamBuffer:[],messagePort:c});c=await WebAssembly.instantiate(d,e);b.setMemory(a);b.start(c);c.exports.__wasi_js_csoundSetMessageStringCallback();return[c,b]};
var $jscompDefaultExport$$module$src$module=async function({wasmDataURI:a,withPlugins:b=[],messagePort:c}){var d={};const e=new WASI$$module$src$filesystem$wasi({preopens:{"/":"/"}});a=new Uint8Array(a);a=(new Inflate$$module$src$zlib$inflate(a)).decompress();var f=getBinaryHeaderData$$module$src$module(a);if("static"===f)return await loadStaticWasm$$module$src$module({messagePort:c,wasmBytes:a,wasmFs:d,wasi:e});const {memorySize:g,memoryAlign:h,tableSize:k}=f;b=await b.reduce(async(u,z)=>{u=await u;
let C,A;try{C=new Uint8Array(z),A=getBinaryHeaderData$$module$src$module(C)}catch(G){console.error("Error in plugin",G)}A&&u.push({headerData:A,wasmPluginBytes:C});return u},[]);var l=128*PAGES_PER_MB$$module$src$module;d=Math.ceil((g+h)/PAGE_SIZE$$module$src$module);f=Math.ceil(b.reduce((u,{headerData:z})=>"static"===z?0:u+(z.memorySize+h),0)/PAGE_SIZE$$module$src$module);f=d+f+l;const n=new WebAssembly.Memory({initial:f,maximum:1024*PAGES_PER_MB$$module$src$module}),m=new WebAssembly.Table({initial:k+
1,element:"anyfunc"});e.setMemory(n);const p=new WebAssembly.Global({value:"i32",mutable:!0},f*PAGE_SIZE$$module$src$module);f=new WebAssembly.Global({value:"i32",mutable:!0},f*PAGE_SIZE$$module$src$module);l=new WebAssembly.Global({value:"i32",mutable:!1},l);const q=new WebAssembly.Global({value:"i32",mutable:!1},1),B=new WebAssembly.Global({value:"i32",mutable:!0},0);a=await WebAssembly.compile(a);const r=e.getImports(a);let v=[],D=d;r.env=r.env||{};r.env.memory=n;r.env.__indirect_function_table=
m;r.env.__stack_pointer=p;r.env.__memory_base=l;r.env.__table_base=q;r.env.csoundLoadModules=u=>{v.forEach(z=>{void 0===y?console.error("csound-wasm internal: timing problem detected!"):dlinit$$module$src$dlinit(y,z,m,u)});return 0};r.env._ZTH5errno=function(){};r.env.csoundWasiJsMessageCallback=csoundWasiJsMessageCallback$$module$src$module({memory:n,messagePort:c,streamBuffer:[]});r.env.printDebugCallback=(u,z)=>{u=new Uint8Array(n.buffer,u,z);u=uint2String$$module$src$utils$text_encoders(u);console.log(u)};
r["GOT.mem"]=r["GOT.mem"]||{};r["GOT.mem"].__heap_base=f;r["GOT.func"]=r["GOT.func"]||{};const y=await WebAssembly.instantiate(a,r);c=Object.assign({},y.exports);a={};a.exports=Object.assign(c,{memory:n});v=await b.reduce(async(u,{headerData:z,wasmPluginBytes:C})=>{u=await u;try{const {memorySize:A,memoryAlign:G,tableSize:F}=z,I=await WebAssembly.compile(C),t=e.getImports(I),E=new WebAssembly.Global({value:"i32",mutable:!1},D*PAGE_SIZE$$module$src$module);m.grow(F);t.env=Object.assign({},t.env);t.env.memory=
n;t.env.__indirect_function_table=m;t.env.__memory_base=E;t.env.__stack_pointer=p;t.env.__table_base=q;t.env.csoundLoadModules=B;delete t.env.csoundWasiJsMessageCallback;D+=Math.ceil((A+G)/PAGE_SIZE$$module$src$module);const x=await WebAssembly.instantiate(I,t);assertPluginExports$$module$src$module(x)&&(x.exports.__wasm_call_ctors(),u.push(x))}catch(A){console.error("Error while compiling csound-plugin",A)}return u},[]);e.start(a);a.exports.__wasi_js_csoundSetMessageStringCallback();return[a,e]},
module$src$module={};module$src$module.csoundWasiJsMessageCallback=csoundWasiJsMessageCallback$$module$src$module;module$src$module.default=$jscompDefaultExport$$module$src$module;const handleCsoundStart$$module$src$workers$common_utils=(a,b,c,d,e)=>f=>{const {csound:g}=f,h=1===b.csoundShouldDaemonize(g);h&&(b.csoundSetOption(g,"--daemon"),b.csoundSetOption(g,"-odac"));const k=b.csoundStart(g),l=b.csoundGetOutputName(g)||"test.wav";logCommonUtils$$module$src$logger(\`handleCsoundStart: actual csoundStart result \${k}, outputName: \${l}\`)();0!==k&&a.post(\`error: csoundStart failed while trying to render \${l},\`+" look out for errors in options and syntax");setTimeout(()=>{const n=
b._isRequestingRtMidiInput(g);if(h||n||l.includes("dac"))d(f);else if(a.broadcastPlayState("renderStarted"),e)e(f);else for(;0===b.csoundPerformKsmps(g););},0);return k},instantiateAudioPacket$$module$src$workers$common_utils=(a,b)=>{const c=[];for(let d=0;d<a;d++)c.push(new Float64Array(b));return c},renderFunction$$module$src$workers$common_utils=({libraryCsound:a,workerMessagePort:b})=>async({csound:c})=>{const d=a.csoundGetKr(c);let e=0,f=0;for(;("renderStarted"===b.vanillaWorkerState||"renderStarted"===
b.workerState)&&0===e;)e=a.csoundPerformKsmps(c),f+=1,"function"===typeof setTimeout&&0===e&&0===f%(2*d)&&await new Promise(g=>setTimeout(g,0));b.broadcastPlayState("renderEnded")};var module$src$workers$common_utils={};module$src$workers$common_utils.handleCsoundStart=handleCsoundStart$$module$src$workers$common_utils;module$src$workers$common_utils.instantiateAudioPacket=instantiateAudioPacket$$module$src$workers$common_utils;module$src$workers$common_utils.renderFunction=renderFunction$$module$src$workers$common_utils;const DEFAULT_BUFFER_LEN$$module$src$constants=128,MAX_CHANNELS$$module$src$constants=32,RING_BUFFER_SIZE$$module$src$constants=16384,MIDI_BUFFER_SIZE$$module$src$constants=1024,MIDI_BUFFER_PAYLOAD_SIZE$$module$src$constants=3,CALLBACK_DATA_BUFFER_SIZE$$module$src$constants=16384,initialSharedState$$module$src$constants=[0,4096,0,0,0,0,-1,-1,-1,-1,0,DEFAULT_BUFFER_LEN$$module$src$constants,0,0,0,0,0,0,0,0],AUDIO_STATE$$module$src$constants={CSOUND_LOCK:0,FRAMES_REQUESTED:1,IS_PERFORMING:2,IS_RENDERING:3,
IS_PAUSED:4,STOP:5,SAMPLE_RATE:6,KSMPS:7,NCHNLS:8,NCHNLS_I:9,IS_REQUESTING_MIC:10,BUFFER_LEN:11,OUTPUT_READ_INDEX:12,OUTPUT_WRITE_INDEX:13,AVAIL_IN_BUFS:14,AVAIL_OUT_BUFS:15,IS_REQUESTING_RTMIDI:16,RTMIDI_INDEX:17,AVAIL_RTMIDI_EVENTS:18,HAS_PENDING_CALLBACKS:19},DATA_TYPE$$module$src$constants={NUMBER:0,STRING:1,FLOAT_32:2,FLOAT_64:3};var module$src$constants={};module$src$constants.AUDIO_STATE=AUDIO_STATE$$module$src$constants;module$src$constants.CALLBACK_DATA_BUFFER_SIZE=CALLBACK_DATA_BUFFER_SIZE$$module$src$constants;
module$src$constants.DATA_TYPE=DATA_TYPE$$module$src$constants;module$src$constants.DEFAULT_BUFFER_LEN=DEFAULT_BUFFER_LEN$$module$src$constants;module$src$constants.MAX_CHANNELS=MAX_CHANNELS$$module$src$constants;module$src$constants.MIDI_BUFFER_PAYLOAD_SIZE=MIDI_BUFFER_PAYLOAD_SIZE$$module$src$constants;module$src$constants.MIDI_BUFFER_SIZE=MIDI_BUFFER_SIZE$$module$src$constants;module$src$constants.RING_BUFFER_SIZE=RING_BUFFER_SIZE$$module$src$constants;module$src$constants.initialSharedState=initialSharedState$$module$src$constants;let combined$$module$src$workers$sab_worker,pollPromise$$module$src$workers$sab_worker,unlockPromise$$module$src$workers$sab_worker;
const callUncloned$$module$src$workers$sab_worker=async(a,b)=>(a=combined$$module$src$workers$sab_worker.get(a))&&a.apply({},b||[]),sabCreateRealtimeAudioThread$$module$src$workers$sab_worker=({libraryCsound:a,callbacksRequest:b,releaseStop:c,releasePause:d,releaseResumed:e,wasm:f,workerMessagePort:g})=>async({audioStateBuffer:h,audioStreamIn:k,audioStreamOut:l,midiBuffer:n,csound:m})=>{const p=new Int32Array(h);initialSharedState$$module$src$constants.forEach((H,K)=>{Atomics.store(p,K,H)});h=a._isRequestingRtMidiInput(m);
var q=0===Atomics.load(p,AUDIO_STATE$$module$src$constants.NCHNLS_I)&&a.csoundGetInputName(m).includes("adc"),B=Atomics.load(p,AUDIO_STATE$$module$src$constants.NCHNLS),r=Atomics.load(p,AUDIO_STATE$$module$src$constants.NCHNLS_I),v=Atomics.load(p,AUDIO_STATE$$module$src$constants.SAMPLE_RATE);-1<B&&a.csoundSetOption(m,\`--nchnls=\${B}\`);-1<r&&a.csoundSetOption(m,\`--nchnls_i=\${r}\`);-1<v&&a.csoundSetOption(m,\`--sr=\${v}\`);const D=a.csoundGetNchnls(m),y=r||q?a.csoundGetNchnlsInput(m):0,u=Atomics.load(p,
AUDIO_STATE$$module$src$constants.SAMPLE_RATE)||a.csoundGetSr(m);Atomics.store(p,AUDIO_STATE$$module$src$constants.NCHNLS,D);Atomics.store(p,AUDIO_STATE$$module$src$constants.NCHNLS_I,y);Atomics.store(p,AUDIO_STATE$$module$src$constants.IS_REQUESTING_MIC,q?1:0);Atomics.store(p,AUDIO_STATE$$module$src$constants.SAMPLE_RATE,a.csoundGetSr(m));Atomics.store(p,AUDIO_STATE$$module$src$constants.IS_REQUESTING_RTMIDI,h);q=a.csoundGetKsmps(m);Atomics.store(p,AUDIO_STATE$$module$src$constants.KSMPS,q);const z=
a.csoundGet0dBFS(m);B=[];r=[];for(v=0;v<D;++v)B.push(new Float64Array(l,RING_BUFFER_SIZE$$module$src$constants*v,RING_BUFFER_SIZE$$module$src$constants));for(l=0;l<y;++l)r.push(new Float64Array(k,RING_BUFFER_SIZE$$module$src$constants*l,RING_BUFFER_SIZE$$module$src$constants));g.broadcastPlayState("realtimePerformanceStarted");Atomics.store(p,AUDIO_STATE$$module$src$constants.IS_PERFORMING,1);logSABWorker$$module$src$logger("Atomic.wait started (thread is now locked)\\n")();k=!0;let C=0,A=0,G=0,F=
0,I;l=(H=!1)=>1===Atomics.load(p,AUDIO_STATE$$module$src$constants.STOP)||1!==Atomics.load(p,AUDIO_STATE$$module$src$constants.IS_PERFORMING)||0!==C||H?(0===C&&(logSABWorker$$module$src$logger("calling csoundStop and one performKsmps to trigger endof logs")(),a.csoundStop(m),a.csoundPerformKsmps(m)),logSABWorker$$module$src$logger("triggering realtimePerformanceEnded event")(),g.broadcastPlayState("realtimePerformanceEnded"),logSABWorker$$module$src$logger("End of realtimePerformance loop!")(),c(),
!0):!1;for(v=!0;!v||(I=Atomics.wait(p,AUDIO_STATE$$module$src$constants.CSOUND_LOCK,1,1E4));){if("timed-out"===I){l(!0);break}k&&(k=!1,await new Promise(w=>{unlockPromise$$module$src$workers$sab_worker=w;g.broadcastSabUnlocked()}),logSABWorker$$module$src$logger("Atomic.wait unlocked, performance started")());1===Atomics.load(p,AUDIO_STATE$$module$src$constants.IS_PAUSED)&&(await new Promise(w=>setTimeout(w,0)),d(),await new Promise(w=>setTimeout(w,0)),Atomics.wait(p,AUDIO_STATE$$module$src$constants.IS_PAUSED,
0),await new Promise(w=>setTimeout(w,0)),e(),await new Promise(w=>setTimeout(w,0)));if(l())break;if(h){var t=Atomics.load(p,AUDIO_STATE$$module$src$constants.AVAIL_RTMIDI_EVENTS);if(0<t){var E=Atomics.load(p,AUDIO_STATE$$module$src$constants.RTMIDI_INDEX),x=E;for(let w=0;w<t;w++){x=(E+MIDI_BUFFER_PAYLOAD_SIZE$$module$src$constants*w)%MIDI_BUFFER_SIZE$$module$src$constants;const J=Atomics.load(n,x),L=Atomics.load(n,x+1),M=Atomics.load(n,x+2);a.csoundPushMidiMessage(m,J,L,M)}Atomics.store(p,AUDIO_STATE$$module$src$constants.RTMIDI_INDEX,
(x+1)%MIDI_BUFFER_SIZE$$module$src$constants);Atomics.sub(p,AUDIO_STATE$$module$src$constants.AVAIL_RTMIDI_EVENTS,t)}}const H=Atomics.load(p,AUDIO_STATE$$module$src$constants.BUFFER_LEN);t=Atomics.load(p,AUDIO_STATE$$module$src$constants.AVAIL_IN_BUFS)>=H;E=a.csoundGetSpin(m);x=a.csoundGetSpout(m);const K=t&&new Float64Array(f.wasi.memory.buffer,E,q*y),N=new Float64Array(f.wasi.memory.buffer,x,q*D);E=Atomics.load(p,AUDIO_STATE$$module$src$constants.FRAMES_REQUESTED);for(x=0;x<E;x++){if(0===A)if(0===
C)C=a.csoundPerformKsmps(m),!v&&Atomics.add(p,AUDIO_STATE$$module$src$constants.AVAIL_OUT_BUFS,q),v=!1;else if(0!==C){Atomics.store(p,AUDIO_STATE$$module$src$constants.IS_PERFORMING,0);l(!0);return}B.forEach((w,J)=>{w[F]=(N[A*D+J]||0)/z});t&&(r.forEach((w,J)=>{K[A*y+J]=(w[G]||0)*z}),G=t&&(G+1)%RING_BUFFER_SIZE$$module$src$constants);F=(F+1)%RING_BUFFER_SIZE$$module$src$constants;A=(A+1)%q}t&&Atomics.sub(p,AUDIO_STATE$$module$src$constants.AVAIL_IN_BUFS,E);1===Atomics.compareExchange(p,AUDIO_STATE$$module$src$constants.HAS_PENDING_CALLBACKS,
1,0)&&await new Promise(w=>{pollPromise$$module$src$workers$sab_worker=w;b()});if(l())break;t=Atomics.load(p,AUDIO_STATE$$module$src$constants.OUTPUT_READ_INDEX);t=Math.max(2048-(F<t?F+RING_BUFFER_SIZE$$module$src$constants-t:F-t),0);Atomics.store(p,AUDIO_STATE$$module$src$constants.FRAMES_REQUESTED,t);0===t&&await new Promise(w=>setTimeout(w,H/u*1E3))}},initMessagePort$$module$src$workers$sab_worker=({port:a})=>{const b=new $jscompDefaultExport$$module$src$utils$message_port_state;b.post=c=>a.postMessage({log:c});
b.broadcastPlayState=c=>a.postMessage({playStateChange:c});b.broadcastSabUnlocked=()=>a.postMessage({sabWorker:"unlocked"});b.ready=!0;return b},initCallbackReplyPort$$module$src$workers$sab_worker=({port:a})=>{a.addEventListener("message",b=>{if(b.data&&b.data.unlock)b=unlockPromise$$module$src$workers$sab_worker,unlockPromise$$module$src$workers$sab_worker=void 0,b&&b();else{b=b.data;var c=b.reduce((d,{id:e,argumentz:f,apiKey:g})=>{try{const h=combined$$module$src$workers$sab_worker.get(g),k=h&&
h.apply({},f||[]);d.push({id:e,answer:k})}catch(h){throw Error(h);}return d},[]);a.postMessage(c);c=pollPromise$$module$src$workers$sab_worker;pollPromise$$module$src$workers$sab_worker=void 0;c&&c(b)}});a.start()},renderFunction$$module$src$workers$sab_worker=({libraryCsound:a,callbacksRequest:b,releaseStop:c,releasePause:d,releaseResumed:e,workerMessagePort:f})=>async({audioStateBuffer:g,csound:h})=>{g=new Int32Array(g);Atomics.store(g,AUDIO_STATE$$module$src$constants.IS_RENDERING,1);for(f.broadcastSabUnlocked();1!==
Atomics.load(g,AUDIO_STATE$$module$src$constants.STOP)&&0===a.csoundPerformKsmps(h);)1===Atomics.load(g,AUDIO_STATE$$module$src$constants.IS_PAUSED)&&(d(),Atomics.wait(g,AUDIO_STATE$$module$src$constants.IS_PAUSED,0),e()),1===Atomics.compareExchange(g,AUDIO_STATE$$module$src$constants.HAS_PENDING_CALLBACKS,1,0)&&await new Promise(k=>{pollPromise$$module$src$workers$sab_worker=k;b()});Atomics.store(g,AUDIO_STATE$$module$src$constants.IS_RENDERING,0);f.broadcastPlayState("renderEnded");c()},initialize$$module$src$workers$sab_worker=
async({wasmDataURI:a,withPlugins:b=[],messagePort:c,callbackPort:d})=>{logSABWorker$$module$src$logger("initializing SABWorker and WASM")();const e=initMessagePort$$module$src$workers$sab_worker({port:c}),f=()=>d.postMessage("poll"),g=()=>d.postMessage("releaseStop"),h=()=>d.postMessage("releasePause"),k=()=>d.postMessage("releaseResumed");initCallbackReplyPort$$module$src$workers$sab_worker({port:d});const [l,n]=await $jscompDefaultExport$$module$src$module({wasmDataURI:a,withPlugins:b,messagePort:e});
l.wasi=n;const m=$jscompDefaultExport$$module$src$libcsound(l);a=pipe$$module$node_modules$rambda$dist$rambda_mjs(assoc$$module$node_modules$rambda$dist$rambda_mjs("csoundStart",(p,q)=>handleCsoundStart$$module$src$workers$common_utils(e,m,n,sabCreateRealtimeAudioThread$$module$src$workers$sab_worker({libraryCsound:m,callbacksRequest:f,wasm:l,workerMessagePort:e,releaseStop:g,releasePause:h,releaseResumed:k}),renderFunction$$module$src$workers$sab_worker({libraryCsound:m,callbacksRequest:f,workerMessagePort:e,
wasi:n,releaseStop:g,releasePause:h,releaseResumed:k}))(q)),assoc$$module$node_modules$rambda$dist$rambda_mjs("wasm",l))(m);combined$$module$src$workers$sab_worker=new Map(Object.entries(a));m.csoundInitialize(0);return m.csoundCreate()},sabWorker$$module$src$workers$sab_worker={initialize:initialize$$module$src$workers$sab_worker,callUncloned:callUncloned$$module$src$workers$sab_worker};
expose$$module$node_modules$comlink$dist$esm$comlink_mjs({initialize:sabWorker$$module$src$workers$sab_worker.initialize,callUncloned:sabWorker$$module$src$workers$sab_worker.callUncloned});var module$src$workers$sab_worker={};module$src$workers$sab_worker.sabWorker=sabWorker$$module$src$workers$sab_worker;}).call(this);
//# sourceMappingURL=__compiled.sab.worker.js.map
`]));class SharedArrayBufferMainThread$$module$src$mains$sab_main{constructor({audioContext:o,audioWorker:s,audioContextIsProvided:c,inputChannelCount:i,outputChannelCount:g}){this.hasSharedArrayBuffer=!0,this.ipcMessagePorts=new IPCMessagePorts$$module$src$mains$messages_main,this.eventPromises=new EventPromises$$module$src$utils$event_promises,this.publicEvents=new PublicEventAPI$$module$src$events(this),s.ipcMessagePorts=this.ipcMessagePorts,this.audioContextIsProvided=c,this.audioWorker=s,this.audioWorker.onPlayStateChange=this.audioWorker.onPlayStateChange.bind(s),this.currentPlayState=this.csoundInstance=void 0,this.currentDerivedPlayState="stop",this.exportApi={},this.callbackId=0,this.callbackBuffer={},this.audioStateBuffer=new SharedArrayBuffer(initialSharedState$$module$src$constants.length*Int32Array.BYTES_PER_ELEMENT),this.audioStatePointer=new Int32Array(this.audioStateBuffer),c&&Atomics.store(this.audioStatePointer,AUDIO_STATE$$module$src$constants.SAMPLE_RATE,o.sampleRate),i&&Atomics.store(this.audioStatePointer,AUDIO_STATE$$module$src$constants.NCHNLS_I,i),g&&Atomics.store(this.audioStatePointer,AUDIO_STATE$$module$src$constants.NCHNLS,g),this.audioStreamIn=new SharedArrayBuffer(MAX_CHANNELS$$module$src$constants*RING_BUFFER_SIZE$$module$src$constants*Float64Array.BYTES_PER_ELEMENT),this.audioStreamOut=new SharedArrayBuffer(MAX_CHANNELS$$module$src$constants*RING_BUFFER_SIZE$$module$src$constants*Float64Array.BYTES_PER_ELEMENT),this.midiBufferSAB=new SharedArrayBuffer(MIDI_BUFFER_SIZE$$module$src$constants*MIDI_BUFFER_PAYLOAD_SIZE$$module$src$constants*Int32Array.BYTES_PER_ELEMENT),this.midiBuffer=new Int32Array(this.midiBufferSAB),this.onPlayStateChange=this.onPlayStateChange.bind(this),this.prepareRealtimePerformance=this.prepareRealtimePerformance.bind(this),logSABMain$$module$src$logger("SharedArrayBufferMainThread got constructed")()}async terminateInstance(){this.csoundWorker&&(this.csoundWorker.terminate(),delete this.csoundWorker),this.audioWorker&&this.audioWorker.terminateInstance&&(await this.audioWorker.terminateInstance(),delete this.audioWorker.terminateInstance),this.proxyPort&&(this.proxyPort[releaseProxy$$module$node_modules$comlink$dist$esm$comlink_mjs](),delete this.proxyPort),this.publicEvents&&this.publicEvents.terminateInstance(),Object.keys(this.exportApi).forEach(o=>delete this.exportApi[o]),Object.keys(this).forEach(o=>delete this[o])}get api(){return this.exportApi}handleMidiInput({data:[o,s,c]}){var i=Atomics.load(this.audioStatePointer,AUDIO_STATE$$module$src$constants.AVAIL_RTMIDI_EVENTS);const g=Atomics.load(this.audioStatePointer,AUDIO_STATE$$module$src$constants.RTMIDI_INDEX);i=(i*MIDI_BUFFER_PAYLOAD_SIZE$$module$src$constants+g)%MIDI_BUFFER_SIZE$$module$src$constants,Atomics.store(this.midiBuffer,i,o),Atomics.store(this.midiBuffer,i+1,s),Atomics.store(this.midiBuffer,i+2,c),Atomics.add(this.audioStatePointer,AUDIO_STATE$$module$src$constants.AVAIL_RTMIDI_EVENTS,1)}async csoundPause(){return this.eventPromises.isWaiting("pause")?-1:(this.eventPromises.createPausePromise(),Atomics.store(this.audioStatePointer,AUDIO_STATE$$module$src$constants.IS_PAUSED,1),await this.eventPromises.waitForPause(),this.onPlayStateChange("realtimePerformancePaused"),0)}async csoundResume(){Atomics.load(this.audioStatePointer,AUDIO_STATE$$module$src$constants.IS_PAUSED)===1&&Atomics.load(this.audioStatePointer,AUDIO_STATE$$module$src$constants.STOP)!==1&&Atomics.load(this.audioStatePointer,AUDIO_STATE$$module$src$constants.IS_PERFORMING)===1&&(Atomics.store(this.audioStatePointer,AUDIO_STATE$$module$src$constants.IS_PAUSED,0),Atomics.notify(this.audioStatePointer,AUDIO_STATE$$module$src$constants.IS_PAUSED),this.onPlayStateChange("realtimePerformanceResumed"))}async onPlayStateChange(o){if(this===void 0)console.log("Failed to announce playstatechange",o);else if(this.currentPlayState=o,this.publicEvents&&o){switch(o){case"realtimePerformanceStarted":logSABMain$$module$src$logger("event: realtimePerformanceStarted received, proceeding to call prepareRealtimePerformance")();try{await this.prepareRealtimePerformance()}catch(s){console.error(s)}break;case"realtimePerformanceEnded":this.eventPromises.createStopPromise(),Object.values(this.callbackBuffer).forEach(({argumentz:s,apiKey:c,resolveCallback:i})=>this.proxyPort.callUncloned(c,s).then(i)),this.callbackBuffer={},logSABMain$$module$src$logger("event: realtimePerformanceEnded received, beginning cleanup")(),initialSharedState$$module$src$constants.forEach((s,c)=>{Atomics.store(this.audioStatePointer,c,s)});break;case"renderStarted":this.publicEvents.triggerRenderStarted(this),this.eventPromises.releaseStartPromise();break;case"renderEnded":logSABMain$$module$src$logger("event: renderEnded received, beginning cleanup")(),this.publicEvents.triggerRenderEnded(this),this.eventPromises&&this.eventPromises.releaseStopPromise()}try{await this.audioWorker.onPlayStateChange(o)}catch(s){console.error(s)}}}async prepareRealtimePerformance(){logSABMain$$module$src$logger("prepareRealtimePerformance")();const o=Atomics.load(this.audioStatePointer,AUDIO_STATE$$module$src$constants.NCHNLS),s=Atomics.load(this.audioStatePointer,AUDIO_STATE$$module$src$constants.NCHNLS_I);this.audioWorker.isRequestingInput=Atomics.load(this.audioStatePointer,AUDIO_STATE$$module$src$constants.IS_REQUESTING_MIC),this.audioWorker.isRequestingMidi=Atomics.load(this.audioStatePointer,AUDIO_STATE$$module$src$constants.IS_REQUESTING_RTMIDI);const c=Atomics.load(this.audioStatePointer,AUDIO_STATE$$module$src$constants.KSMPS),i=Atomics.load(this.audioStatePointer,AUDIO_STATE$$module$src$constants.SAMPLE_RATE);this.audioWorker.ksmps=c,this.audioWorker.sampleRate=i,this.audioWorker.inputCount=s,this.audioWorker.outputsCount=o}async initialize({wasmDataURI:o,withPlugins:s}){s&&!isEmpty$$module$node_modules$rambda$dist$rambda_mjs(s)&&(s=await fetchPlugins$$module$src$utils(s)),logSABMain$$module$src$logger("initialization: instantiate the SABWorker Thread")();const c=new Worker($jscompDefaultExport$$module$dist$__compiled_sab_worker_inline());this.csoundWorker=c;const i=this.audioStateBuffer,g=this.audioStatePointer,h=this.audioStreamIn,$=this.audioStreamOut,j=this.midiBuffer;logSABMain$$module$src$logger("providing the audioWorker a pointer to SABMain's instance")(),this.audioWorker.csoundWorkerMain=this,logSABMain$$module$src$logger("adding message eventListeners for mainMessagePort and mainMessagePortAudio")(),this.ipcMessagePorts.mainMessagePort.addEventListener("message",messageEventHandler$$module$src$mains$messages_main(this)),this.ipcMessagePorts.mainMessagePort.start(),this.ipcMessagePorts.mainMessagePortAudio.addEventListener("message",messageEventHandler$$module$src$mains$messages_main(this)),this.ipcMessagePorts.mainMessagePortAudio.start(),logSABMain$$module$src$logger("(postMessage) making a message channel from SABMain to SABWorker via workerMessagePort")(),this.ipcMessagePorts.sabMainCallbackReply.addEventListener("message",et=>{switch(et.data){case"poll":this.ipcMessagePorts&&this.ipcMessagePorts.sabMainCallbackReply.postMessage(Object.keys(this.callbackBuffer).map(tt=>({id:tt,apiKey:this.callbackBuffer[tt].apiKey,argumentz:this.callbackBuffer[tt].argumentz})));break;case"releaseStop":this.onPlayStateChange(this.currentPlayState==="renderStarted"?"renderEnded":"realtimePerformanceEnded"),this.publicEvents&&this.publicEvents.triggerRealtimePerformanceEnded(this),this.eventPromises&&this.eventPromises.releaseStopPromise();break;case"releasePause":this.publicEvents.triggerRealtimePerformancePaused(this),this.eventPromises.releasePausePromise();break;case"releaseResumed":this.publicEvents.triggerRealtimePerformanceResumed(this),this.eventPromises.releaseResumePromise();break;default:et.data.forEach(({id:tt,answer:at})=>{this.callbackBuffer[tt].resolveCallback(at),delete this.callbackBuffer[tt]})}}),this.ipcMessagePorts.sabMainCallbackReply.start();const _=wrap$$module$node_modules$comlink$dist$esm$comlink_mjs(c);o=o(),this.proxyPort=_;const _e=await _.initialize(transfer$$module$node_modules$comlink$dist$esm$comlink_mjs({wasmDataURI:o,wasmTransformerDataURI:this.wasmTransformerDataURI,messagePort:this.ipcMessagePorts.workerMessagePort,callbackPort:this.ipcMessagePorts.sabWorkerCallbackReply,withPlugins:s},[o,this.ipcMessagePorts.workerMessagePort,this.ipcMessagePorts.sabWorkerCallbackReply]));this.csoundInstance=_e,this.ipcMessagePorts.mainMessagePort.start(),this.ipcMessagePorts.mainMessagePortAudio.start(),logSABMain$$module$src$logger("A proxy port from SABMain to SABWorker established")(),this.exportApi.pause=this.csoundPause.bind(this),this.exportApi.resume=this.csoundResume.bind(this),this.exportApi.terminateInstance=this.terminateInstance.bind(this),this.exportApi.enableAudioInput=()=>console.warn("enableAudioInput was ignored: please use -iadc option before calling start with useWorker=true"),this.exportApi.getNode=async()=>{const et=this.audioWorker.audioWorkletNode;return et||await new Promise(tt=>{this.exportApi.once("onAudioNodeCreated",tt)})},this.exportApi.getAudioContext=async()=>this.audioWorker.audioContext,this.exportApi=this.publicEvents.decorateAPI(this.exportApi),this.exportApi.addListener("message",console.log);for(const et of Object.keys(api$$module$src$libcsound)){const tt=makeProxyCallback$$module$src$utils(_,_e,et,this.currentPlayState),at=api$$module$src$libcsound[et];switch(et){case"csoundCreate":break;case"csoundStart":s=async function(){if(!_e||typeof _e!="number")return console.error("starting csound failed because csound instance wasn't created"),-1;if(this.eventPromises.isWaiting("start"))return-1;this.eventPromises.createStartPromise();const rt=await tt({audioStateBuffer:i,audioStreamIn:h,audioStreamOut:$,midiBuffer:j,csound:_e});return await this.eventPromises.waitForStart(),this.ipcMessagePorts&&this.ipcMessagePorts.sabMainCallbackReply.postMessage({unlock:!0}),rt},s.toString=()=>at.toString(),this.exportApi.start=s.bind(this);break;case"csoundStop":s=async()=>(logSABMain$$module$src$logger(["Checking if it's safe to call stop:",stopableStates$$module$src$utils.has(this.currentPlayState),"currentPlayState is",this.currentPlayState].join(`
`))(),this.eventPromises.isWaiting("stop")?(logSABMain$$module$src$logger("already waiting to stop, doing nothing")(),-1):stopableStates$$module$src$utils.has(this.currentPlayState)?(logSABMain$$module$src$logger("Marking SAB's state to STOP")(),this.eventPromises.createStopPromise(),Atomics.store(this.audioStatePointer,AUDIO_STATE$$module$src$constants.STOP,1),logSABMain$$module$src$logger("Marking that performance is not running anymore (stops the audio too)")(),Atomics.store(this.audioStatePointer,AUDIO_STATE$$module$src$constants.IS_PERFORMING,0),this.currentPlayState==="realtimePerformancePaused"&&(Atomics.store(this.audioStatePointer,AUDIO_STATE$$module$src$constants.IS_PAUSED,0),Atomics.notify(this.audioStatePointer,AUDIO_STATE$$module$src$constants.IS_PAUSED)),this.currentPlayState!=="renderStarted"&&!Atomics.compareExchange(this.audioStatePointer,AUDIO_STATE$$module$src$constants.CSOUND_LOCK,0,1)&&Atomics.notify(this.audioStatePointer,AUDIO_STATE$$module$src$constants.CSOUND_LOCK),await this.eventPromises.waitForStop(),0):-1),this.exportApi.stop=s.bind(this),s.toString=()=>at.toString();break;case"csoundReset":s=async()=>{if(this.currentPlayState)return this.eventPromises.isWaiting("reset")?-1:(stopableStates$$module$src$utils.has(this.currentPlayState)&&await this.exportApi.stop(),this.ipcMessagePorts.restartAudioWorkerPorts(),this.audioContextIsProvided||(await this.audioWorker.terminateInstance(),delete this.audioWorker.audioContext),await tt([]))},this.exportApi.reset=s.bind(this),s.toString=()=>at.toString();break;case"csoundPushMidiMessage":s=async(rt=0,dt=0,mt=0)=>{this.handleMidiInput({data:[rt,dt,mt]})},this.exportApi.midiMessage=s.bind(this),s.toString=()=>at.toString();break;case"fs":this.exportApi.fs={},Object.keys(at).forEach(rt=>{const dt=makeProxyCallback$$module$src$utils(_,_e,rt,this.currentPlayState);dt.toString=()=>at[rt].toString(),this.exportApi.fs[rt]=dt});break;default:s=async(...rt)=>{if(this.currentPlayState==="realtimePerformanceStarted"||this.currentPlayState==="renderStarted"||this.eventPromises.isWaitingToStart()){const dt=this.callbackId;this.callbackId+=1;const mt=new Promise((st,ot)=>{const nt=setTimeout(()=>ot(Error(`Worker timed out so ${csoundApiRename$$module$src$utils(et)}() wasn't called!`)),1e4);this.callbackBuffer[dt]={resolveCallback:lt=>{clearTimeout(nt),st(lt)},apiKey:et,argumentz:[_e,...rt]}});return Atomics.compareExchange(g,AUDIO_STATE$$module$src$constants.HAS_PENDING_CALLBACKS,0,1),await mt}return await tt.apply(void 0,rt)},s.toString=()=>at.toString(),this.exportApi[csoundApiRename$$module$src$utils(et)]=s}}logSABMain$$module$src$logger("PUBLIC API Generated and stored")()}}var $jscompDefaultExport$$module$src$mains$sab_main=SharedArrayBufferMainThread$$module$src$mains$sab_main;async function requestMidi$$module$src$utils$request_midi({onMidiMessage:e}){if(logMidiRequest$$module$src$logger("requesting for web-midi connection")(),navigator&&navigator.requestMIDIAccess)try{const o=await navigator.requestMIDIAccess();if(o.inputs){const s=o.inputs.values();for(let c=s.next();c&&!c.done;c=s.next())logMidiRequest$$module$src$logger(`Connecting midi-input: ${c.value.name||"unkown"}`)(),c.value.onmidimessage=e}else logMidiRequest$$module$src$logger("no midi-device detected")()}catch(o){logMidiRequest$$module$src$logger("error while connecting web-midi: "+o)()}else logMidiRequest$$module$src$logger("no web-midi support found, midi-input will not work!")()}var $jscompDefaultExport$$module$dist$__compiled_worklet_worker_inline=()=>"data:application/javascript;base64,";let UID$$module$src$mains$worklet_main=0;class AudioWorkletMainThread$$module$src$mains$worklet_main{constructor({audioContext:o,audioContextIsProvided:s,autoConnect:c}){this.autoConnect=c,this.audioContextIsProvided=s,this.ipcMessagePorts=void 0,this.audioContext=o,this.softwareBufferSize=this.hardwareBufferSize=this.outputsCount=this.inputsCount=this.sampleRate=this.ksmps=this.workletProxy=this.csoundWorkerMain=this.currentPlayState=this.audioWorkletNode=void 0,this.initialize=this.initialize.bind(this),this.onPlayStateChange=this.onPlayStateChange.bind(this),this.terminateInstance=this.terminateInstance.bind(this),this.createWorkletNode=this.createWorkletNode.bind(this),logWorkletMain$$module$src$logger("AudioWorkletMainThread was constructed")()}async terminateInstance(){if(this.audioWorkletNode&&(this.audioWorkletNode.disconnect(),delete this.audioWorkletNode),this.audioContext){if(this.audioContext.state!=="closed")try{await this.audioContext.close()}catch{}delete this.audioContext}this.workletProxy&&(this.workletProxy[releaseProxy$$module$node_modules$comlink$dist$esm$comlink_mjs](),delete this.workletProxy)}createWorkletNode(o,s,c){return o=new AudioWorkletNode(o,"csound-worklet-processor",{inputChannelCount:s?[s]:0,outputChannelCount:[this.outputsCount||2],processorOptions:{contextUid:c,isRequestingInput:this.isRequestingInput,inputsCount:s,outputsCount:this.outputsCount,ksmps:this.ksmps,maybeSharedArrayBuffer:this.csoundWorkerMain.hasSharedArrayBuffer&&this.csoundWorkerMain.audioStatePointer,maybeSharedArrayBufferAudioIn:this.csoundWorkerMain.hasSharedArrayBuffer&&this.csoundWorkerMain.audioStreamIn,maybeSharedArrayBufferAudioOut:this.csoundWorkerMain.hasSharedArrayBuffer&&this.csoundWorkerMain.audioStreamOut}}),this.csoundWorkerMain.publicEvents.triggerOnAudioNodeCreated(o),o}async onPlayStateChange(o){switch(this.currentPlayState=o,o){case"realtimePerformanceStarted":logWorkletMain$$module$src$logger("event received: realtimePerformanceStarted")(),await this.initialize(),this.csoundWorkerMain&&this.csoundWorkerMain.eventPromises&&(this.csoundWorkerMain.publicEvents&&this.csoundWorkerMain.publicEvents.triggerRealtimePerformanceStarted(this),this.csoundWorkerMain.eventPromises&&await this.csoundWorkerMain.eventPromises.releaseStartPromise());break;case"realtimePerformanceEnded":if(logWorkletMain$$module$src$logger("event received: realtimePerformanceEnded"+!this.csoundWorkerMain.hasSharedArrayBuffer?" cleaning up ports":"")(),!this.audioContextIsProvided&&this.autoConnect&&this.audioContext&&this.audioContext.state!=="closed")try{await this.audioContext.close()}catch{}this.autoConnect&&this.audioWorkletNode&&(this.audioWorkletNode.disconnect(),delete this.audioWorkletNode),this.workletProxy&&(this.workletProxy[releaseProxy$$module$node_modules$comlink$dist$esm$comlink_mjs](),delete this.workletProxy),this.workletWorkerUrl&&(window.URL||window.webkitURL).revokeObjectURL(this.workletWorkerUrl),this.audioWorkletNode&&delete this.audioWorkletNode,this.softwareBufferSize=this.hardwareBufferSize=this.outputsCount=this.inputsCount=this.sampleRate=this.currentPlayState=void 0;break;case"realtimePerformancePaused":this.csoundWorkerMain&&this.csoundWorkerMain.eventPromises&&(this.csoundWorkerMain.publicEvents&&this.csoundWorkerMain.publicEvents.triggerRealtimePerformancePaused(this),await this.csoundWorkerMain.eventPromises.releasePausePromise());break;case"realtimePerformanceResumed":this.csoundWorkerMain&&this.csoundWorkerMain.eventPromises&&(this.csoundWorkerMain.publicEvents&&this.csoundWorkerMain.publicEvents.triggerRealtimePerformanceResumed(this),await this.csoundWorkerMain.eventPromises.releaseResumePromise())}}async initialize(){this.audioContext||(this.audioContextIsProvided&&console.error("fatal: the provided AudioContext was undefined"),this.audioContext=new(WebkitAudioContext$$module$src$utils())({sampleRate:this.sampleRate})),this.audioContext.state==="closed"&&(this.audioContextIsProvided&&console.error("fatal: the provided AudioContext was closed, falling back new AudioContext"),this.audioContext=new(WebkitAudioContext$$module$src$utils())({sampleRate:this.sampleRate})),this.sampleRate!==this.audioContext.sampleRate&&(this.audioContext=new(WebkitAudioContext$$module$src$utils())({sampleRate:this.sampleRate}),this.audioContextIsProvided&&console.error("Internal error: sample rate was ignored from provided audioContext")),this.workletWorkerUrl=$jscompDefaultExport$$module$dist$__compiled_worklet_worker_inline();try{await this.audioContext.audioWorklet.addModule(this.workletWorkerUrl)}catch(c){console.error("Error calling audioWorklet.addModule",c)}if(logWorkletMain$$module$src$logger("WorkletWorker module added")(),this.csoundWorkerMain){var o=`audioWorklet${UID$$module$src$mains$worklet_main}`;if(UID$$module$src$mains$worklet_main+=1,this.isRequestingMidi&&(logWorkletMain$$module$src$logger("requesting for web-midi connection"),requestMidi$$module$src$utils$request_midi({onMidiMessage:this.csoundWorkerMain.handleMidiInput.bind(this.csoundWorkerMain)})),this.isRequestingInput){let c;var s=new Promise(h=>{c=h});const i=navigator.mediaDevices===void 0?navigator.getUserMedia||navigator.webkitGetUserMedia||navigator.mozGetUserMedia:navigator.mediaDevices.getUserMedia,g=h=>{if(h){h=this.audioContext.createMediaStreamSource(h),this.inputsCount=h.channelCount;const $=this.createWorkletNode(this.audioContext,h.channelCount,o);this.audioWorkletNode=$,this.autoConnect&&h.connect($).connect(this.audioContext.destination)}else this.inputsCount=0,this.audioWorkletNode=this.createWorkletNode(this.audioContext,0,o),this.autoConnect&&this.audioWorkletNode.connect(this.audioContext.destination);c&&c()};logWorkletMain$$module$src$logger("requesting microphone access")(),navigator.mediaDevices===void 0?i.call(navigator,{audio:{optional:[{echoCancellation:!1,sampleSize:32}]}},g,console.error):i.call(navigator.mediaDevices,{audio:{echoCancellation:!1,sampleSize:32}}).then(g).catch(console.error)}else this.audioWorkletNode=this.createWorkletNode(this.audioContext,0,o),logWorkletMain$$module$src$logger("connecting Node to AudioContext destination")(),this.autoConnect&&this.audioWorkletNode.connect(this.audioContext.destination);s&&await s,this.workletProxy=wrap$$module$node_modules$comlink$dist$esm$comlink_mjs(this.audioWorkletNode.port),this.ipcMessagePorts.mainMessagePortAudio.addEventListener("message",messageEventHandler$$module$src$mains$messages_main(this)),this.ipcMessagePorts.mainMessagePortAudio.start(),await this.workletProxy.initialize(transfer$$module$node_modules$comlink$dist$esm$comlink_mjs({contextUid:o,messagePort:this.ipcMessagePorts.workerMessagePortAudio,requestPort:this.ipcMessagePorts.audioWorkerFrameRequestPort,inputPort:this.ipcMessagePorts.audioWorkerAudioInputPort},[this.ipcMessagePorts.workerMessagePortAudio,this.ipcMessagePorts.audioWorkerFrameRequestPort,this.ipcMessagePorts.audioWorkerAudioInputPort])),logWorkletMain$$module$src$logger("initialization finished in main")()}else console.error("fatal: worker not reachable from worklet-main thread")}}var $jscompDefaultExport$$module$src$mains$worklet_main=AudioWorkletMainThread$$module$src$mains$worklet_main;const requestMicrophoneNode$$module$src$mains$io_utils=e=>{const o=navigator.mediaDevices===void 0?navigator.getUserMedia||navigator.webkitGetUserMedia||navigator.mozGetUserMedia:navigator.mediaDevices.getUserMedia;console.log("requesting microphone access"),navigator.mediaDevices===void 0?o.call(navigator,{audio:{optional:[{echoCancellation:!1,sampleSize:32}]}},e,console.error):o.call(navigator.mediaDevices,{audio:{echoCancellation:!1,sampleSize:32}}).then(e).catch(console.error)};async function enableAudioInput$$module$src$mains$io_utils(){console.log("enabling audio input"),requestMicrophoneNode$$module$src$mains$io_utils(async e=>{if(e){e=(await this.getAudioContext()).createMediaStreamSource(e),this.inputsCount=e.channelCount;const o=await this.getNode();e.connect(o)}})}var $jscompDefaultExport$$module$dist$__compiled_old_spn_worker_inline=()=>(window.URL||window.webkitURL).createObjectURL(new Blob([`(function(){/*

 Copyright The Closure Library Authors.
 SPDX-License-Identifier: Apache-2.0
*/
var $jscomp=$jscomp||{};$jscomp.scope={};var COMPILED=!0,goog=goog||{};goog.global=this||self;goog.exportPath_=function(a,b,c,d){a=a.split(".");d=d||goog.global;a[0]in d||"undefined"==typeof d.execScript||d.execScript("var "+a[0]);for(var e;a.length&&(e=a.shift());)if(a.length||void 0===b)d=d[e]&&d[e]!==Object.prototype[e]?d[e]:d[e]={};else if(!c&&goog.isObject(b)&&goog.isObject(d[e]))for(var f in b)b.hasOwnProperty(f)&&(d[e][f]=b[f]);else d[e]=b};
goog.define=function(a,b){if(!COMPILED){var c=goog.global.CLOSURE_UNCOMPILED_DEFINES,d=goog.global.CLOSURE_DEFINES;c&&void 0===c.nodeType&&Object.prototype.hasOwnProperty.call(c,a)?b=c[a]:d&&void 0===d.nodeType&&Object.prototype.hasOwnProperty.call(d,a)&&(b=d[a])}return b};goog.FEATURESET_YEAR=2020;goog.DEBUG=!0;goog.LOCALE="en";goog.getLocale=function(){return goog.LOCALE};goog.TRUSTED_SITE=!0;goog.DISALLOW_TEST_ONLY_CODE=COMPILED&&!goog.DEBUG;goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING=!1;
goog.provide=function(a){if(goog.isInModuleLoader_())throw Error("goog.provide cannot be used within a module.");if(!COMPILED&&goog.isProvided_(a))throw Error('Namespace "'+a+'" already declared.');goog.constructNamespace_(a)};goog.constructNamespace_=function(a,b,c){if(!COMPILED){delete goog.implicitNamespaces_[a];for(var d=a;(d=d.substring(0,d.lastIndexOf(".")))&&!goog.getObjectByName(d);)goog.implicitNamespaces_[d]=!0}goog.exportPath_(a,b,c)};goog.NONCE_PATTERN_=/^[\\w+/_-]+[=]{0,2}$/;
goog.getScriptNonce_=function(a){a=(a||goog.global).document;return(a=a.querySelector&&a.querySelector("script[nonce]"))&&(a=a.nonce||a.getAttribute("nonce"))&&goog.NONCE_PATTERN_.test(a)?a:""};goog.VALID_MODULE_RE_=/^[a-zA-Z_$][a-zA-Z0-9._$]*$/;
goog.module=function(a){if("string"!==typeof a||!a||-1==a.search(goog.VALID_MODULE_RE_))throw Error("Invalid module identifier");if(!goog.isInGoogModuleLoader_())throw Error("Module "+a+" has been loaded incorrectly. Note, modules cannot be loaded as normal scripts. They require some kind of pre-processing step. You're likely trying to load a module via a script tag or as a part of a concatenated bundle without rewriting the module. For more info see: https://github.com/google/closure-library/wiki/goog.module:-an-ES6-module-like-alternative-to-goog.provide.");if(goog.moduleLoaderState_.moduleName)throw Error("goog.module may only be called once per module.");
goog.moduleLoaderState_.moduleName=a;if(!COMPILED){if(goog.isProvided_(a))throw Error('Namespace "'+a+'" already declared.');delete goog.implicitNamespaces_[a]}};goog.module.get=function(a){return goog.module.getInternal_(a)};goog.module.getInternal_=function(a){if(!COMPILED){if(a in goog.loadedModules_)return goog.loadedModules_[a].exports;if(!goog.implicitNamespaces_[a])return a=goog.getObjectByName(a),null!=a?a:null}return null};goog.ModuleType={ES6:"es6",GOOG:"goog"};goog.moduleLoaderState_=null;
goog.isInModuleLoader_=function(){return goog.isInGoogModuleLoader_()||goog.isInEs6ModuleLoader_()};goog.isInGoogModuleLoader_=function(){return!!goog.moduleLoaderState_&&goog.moduleLoaderState_.type==goog.ModuleType.GOOG};goog.isInEs6ModuleLoader_=function(){if(goog.moduleLoaderState_&&goog.moduleLoaderState_.type==goog.ModuleType.ES6)return!0;var a=goog.global.$jscomp;return a?"function"!=typeof a.getCurrentModulePath?!1:!!a.getCurrentModulePath():!1};
goog.module.declareLegacyNamespace=function(){if(!COMPILED&&!goog.isInGoogModuleLoader_())throw Error("goog.module.declareLegacyNamespace must be called from within a goog.module");if(!COMPILED&&!goog.moduleLoaderState_.moduleName)throw Error("goog.module must be called prior to goog.module.declareLegacyNamespace.");goog.moduleLoaderState_.declareLegacyNamespace=!0};
goog.declareModuleId=function(a){if(!COMPILED){if(!goog.isInEs6ModuleLoader_())throw Error("goog.declareModuleId may only be called from within an ES6 module");if(goog.moduleLoaderState_&&goog.moduleLoaderState_.moduleName)throw Error("goog.declareModuleId may only be called once per module.");if(a in goog.loadedModules_)throw Error('Module with namespace "'+a+'" already exists.');}if(goog.moduleLoaderState_)goog.moduleLoaderState_.moduleName=a;else{var b=goog.global.$jscomp;if(!b||"function"!=typeof b.getCurrentModulePath)throw Error('Module with namespace "'+
a+'" has been loaded incorrectly.');b=b.require(b.getCurrentModulePath());goog.loadedModules_[a]={exports:b,type:goog.ModuleType.ES6,moduleId:a}}};goog.setTestOnly=function(a){if(goog.DISALLOW_TEST_ONLY_CODE)throw a=a||"",Error("Importing test-only code into non-debug environment"+(a?": "+a:"."));};goog.forwardDeclare=function(a){};COMPILED||(goog.isProvided_=function(a){return a in goog.loadedModules_||!goog.implicitNamespaces_[a]&&null!=goog.getObjectByName(a)},goog.implicitNamespaces_={"goog.module":!0});
goog.getObjectByName=function(a,b){a=a.split(".");b=b||goog.global;for(var c=0;c<a.length;c++)if(b=b[a[c]],null==b)return null;return b};goog.addDependency=function(a,b,c,d){!COMPILED&&goog.DEPENDENCIES_ENABLED&&goog.debugLoader_.addDependency(a,b,c,d)};goog.ENABLE_DEBUG_LOADER=!0;goog.logToConsole_=function(a){goog.global.console&&goog.global.console.error(a)};
goog.require=function(a){if(!COMPILED){goog.ENABLE_DEBUG_LOADER&&goog.debugLoader_.requested(a);if(goog.isProvided_(a)){if(goog.isInModuleLoader_())return goog.module.getInternal_(a)}else if(goog.ENABLE_DEBUG_LOADER){var b=goog.moduleLoaderState_;goog.moduleLoaderState_=null;try{goog.debugLoader_.load_(a)}finally{goog.moduleLoaderState_=b}}return null}};goog.requireType=function(a){return{}};goog.basePath="";goog.abstractMethod=function(){throw Error("unimplemented abstract method");};
goog.addSingletonGetter=function(a){a.instance_=void 0;a.getInstance=function(){if(a.instance_)return a.instance_;goog.DEBUG&&(goog.instantiatedSingletons_[goog.instantiatedSingletons_.length]=a);return a.instance_=new a}};goog.instantiatedSingletons_=[];goog.LOAD_MODULE_USING_EVAL=!0;goog.SEAL_MODULE_EXPORTS=goog.DEBUG;goog.loadedModules_={};goog.DEPENDENCIES_ENABLED=!COMPILED&&goog.ENABLE_DEBUG_LOADER;goog.TRANSPILE="detect";goog.ASSUME_ES_MODULES_TRANSPILED=!1;goog.TRUSTED_TYPES_POLICY_NAME="goog";
goog.hasBadLetScoping=null;
goog.loadModule=function(a){var b=goog.moduleLoaderState_;try{goog.moduleLoaderState_={moduleName:"",declareLegacyNamespace:!1,type:goog.ModuleType.GOOG};var c={},d=c;if("function"===typeof a)d=a.call(void 0,d);else if("string"===typeof a)d=goog.loadModuleFromSource_.call(void 0,d,a);else throw Error("Invalid module definition");var e=goog.moduleLoaderState_.moduleName;if("string"===typeof e&&e)goog.moduleLoaderState_.declareLegacyNamespace?goog.constructNamespace_(e,d,c!==d):goog.SEAL_MODULE_EXPORTS&&
Object.seal&&"object"==typeof d&&null!=d&&Object.seal(d),goog.loadedModules_[e]={exports:d,type:goog.ModuleType.GOOG,moduleId:goog.moduleLoaderState_.moduleName};else throw Error('Invalid module name "'+e+'"');}finally{goog.moduleLoaderState_=b}};goog.loadModuleFromSource_=function(a,b){eval(goog.CLOSURE_EVAL_PREFILTER_.createScript(b));return a};goog.normalizePath_=function(a){a=a.split("/");for(var b=0;b<a.length;)"."==a[b]?a.splice(b,1):b&&".."==a[b]&&a[b-1]&&".."!=a[b-1]?a.splice(--b,2):b++;return a.join("/")};
goog.loadFileSync_=function(a){if(goog.global.CLOSURE_LOAD_FILE_SYNC)return goog.global.CLOSURE_LOAD_FILE_SYNC(a);try{var b=new goog.global.XMLHttpRequest;b.open("get",a,!1);b.send();return 0==b.status||200==b.status?b.responseText:null}catch(c){return null}};goog.typeOf=function(a){var b=typeof a;return"object"!=b?b:a?Array.isArray(a)?"array":b:"null"};goog.isArrayLike=function(a){var b=goog.typeOf(a);return"array"==b||"object"==b&&"number"==typeof a.length};
goog.isDateLike=function(a){return goog.isObject(a)&&"function"==typeof a.getFullYear};goog.isObject=function(a){var b=typeof a;return"object"==b&&null!=a||"function"==b};goog.getUid=function(a){return Object.prototype.hasOwnProperty.call(a,goog.UID_PROPERTY_)&&a[goog.UID_PROPERTY_]||(a[goog.UID_PROPERTY_]=++goog.uidCounter_)};goog.hasUid=function(a){return!!a[goog.UID_PROPERTY_]};goog.removeUid=function(a){null!==a&&"removeAttribute"in a&&a.removeAttribute(goog.UID_PROPERTY_);try{delete a[goog.UID_PROPERTY_]}catch(b){}};
goog.UID_PROPERTY_="closure_uid_"+(1E9*Math.random()>>>0);goog.uidCounter_=0;goog.cloneObject=function(a){var b=goog.typeOf(a);if("object"==b||"array"==b){if("function"===typeof a.clone)return a.clone();if("undefined"!==typeof Map&&a instanceof Map)return new Map(a);if("undefined"!==typeof Set&&a instanceof Set)return new Set(a);b="array"==b?[]:{};for(var c in a)b[c]=goog.cloneObject(a[c]);return b}return a};goog.bindNative_=function(a,b,c){return a.call.apply(a.bind,arguments)};
goog.bindJs_=function(a,b,c){if(!a)throw Error();if(2<arguments.length){var d=Array.prototype.slice.call(arguments,2);return function(){var e=Array.prototype.slice.call(arguments);Array.prototype.unshift.apply(e,d);return a.apply(b,e)}}return function(){return a.apply(b,arguments)}};goog.bind=function(a,b,c){Function.prototype.bind&&-1!=Function.prototype.bind.toString().indexOf("native code")?goog.bind=goog.bindNative_:goog.bind=goog.bindJs_;return goog.bind.apply(null,arguments)};
goog.partial=function(a,b){var c=Array.prototype.slice.call(arguments,1);return function(){var d=c.slice();d.push.apply(d,arguments);return a.apply(this,d)}};goog.now=function(){return Date.now()};goog.globalEval=function(a){(0,eval)(a)};
goog.getCssName=function(a,b){if("."==String(a).charAt(0))throw Error('className passed in goog.getCssName must not start with ".". You passed: '+a);var c=function(e){return goog.cssNameMapping_[e]||e},d=function(e){e=e.split("-");for(var f=[],g=0;g<e.length;g++)f.push(c(e[g]));return f.join("-")};d=goog.cssNameMapping_?"BY_WHOLE"==goog.cssNameMappingStyle_?c:d:function(e){return e};a=b?a+"-"+d(b):d(a);return goog.global.CLOSURE_CSS_NAME_MAP_FN?goog.global.CLOSURE_CSS_NAME_MAP_FN(a):a};
goog.setCssNameMapping=function(a,b){goog.cssNameMapping_=a;goog.cssNameMappingStyle_=b};!COMPILED&&goog.global.CLOSURE_CSS_NAME_MAPPING&&(goog.cssNameMapping_=goog.global.CLOSURE_CSS_NAME_MAPPING);goog.GetMsgOptions=function(){};
goog.getMsg=function(a,b,c){c&&c.html&&(a=a.replace(/</g,"&lt;"));c&&c.unescapeHtmlEntities&&(a=a.replace(/&lt;/g,"<").replace(/&gt;/g,">").replace(/&apos;/g,"'").replace(/&quot;/g,'"').replace(/&amp;/g,"&"));b&&(a=a.replace(/\\{\\$([^}]+)}/g,function(d,e){return null!=b&&e in b?b[e]:d}));return a};goog.getMsgWithFallback=function(a,b){return a};goog.exportSymbol=function(a,b,c){goog.exportPath_(a,b,!0,c)};goog.exportProperty=function(a,b,c){a[b]=c};
goog.inherits=function(a,b){function c(){}c.prototype=b.prototype;a.superClass_=b.prototype;a.prototype=new c;a.prototype.constructor=a;a.base=function(d,e,f){for(var g=Array(arguments.length-2),h=2;h<arguments.length;h++)g[h-2]=arguments[h];return b.prototype[e].apply(d,g)}};goog.scope=function(a){if(goog.isInModuleLoader_())throw Error("goog.scope is not supported within a module.");a.call(goog.global)};COMPILED||(goog.global.COMPILED=COMPILED);
goog.defineClass=function(a,b){var c=b.constructor,d=b.statics;c&&c!=Object.prototype.constructor||(c=function(){throw Error("cannot instantiate an interface (no constructor defined).");});c=goog.defineClass.createSealingConstructor_(c,a);a&&goog.inherits(c,a);delete b.constructor;delete b.statics;goog.defineClass.applyProperties_(c.prototype,b);null!=d&&(d instanceof Function?d(c):goog.defineClass.applyProperties_(c,d));return c};goog.defineClass.SEAL_CLASS_INSTANCES=goog.DEBUG;
goog.defineClass.createSealingConstructor_=function(a,b){return goog.defineClass.SEAL_CLASS_INSTANCES?function(){var c=a.apply(this,arguments)||this;c[goog.UID_PROPERTY_]=c[goog.UID_PROPERTY_];return c}:a};goog.defineClass.OBJECT_PROTOTYPE_FIELDS_="constructor hasOwnProperty isPrototypeOf propertyIsEnumerable toLocaleString toString valueOf".split(" ");
goog.defineClass.applyProperties_=function(a,b){for(var c in b)Object.prototype.hasOwnProperty.call(b,c)&&(a[c]=b[c]);for(var d=0;d<goog.defineClass.OBJECT_PROTOTYPE_FIELDS_.length;d++)c=goog.defineClass.OBJECT_PROTOTYPE_FIELDS_[d],Object.prototype.hasOwnProperty.call(b,c)&&(a[c]=b[c])};goog.identity_=function(a){return a};
goog.createTrustedTypesPolicy=function(a){var b=null,c=goog.global.trustedTypes;if(!c||!c.createPolicy)return b;try{b=c.createPolicy(a,{createHTML:goog.identity_,createScript:goog.identity_,createScriptURL:goog.identity_})}catch(d){goog.logToConsole_(d.message)}return b};
!COMPILED&&goog.DEPENDENCIES_ENABLED&&(goog.isEdge_=function(){return!!(goog.global.navigator&&goog.global.navigator.userAgent?goog.global.navigator.userAgent:"").match(/Edge\\/(\\d+)(\\.\\d)*/i)},goog.inHtmlDocument_=function(){var a=goog.global.document;return null!=a&&"write"in a},goog.isDocumentLoading_=function(){var a=goog.global.document;return a.attachEvent?"complete"!=a.readyState:"loading"==a.readyState},goog.findBasePath_=function(){if(void 0!=goog.global.CLOSURE_BASE_PATH&&"string"===typeof goog.global.CLOSURE_BASE_PATH)goog.basePath=
goog.global.CLOSURE_BASE_PATH;else if(goog.inHtmlDocument_()){var a=goog.global.document,b=a.currentScript;a=b?[b]:a.getElementsByTagName("SCRIPT");for(b=a.length-1;0<=b;--b){var c=a[b].src,d=c.lastIndexOf("?");d=-1==d?c.length:d;if("base.js"==c.slice(d-7,d)){goog.basePath=c.slice(0,d-7);break}}}},goog.findBasePath_(),goog.protectScriptTag_=function(a){return a.replace(/<\\/(SCRIPT)/ig,"\\\\x3c/$1")},goog.DebugLoader_=function(){this.dependencies_={};this.idToPath_={};this.written_={};this.loadingDeps_=
[];this.depsToLoad_=[];this.paused_=!1;this.factory_=new goog.DependencyFactory;this.deferredCallbacks_={};this.deferredQueue_=[]},goog.DebugLoader_.prototype.bootstrap=function(a,b){function c(){d&&(goog.global.setTimeout(d,0),d=null)}var d=b;if(a.length){b=[];for(var e=0;e<a.length;e++){var f=this.getPathFromDeps_(a[e]);if(!f)throw Error("Unregonized namespace: "+a[e]);b.push(this.dependencies_[f])}f=goog.require;var g=0;for(e=0;e<a.length;e++)f(a[e]),b[e].onLoad(function(){++g==a.length&&c()})}else c()},
goog.DebugLoader_.prototype.loadClosureDeps=function(){this.depsToLoad_.push(this.factory_.createDependency(goog.normalizePath_(goog.basePath+"deps.js"),"deps.js",[],[],{}));this.loadDeps_()},goog.DebugLoader_.prototype.requested=function(a,b){(a=this.getPathFromDeps_(a))&&(b||this.areDepsLoaded_(this.dependencies_[a].requires))&&(b=this.deferredCallbacks_[a])&&(delete this.deferredCallbacks_[a],b())},goog.DebugLoader_.prototype.setDependencyFactory=function(a){this.factory_=a},goog.DebugLoader_.prototype.load_=
function(a){if(this.getPathFromDeps_(a)){var b=this,c=[],d=function(e){var f=b.getPathFromDeps_(e);if(!f)throw Error("Bad dependency path or symbol: "+e);if(!b.written_[f]){b.written_[f]=!0;e=b.dependencies_[f];for(f=0;f<e.requires.length;f++)goog.isProvided_(e.requires[f])||d(e.requires[f]);c.push(e)}};d(a);a=!!this.depsToLoad_.length;this.depsToLoad_=this.depsToLoad_.concat(c);this.paused_||a||this.loadDeps_()}else goog.logToConsole_("goog.require could not find: "+a)},goog.DebugLoader_.prototype.loadDeps_=
function(){for(var a=this,b=this.paused_;this.depsToLoad_.length&&!b;)(function(){var c=!1,d=a.depsToLoad_.shift(),e=!1;a.loading_(d);var f={pause:function(){if(c)throw Error("Cannot call pause after the call to load.");b=!0},resume:function(){c?a.resume_():b=!1},loaded:function(){if(e)throw Error("Double call to loaded.");e=!0;a.loaded_(d)},pending:function(){for(var g=[],h=0;h<a.loadingDeps_.length;h++)g.push(a.loadingDeps_[h]);return g},setModuleState:function(g){goog.moduleLoaderState_={type:g,
moduleName:"",declareLegacyNamespace:!1}},registerEs6ModuleExports:function(g,h,k){k&&(goog.loadedModules_[k]={exports:h,type:goog.ModuleType.ES6,moduleId:k||""})},registerGoogModuleExports:function(g,h){goog.loadedModules_[g]={exports:h,type:goog.ModuleType.GOOG,moduleId:g}},clearModuleState:function(){goog.moduleLoaderState_=null},defer:function(g){if(c)throw Error("Cannot register with defer after the call to load.");a.defer_(d,g)},areDepsLoaded:function(){return a.areDepsLoaded_(d.requires)}};
try{d.load(f)}finally{c=!0}})();b&&this.pause_()},goog.DebugLoader_.prototype.pause_=function(){this.paused_=!0},goog.DebugLoader_.prototype.resume_=function(){this.paused_&&(this.paused_=!1,this.loadDeps_())},goog.DebugLoader_.prototype.loading_=function(a){this.loadingDeps_.push(a)},goog.DebugLoader_.prototype.loaded_=function(a){for(var b=0;b<this.loadingDeps_.length;b++)if(this.loadingDeps_[b]==a){this.loadingDeps_.splice(b,1);break}for(b=0;b<this.deferredQueue_.length;b++)if(this.deferredQueue_[b]==
a.path){this.deferredQueue_.splice(b,1);break}if(this.loadingDeps_.length==this.deferredQueue_.length&&!this.depsToLoad_.length)for(;this.deferredQueue_.length;)this.requested(this.deferredQueue_.shift(),!0);a.loaded()},goog.DebugLoader_.prototype.areDepsLoaded_=function(a){for(var b=0;b<a.length;b++){var c=this.getPathFromDeps_(a[b]);if(!c||!(c in this.deferredCallbacks_||goog.isProvided_(a[b])))return!1}return!0},goog.DebugLoader_.prototype.getPathFromDeps_=function(a){return a in this.idToPath_?
this.idToPath_[a]:a in this.dependencies_?a:null},goog.DebugLoader_.prototype.defer_=function(a,b){this.deferredCallbacks_[a.path]=b;this.deferredQueue_.push(a.path)},goog.LoadController=function(){},goog.LoadController.prototype.pause=function(){},goog.LoadController.prototype.resume=function(){},goog.LoadController.prototype.loaded=function(){},goog.LoadController.prototype.pending=function(){},goog.LoadController.prototype.registerEs6ModuleExports=function(a,b,c){},goog.LoadController.prototype.setModuleState=
function(a){},goog.LoadController.prototype.clearModuleState=function(){},goog.LoadController.prototype.defer=function(a){},goog.LoadController.prototype.areDepsLoaded=function(){},goog.Dependency=function(a,b,c,d,e){this.path=a;this.relativePath=b;this.provides=c;this.requires=d;this.loadFlags=e;this.loaded_=!1;this.loadCallbacks_=[]},goog.Dependency.prototype.getPathName=function(){var a=this.path,b=a.indexOf("://");0<=b&&(a=a.substring(b+3),b=a.indexOf("/"),0<=b&&(a=a.substring(b+1)));return a},
goog.Dependency.prototype.onLoad=function(a){this.loaded_?a():this.loadCallbacks_.push(a)},goog.Dependency.prototype.loaded=function(){this.loaded_=!0;var a=this.loadCallbacks_;this.loadCallbacks_=[];for(var b=0;b<a.length;b++)a[b]()},goog.Dependency.defer_=!1,goog.Dependency.callbackMap_={},goog.Dependency.registerCallback_=function(a){var b=Math.random().toString(32);goog.Dependency.callbackMap_[b]=a;return b},goog.Dependency.unregisterCallback_=function(a){delete goog.Dependency.callbackMap_[a]},
goog.Dependency.callback_=function(a,b){if(a in goog.Dependency.callbackMap_){for(var c=goog.Dependency.callbackMap_[a],d=[],e=1;e<arguments.length;e++)d.push(arguments[e]);c.apply(void 0,d)}else throw Error("Callback key "+a+" does not exist (was base.js loaded more than once?).");},goog.Dependency.prototype.load=function(a){if(goog.global.CLOSURE_IMPORT_SCRIPT)goog.global.CLOSURE_IMPORT_SCRIPT(this.path)?a.loaded():a.pause();else if(goog.inHtmlDocument_()){var b=goog.global.document;if("complete"==
b.readyState&&!goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING){if(/\\bdeps.js$/.test(this.path)){a.loaded();return}throw Error('Cannot write "'+this.path+'" after document load');}var c=goog.getScriptNonce_();if(!goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING&&goog.isDocumentLoading_()){var d=function(h){h.readyState&&"complete"!=h.readyState?h.onload=d:(goog.Dependency.unregisterCallback_(e),a.loaded())};var e=goog.Dependency.registerCallback_(d);c=c?' nonce="'+c+'"':"";var f='<script src="'+this.path+'"'+
c+(goog.Dependency.defer_?" defer":"")+' id="script-'+e+'">\\x3c/script>';f+="<script"+c+">";f=goog.Dependency.defer_?f+("document.getElementById('script-"+e+"').onload = function() {\\n  goog.Dependency.callback_('"+e+"', this);\\n};\\n"):f+("goog.Dependency.callback_('"+e+"', document.getElementById('script-"+e+"'));");f+="\\x3c/script>";b.write(goog.TRUSTED_TYPES_POLICY_?goog.TRUSTED_TYPES_POLICY_.createHTML(f):f)}else{var g=b.createElement("script");g.defer=goog.Dependency.defer_;g.async=!1;c&&(g.nonce=
c);g.onload=function(){g.onload=null;a.loaded()};g.src=goog.TRUSTED_TYPES_POLICY_?goog.TRUSTED_TYPES_POLICY_.createScriptURL(this.path):this.path;b.head.appendChild(g)}}else goog.logToConsole_("Cannot use default debug loader outside of HTML documents."),"deps.js"==this.relativePath?(goog.logToConsole_("Consider setting CLOSURE_IMPORT_SCRIPT before loading base.js, or setting CLOSURE_NO_DEPS to true."),a.loaded()):a.pause()},goog.Es6ModuleDependency=function(a,b,c,d,e){goog.Dependency.call(this,a,
b,c,d,e)},goog.inherits(goog.Es6ModuleDependency,goog.Dependency),goog.Es6ModuleDependency.prototype.load=function(a){function b(l,m){var n="",p=goog.getScriptNonce_();p&&(n=' nonce="'+p+'"');l=m?'<script type="module" crossorigin'+n+">"+m+"\\x3c/script>":'<script type="module" crossorigin src="'+l+'"'+n+">\\x3c/script>";d.write(goog.TRUSTED_TYPES_POLICY_?goog.TRUSTED_TYPES_POLICY_.createHTML(l):l)}function c(l,m){var n=d.createElement("script");n.defer=!0;n.async=!1;n.type="module";n.setAttribute("crossorigin",
!0);var p=goog.getScriptNonce_();p&&(n.nonce=p);m?n.text=goog.TRUSTED_TYPES_POLICY_?goog.TRUSTED_TYPES_POLICY_.createScript(m):m:n.src=goog.TRUSTED_TYPES_POLICY_?goog.TRUSTED_TYPES_POLICY_.createScriptURL(l):l;d.head.appendChild(n)}if(goog.global.CLOSURE_IMPORT_SCRIPT)goog.global.CLOSURE_IMPORT_SCRIPT(this.path)?a.loaded():a.pause();else if(goog.inHtmlDocument_()){var d=goog.global.document,e=this;if(goog.isDocumentLoading_()){var f=b;goog.Dependency.defer_=!0}else f=c;var g=goog.Dependency.registerCallback_(function(){goog.Dependency.unregisterCallback_(g);
a.setModuleState(goog.ModuleType.ES6)});f(void 0,'goog.Dependency.callback_("'+g+'")');f(this.path,void 0);var h=goog.Dependency.registerCallback_(function(l){goog.Dependency.unregisterCallback_(h);a.registerEs6ModuleExports(e.path,l,goog.moduleLoaderState_.moduleName)});f(void 0,'import * as m from "'+this.path+'"; goog.Dependency.callback_("'+h+'", m)');var k=goog.Dependency.registerCallback_(function(){goog.Dependency.unregisterCallback_(k);a.clearModuleState();a.loaded()});f(void 0,'goog.Dependency.callback_("'+
k+'")')}else goog.logToConsole_("Cannot use default debug loader outside of HTML documents."),a.pause()},goog.TransformedDependency=function(a,b,c,d,e){goog.Dependency.call(this,a,b,c,d,e);this.contents_=null;this.lazyFetch_=!goog.inHtmlDocument_()||!("noModule"in goog.global.document.createElement("script"))},goog.inherits(goog.TransformedDependency,goog.Dependency),goog.TransformedDependency.prototype.load=function(a){function b(){e.contents_=goog.loadFileSync_(e.path);e.contents_&&(e.contents_=
e.transform(e.contents_),e.contents_&&(e.contents_+="\\n//# sourceURL="+e.path))}function c(){e.lazyFetch_&&b();if(e.contents_){f&&a.setModuleState(goog.ModuleType.ES6);try{var l=e.contents_;e.contents_=null;goog.globalEval(goog.CLOSURE_EVAL_PREFILTER_.createScript(l));if(f)var m=goog.moduleLoaderState_.moduleName}finally{f&&a.clearModuleState()}f&&goog.global.$jscomp.require.ensure([e.getPathName()],function(){a.registerEs6ModuleExports(e.path,goog.global.$jscomp.require(e.getPathName()),m)});a.loaded()}}
function d(){var l=goog.global.document,m=goog.Dependency.registerCallback_(function(){goog.Dependency.unregisterCallback_(m);c()}),n=goog.getScriptNonce_();n="<script"+(n?' nonce="'+n+'"':"")+">"+goog.protectScriptTag_('goog.Dependency.callback_("'+m+'");')+"\\x3c/script>";l.write(goog.TRUSTED_TYPES_POLICY_?goog.TRUSTED_TYPES_POLICY_.createHTML(n):n)}var e=this;if(goog.global.CLOSURE_IMPORT_SCRIPT)b(),this.contents_&&goog.global.CLOSURE_IMPORT_SCRIPT("",this.contents_)?(this.contents_=null,a.loaded()):
a.pause();else{var f=this.loadFlags.module==goog.ModuleType.ES6;this.lazyFetch_||b();var g=1<a.pending().length;if(goog.Dependency.defer_&&(g||goog.isDocumentLoading_()))a.defer(function(){c()});else{var h=goog.global.document;g=goog.inHtmlDocument_()&&("ActiveXObject"in goog.global||goog.isEdge_());if(f&&goog.inHtmlDocument_()&&goog.isDocumentLoading_()&&!g){goog.Dependency.defer_=!0;a.pause();var k=h.onreadystatechange;h.onreadystatechange=function(){"interactive"==h.readyState&&(h.onreadystatechange=
k,c(),a.resume());"function"===typeof k&&k.apply(void 0,arguments)}}else goog.inHtmlDocument_()&&goog.isDocumentLoading_()?d():c()}}},goog.TransformedDependency.prototype.transform=function(a){},goog.PreTranspiledEs6ModuleDependency=function(a,b,c,d,e){goog.TransformedDependency.call(this,a,b,c,d,e)},goog.inherits(goog.PreTranspiledEs6ModuleDependency,goog.TransformedDependency),goog.PreTranspiledEs6ModuleDependency.prototype.transform=function(a){return a},goog.GoogModuleDependency=function(a,b,
c,d,e){goog.TransformedDependency.call(this,a,b,c,d,e)},goog.inherits(goog.GoogModuleDependency,goog.TransformedDependency),goog.GoogModuleDependency.prototype.transform=function(a){return goog.LOAD_MODULE_USING_EVAL&&void 0!==goog.global.JSON?"goog.loadModule("+goog.global.JSON.stringify(a+"\\n//# sourceURL="+this.path+"\\n")+");":'goog.loadModule(function(exports) {"use strict";'+a+"\\n;return exports});\\n//# sourceURL="+this.path+"\\n"},goog.DebugLoader_.prototype.addDependency=function(a,b,c,d){b=
b||[];a=a.replace(/\\\\/g,"/");var e=goog.normalizePath_(goog.basePath+a);d&&"boolean"!==typeof d||(d=d?{module:goog.ModuleType.GOOG}:{});c=this.factory_.createDependency(e,a,b,c,d);this.dependencies_[e]=c;for(c=0;c<b.length;c++)this.idToPath_[b[c]]=e;this.idToPath_[a]=e},goog.DependencyFactory=function(){},goog.DependencyFactory.prototype.createDependency=function(a,b,c,d,e){return e.module==goog.ModuleType.GOOG?new goog.GoogModuleDependency(a,b,c,d,e):e.module==goog.ModuleType.ES6?goog.ASSUME_ES_MODULES_TRANSPILED?
new goog.PreTranspiledEs6ModuleDependency(a,b,c,d,e):new goog.Es6ModuleDependency(a,b,c,d,e):new goog.Dependency(a,b,c,d,e)},goog.debugLoader_=new goog.DebugLoader_,goog.loadClosureDeps=function(){goog.debugLoader_.loadClosureDeps()},goog.setDependencyFactory=function(a){goog.debugLoader_.setDependencyFactory(a)},goog.TRUSTED_TYPES_POLICY_=goog.TRUSTED_TYPES_POLICY_NAME?goog.createTrustedTypesPolicy(goog.TRUSTED_TYPES_POLICY_NAME+"#base"):null,goog.global.CLOSURE_NO_DEPS||goog.debugLoader_.loadClosureDeps(),
goog.bootstrap=function(a,b){goog.debugLoader_.bootstrap(a,b)});if(!COMPILED){var isChrome87=!1;try{isChrome87=eval(goog.global.trustedTypes.emptyScript)!==goog.global.trustedTypes.emptyScript}catch(a){}goog.CLOSURE_EVAL_PREFILTER_=goog.global.trustedTypes&&isChrome87&&goog.createTrustedTypesPolicy("goog#base#devonly#eval")||{createScript:goog.identity_}};const proxyMarker$$module$node_modules$comlink$dist$esm$comlink_mjs=Symbol("Comlink.proxy"),createEndpoint$$module$node_modules$comlink$dist$esm$comlink_mjs=Symbol("Comlink.endpoint"),releaseProxy$$module$node_modules$comlink$dist$esm$comlink_mjs=Symbol("Comlink.releaseProxy"),throwMarker$$module$node_modules$comlink$dist$esm$comlink_mjs=Symbol("Comlink.thrown"),isObject$$module$node_modules$comlink$dist$esm$comlink_mjs=a=>"object"===typeof a&&null!==a||"function"===typeof a,proxyTransferHandler$$module$node_modules$comlink$dist$esm$comlink_mjs=
{canHandle:a=>isObject$$module$node_modules$comlink$dist$esm$comlink_mjs(a)&&a[proxyMarker$$module$node_modules$comlink$dist$esm$comlink_mjs],serialize(a){const {port1:b,port2:c}=new MessageChannel;expose$$module$node_modules$comlink$dist$esm$comlink_mjs(a,b);return[c,[c]]},deserialize(a){a.start();return wrap$$module$node_modules$comlink$dist$esm$comlink_mjs(a)}},throwTransferHandler$$module$node_modules$comlink$dist$esm$comlink_mjs={canHandle:a=>isObject$$module$node_modules$comlink$dist$esm$comlink_mjs(a)&&
throwMarker$$module$node_modules$comlink$dist$esm$comlink_mjs in a,serialize({value:a}){return[a instanceof Error?{isError:!0,value:{message:a.message,name:a.name,stack:a.stack}}:{isError:!1,value:a},[]]},deserialize(a){if(a.isError)throw Object.assign(Error(a.value.message),a.value);throw a.value;}},transferHandlers$$module$node_modules$comlink$dist$esm$comlink_mjs=new Map([["proxy",proxyTransferHandler$$module$node_modules$comlink$dist$esm$comlink_mjs],["throw",throwTransferHandler$$module$node_modules$comlink$dist$esm$comlink_mjs]]);
function expose$$module$node_modules$comlink$dist$esm$comlink_mjs(a,b=self){b.addEventListener("message",function e(d){if(d&&d.data){var {id:f,type:g,path:h}=Object.assign({path:[]},d.data),k=(d.data.argumentList||[]).map(fromWireValue$$module$node_modules$comlink$dist$esm$comlink_mjs);try{const m=h.slice(0,-1).reduce((p,q)=>p[q],a),n=h.reduce((p,q)=>p[q],a);switch(g){case "GET":var l=n;break;case "SET":m[h.slice(-1)[0]]=fromWireValue$$module$node_modules$comlink$dist$esm$comlink_mjs(d.data.value);
l=!0;break;case "APPLY":l=n.apply(m,k);break;case "CONSTRUCT":const p=new n(...k);l=proxy$$module$node_modules$comlink$dist$esm$comlink_mjs(p);break;case "ENDPOINT":const {port1:q,port2:r}=new MessageChannel;expose$$module$node_modules$comlink$dist$esm$comlink_mjs(a,r);l=transfer$$module$node_modules$comlink$dist$esm$comlink_mjs(q,[q]);break;case "RELEASE":l=void 0;break;default:return}}catch(m){l={value:m,[throwMarker$$module$node_modules$comlink$dist$esm$comlink_mjs]:0}}Promise.resolve(l).catch(m=>
({value:m,[throwMarker$$module$node_modules$comlink$dist$esm$comlink_mjs]:0})).then(m=>{const [n,p]=toWireValue$$module$node_modules$comlink$dist$esm$comlink_mjs(m);b.postMessage(Object.assign(Object.assign({},n),{id:f}),p);"RELEASE"===g&&(b.removeEventListener("message",e),closeEndPoint$$module$node_modules$comlink$dist$esm$comlink_mjs(b))})}});b.start&&b.start()}function isMessagePort$$module$node_modules$comlink$dist$esm$comlink_mjs(a){return"MessagePort"===a.constructor.name}
function closeEndPoint$$module$node_modules$comlink$dist$esm$comlink_mjs(a){isMessagePort$$module$node_modules$comlink$dist$esm$comlink_mjs(a)&&a.close()}function wrap$$module$node_modules$comlink$dist$esm$comlink_mjs(a,b){return createProxy$$module$node_modules$comlink$dist$esm$comlink_mjs(a,[],b)}function throwIfProxyReleased$$module$node_modules$comlink$dist$esm$comlink_mjs(a){if(a)throw Error("Proxy has been released and is not useable");}
function createProxy$$module$node_modules$comlink$dist$esm$comlink_mjs(a,b=[],c=function(){}){let d=!1;const e=new Proxy(c,{get(f,g){throwIfProxyReleased$$module$node_modules$comlink$dist$esm$comlink_mjs(d);if(g===releaseProxy$$module$node_modules$comlink$dist$esm$comlink_mjs)return()=>requestResponseMessage$$module$node_modules$comlink$dist$esm$comlink_mjs(a,{type:"RELEASE",path:b.map(h=>h.toString())}).then(()=>{closeEndPoint$$module$node_modules$comlink$dist$esm$comlink_mjs(a);d=!0});if("then"===
g){if(0===b.length)return{then:()=>e};f=requestResponseMessage$$module$node_modules$comlink$dist$esm$comlink_mjs(a,{type:"GET",path:b.map(h=>h.toString())}).then(fromWireValue$$module$node_modules$comlink$dist$esm$comlink_mjs);return f.then.bind(f)}return createProxy$$module$node_modules$comlink$dist$esm$comlink_mjs(a,[...b,g])},set(f,g,h){throwIfProxyReleased$$module$node_modules$comlink$dist$esm$comlink_mjs(d);const [k,l]=toWireValue$$module$node_modules$comlink$dist$esm$comlink_mjs(h);return requestResponseMessage$$module$node_modules$comlink$dist$esm$comlink_mjs(a,
{type:"SET",path:[...b,g].map(m=>m.toString()),value:k},l).then(fromWireValue$$module$node_modules$comlink$dist$esm$comlink_mjs)},apply(f,g,h){throwIfProxyReleased$$module$node_modules$comlink$dist$esm$comlink_mjs(d);f=b[b.length-1];if(f===createEndpoint$$module$node_modules$comlink$dist$esm$comlink_mjs)return requestResponseMessage$$module$node_modules$comlink$dist$esm$comlink_mjs(a,{type:"ENDPOINT"}).then(fromWireValue$$module$node_modules$comlink$dist$esm$comlink_mjs);if("bind"===f)return createProxy$$module$node_modules$comlink$dist$esm$comlink_mjs(a,
b.slice(0,-1));const [k,l]=processArguments$$module$node_modules$comlink$dist$esm$comlink_mjs(h);return requestResponseMessage$$module$node_modules$comlink$dist$esm$comlink_mjs(a,{type:"APPLY",path:b.map(m=>m.toString()),argumentList:k},l).then(fromWireValue$$module$node_modules$comlink$dist$esm$comlink_mjs)},construct(f,g){throwIfProxyReleased$$module$node_modules$comlink$dist$esm$comlink_mjs(d);const [h,k]=processArguments$$module$node_modules$comlink$dist$esm$comlink_mjs(g);return requestResponseMessage$$module$node_modules$comlink$dist$esm$comlink_mjs(a,
{type:"CONSTRUCT",path:b.map(l=>l.toString()),argumentList:h},k).then(fromWireValue$$module$node_modules$comlink$dist$esm$comlink_mjs)}});return e}function myFlat$$module$node_modules$comlink$dist$esm$comlink_mjs(a){return Array.prototype.concat.apply([],a)}
function processArguments$$module$node_modules$comlink$dist$esm$comlink_mjs(a){a=a.map(toWireValue$$module$node_modules$comlink$dist$esm$comlink_mjs);return[a.map(b=>b[0]),myFlat$$module$node_modules$comlink$dist$esm$comlink_mjs(a.map(b=>b[1]))]}const transferCache$$module$node_modules$comlink$dist$esm$comlink_mjs=new WeakMap;function transfer$$module$node_modules$comlink$dist$esm$comlink_mjs(a,b){transferCache$$module$node_modules$comlink$dist$esm$comlink_mjs.set(a,b);return a}
function proxy$$module$node_modules$comlink$dist$esm$comlink_mjs(a){return Object.assign(a,{[proxyMarker$$module$node_modules$comlink$dist$esm$comlink_mjs]:!0})}function windowEndpoint$$module$node_modules$comlink$dist$esm$comlink_mjs(a,b=self,c="*"){return{postMessage:(d,e)=>a.postMessage(d,c,e),addEventListener:b.addEventListener.bind(b),removeEventListener:b.removeEventListener.bind(b)}}
function toWireValue$$module$node_modules$comlink$dist$esm$comlink_mjs(a){for(const [b,c]of transferHandlers$$module$node_modules$comlink$dist$esm$comlink_mjs)if(c.canHandle(a)){const [d,e]=c.serialize(a);return[{type:"HANDLER",name:b,value:d},e]}return[{type:"RAW",value:a},transferCache$$module$node_modules$comlink$dist$esm$comlink_mjs.get(a)||[]]}
function fromWireValue$$module$node_modules$comlink$dist$esm$comlink_mjs(a){switch(a.type){case "HANDLER":return transferHandlers$$module$node_modules$comlink$dist$esm$comlink_mjs.get(a.name).deserialize(a.value);case "RAW":return a.value}}
function requestResponseMessage$$module$node_modules$comlink$dist$esm$comlink_mjs(a,b,c){return new Promise(d=>{const e=generateUUID$$module$node_modules$comlink$dist$esm$comlink_mjs();a.addEventListener("message",function h(g){g.data&&g.data.id&&g.data.id===e&&(a.removeEventListener("message",h),d(g.data))});a.start&&a.start();a.postMessage(Object.assign({id:e},b),c)})}
function generateUUID$$module$node_modules$comlink$dist$esm$comlink_mjs(){return Array(4).fill(0).map(()=>Math.floor(Math.random()*Number.MAX_SAFE_INTEGER).toString(16)).join("-")}var module$node_modules$comlink$dist$esm$comlink_mjs={};module$node_modules$comlink$dist$esm$comlink_mjs.createEndpoint=createEndpoint$$module$node_modules$comlink$dist$esm$comlink_mjs;module$node_modules$comlink$dist$esm$comlink_mjs.expose=expose$$module$node_modules$comlink$dist$esm$comlink_mjs;
module$node_modules$comlink$dist$esm$comlink_mjs.proxy=proxy$$module$node_modules$comlink$dist$esm$comlink_mjs;module$node_modules$comlink$dist$esm$comlink_mjs.proxyMarker=proxyMarker$$module$node_modules$comlink$dist$esm$comlink_mjs;module$node_modules$comlink$dist$esm$comlink_mjs.releaseProxy=releaseProxy$$module$node_modules$comlink$dist$esm$comlink_mjs;module$node_modules$comlink$dist$esm$comlink_mjs.transfer=transfer$$module$node_modules$comlink$dist$esm$comlink_mjs;
module$node_modules$comlink$dist$esm$comlink_mjs.transferHandlers=transferHandlers$$module$node_modules$comlink$dist$esm$comlink_mjs;module$node_modules$comlink$dist$esm$comlink_mjs.windowEndpoint=windowEndpoint$$module$node_modules$comlink$dist$esm$comlink_mjs;module$node_modules$comlink$dist$esm$comlink_mjs.wrap=wrap$$module$node_modules$comlink$dist$esm$comlink_mjs;var module$node_modules$lines_logger$lib$index={default:{}};module$node_modules$lines_logger$lib$index.default.__esModule=!0;module$node_modules$lines_logger$lib$index.default.LoggerFactory=module$node_modules$lines_logger$lib$index.default.logLevels=void 0;module$node_modules$lines_logger$lib$index.default.logLevels={log_raise_error:1,log_with_warnings:2,trace:3,debug:4,info:5,warn:6,error:7,disable:8};
var LoggerFactory$$module$node_modules$lines_logger$lib$index=function(){function a(b,c){if(void 0===b&&(b="log_with_warnings"),void 0===c&&(c=null),this.logLevel=b,!module$node_modules$lines_logger$lib$index.default.logLevels[b])throw Error("Invalid log level "+b+" allowed: "+JSON.stringify(module$node_modules$lines_logger$lib$index.default.logLevels));this.mockConsole=c||console}return a.prototype.dummy=function(){},a.prototype.setLogWarnings=function(b){this.logLevel=b},a.prototype.getLogWarnings=
function(){return this.logLevel},a.prototype.getSingleLoggerColor=function(b,c,d){return this.getSingleLoggerStyle(b,this.getColorStyle(c),d)},a.prototype.getSingleLogger=function(b,c){var d=this.getRandomColor(b);return this.getSingleLoggerStyle(b,this.getColorStyle(d),c)},a.prototype.getSingleLoggerStyle=function(b,c,d,e){var f=this;return void 0===e&&(e="log_with_warnings"),function(){for(var g=[],h=0;h<arguments.length;h++)g[h]=arguments[h];if(module$node_modules$lines_logger$lib$index.default.logLevels[f.logLevel]>
module$node_modules$lines_logger$lib$index.default.logLevels[e])return f.dummy;g=Array.prototype.slice.call(g);h=g.shift().split("{}");for(var k=[f.mockConsole,"%c"+b,c],l=0;l<h.length;l++)k.push(h[l]),void 0!==g[l]&&k.push(g[l]);if(h.length-1!==g.length)if("log_with_warnings"===f.logLevel)f.mockConsole.error("MissMatch amount of arguments");else if("log_raise_error"===f.logLevel)throw Error("MissMatch amount of arguments");return Function.prototype.bind.apply(d,k)}},a.prototype.getLoggerColor=function(b,
c){return this.getLoggerStyle(b,this.getColorStyle(c))},a.prototype.getColorStyle=function(b){return"color: white; background-color: "+b+"; padding: 2px 6px; border-radius: 2px; font-size: 10px"},a.getHash=function(b,c){void 0===c&&(c=0);var d=3735928559^c;c^=1103547991;for(var e=0,f;e<b.length;e++)f=b.charCodeAt(e),d=Math.imul(d^f,2654435761),c=Math.imul(c^f,1597334677);return d=Math.imul(d^d>>>16,2246822507)^Math.imul(c^c>>>13,3266489909),4294967296*(2097151&(Math.imul(c^c>>>16,2246822507)^Math.imul(d^
d>>>13,3266489909)))+(d>>>0)},a.prototype.getRandomColor=function(b){void 0===b&&(b="");b=a.getHash(b);for(var c="#",d=0;3>d;d++)c+=("00"+(8+(b>>7*d&127)).toString(16)).substr(-2);return c},a.prototype.getLogger=function(b){return this.getLoggerColor(b,this.getRandomColor(b))},a.prototype.getLoggerStyle=function(b,c){return{trace:this.getSingleLoggerStyle(b,c,this.mockConsole.trace,"trace"),debug:this.getSingleLoggerStyle(b,c,this.mockConsole.debug,"debug"),log:this.getSingleLoggerStyle(b,c,this.mockConsole.log,
"info"),warn:this.getSingleLoggerStyle(b,c,this.mockConsole.warn,"warn"),error:this.getSingleLoggerStyle(b,c,this.mockConsole.error,"error")}},a}();module$node_modules$lines_logger$lib$index.default.LoggerFactory=LoggerFactory$$module$node_modules$lines_logger$lib$index;let logWorkletMain$$module$src$logger,logWorkletWorker$$module$src$logger,logSABMain$$module$src$logger,logSABWorker$$module$src$logger,logVANMain$$module$src$logger,logVANWorker$$module$src$logger,logOldSpnMain$$module$src$logger,logOldSpnWorker$$module$src$logger,logIndex$$module$src$logger,logSPNMainSingle$$module$src$logger,logSinglethreadWorkletMain$$module$src$logger,logSinglethreadWorkletWorker$$module$src$logger,logCommonUtils$$module$src$logger,logWasmModule$$module$src$logger,logMidiRequest$$module$src$logger;
const isProd$$module$src$logger=1;logWorkletMain$$module$src$logger=a=>b=>{};logWorkletWorker$$module$src$logger=a=>b=>{};logSABMain$$module$src$logger=a=>b=>{};logSABWorker$$module$src$logger=a=>b=>{};logVANMain$$module$src$logger=a=>b=>{};logVANWorker$$module$src$logger=a=>b=>{};logOldSpnMain$$module$src$logger=a=>b=>{};logOldSpnWorker$$module$src$logger=a=>b=>{};logIndex$$module$src$logger=a=>b=>{};logSPNMainSingle$$module$src$logger=a=>b=>{};
logSinglethreadWorkletMain$$module$src$logger=a=>b=>{};logSinglethreadWorkletWorker$$module$src$logger=a=>b=>{};logCommonUtils$$module$src$logger=a=>b=>{};logWasmModule$$module$src$logger=a=>b=>{};logMidiRequest$$module$src$logger=a=>b=>{};var $jscompDefaultExport$$module$src$logger=a=>b=>{},module$src$logger={};module$src$logger.default=$jscompDefaultExport$$module$src$logger;module$src$logger.logCommonUtils=logCommonUtils$$module$src$logger;module$src$logger.logIndex=logIndex$$module$src$logger;
module$src$logger.logMidiRequest=logMidiRequest$$module$src$logger;module$src$logger.logOldSpnMain=logOldSpnMain$$module$src$logger;module$src$logger.logOldSpnWorker=logOldSpnWorker$$module$src$logger;module$src$logger.logSABMain=logSABMain$$module$src$logger;module$src$logger.logSABWorker=logSABWorker$$module$src$logger;module$src$logger.logSPNMainSingle=logSPNMainSingle$$module$src$logger;module$src$logger.logSinglethreadWorkletMain=logSinglethreadWorkletMain$$module$src$logger;
module$src$logger.logSinglethreadWorkletWorker=logSinglethreadWorkletWorker$$module$src$logger;module$src$logger.logVANMain=logVANMain$$module$src$logger;module$src$logger.logVANWorker=logVANWorker$$module$src$logger;module$src$logger.logWasmModule=logWasmModule$$module$src$logger;module$src$logger.logWorkletMain=logWorkletMain$$module$src$logger;module$src$logger.logWorkletWorker=logWorkletWorker$$module$src$logger;const handleCsoundStart$$module$src$workers$common_utils=(a,b,c,d,e)=>f=>{const {csound:g}=f,h=1===b.csoundShouldDaemonize(g);h&&(b.csoundSetOption(g,"--daemon"),b.csoundSetOption(g,"-odac"));const k=b.csoundStart(g),l=b.csoundGetOutputName(g)||"test.wav";logCommonUtils$$module$src$logger(\`handleCsoundStart: actual csoundStart result \${k}, outputName: \${l}\`)();0!==k&&a.post(\`error: csoundStart failed while trying to render \${l},\`+" look out for errors in options and syntax");setTimeout(()=>{const m=
b._isRequestingRtMidiInput(g);if(h||m||l.includes("dac"))d(f);else if(a.broadcastPlayState("renderStarted"),e)e(f);else for(;0===b.csoundPerformKsmps(g););},0);return k},instantiateAudioPacket$$module$src$workers$common_utils=(a,b)=>{const c=[];for(let d=0;d<a;d++)c.push(new Float64Array(b));return c},renderFunction$$module$src$workers$common_utils=({libraryCsound:a,workerMessagePort:b})=>async({csound:c})=>{const d=a.csoundGetKr(c);let e=0,f=0;for(;("renderStarted"===b.vanillaWorkerState||"renderStarted"===
b.workerState)&&0===e;)e=a.csoundPerformKsmps(c),f+=1,"function"===typeof setTimeout&&0===e&&0===f%(2*d)&&await new Promise(g=>setTimeout(g,0));b.broadcastPlayState("renderEnded")};var module$src$workers$common_utils={};module$src$workers$common_utils.handleCsoundStart=handleCsoundStart$$module$src$workers$common_utils;module$src$workers$common_utils.instantiateAudioPacket=instantiateAudioPacket$$module$src$workers$common_utils;module$src$workers$common_utils.renderFunction=renderFunction$$module$src$workers$common_utils;function MessagePortState$$module$src$utils$message_port_state(){}MessagePortState$$module$src$utils$message_port_state.prototype.ready=!1;MessagePortState$$module$src$utils$message_port_state.prototype.port=void 0;MessagePortState$$module$src$utils$message_port_state.prototype.post=()=>{};MessagePortState$$module$src$utils$message_port_state.prototype.broadcastPlayState=()=>{};MessagePortState$$module$src$utils$message_port_state.prototype.workerState=void 0;
MessagePortState$$module$src$utils$message_port_state.prototype.vanillaWorkerState=void 0;var $jscompDefaultExport$$module$src$utils$message_port_state=MessagePortState$$module$src$utils$message_port_state,module$src$utils$message_port_state={};module$src$utils$message_port_state.MessagePortState=MessagePortState$$module$src$utils$message_port_state;module$src$utils$message_port_state.default=$jscompDefaultExport$$module$src$utils$message_port_state;const WebkitAudioContext$$module$src$utils$new_audio_context=()=>{if(void 0!==window.webkitAudioContext)return window.webkitAudioContext;if(void 0!==window.AudioContext)return window.AudioContext},newAudioContext$$module$src$utils$new_audio_context=()=>{const a=WebkitAudioContext$$module$src$utils$new_audio_context();if(a)return new a};var module$src$utils$new_audio_context={};module$src$utils$new_audio_context.WebkitAudioContext=WebkitAudioContext$$module$src$utils$new_audio_context;
module$src$utils$new_audio_context.newAudioContext=newAudioContext$$module$src$utils$new_audio_context;function add$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>add$$module$node_modules$rambda$dist$rambda_mjs(a,c):Number(a)+Number(b)}const cloneList$$module$node_modules$rambda$dist$rambda_mjs=a=>Array.prototype.slice.call(a);function curry$$module$node_modules$rambda$dist$rambda_mjs(a,b=[]){return(...c)=>{c=[...b,...c];return c.length>=a.length?a(...c):curry$$module$node_modules$rambda$dist$rambda_mjs(a,c)}}
function adjustFn$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){const d=0>a?c.length+a:a;if(a>=c.length||0>d)return c;a=cloneList$$module$node_modules$rambda$dist$rambda_mjs(c);a[d]=b(a[d]);return a}const adjust$$module$node_modules$rambda$dist$rambda_mjs=curry$$module$node_modules$rambda$dist$rambda_mjs(adjustFn$$module$node_modules$rambda$dist$rambda_mjs);
function all$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return c=>all$$module$node_modules$rambda$dist$rambda_mjs(a,c);for(let c=0;c<b.length;c++)if(!a(b[c]))return!1;return!0}function allPass$$module$node_modules$rambda$dist$rambda_mjs(a){return(...b)=>{let c=0;for(;c<a.length;){if(!a[c](...b))return!1;c++}return!0}}function always$$module$node_modules$rambda$dist$rambda_mjs(a){return b=>a}
function and$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>and$$module$node_modules$rambda$dist$rambda_mjs(a,c):a&&b}function any$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return d=>any$$module$node_modules$rambda$dist$rambda_mjs(a,d);let c=0;for(;c<b.length;){if(a(b[c],c))return!0;c++}return!1}
function anyPass$$module$node_modules$rambda$dist$rambda_mjs(a){return(...b)=>{let c=0;for(;c<a.length;){if(a[c](...b))return!0;c++}return!1}}function append$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return d=>append$$module$node_modules$rambda$dist$rambda_mjs(a,d);if("string"===typeof b)return b.split("").concat(a);const c=cloneList$$module$node_modules$rambda$dist$rambda_mjs(b);c.push(a);return c}
function apply$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>apply$$module$node_modules$rambda$dist$rambda_mjs(a,c):a.apply(this,b)}const {isArray:isArray$$module$node_modules$rambda$dist$rambda_mjs}=Array;
function __findHighestArity$$module$node_modules$rambda$dist$rambda_mjs(a,b=0){for(const c in a)!1!==a.hasOwnProperty(c)&&"constructor"!==c&&("object"===typeof a[c]&&(b=Math.max(b,__findHighestArity$$module$node_modules$rambda$dist$rambda_mjs(a[c]))),"function"===typeof a[c]&&(b=Math.max(b,a[c].length)));return b}
function __filterUndefined$$module$node_modules$rambda$dist$rambda_mjs(){const a=[];let b=0;const c=arguments.length;for(;b<c&&"undefined"!==typeof arguments[b];)a[b]=arguments[b],b++;return a}
function __applySpecWithArity$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){var d=b-c.length;if(1===d)return f=>__applySpecWithArity$$module$node_modules$rambda$dist$rambda_mjs(a,b,__filterUndefined$$module$node_modules$rambda$dist$rambda_mjs(...c,f));if(2===d)return(f,g)=>__applySpecWithArity$$module$node_modules$rambda$dist$rambda_mjs(a,b,__filterUndefined$$module$node_modules$rambda$dist$rambda_mjs(...c,f,g));if(3===d)return(f,g,h)=>__applySpecWithArity$$module$node_modules$rambda$dist$rambda_mjs(a,
b,__filterUndefined$$module$node_modules$rambda$dist$rambda_mjs(...c,f,g,h));if(4===d)return(f,g,h,k)=>__applySpecWithArity$$module$node_modules$rambda$dist$rambda_mjs(a,b,__filterUndefined$$module$node_modules$rambda$dist$rambda_mjs(...c,f,g,h,k));if(4<d)return(...f)=>__applySpecWithArity$$module$node_modules$rambda$dist$rambda_mjs(a,b,__filterUndefined$$module$node_modules$rambda$dist$rambda_mjs(...c,...f));if(isArray$$module$node_modules$rambda$dist$rambda_mjs(a)){var e=[];d=0;const f=a.length;
for(;d<f;d++){if("object"===typeof a[d]||isArray$$module$node_modules$rambda$dist$rambda_mjs(a[d]))e[d]=__applySpecWithArity$$module$node_modules$rambda$dist$rambda_mjs(a[d],b,c);"function"===typeof a[d]&&(e[d]=a[d](...c))}return e}d={};for(e in a)!1!==a.hasOwnProperty(e)&&"constructor"!==e&&("object"===typeof a[e]?d[e]=__applySpecWithArity$$module$node_modules$rambda$dist$rambda_mjs(a[e],b,c):"function"===typeof a[e]&&(d[e]=a[e](...c)));return d}
function applySpec$$module$node_modules$rambda$dist$rambda_mjs(a,...b){const c=__findHighestArity$$module$node_modules$rambda$dist$rambda_mjs(a);return 0===c?()=>({}):__applySpecWithArity$$module$node_modules$rambda$dist$rambda_mjs(a,c,b)}function assocFn$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){return Object.assign({},c,{[a]:b})}const assoc$$module$node_modules$rambda$dist$rambda_mjs=curry$$module$node_modules$rambda$dist$rambda_mjs(assocFn$$module$node_modules$rambda$dist$rambda_mjs);
function _isInteger$$module$node_modules$rambda$dist$rambda_mjs(a){return a<<0===a}const isInteger$$module$node_modules$rambda$dist$rambda_mjs=Number.isInteger||_isInteger$$module$node_modules$rambda$dist$rambda_mjs;
function assocPathFn$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){const d="string"===typeof a?a.split(".").map(e=>isInteger$$module$node_modules$rambda$dist$rambda_mjs(Number(e))?Number(e):e):a;if(0===d.length)return b;a=d[0];if(1<d.length){const e="object"===typeof c&&null!==c&&c.hasOwnProperty(a)?c[a]:isInteger$$module$node_modules$rambda$dist$rambda_mjs(d[1])?[]:{};b=assocPathFn$$module$node_modules$rambda$dist$rambda_mjs(Array.prototype.slice.call(d,1),b,e)}return isInteger$$module$node_modules$rambda$dist$rambda_mjs(a)&&
isArray$$module$node_modules$rambda$dist$rambda_mjs(c)?(c=cloneList$$module$node_modules$rambda$dist$rambda_mjs(c),c[a]=b,c):assoc$$module$node_modules$rambda$dist$rambda_mjs(a,b,c)}const assocPath$$module$node_modules$rambda$dist$rambda_mjs=curry$$module$node_modules$rambda$dist$rambda_mjs(assocPathFn$$module$node_modules$rambda$dist$rambda_mjs);
function _curryN$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){return function(){var d=0;let e=0;const f=b.length,g=arguments.length,h=Array(f+g);for(;d<f;)h[d]=b[d],d++;for(;e<g;)h[f+e]=arguments[e],e++;d=a-h.length;return h.length>=a?c.apply(this,h):_arity$1$$module$node_modules$rambda$dist$rambda_mjs(d,_curryN$$module$node_modules$rambda$dist$rambda_mjs(a,h,c))}}
function _arity$1$$module$node_modules$rambda$dist$rambda_mjs(a,b){switch(a){case 0:return function(){return b.apply(this,arguments)};case 1:return function(c){return b.apply(this,arguments)};case 2:return function(c,d){return b.apply(this,arguments)};case 3:return function(c,d,e){return b.apply(this,arguments)};case 4:return function(c,d,e,f){return b.apply(this,arguments)};case 5:return function(c,d,e,f,g){return b.apply(this,arguments)};case 6:return function(c,d,e,f,g,h){return b.apply(this,arguments)};
case 7:return function(c,d,e,f,g,h,k){return b.apply(this,arguments)};case 8:return function(c,d,e,f,g,h,k,l){return b.apply(this,arguments)};case 9:return function(c,d,e,f,g,h,k,l,m){return b.apply(this,arguments)};default:return function(c,d,e,f,g,h,k,l,m,n){return b.apply(this,arguments)}}}
function curryN$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return c=>curryN$$module$node_modules$rambda$dist$rambda_mjs(a,c);if(10<a)throw Error("First argument to _arity must be a non-negative integer no greater than ten");return _arity$1$$module$node_modules$rambda$dist$rambda_mjs(a,_curryN$$module$node_modules$rambda$dist$rambda_mjs(a,[],b))}
function bind$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>bind$$module$node_modules$rambda$dist$rambda_mjs(a,c):curryN$$module$node_modules$rambda$dist$rambda_mjs(a.length,(...c)=>a.apply(b,c))}function both$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>both$$module$node_modules$rambda$dist$rambda_mjs(a,c):(...c)=>a(...c)&&b(...c)}
function chain$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>chain$$module$node_modules$rambda$dist$rambda_mjs(a,c):[].concat(...b.map(a))}function clampFn$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){if(a>b)throw Error("min must not be greater than max in clamp(min, max, value)");if(c>=a&&c<=b)return c;if(c>b)return b;if(c<a)return a}const clamp$$module$node_modules$rambda$dist$rambda_mjs=curry$$module$node_modules$rambda$dist$rambda_mjs(clampFn$$module$node_modules$rambda$dist$rambda_mjs);
function clone$$module$node_modules$rambda$dist$rambda_mjs(a){const b=isArray$$module$node_modules$rambda$dist$rambda_mjs(a)?Array(a.length):{};if(a&&a.getTime)return new Date(a.getTime());for(const c in a){const d=a[c];b[c]="object"===typeof d&&null!==d?d.getTime?new Date(d.getTime()):clone$$module$node_modules$rambda$dist$rambda_mjs(d):d}return b}function complement$$module$node_modules$rambda$dist$rambda_mjs(a){return(...b)=>!a(...b)}
class ReduceStopper$$module$node_modules$rambda$dist$rambda_mjs{constructor(a){this.value=a}}function reduceFn$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){if(!isArray$$module$node_modules$rambda$dist$rambda_mjs(c))throw new TypeError("reduce: list must be array or iterable");let d=0;const e=c.length;for(;d<e;){b=a(b,c[d],d,c);if(b instanceof ReduceStopper$$module$node_modules$rambda$dist$rambda_mjs)return b.value;d++}return b}
const reduce$$module$node_modules$rambda$dist$rambda_mjs=curry$$module$node_modules$rambda$dist$rambda_mjs(reduceFn$$module$node_modules$rambda$dist$rambda_mjs),reduceStopper$$module$node_modules$rambda$dist$rambda_mjs=a=>new ReduceStopper$$module$node_modules$rambda$dist$rambda_mjs(a);
function _arity$$module$node_modules$rambda$dist$rambda_mjs(a,b){switch(a){case 0:return function(){return b.apply(this,arguments)};case 1:return function(c){return b.apply(this,arguments)};case 2:return function(c,d){return b.apply(this,arguments)};case 3:return function(c,d,e){return b.apply(this,arguments)};case 4:return function(c,d,e,f){return b.apply(this,arguments)};case 5:return function(c,d,e,f,g){return b.apply(this,arguments)};case 6:return function(c,d,e,f,g,h){return b.apply(this,arguments)};
case 7:return function(c,d,e,f,g,h,k){return b.apply(this,arguments)};case 8:return function(c,d,e,f,g,h,k,l){return b.apply(this,arguments)};case 9:return function(c,d,e,f,g,h,k,l,m){return b.apply(this,arguments)};case 10:return function(c,d,e,f,g,h,k,l,m,n){return b.apply(this,arguments)};default:throw Error("First argument to _arity must be a non-negative integer no greater than ten");}}
function _pipe$$module$node_modules$rambda$dist$rambda_mjs(a,b){return function(){return b.call(this,a.apply(this,arguments))}}
function pipe$$module$node_modules$rambda$dist$rambda_mjs(){if(0===arguments.length)throw Error("pipe requires at least one argument");return _arity$$module$node_modules$rambda$dist$rambda_mjs(arguments[0].length,reduceFn$$module$node_modules$rambda$dist$rambda_mjs(_pipe$$module$node_modules$rambda$dist$rambda_mjs,arguments[0],Array.prototype.slice.call(arguments,1,Infinity)))}
function compose$$module$node_modules$rambda$dist$rambda_mjs(){if(0===arguments.length)throw Error("compose requires at least one argument");return pipe$$module$node_modules$rambda$dist$rambda_mjs.apply(this,Array.prototype.slice.call(arguments,0).reverse())}function concat$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>concat$$module$node_modules$rambda$dist$rambda_mjs(a,c):"string"===typeof a?\`\${a}\${b}\`:[...a,...b]}
function cond$$module$node_modules$rambda$dist$rambda_mjs(a){return b=>{let c=!1,d;a.forEach(([e,f])=>{!c&&e(b)&&(c=!0,d=f(b))});return d}}const {keys:keys$1$$module$node_modules$rambda$dist$rambda_mjs}=Object;function mapArray$$module$node_modules$rambda$dist$rambda_mjs(a,b,c=!1){let d=0;const e=Array(b.length);for(;d<b.length;)e[d]=c?a(b[d],d):a(b[d]),d++;return e}
function mapObject$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return g=>mapObject$$module$node_modules$rambda$dist$rambda_mjs(a,g);let c=0;const d=keys$1$$module$node_modules$rambda$dist$rambda_mjs(b),e=d.length,f={};for(;c<e;){const g=d[c];f[g]=a(b[g],g,b);c++}return f}const mapObjIndexed$$module$node_modules$rambda$dist$rambda_mjs=mapObject$$module$node_modules$rambda$dist$rambda_mjs;
function map$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return c=>map$$module$node_modules$rambda$dist$rambda_mjs(a,c);if(!b)throw Error(INCORRECT_ITERABLE_INPUT);return isArray$$module$node_modules$rambda$dist$rambda_mjs(b)?mapArray$$module$node_modules$rambda$dist$rambda_mjs(a,b):mapObject$$module$node_modules$rambda$dist$rambda_mjs(a,b)}
function max$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>max$$module$node_modules$rambda$dist$rambda_mjs(a,c):b>a?b:a}
function converge$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return d=>converge$$module$node_modules$rambda$dist$rambda_mjs(a,d);const c=reduce$$module$node_modules$rambda$dist$rambda_mjs((d,e)=>max$$module$node_modules$rambda$dist$rambda_mjs(d,e.length),0,b);return curryN$$module$node_modules$rambda$dist$rambda_mjs(c,function(){return a.apply(this,map$$module$node_modules$rambda$dist$rambda_mjs(d=>d.apply(this,arguments),b))})}
function count$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>count$$module$node_modules$rambda$dist$rambda_mjs(a,c):isArray$$module$node_modules$rambda$dist$rambda_mjs(b)?b.filter(c=>a(c)).length:0}function countBy$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return d=>countBy$$module$node_modules$rambda$dist$rambda_mjs(a,d);const c={};b.forEach(d=>{d=a(d);c[d]?c[d]++:c[d]=1});return c}
const dec$$module$node_modules$rambda$dist$rambda_mjs=a=>a-1;function isFalsy$$module$node_modules$rambda$dist$rambda_mjs(a){return void 0===a||null===a||!0===Number.isNaN(a)}function defaultTo$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>defaultTo$$module$node_modules$rambda$dist$rambda_mjs(a,c):isFalsy$$module$node_modules$rambda$dist$rambda_mjs(b)?a:b}
function type$$module$node_modules$rambda$dist$rambda_mjs(a){if(null===a)return"Null";if(void 0===a)return"Undefined";if(Number.isNaN(a))return"NaN";a=Object.prototype.toString.call(a).slice(8,-1);return"AsyncFunction"===a?"Promise":a}
function _lastIndexOf$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(!isArray$$module$node_modules$rambda$dist$rambda_mjs(b))throw Error(\`Cannot read property 'indexOf' of \${b}\`);var c=type$$module$node_modules$rambda$dist$rambda_mjs(a);if(!["Object","Array","NaN","RegExp"].includes(c))return b.lastIndexOf(a);({length:c}=b);let d=-1;for(;-1<--c&&-1===d;)equals$$module$node_modules$rambda$dist$rambda_mjs(b[c],a)&&(d=c);return d}
function _indexOf$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(!isArray$$module$node_modules$rambda$dist$rambda_mjs(b))throw Error(\`Cannot read property 'indexOf' of \${b}\`);var c=type$$module$node_modules$rambda$dist$rambda_mjs(a);if(!["Object","Array","NaN","RegExp"].includes(c))return b.indexOf(a);let d=c=-1;const {length:e}=b;for(;++c<e&&-1===d;)equals$$module$node_modules$rambda$dist$rambda_mjs(b[c],a)&&(d=c);return d}
function _arrayFromIterator$$module$node_modules$rambda$dist$rambda_mjs(a){const b=[];let c;for(;!(c=a.next()).done;)b.push(c.value);return b}function _equalsSets$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(a.size!==b.size)return!1;a=_arrayFromIterator$$module$node_modules$rambda$dist$rambda_mjs(a.values());const c=_arrayFromIterator$$module$node_modules$rambda$dist$rambda_mjs(b.values());return 0===a.filter(d=>-1===_indexOf$$module$node_modules$rambda$dist$rambda_mjs(d,c)).length}
function parseError$$module$node_modules$rambda$dist$rambda_mjs(a){const b=a.__proto__.toString();return["Error","TypeError"].includes(b)?[b,a.message]:[]}function parseDate$$module$node_modules$rambda$dist$rambda_mjs(a){return a.toDateString?[!0,a.getTime()]:[!1]}function parseRegex$$module$node_modules$rambda$dist$rambda_mjs(a){return a.constructor!==RegExp?[!1]:[!0,a.toString()]}
function equals$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return f=>equals$$module$node_modules$rambda$dist$rambda_mjs(a,f);var c=type$$module$node_modules$rambda$dist$rambda_mjs(a);if(c!==type$$module$node_modules$rambda$dist$rambda_mjs(b))return!1;if("Function"===c)return void 0===a.name?!1:a.name===b.name;if(["NaN","Undefined","Null"].includes(c))return!0;if("Number"===c)return Object.is(-0,a)!==Object.is(-0,b)?!1:a.toString()===b.toString();if(["String","Boolean"].includes(c))return a.toString()===
b.toString();if("Array"===c){c=Array.from(a);const f=Array.from(b);if(c.toString()!==f.toString())return!1;let g=!0;c.forEach((h,k)=>{g&&(h===f[k]||equals$$module$node_modules$rambda$dist$rambda_mjs(h,f[k])||(g=!1))});return g}var d=parseRegex$$module$node_modules$rambda$dist$rambda_mjs(a),e=parseRegex$$module$node_modules$rambda$dist$rambda_mjs(b);if(d[0])return e[0]?d[1]===e[1]:!1;if(e[0])return!1;d=parseDate$$module$node_modules$rambda$dist$rambda_mjs(a);e=parseDate$$module$node_modules$rambda$dist$rambda_mjs(b);
if(d[0])return e[0]?d[1]===e[1]:!1;if(e[0])return!1;d=parseError$$module$node_modules$rambda$dist$rambda_mjs(a);e=parseError$$module$node_modules$rambda$dist$rambda_mjs(b);if(d[0])return e[0]?d[0]===e[0]&&d[1]===e[1]:!1;if("Set"===c)return _equalsSets$$module$node_modules$rambda$dist$rambda_mjs(a,b);if("Object"===c){c=Object.keys(a);if(c.length!==Object.keys(b).length)return!1;let f=!0;c.forEach(g=>{if(f){const h=a[g];g=b[g];h===g||equals$$module$node_modules$rambda$dist$rambda_mjs(h,g)||(f=!1)}});
return f}return!1}function includes$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return c=>includes$$module$node_modules$rambda$dist$rambda_mjs(a,c);if("string"===typeof b)return b.includes(a);if(!b)throw new TypeError(\`Cannot read property \\'indexOf\\' of \${b}\`);return isArray$$module$node_modules$rambda$dist$rambda_mjs(b)?-1<_indexOf$$module$node_modules$rambda$dist$rambda_mjs(a,b):!1}
class _Set$$module$node_modules$rambda$dist$rambda_mjs{constructor(){this.set=new Set;this.items={}}checkUniqueness(a){var b=type$$module$node_modules$rambda$dist$rambda_mjs(a);return["Null","Undefined","NaN"].includes(b)?b in this.items?!1:this.items[b]=!0:["Object","Array"].includes(b)?b in this.items?-1===_indexOf$$module$node_modules$rambda$dist$rambda_mjs(a,this.items[b])?(this.items[b].push(a),!0):!1:(this.items[b]=[a],!0):(b=this.set.size,this.set.add(a),this.set.size!==b)}}
function uniq$$module$node_modules$rambda$dist$rambda_mjs(a){const b=new _Set$$module$node_modules$rambda$dist$rambda_mjs,c=[];a.forEach(d=>{b.checkUniqueness(d)&&c.push(d)});return c}function difference$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>difference$$module$node_modules$rambda$dist$rambda_mjs(a,c):uniq$$module$node_modules$rambda$dist$rambda_mjs(a).filter(c=>!includes$$module$node_modules$rambda$dist$rambda_mjs(c,b))}
function dissoc$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return d=>dissoc$$module$node_modules$rambda$dist$rambda_mjs(a,d);if(null===b||void 0===b)return{};const c={};for(const d in b)c[d]=b[d];delete c[a];return c}function divide$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>divide$$module$node_modules$rambda$dist$rambda_mjs(a,c):a/b}
function drop$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>drop$$module$node_modules$rambda$dist$rambda_mjs(a,c):b.slice(0<a?a:0)}function dropLast$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>dropLast$$module$node_modules$rambda$dist$rambda_mjs(a,c):0<a?b.slice(0,-a):b.slice()}
function dropLastWhile$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return g=>dropLastWhile$$module$node_modules$rambda$dist$rambda_mjs(a,g);if(0===b.length)return b;const c=isArray$$module$node_modules$rambda$dist$rambda_mjs(b);if("function"!==typeof a)throw Error(\`'predicate' is from wrong type \${typeof a}\`);if(!c&&"string"!==typeof b)throw Error(\`'iterable' is from wrong type \${typeof b}\`);let d=!1;const e=[];let f=b.length;for(;0<f;)f--,d||!1!==a(b[f])?d&&e.push(b[f]):
(d=!0,e.push(b[f]));return c?e.reverse():e.reverse().join("")}function dropRepeats$$module$node_modules$rambda$dist$rambda_mjs(a){if(!isArray$$module$node_modules$rambda$dist$rambda_mjs(a))throw Error(\`\${a} is not a list\`);const b=[];a.reduce((c,d)=>{equals$$module$node_modules$rambda$dist$rambda_mjs(c,d)||b.push(d);return d},void 0);return b}
function dropRepeatsWith$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return d=>dropRepeatsWith$$module$node_modules$rambda$dist$rambda_mjs(a,d);if(!isArray$$module$node_modules$rambda$dist$rambda_mjs(b))throw Error(\`\${b} is not a list\`);const c=[];b.reduce((d,e)=>{if(void 0===d)return c.push(e),e;a(d,e)||c.push(e);return e},void 0);return c}
function dropWhile$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return g=>dropWhile$$module$node_modules$rambda$dist$rambda_mjs(a,g);const c=isArray$$module$node_modules$rambda$dist$rambda_mjs(b);if(!c&&"string"!==typeof b)throw Error("\`iterable\` is neither list nor a string");let d=!1;const e=[];let f=-1;for(;f++<b.length-1;)d?e.push(b[f]):a(b[f])||(d||(d=!0),e.push(b[f]));return c?e:e.join("")}
function either$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>either$$module$node_modules$rambda$dist$rambda_mjs(a,c):(...c)=>!(!a(...c)&&!b(...c))}
function endsWith$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return e=>endsWith$$module$node_modules$rambda$dist$rambda_mjs(a,e);if("string"===typeof b)return b.endsWith(a);if(!isArray$$module$node_modules$rambda$dist$rambda_mjs(a))return!1;const c=b.length-a.length;let d=!0;return a.filter((e,f)=>{if(!d)return!1;(e=equals$$module$node_modules$rambda$dist$rambda_mjs(e,b[f+c]))||(d=!1);return e}).length===a.length}
function prop$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return c=>prop$$module$node_modules$rambda$dist$rambda_mjs(a,c);if(b)return b[a]}function eqPropsFn$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){return equals$$module$node_modules$rambda$dist$rambda_mjs(prop$$module$node_modules$rambda$dist$rambda_mjs(a,b),prop$$module$node_modules$rambda$dist$rambda_mjs(a,c))}const eqProps$$module$node_modules$rambda$dist$rambda_mjs=curry$$module$node_modules$rambda$dist$rambda_mjs(eqPropsFn$$module$node_modules$rambda$dist$rambda_mjs);
function evolveArray$$module$node_modules$rambda$dist$rambda_mjs(a,b){return mapArray$$module$node_modules$rambda$dist$rambda_mjs((c,d)=>"Function"===type$$module$node_modules$rambda$dist$rambda_mjs(a[d])?a[d](c):c,b,!0)}
function evolveObject$$module$node_modules$rambda$dist$rambda_mjs(a,b){return mapObject$$module$node_modules$rambda$dist$rambda_mjs((c,d)=>{if("Object"===type$$module$node_modules$rambda$dist$rambda_mjs(c)){const e=type$$module$node_modules$rambda$dist$rambda_mjs(a[d]);return"Function"===e?a[d](c):"Object"===e?evolve$$module$node_modules$rambda$dist$rambda_mjs(a[d],c):c}return"Function"===type$$module$node_modules$rambda$dist$rambda_mjs(a[d])?a[d](c):c},b)}
function evolve$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return e=>evolve$$module$node_modules$rambda$dist$rambda_mjs(a,e);const c=type$$module$node_modules$rambda$dist$rambda_mjs(a),d=type$$module$node_modules$rambda$dist$rambda_mjs(b);if(d!==c)throw Error("iterableType !== rulesType");if(!["Object","Array"].includes(c))throw Error(\`'iterable' and 'rules' are from wrong type \${c}\`);return"Object"===d?evolveObject$$module$node_modules$rambda$dist$rambda_mjs(a,b):evolveArray$$module$node_modules$rambda$dist$rambda_mjs(a,
b)}function F$$module$node_modules$rambda$dist$rambda_mjs(){return!1}function filterObject$$module$node_modules$rambda$dist$rambda_mjs(a,b){const c={};for(const d in b)a(b[d],d,b)&&(c[d]=b[d]);return c}function filterArray$$module$node_modules$rambda$dist$rambda_mjs(a,b,c=!1){let d=0;const e=b.length,f=[];for(;d<e;)(c?a(b[d],d):a(b[d]))&&f.push(b[d]),d++;return f}
function filter$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return c=>filter$$module$node_modules$rambda$dist$rambda_mjs(a,c);if(!b)throw Error("Incorrect iterable input");return isArray$$module$node_modules$rambda$dist$rambda_mjs(b)?filterArray$$module$node_modules$rambda$dist$rambda_mjs(a,b,!1):filterObject$$module$node_modules$rambda$dist$rambda_mjs(a,b)}
function find$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return e=>find$$module$node_modules$rambda$dist$rambda_mjs(a,e);let c=0;const d=b.length;for(;c<d;){const e=b[c];if(a(e))return e;c++}}function findIndex$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return e=>findIndex$$module$node_modules$rambda$dist$rambda_mjs(a,e);const c=b.length;let d=-1;for(;++d<c;)if(a(b[d]))return d;return-1}
function findLast$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return d=>findLast$$module$node_modules$rambda$dist$rambda_mjs(a,d);let c=b.length;for(;0<=--c;)if(a(b[c]))return b[c]}function findLastIndex$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return d=>findLastIndex$$module$node_modules$rambda$dist$rambda_mjs(a,d);let c=b.length;for(;0<=--c;)if(a(b[c]))return c;return-1}
function flatten$$module$node_modules$rambda$dist$rambda_mjs(a,b){b=void 0===b?[]:b;for(let c=0;c<a.length;c++)isArray$$module$node_modules$rambda$dist$rambda_mjs(a[c])?flatten$$module$node_modules$rambda$dist$rambda_mjs(a[c],b):b.push(a[c]);return b}
function flipFn$$module$node_modules$rambda$dist$rambda_mjs(a){return(...b)=>{if(1===b.length)return c=>a(c,b[0]);if(2===b.length)return a(b[1],b[0]);if(3===b.length)return a(b[1],b[0],b[2]);if(4===b.length)return a(b[1],b[0],b[2],b[3]);throw Error("R.flip doesn't work with arity > 4");}}function flip$$module$node_modules$rambda$dist$rambda_mjs(a){return flipFn$$module$node_modules$rambda$dist$rambda_mjs(a)}
function forEach$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return e=>forEach$$module$node_modules$rambda$dist$rambda_mjs(a,e);if(void 0!==b){if(isArray$$module$node_modules$rambda$dist$rambda_mjs(b))for(var c=0,d=b.length;c<d;)a(b[c]),c++;else{c=0;d=keys$1$$module$node_modules$rambda$dist$rambda_mjs(b);const e=d.length;for(;c<e;){const f=d[c];a(b[f],f,b);c++}}return b}}
function fromPairs$$module$node_modules$rambda$dist$rambda_mjs(a){const b={};a.forEach(([c,d])=>b[c]=d);return b}function groupBy$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return d=>groupBy$$module$node_modules$rambda$dist$rambda_mjs(a,d);const c={};for(let d=0;d<b.length;d++){const e=b[d],f=a(e);c[f]||(c[f]=[]);c[f].push(e)}return c}
function groupWith$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(!isArray$$module$node_modules$rambda$dist$rambda_mjs(b))throw new TypeError("list.reduce is not a function");const c=cloneList$$module$node_modules$rambda$dist$rambda_mjs(b);if(1===b.length)return[c];const d=[];let e=[];c.reduce((f,g,h)=>{if(0===h)return g;const k=a(f,g),l=0===e.length;h=h===b.length-1;if(k)return l&&e.push(f),e.push(g),h&&d.push(e),g;if(l)return d.push([f]),h&&d.push([g]),g;d.push(e);h&&d.push([g]);e=[];return g},
void 0);return d}function has$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>has$$module$node_modules$rambda$dist$rambda_mjs(a,c):b?b.hasOwnProperty(a):!1}function createPath$$module$node_modules$rambda$dist$rambda_mjs(a,b="."){return"string"===typeof a?a.split(b):a}
function path$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return f=>path$$module$node_modules$rambda$dist$rambda_mjs(a,f);if(null!==b&&void 0!==b){for(var c=b,d=0,e=createPath$$module$node_modules$rambda$dist$rambda_mjs(a);d<e.length;){if(null===c||void 0===c||null===c[e[d]])return;c=c[e[d]];d++}return c}}
function hasPath$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>hasPath$$module$node_modules$rambda$dist$rambda_mjs(a,c):void 0!==path$$module$node_modules$rambda$dist$rambda_mjs(a,b)}function head$$module$node_modules$rambda$dist$rambda_mjs(a){return"string"===typeof a?a[0]||"":a[0]}function _objectIs$$module$node_modules$rambda$dist$rambda_mjs(a,b){return a===b?0!==a||1/a===1/b:a!==a&&b!==b}const objectIs$$module$node_modules$rambda$dist$rambda_mjs=Object.is||_objectIs$$module$node_modules$rambda$dist$rambda_mjs;
function identical$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>identical$$module$node_modules$rambda$dist$rambda_mjs(a,c):objectIs$$module$node_modules$rambda$dist$rambda_mjs(a,b)}function identity$$module$node_modules$rambda$dist$rambda_mjs(a){return a}function ifElseFn$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){return(...d)=>!0===("boolean"===typeof a?a:a(...d))?b(...d):c(...d)}
const ifElse$$module$node_modules$rambda$dist$rambda_mjs=curry$$module$node_modules$rambda$dist$rambda_mjs(ifElseFn$$module$node_modules$rambda$dist$rambda_mjs),inc$$module$node_modules$rambda$dist$rambda_mjs=a=>a+1;function indexByPath$$module$node_modules$rambda$dist$rambda_mjs(a,b){const c={};for(let d=0;d<b.length;d++){const e=b[d];c[path$$module$node_modules$rambda$dist$rambda_mjs(a,e)]=e}return c}
function indexBy$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return d=>indexBy$$module$node_modules$rambda$dist$rambda_mjs(a,d);if("string"===typeof a)return indexByPath$$module$node_modules$rambda$dist$rambda_mjs(a,b);const c={};for(let d=0;d<b.length;d++){const e=b[d];c[a(e)]=e}return c}
function indexOf$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>_indexOf$$module$node_modules$rambda$dist$rambda_mjs(a,c):_indexOf$$module$node_modules$rambda$dist$rambda_mjs(a,b)}function baseSlice$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){let d=-1,{length:e}=a;c=c>e?e:c;0>c&&(c+=e);e=b>c?0:c-b>>>0;b>>>=0;for(c=Array(e);++d<e;)c[d]=a[d+b];return c}
function init$$module$node_modules$rambda$dist$rambda_mjs(a){return"string"===typeof a?a.slice(0,-1):a.length?baseSlice$$module$node_modules$rambda$dist$rambda_mjs(a,0,-1):[]}function intersection$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>intersection$$module$node_modules$rambda$dist$rambda_mjs(a,c):filter$$module$node_modules$rambda$dist$rambda_mjs(c=>includes$$module$node_modules$rambda$dist$rambda_mjs(c,a),b)}
function intersperse$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return f=>intersperse$$module$node_modules$rambda$dist$rambda_mjs(a,f);let c=-1;const d=b.length,e=[];for(;++c<d;)c===d-1?e.push(b[c]):e.push(b[c],a);return e}function is$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>is$$module$node_modules$rambda$dist$rambda_mjs(a,c):null!=b&&b.constructor===a||b instanceof a}
function isEmpty$$module$node_modules$rambda$dist$rambda_mjs(a){const b=type$$module$node_modules$rambda$dist$rambda_mjs(a);return["Undefined","NaN","Number","Null"].includes(b)?!1:a?"Object"===b?0===Object.keys(a).length:"Array"===b?0===a.length:!1:!0}function isNil$$module$node_modules$rambda$dist$rambda_mjs(a){return void 0===a||null===a}
function join$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>join$$module$node_modules$rambda$dist$rambda_mjs(a,c):b.join(a)}function juxt$$module$node_modules$rambda$dist$rambda_mjs(a){return(...b)=>a.map(c=>c(...b))}function keys$$module$node_modules$rambda$dist$rambda_mjs(a){return Object.keys(a)}function last$$module$node_modules$rambda$dist$rambda_mjs(a){return"string"===typeof a?a[a.length-1]||"":a[a.length-1]}
function lastIndexOf$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>_lastIndexOf$$module$node_modules$rambda$dist$rambda_mjs(a,c):_lastIndexOf$$module$node_modules$rambda$dist$rambda_mjs(a,b)}function length$$module$node_modules$rambda$dist$rambda_mjs(a){return isArray$$module$node_modules$rambda$dist$rambda_mjs(a)||"string"===typeof a?a.length:NaN}
function lens$$module$node_modules$rambda$dist$rambda_mjs(a,b){return function(c){return function(d){return c(a(d)).map(e=>b(e,d))}}}function nth$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return d=>nth$$module$node_modules$rambda$dist$rambda_mjs(a,d);const c=0>a?b.length+a:a;return"[object String]"===Object.prototype.toString.call(b)?b.charAt(c):b[c]}
function updateFn$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){c=cloneList$$module$node_modules$rambda$dist$rambda_mjs(c);return-1===a?c.fill(b,a):c.fill(b,a,a+1)}const update$$module$node_modules$rambda$dist$rambda_mjs=curry$$module$node_modules$rambda$dist$rambda_mjs(updateFn$$module$node_modules$rambda$dist$rambda_mjs);
function lensIndex$$module$node_modules$rambda$dist$rambda_mjs(a){return lens$$module$node_modules$rambda$dist$rambda_mjs(nth$$module$node_modules$rambda$dist$rambda_mjs(a),update$$module$node_modules$rambda$dist$rambda_mjs(a))}function lensPath$$module$node_modules$rambda$dist$rambda_mjs(a){return lens$$module$node_modules$rambda$dist$rambda_mjs(path$$module$node_modules$rambda$dist$rambda_mjs(a),assocPath$$module$node_modules$rambda$dist$rambda_mjs(a))}
function lensProp$$module$node_modules$rambda$dist$rambda_mjs(a){return lens$$module$node_modules$rambda$dist$rambda_mjs(prop$$module$node_modules$rambda$dist$rambda_mjs(a),assoc$$module$node_modules$rambda$dist$rambda_mjs(a))}function match$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return d=>match$$module$node_modules$rambda$dist$rambda_mjs(a,d);const c=b.match(a);return null===c?[]:c}
function mathMod$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>mathMod$$module$node_modules$rambda$dist$rambda_mjs(a,c):!isInteger$$module$node_modules$rambda$dist$rambda_mjs(a)||!isInteger$$module$node_modules$rambda$dist$rambda_mjs(b)||1>b?NaN:(a%b+b)%b}function maxByFn$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){return a(c)>a(b)?c:b}const maxBy$$module$node_modules$rambda$dist$rambda_mjs=curry$$module$node_modules$rambda$dist$rambda_mjs(maxByFn$$module$node_modules$rambda$dist$rambda_mjs);
function sum$$module$node_modules$rambda$dist$rambda_mjs(a){return a.reduce((b,c)=>b+c,0)}function mean$$module$node_modules$rambda$dist$rambda_mjs(a){return sum$$module$node_modules$rambda$dist$rambda_mjs(a)/a.length}function median$$module$node_modules$rambda$dist$rambda_mjs(a){var b=a.length;if(0===b)return NaN;const c=2-b%2;b=(b-c)/2;return mean$$module$node_modules$rambda$dist$rambda_mjs(Array.prototype.slice.call(a,0).sort((d,e)=>d===e?0:d<e?-1:1).slice(b,b+c))}
function mergeRight$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>mergeRight$$module$node_modules$rambda$dist$rambda_mjs(a,c):Object.assign({},a||{},b||{})}function mergeAll$$module$node_modules$rambda$dist$rambda_mjs(a){let b={};map$$module$node_modules$rambda$dist$rambda_mjs(c=>{b=mergeRight$$module$node_modules$rambda$dist$rambda_mjs(b,c)},a);return b}
function mergeDeepRight$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return d=>mergeDeepRight$$module$node_modules$rambda$dist$rambda_mjs(a,d);const c=clone$$module$node_modules$rambda$dist$rambda_mjs(a);Object.keys(b).forEach(d=>{"Object"===type$$module$node_modules$rambda$dist$rambda_mjs(b[d])?"Object"===type$$module$node_modules$rambda$dist$rambda_mjs(a[d])?c[d]=mergeDeepRight$$module$node_modules$rambda$dist$rambda_mjs(a[d],b[d]):c[d]=b[d]:c[d]=b[d]});return c}
function mergeLeft$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>mergeLeft$$module$node_modules$rambda$dist$rambda_mjs(a,c):mergeRight$$module$node_modules$rambda$dist$rambda_mjs(b,a)}function mergeWithFn$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){const d={};Object.keys(b).forEach(e=>{d[e]=void 0===c[e]?b[e]:a(b[e],c[e])});Object.keys(c).forEach(e=>{void 0===d[e]&&(d[e]=void 0===b[e]?c[e]:a(b[e],c[e]))});return d}
const mergeWith$$module$node_modules$rambda$dist$rambda_mjs=curry$$module$node_modules$rambda$dist$rambda_mjs(mergeWithFn$$module$node_modules$rambda$dist$rambda_mjs);function min$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>min$$module$node_modules$rambda$dist$rambda_mjs(a,c):b<a?b:a}function minByFn$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){return a(c)<a(b)?c:b}const minBy$$module$node_modules$rambda$dist$rambda_mjs=curry$$module$node_modules$rambda$dist$rambda_mjs(minByFn$$module$node_modules$rambda$dist$rambda_mjs);
function ownKeys$$module$node_modules$rambda$dist$rambda_mjs(a,b){var c=Object.keys(a);if(Object.getOwnPropertySymbols){var d=Object.getOwnPropertySymbols(a);b&&(d=d.filter(function(e){return Object.getOwnPropertyDescriptor(a,e).enumerable}));c.push.apply(c,d)}return c}
function _objectSpread2$$module$node_modules$rambda$dist$rambda_mjs(a){for(var b=1;b<arguments.length;b++){var c=null!=arguments[b]?arguments[b]:{};b%2?ownKeys$$module$node_modules$rambda$dist$rambda_mjs(Object(c),!0).forEach(function(d){_defineProperty$$module$node_modules$rambda$dist$rambda_mjs(a,d,c[d])}):Object.getOwnPropertyDescriptors?Object.defineProperties(a,Object.getOwnPropertyDescriptors(c)):ownKeys$$module$node_modules$rambda$dist$rambda_mjs(Object(c)).forEach(function(d){Object.defineProperty(a,
d,Object.getOwnPropertyDescriptor(c,d))})}return a}function _defineProperty$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){b in a?Object.defineProperty(a,b,{value:c,enumerable:!0,configurable:!0,writable:!0}):a[b]=c;return a}function isIterable$$module$node_modules$rambda$dist$rambda_mjs(a){return Array.isArray(a)||"Object"===type$$module$node_modules$rambda$dist$rambda_mjs(a)}
function modifyFn$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){return isIterable$$module$node_modules$rambda$dist$rambda_mjs(c)&&void 0!==c[a]?isArray$$module$node_modules$rambda$dist$rambda_mjs(c)?updateFn$$module$node_modules$rambda$dist$rambda_mjs(a,b(c[a]),c):_objectSpread2$$module$node_modules$rambda$dist$rambda_mjs(_objectSpread2$$module$node_modules$rambda$dist$rambda_mjs({},c),{},{[a]:b(c[a])}):c}const modify$$module$node_modules$rambda$dist$rambda_mjs=curry$$module$node_modules$rambda$dist$rambda_mjs(modifyFn$$module$node_modules$rambda$dist$rambda_mjs);
function modifyPathFn$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){a=createPath$$module$node_modules$rambda$dist$rambda_mjs(a);if(1===a.length)return _objectSpread2$$module$node_modules$rambda$dist$rambda_mjs(_objectSpread2$$module$node_modules$rambda$dist$rambda_mjs({},c),{},{[a[0]]:b(c[a[0]])});if(void 0===path$$module$node_modules$rambda$dist$rambda_mjs(a,c))return c;b=modifyPath$$module$node_modules$rambda$dist$rambda_mjs(Array.prototype.slice.call(a,1),b,c[a[0]]);return b===c[a[0]]?c:assoc$$module$node_modules$rambda$dist$rambda_mjs(a[0],
b,c)}const modifyPath$$module$node_modules$rambda$dist$rambda_mjs=curry$$module$node_modules$rambda$dist$rambda_mjs(modifyPathFn$$module$node_modules$rambda$dist$rambda_mjs);function modulo$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>modulo$$module$node_modules$rambda$dist$rambda_mjs(a,c):a%b}
function moveFn$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){if(0>a||0>b)throw Error("Rambda.move does not support negative indexes");if(a>c.length-1||b>c.length-1)return c;const d=cloneList$$module$node_modules$rambda$dist$rambda_mjs(c);d[a]=c[b];d[b]=c[a];return d}const move$$module$node_modules$rambda$dist$rambda_mjs=curry$$module$node_modules$rambda$dist$rambda_mjs(moveFn$$module$node_modules$rambda$dist$rambda_mjs);
function multiply$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>multiply$$module$node_modules$rambda$dist$rambda_mjs(a,c):a*b}function negate$$module$node_modules$rambda$dist$rambda_mjs(a){return-a}function none$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return c=>none$$module$node_modules$rambda$dist$rambda_mjs(a,c);for(let c=0;c<b.length;c++)if(a(b[c]))return!1;return!0}
function not$$module$node_modules$rambda$dist$rambda_mjs(a){return!a}function objOf$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>objOf$$module$node_modules$rambda$dist$rambda_mjs(a,c):{[a]:b}}function of$$module$node_modules$rambda$dist$rambda_mjs(a){return[a]}
function omit$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return e=>omit$$module$node_modules$rambda$dist$rambda_mjs(a,e);if(null!==b&&void 0!==b){var c=createPath$$module$node_modules$rambda$dist$rambda_mjs(a,","),d={};for(const e in b)c.includes(e)||(d[e]=b[e]);return d}}
function on$$module$node_modules$rambda$dist$rambda_mjs(a,b,c,d){return 3===arguments.length?e=>on$$module$node_modules$rambda$dist$rambda_mjs(a,b,c,e):2===arguments.length?(e,f)=>on$$module$node_modules$rambda$dist$rambda_mjs(a,b,e,f):a(b(c),b(d))}function onceFn$$module$node_modules$rambda$dist$rambda_mjs(a,b){let c;return function(){a&&(c=a.apply(b||this,arguments),a=null);return c}}
function once$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length){const c=onceFn$$module$node_modules$rambda$dist$rambda_mjs(a,b);return curry$$module$node_modules$rambda$dist$rambda_mjs(c)}return onceFn$$module$node_modules$rambda$dist$rambda_mjs(a,b)}function or$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>or$$module$node_modules$rambda$dist$rambda_mjs(a,c):a||b}const Identity$$module$node_modules$rambda$dist$rambda_mjs=a=>({x:a,map:b=>Identity$$module$node_modules$rambda$dist$rambda_mjs(b(a))});
function overFn$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){return a(d=>Identity$$module$node_modules$rambda$dist$rambda_mjs(b(d)))(c).x}const over$$module$node_modules$rambda$dist$rambda_mjs=curry$$module$node_modules$rambda$dist$rambda_mjs(overFn$$module$node_modules$rambda$dist$rambda_mjs);
function partial$$module$node_modules$rambda$dist$rambda_mjs(a,...b){const c=a.length;return(...d)=>b.length+d.length>=c?a(...b,...d):partial$$module$node_modules$rambda$dist$rambda_mjs(a,...[...b,...d])}function partialObject$$module$node_modules$rambda$dist$rambda_mjs(a,b){return c=>a(mergeDeepRight$$module$node_modules$rambda$dist$rambda_mjs(c,b))}
function partitionObject$$module$node_modules$rambda$dist$rambda_mjs(a,b){const c={},d={};Object.entries(b).forEach(([e,f])=>{a(f,e)?c[e]=f:d[e]=f});return[c,d]}function partitionArray$$module$node_modules$rambda$dist$rambda_mjs(a,b,c=!1){const d=[],e=[];let f=-1;for(;f++<b.length-1;)(c?a(b[f],f):a(b[f]))?d.push(b[f]):e.push(b[f]);return[d,e]}
function partition$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>partition$$module$node_modules$rambda$dist$rambda_mjs(a,c):isArray$$module$node_modules$rambda$dist$rambda_mjs(b)?partitionArray$$module$node_modules$rambda$dist$rambda_mjs(a,b):partitionObject$$module$node_modules$rambda$dist$rambda_mjs(a,b)}
function pathEqFn$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){return equals$$module$node_modules$rambda$dist$rambda_mjs(path$$module$node_modules$rambda$dist$rambda_mjs(a,c),b)}const pathEq$$module$node_modules$rambda$dist$rambda_mjs=curry$$module$node_modules$rambda$dist$rambda_mjs(pathEqFn$$module$node_modules$rambda$dist$rambda_mjs);
function pathOrFn$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){return defaultTo$$module$node_modules$rambda$dist$rambda_mjs(a,path$$module$node_modules$rambda$dist$rambda_mjs(b,c))}const pathOr$$module$node_modules$rambda$dist$rambda_mjs=curry$$module$node_modules$rambda$dist$rambda_mjs(pathOrFn$$module$node_modules$rambda$dist$rambda_mjs);
function paths$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>paths$$module$node_modules$rambda$dist$rambda_mjs(a,c):a.map(c=>path$$module$node_modules$rambda$dist$rambda_mjs(c,b))}
function pick$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return f=>pick$$module$node_modules$rambda$dist$rambda_mjs(a,f);if(null!==b&&void 0!==b){for(var c=createPath$$module$node_modules$rambda$dist$rambda_mjs(a,","),d={},e=0;e<c.length;)c[e]in b&&(d[c[e]]=b[c[e]]),e++;return d}}
function pickAll$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return f=>pickAll$$module$node_modules$rambda$dist$rambda_mjs(a,f);if(null!==b&&void 0!==b){for(var c=createPath$$module$node_modules$rambda$dist$rambda_mjs(a,","),d={},e=0;e<c.length;)d[c[e]]=c[e]in b?b[c[e]]:void 0,e++;return d}}
function pluck$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return d=>pluck$$module$node_modules$rambda$dist$rambda_mjs(a,d);const c=[];map$$module$node_modules$rambda$dist$rambda_mjs(d=>{void 0!==d[a]&&c.push(d[a])},b);return c}function prepend$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>prepend$$module$node_modules$rambda$dist$rambda_mjs(a,c):"string"===typeof b?[a].concat(b.split("")):[a].concat(b)}
const product$$module$node_modules$rambda$dist$rambda_mjs=reduce$$module$node_modules$rambda$dist$rambda_mjs(multiply$$module$node_modules$rambda$dist$rambda_mjs,1);function propEqFn$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){return c?equals$$module$node_modules$rambda$dist$rambda_mjs(b,prop$$module$node_modules$rambda$dist$rambda_mjs(a,c)):!1}const propEq$$module$node_modules$rambda$dist$rambda_mjs=curry$$module$node_modules$rambda$dist$rambda_mjs(propEqFn$$module$node_modules$rambda$dist$rambda_mjs);
function propIsFn$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){return is$$module$node_modules$rambda$dist$rambda_mjs(a,c[b])}const propIs$$module$node_modules$rambda$dist$rambda_mjs=curry$$module$node_modules$rambda$dist$rambda_mjs(propIsFn$$module$node_modules$rambda$dist$rambda_mjs);function propOrFn$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){return c?defaultTo$$module$node_modules$rambda$dist$rambda_mjs(a,c[b]):a}const propOr$$module$node_modules$rambda$dist$rambda_mjs=curry$$module$node_modules$rambda$dist$rambda_mjs(propOrFn$$module$node_modules$rambda$dist$rambda_mjs);
function props$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return c=>props$$module$node_modules$rambda$dist$rambda_mjs(a,c);if(!isArray$$module$node_modules$rambda$dist$rambda_mjs(a))throw Error("propsToPick is not a list");return mapArray$$module$node_modules$rambda$dist$rambda_mjs(c=>b[c],a)}function propSatisfiesFn$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){return a(prop$$module$node_modules$rambda$dist$rambda_mjs(b,c))}
const propSatisfies$$module$node_modules$rambda$dist$rambda_mjs=curry$$module$node_modules$rambda$dist$rambda_mjs(propSatisfiesFn$$module$node_modules$rambda$dist$rambda_mjs);
function range$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return e=>range$$module$node_modules$rambda$dist$rambda_mjs(a,e);if(Number.isNaN(Number(a))||Number.isNaN(Number(b)))throw new TypeError("Both arguments to range must be numbers");if(b<a)return[];const c=b-a,d=Array(c);for(let e=0;e<c;e++)d[e]=a+e;return d}
function reject$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>reject$$module$node_modules$rambda$dist$rambda_mjs(a,c):filter$$module$node_modules$rambda$dist$rambda_mjs(c=>!a(c),b)}function repeat$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>repeat$$module$node_modules$rambda$dist$rambda_mjs(a,c):Array(b).fill(a)}function replaceFn$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){return c.replace(a,b)}
const replace$$module$node_modules$rambda$dist$rambda_mjs=curry$$module$node_modules$rambda$dist$rambda_mjs(replaceFn$$module$node_modules$rambda$dist$rambda_mjs);function reverse$$module$node_modules$rambda$dist$rambda_mjs(a){return"string"===typeof a?a.split("").reverse().join(""):a.slice().reverse()}function setFn$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){return over$$module$node_modules$rambda$dist$rambda_mjs(a,always$$module$node_modules$rambda$dist$rambda_mjs(b),c)}
const set$$module$node_modules$rambda$dist$rambda_mjs=curry$$module$node_modules$rambda$dist$rambda_mjs(setFn$$module$node_modules$rambda$dist$rambda_mjs);function sliceFn$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){return c.slice(a,b)}const slice$$module$node_modules$rambda$dist$rambda_mjs=curry$$module$node_modules$rambda$dist$rambda_mjs(sliceFn$$module$node_modules$rambda$dist$rambda_mjs);
function sort$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>sort$$module$node_modules$rambda$dist$rambda_mjs(a,c):cloneList$$module$node_modules$rambda$dist$rambda_mjs(b).sort(a)}function sortBy$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>sortBy$$module$node_modules$rambda$dist$rambda_mjs(a,c):cloneList$$module$node_modules$rambda$dist$rambda_mjs(b).sort((c,d)=>{c=a(c);d=a(d);return c===d?0:c<d?-1:1})}
function split$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>split$$module$node_modules$rambda$dist$rambda_mjs(a,c):b.split(a)}function maybe$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){b=a&&"Function"===type$$module$node_modules$rambda$dist$rambda_mjs(b)?b():b;c=a||"Function"!==type$$module$node_modules$rambda$dist$rambda_mjs(c)?c:c();return a?b:c}
function take$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>take$$module$node_modules$rambda$dist$rambda_mjs(a,c):0>a?b.slice():"string"===typeof b?b.slice(0,a):baseSlice$$module$node_modules$rambda$dist$rambda_mjs(b,0,a)}
function splitAt$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return d=>splitAt$$module$node_modules$rambda$dist$rambda_mjs(a,d);if(!b)throw new TypeError(\`Cannot read property 'slice' of \${b}\`);if(!isArray$$module$node_modules$rambda$dist$rambda_mjs(b)&&"string"!==typeof b)return[[],[]];const c=maybe$$module$node_modules$rambda$dist$rambda_mjs(0>a,0>b.length+a?0:b.length+a,a);return[take$$module$node_modules$rambda$dist$rambda_mjs(c,b),drop$$module$node_modules$rambda$dist$rambda_mjs(c,
b)]}function splitEvery$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return e=>splitEvery$$module$node_modules$rambda$dist$rambda_mjs(a,e);if(1>a)throw Error("First argument to splitEvery must be a positive integer");const c=[];let d=0;for(;d<b.length;)c.push(b.slice(d,d+=a));return c}
function splitWhen$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return g=>splitWhen$$module$node_modules$rambda$dist$rambda_mjs(a,g);if(!b)throw new TypeError(\`Cannot read property 'length' of \${b}\`);const c=[],d=[];let e=!1,f=-1;for(;f++<b.length-1;)e?d.push(b[f]):a(b[f])?(d.push(b[f]),e=!0):c.push(b[f]);return[c,d]}
function startsWith$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return d=>startsWith$$module$node_modules$rambda$dist$rambda_mjs(a,d);if("string"===typeof b)return b.startsWith(a);if(!isArray$$module$node_modules$rambda$dist$rambda_mjs(a))return!1;let c=!0;return a.filter((d,e)=>{if(!c)return!1;(d=equals$$module$node_modules$rambda$dist$rambda_mjs(d,b[e]))||(c=!1);return d}).length===a.length}
function subtract$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>subtract$$module$node_modules$rambda$dist$rambda_mjs(a,c):a-b}
function symmetricDifference$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>symmetricDifference$$module$node_modules$rambda$dist$rambda_mjs(a,c):concat$$module$node_modules$rambda$dist$rambda_mjs(filter$$module$node_modules$rambda$dist$rambda_mjs(c=>!includes$$module$node_modules$rambda$dist$rambda_mjs(c,b),a),filter$$module$node_modules$rambda$dist$rambda_mjs(c=>!includes$$module$node_modules$rambda$dist$rambda_mjs(c,a),b))}
function T$$module$node_modules$rambda$dist$rambda_mjs(){return!0}function tail$$module$node_modules$rambda$dist$rambda_mjs(a){return drop$$module$node_modules$rambda$dist$rambda_mjs(1,a)}
function takeLast$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return e=>takeLast$$module$node_modules$rambda$dist$rambda_mjs(a,e);const c=b.length;if(0>a)return b.slice();let d=a>c?c:a;return"string"===typeof b?b.slice(c-d):baseSlice$$module$node_modules$rambda$dist$rambda_mjs(b,c-d,c)}
function takeLastWhile$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return f=>takeLastWhile$$module$node_modules$rambda$dist$rambda_mjs(a,f);if(0===b.length)return b;let c=!1;const d=[];let e=b.length;for(;!c||0===e;)e--,!1===a(b[e])?c=!0:c||d.push(b[e]);return isArray$$module$node_modules$rambda$dist$rambda_mjs(b)?d.reverse():d.reverse().join("")}
function takeWhile$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return g=>takeWhile$$module$node_modules$rambda$dist$rambda_mjs(a,g);const c=isArray$$module$node_modules$rambda$dist$rambda_mjs(b);if(!c&&"string"!==typeof b)throw Error("\`iterable\` is neither list nor a string");let d=!0;const e=[];let f=-1;for(;f++<b.length-1;)a(b[f])?d&&e.push(b[f]):d&&(d=!1);return c?e:e.join("")}
function tap$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return c=>tap$$module$node_modules$rambda$dist$rambda_mjs(a,c);a(b);return b}function test$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return c=>test$$module$node_modules$rambda$dist$rambda_mjs(a,c);if("string"===typeof a)throw new TypeError(\`\\u2018test\\u2019 requires a value of type RegExp as its first argument; received "\${a}"\`);return-1!==b.search(a)}
function times$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return c=>times$$module$node_modules$rambda$dist$rambda_mjs(a,c);if(!isInteger$$module$node_modules$rambda$dist$rambda_mjs(b)||0>b)throw new RangeError("n must be an integer");return map$$module$node_modules$rambda$dist$rambda_mjs(a,range$$module$node_modules$rambda$dist$rambda_mjs(0,b))}function toLower$$module$node_modules$rambda$dist$rambda_mjs(a){return a.toLowerCase()}
function toPairs$$module$node_modules$rambda$dist$rambda_mjs(a){return Object.entries(a)}function toString$$module$node_modules$rambda$dist$rambda_mjs(a){return a.toString()}function toUpper$$module$node_modules$rambda$dist$rambda_mjs(a){return a.toUpperCase()}function transpose$$module$node_modules$rambda$dist$rambda_mjs(a){return a.reduce((b,c)=>{c.forEach((d,e)=>isArray$$module$node_modules$rambda$dist$rambda_mjs(b[e])?b[e].push(d):b.push([d]));return b},[])}
function trim$$module$node_modules$rambda$dist$rambda_mjs(a){return a.trim()}const isFunction$$module$node_modules$rambda$dist$rambda_mjs=a=>["Promise","Function"].includes(type$$module$node_modules$rambda$dist$rambda_mjs(a));
function tryCatch$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(!isFunction$$module$node_modules$rambda$dist$rambda_mjs(a))throw Error(\`R.tryCatch | fn '\${a}'\`);const c=isFunction$$module$node_modules$rambda$dist$rambda_mjs(b);return(...d)=>{try{return a(...d)}catch(e){return c?b(e,...d):b}}}function unapply$$module$node_modules$rambda$dist$rambda_mjs(a){return function(...b){return a.call(this,b)}}
function union$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return d=>union$$module$node_modules$rambda$dist$rambda_mjs(a,d);const c=cloneList$$module$node_modules$rambda$dist$rambda_mjs(a);b.forEach(d=>{includes$$module$node_modules$rambda$dist$rambda_mjs(d,a)||c.push(d)});return c}
function uniqBy$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return d=>uniqBy$$module$node_modules$rambda$dist$rambda_mjs(a,d);const c=new Set;return b.filter(d=>{if(c.has(a(d)))return!1;c.add(a(d));return!0})}function includesWith$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){let d=!1,e=-1;for(;++e<c.length&&!d;)a(b,c[e])&&(d=!0);return d}
function uniqWith$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return e=>uniqWith$$module$node_modules$rambda$dist$rambda_mjs(a,e);let c=-1;const d=[];for(;++c<b.length;){const e=b[c];includesWith$$module$node_modules$rambda$dist$rambda_mjs(a,e,d)||d.push(e)}return d}function unless$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>unless$$module$node_modules$rambda$dist$rambda_mjs(a,c):c=>a(c)?c:b(c)}
function unwind$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>unwind$$module$node_modules$rambda$dist$rambda_mjs(a,c):isArray$$module$node_modules$rambda$dist$rambda_mjs(b[a])?mapArray$$module$node_modules$rambda$dist$rambda_mjs(c=>_objectSpread2$$module$node_modules$rambda$dist$rambda_mjs(_objectSpread2$$module$node_modules$rambda$dist$rambda_mjs({},b),{},{[a]:c}),b[a]):[b]}
function values$$module$node_modules$rambda$dist$rambda_mjs(a){return"Object"!==type$$module$node_modules$rambda$dist$rambda_mjs(a)?[]:Object.values(a)}const Const$$module$node_modules$rambda$dist$rambda_mjs=a=>({x:a,map:b=>Const$$module$node_modules$rambda$dist$rambda_mjs(a)});function view$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>view$$module$node_modules$rambda$dist$rambda_mjs(a,c):a(Const$$module$node_modules$rambda$dist$rambda_mjs)(b).x}
function whenFn$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){return a(c)?b(c):c}const when$$module$node_modules$rambda$dist$rambda_mjs=curry$$module$node_modules$rambda$dist$rambda_mjs(whenFn$$module$node_modules$rambda$dist$rambda_mjs);function where$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(void 0===b)return d=>where$$module$node_modules$rambda$dist$rambda_mjs(a,d);let c=!0;for(const d in a){if(!c)continue;const e=a[d](b[d]);c&&!1===e&&(c=!1)}return c}
function whereAny$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(void 0===b)return c=>whereAny$$module$node_modules$rambda$dist$rambda_mjs(a,c);for(const c in a)if(a[c](b[c]))return!0;return!1}
function whereEq$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return d=>whereEq$$module$node_modules$rambda$dist$rambda_mjs(a,d);const c=filter$$module$node_modules$rambda$dist$rambda_mjs((d,e)=>equals$$module$node_modules$rambda$dist$rambda_mjs(d,b[e]),a);return Object.keys(c).length===Object.keys(a).length}
function without$$module$node_modules$rambda$dist$rambda_mjs(a,b){return void 0===b?c=>without$$module$node_modules$rambda$dist$rambda_mjs(a,c):reduce$$module$node_modules$rambda$dist$rambda_mjs((c,d)=>-1<_indexOf$$module$node_modules$rambda$dist$rambda_mjs(d,a)?c:c.concat(d),[],b)}function xor$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>xor$$module$node_modules$rambda$dist$rambda_mjs(a,c):!!a&&!b||!!b&&!a}
function zip$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return e=>zip$$module$node_modules$rambda$dist$rambda_mjs(a,e);const c=[],d=Math.min(a.length,b.length);for(let e=0;e<d;e++)c[e]=[a[e],b[e]];return c}function zipObj$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>zipObj$$module$node_modules$rambda$dist$rambda_mjs(a,c):take$$module$node_modules$rambda$dist$rambda_mjs(b.length,a).reduce((c,d,e)=>{c[d]=b[e];return c},{})}
function zipWithFn$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){return take$$module$node_modules$rambda$dist$rambda_mjs(b.length>c.length?c.length:b.length,b).map((d,e)=>a(d,c[e]))}const zipWith$$module$node_modules$rambda$dist$rambda_mjs=curry$$module$node_modules$rambda$dist$rambda_mjs(zipWithFn$$module$node_modules$rambda$dist$rambda_mjs);var module$node_modules$rambda$dist$rambda_mjs={};module$node_modules$rambda$dist$rambda_mjs.F=F$$module$node_modules$rambda$dist$rambda_mjs;
module$node_modules$rambda$dist$rambda_mjs.T=T$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.__findHighestArity=__findHighestArity$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs._arity=_arity$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs._indexOf=_indexOf$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs._lastIndexOf=_lastIndexOf$$module$node_modules$rambda$dist$rambda_mjs;
module$node_modules$rambda$dist$rambda_mjs._pipe=_pipe$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.add=add$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.adjust=adjust$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.all=all$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.allPass=allPass$$module$node_modules$rambda$dist$rambda_mjs;
module$node_modules$rambda$dist$rambda_mjs.always=always$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.and=and$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.any=any$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.anyPass=anyPass$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.append=append$$module$node_modules$rambda$dist$rambda_mjs;
module$node_modules$rambda$dist$rambda_mjs.apply=apply$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.applySpec=applySpec$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.assoc=assoc$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.assocPath=assocPath$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.bind=bind$$module$node_modules$rambda$dist$rambda_mjs;
module$node_modules$rambda$dist$rambda_mjs.both=both$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.chain=chain$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.clamp=clamp$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.clone=clone$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.complement=complement$$module$node_modules$rambda$dist$rambda_mjs;
module$node_modules$rambda$dist$rambda_mjs.compose=compose$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.concat=concat$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.cond=cond$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.converge=converge$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.count=count$$module$node_modules$rambda$dist$rambda_mjs;
module$node_modules$rambda$dist$rambda_mjs.countBy=countBy$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.curry=curry$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.curryN=curryN$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.dec=dec$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.defaultTo=defaultTo$$module$node_modules$rambda$dist$rambda_mjs;
module$node_modules$rambda$dist$rambda_mjs.difference=difference$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.dissoc=dissoc$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.divide=divide$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.drop=drop$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.dropLast=dropLast$$module$node_modules$rambda$dist$rambda_mjs;
module$node_modules$rambda$dist$rambda_mjs.dropLastWhile=dropLastWhile$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.dropRepeats=dropRepeats$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.dropRepeatsWith=dropRepeatsWith$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.dropWhile=dropWhile$$module$node_modules$rambda$dist$rambda_mjs;
module$node_modules$rambda$dist$rambda_mjs.either=either$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.endsWith=endsWith$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.eqProps=eqProps$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.equals=equals$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.evolve=evolve$$module$node_modules$rambda$dist$rambda_mjs;
module$node_modules$rambda$dist$rambda_mjs.evolveArray=evolveArray$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.evolveObject=evolveObject$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.filter=filter$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.filterArray=filterArray$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.filterObject=filterObject$$module$node_modules$rambda$dist$rambda_mjs;
module$node_modules$rambda$dist$rambda_mjs.find=find$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.findIndex=findIndex$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.findLast=findLast$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.findLastIndex=findLastIndex$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.flatten=flatten$$module$node_modules$rambda$dist$rambda_mjs;
module$node_modules$rambda$dist$rambda_mjs.flip=flip$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.forEach=forEach$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.fromPairs=fromPairs$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.groupBy=groupBy$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.groupWith=groupWith$$module$node_modules$rambda$dist$rambda_mjs;
module$node_modules$rambda$dist$rambda_mjs.has=has$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.hasPath=hasPath$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.head=head$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.identical=identical$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.identity=identity$$module$node_modules$rambda$dist$rambda_mjs;
module$node_modules$rambda$dist$rambda_mjs.ifElse=ifElse$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.inc=inc$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.includes=includes$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.indexBy=indexBy$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.indexOf=indexOf$$module$node_modules$rambda$dist$rambda_mjs;
module$node_modules$rambda$dist$rambda_mjs.init=init$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.intersection=intersection$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.intersperse=intersperse$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.is=is$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.isEmpty=isEmpty$$module$node_modules$rambda$dist$rambda_mjs;
module$node_modules$rambda$dist$rambda_mjs.isNil=isNil$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.join=join$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.juxt=juxt$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.keys=keys$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.last=last$$module$node_modules$rambda$dist$rambda_mjs;
module$node_modules$rambda$dist$rambda_mjs.lastIndexOf=lastIndexOf$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.length=length$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.lens=lens$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.lensIndex=lensIndex$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.lensPath=lensPath$$module$node_modules$rambda$dist$rambda_mjs;
module$node_modules$rambda$dist$rambda_mjs.lensProp=lensProp$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.map=map$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.mapArray=mapArray$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.mapObjIndexed=mapObject$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.mapObject=mapObject$$module$node_modules$rambda$dist$rambda_mjs;
module$node_modules$rambda$dist$rambda_mjs.match=match$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.mathMod=mathMod$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.max=max$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.maxBy=maxBy$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.maxByFn=maxByFn$$module$node_modules$rambda$dist$rambda_mjs;
module$node_modules$rambda$dist$rambda_mjs.mean=mean$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.median=median$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.merge=mergeRight$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.mergeAll=mergeAll$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.mergeDeepRight=mergeDeepRight$$module$node_modules$rambda$dist$rambda_mjs;
module$node_modules$rambda$dist$rambda_mjs.mergeLeft=mergeLeft$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.mergeRight=mergeRight$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.mergeWith=mergeWith$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.min=min$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.minBy=minBy$$module$node_modules$rambda$dist$rambda_mjs;
module$node_modules$rambda$dist$rambda_mjs.minByFn=minByFn$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.modify=modify$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.modifyPath=modifyPath$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.modifyPathFn=modifyPathFn$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.modulo=modulo$$module$node_modules$rambda$dist$rambda_mjs;
module$node_modules$rambda$dist$rambda_mjs.move=move$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.multiply=multiply$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.negate=negate$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.none=none$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.not=not$$module$node_modules$rambda$dist$rambda_mjs;
module$node_modules$rambda$dist$rambda_mjs.nth=nth$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.objOf=objOf$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.of=of$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.omit=omit$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.on=on$$module$node_modules$rambda$dist$rambda_mjs;
module$node_modules$rambda$dist$rambda_mjs.once=once$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.or=or$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.over=over$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.partial=partial$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.partialObject=partialObject$$module$node_modules$rambda$dist$rambda_mjs;
module$node_modules$rambda$dist$rambda_mjs.partition=partition$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.partitionArray=partitionArray$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.partitionObject=partitionObject$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.path=path$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.pathEq=pathEq$$module$node_modules$rambda$dist$rambda_mjs;
module$node_modules$rambda$dist$rambda_mjs.pathOr=pathOr$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.paths=paths$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.pick=pick$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.pickAll=pickAll$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.pipe=pipe$$module$node_modules$rambda$dist$rambda_mjs;
module$node_modules$rambda$dist$rambda_mjs.pluck=pluck$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.prepend=prepend$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.product=product$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.prop=prop$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.propEq=propEq$$module$node_modules$rambda$dist$rambda_mjs;
module$node_modules$rambda$dist$rambda_mjs.propIs=propIs$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.propOr=propOr$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.propSatisfies=propSatisfies$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.props=props$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.range=range$$module$node_modules$rambda$dist$rambda_mjs;
module$node_modules$rambda$dist$rambda_mjs.reduce=reduce$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.reduceFn=reduceFn$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.reduceStopper=reduceStopper$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.reject=reject$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.repeat=repeat$$module$node_modules$rambda$dist$rambda_mjs;
module$node_modules$rambda$dist$rambda_mjs.replace=replace$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.reverse=reverse$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.set=set$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.slice=slice$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.sort=sort$$module$node_modules$rambda$dist$rambda_mjs;
module$node_modules$rambda$dist$rambda_mjs.sortBy=sortBy$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.split=split$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.splitAt=splitAt$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.splitEvery=splitEvery$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.splitWhen=splitWhen$$module$node_modules$rambda$dist$rambda_mjs;
module$node_modules$rambda$dist$rambda_mjs.startsWith=startsWith$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.subtract=subtract$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.sum=sum$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.symmetricDifference=symmetricDifference$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.tail=tail$$module$node_modules$rambda$dist$rambda_mjs;
module$node_modules$rambda$dist$rambda_mjs.take=take$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.takeLast=takeLast$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.takeLastWhile=takeLastWhile$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.takeWhile=takeWhile$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.tap=tap$$module$node_modules$rambda$dist$rambda_mjs;
module$node_modules$rambda$dist$rambda_mjs.test=test$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.times=times$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.toLower=toLower$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.toPairs=toPairs$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.toString=toString$$module$node_modules$rambda$dist$rambda_mjs;
module$node_modules$rambda$dist$rambda_mjs.toUpper=toUpper$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.transpose=transpose$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.trim=trim$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.tryCatch=tryCatch$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.type=type$$module$node_modules$rambda$dist$rambda_mjs;
module$node_modules$rambda$dist$rambda_mjs.unapply=unapply$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.union=union$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.uniq=uniq$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.uniqBy=uniqBy$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.uniqWith=uniqWith$$module$node_modules$rambda$dist$rambda_mjs;
module$node_modules$rambda$dist$rambda_mjs.unless=unless$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.unwind=unwind$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.update=update$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.updateFn=updateFn$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.values=values$$module$node_modules$rambda$dist$rambda_mjs;
module$node_modules$rambda$dist$rambda_mjs.view=view$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.when=when$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.where=where$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.whereAny=whereAny$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.whereEq=whereEq$$module$node_modules$rambda$dist$rambda_mjs;
module$node_modules$rambda$dist$rambda_mjs.without=without$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.xor=xor$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.zip=zip$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.zipObj=zipObj$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.zipWith=zipWith$$module$node_modules$rambda$dist$rambda_mjs;let startPromize$$module$src$workers$old_spn_worker;
const getAudioContext$$module$src$workers$old_spn_worker=a=>window[a]||window.parent[\`__csound_wasm_iframe_parent_\${a}\`]||newAudioContext$$module$src$utils$new_audio_context(),closeAndDeleteContext$$module$src$workers$old_spn_worker=async a=>{const b=window[a],c=window.parent[\`__csound_wasm_iframe_parent_\${a}\`];if(b){if("closed"!==b.state)try{await b.close()}catch(d){}delete window[a]}if(c){if(b!==c&&"closed"!==c.state)try{await c.close()}catch(d){}delete window.parent[\`__csound_wasm_iframe_parent_\${a}\`]}},getAudioNode$$module$src$workers$old_spn_worker=
a=>window[a+"Node"]||window.parent[\`__csound_wasm_iframe_parent_\${a}Node\`],setAudioNode$$module$src$workers$old_spn_worker=(a,b)=>{window[a]?window[\`\${a}Node\`]=b:window.parent[\`__csound_wasm_iframe_parent_\${a}Node\`]=b},disconnectAudioNode$$module$src$workers$old_spn_worker=a=>{(a=getAudioNode$$module$src$workers$old_spn_worker(a))&&a.disconnect()},deleteAudioNode$$module$src$workers$old_spn_worker=a=>{window[a+"Node"]&&delete window[a+"Node"];window.parent[\`__csound_wasm_iframe_parent_\${a}Node\`]&&
delete window.parent[\`__csound_wasm_iframe_parent_\${a}Node\`]},PERIODS$$module$src$workers$old_spn_worker=4,spnInstances$$module$src$workers$old_spn_worker=new Map;
class CsoundScriptNodeProcessor$$module$src$workers$old_spn_worker{constructor({audioContext:a,contextUid:b,hardwareBufferSize:c,softwareBufferSize:d,inputsCount:e,outputsCount:f,sampleRate:g,audioContextIsProvided:h,autoConnect:k}){this.autoConnect=k;this.audioContextIsProvided=h;this.hardwareBufferSize=c;this.softwareBufferSize=d;this.inputsCount=e;this.outputsCount=f;this.sampleRate=g;this.vanillaOutputChannels=[];this.vanillaInputChannels=[];this.pendingFrames=this.vanillaAvailableFrames=this.vanillaInputReadIndex=
this.vanillaOutputReadIndex=0;this.vanillaFirstTransferDone=this.vanillaInitialized=!1;this.vanillaInputChannels=instantiateAudioPacket$$module$src$workers$common_utils(e,c);this.vanillaOutputChannels=instantiateAudioPacket$$module$src$workers$common_utils(f,c);this.audioContext=a;this.contextUid=b;this.scriptNode=this.audioContext.createScriptProcessor(this.softwareBufferSize,e,f);this.process=this.process.bind(this);a=this.process.bind(this);this.scriptNode.onaudioprocess=a;this.autoConnect?setAudioNode$$module$src$workers$old_spn_worker(b,
this.scriptNode.connect(this.audioContext.destination)):setAudioNode$$module$src$workers$old_spn_worker(b,this.scriptNode.context.destination);this.updateVanillaFrames=this.updateVanillaFrames.bind(this);this.initCallbacks=this.initCallbacks.bind(this)}async initCallbacks({workerMessagePort:a,transferInputFrames:b,requestPort:c}){this.workerMessagePort=a;this.transferInputFrames=b;this.requestPort=c;if("suspended"===this.audioContext.state){for(a=0;100>a;)if(await new Promise(d=>setTimeout(d,100)),
"suspended"===this.audioContext.state)a+=1;else return;this.workerMessagePort.broadcastPlayState("realtimePerformancePaused")}}updateVanillaFrames({audioPacket:a,numFrames:b,readIndex:c}){this.pendingFrames-=b;if(a){for(let d=0;d<this.outputsCount;++d){let e=!1,f=b;(c+b)%this.hardwareBufferSize<c&&(e=!0,f=this.hardwareBufferSize-c);this.vanillaOutputChannels[d].set(a[d].subarray(0,f),c);e&&this.vanillaOutputChannels[d].set(a[d].subarray(f))}this.vanillaAvailableFrames+=b}this.vanillaFirstTransferDone||
(this.vanillaFirstTransferDone=!0,startPromize$$module$src$workers$old_spn_worker&&startPromize$$module$src$workers$old_spn_worker())}process({inputBuffer:a,outputBuffer:b}){if("realtimePerformanceEnded"===this.workerMessagePort.vanillaWorkerState)return setPlayState$$module$src$workers$old_spn_worker({contextUid:this.contextUid,newPlayState:"realtimePerformanceEnded"}),!0;if(!this.vanillaInitialized){var c=this.softwareBufferSize*PERIODS$$module$src$workers$old_spn_worker;this.requestPort.postMessage({readIndex:0,
numFrames:c});this.pendingFrames+=c;return this.vanillaInitialized=!0}if(!this.vanillaFirstTransferDone)return!0;c=range$$module$node_modules$rambda$dist$rambda_mjs(0,this.inputsCount).map(h=>a.getChannelData(h));const d=range$$module$node_modules$rambda$dist$rambda_mjs(0,this.outputsCount).map(h=>b.getChannelData(h));var e=0<c.length;const f=(this.vanillaOutputReadIndex+d[0].length)%this.hardwareBufferSize,g=e?(this.vanillaInputReadIndex+c[0].length)%this.hardwareBufferSize:0;if("realtimePerformanceStarted"!==
this.workerMessagePort.vanillaWorkerState&&"realtimePerformanceResumed"!==this.workerMessagePort.vanillaWorkerState)return d.forEach(h=>{h.fill(0)}),!0;if(this.vanillaAvailableFrames>=d[0].length){d.forEach((h,k)=>{h.set(this.vanillaOutputChannels[k].subarray(this.vanillaOutputReadIndex,f<this.vanillaOutputReadIndex?this.hardwareBufferSize:f))});if(0<this.inputsCount&&e&&0<c[0].length&&(e=this.softwareBufferSize*PERIODS$$module$src$workers$old_spn_worker,c.forEach((h,k)=>{this.vanillaInputChannels[k].set(h,
this.vanillaInputReadIndex)}),0===g%e)){const h=[],k=(0===g?this.hardwareBufferSize:g)-e,l=0===g?this.hardwareBufferSize:g;this.vanillaInputChannels.forEach(m=>{h.push(m.subarray(k,l))});this.transferInputFrames(h)}this.vanillaOutputReadIndex=f;this.vanillaInputReadIndex=g;this.vanillaAvailableFrames-=d[0].length;this.bufferUnderrunCount=0}else 1<this.bufferUnderrunCount&&12>this.bufferUnderrunCount&&(this.workerMessagePort.post("Buffer underrun"),this.bufferUnderrunCount+=1),100===this.bufferUnderrunCount&&
(this.workerMessagePort.post("FATAL: 100 buffers failed in a row"),this.workerMessagePort.broadcastPlayState("realtimePerformanceEnded"));this.vanillaAvailableFrames<this.softwareBufferSize*PERIODS$$module$src$workers$old_spn_worker&&this.pendingFrames<this.softwareBufferSize*PERIODS$$module$src$workers$old_spn_worker&&(this.requestPort.postMessage({readIndex:(this.vanillaAvailableFrames+f+this.pendingFrames)%this.hardwareBufferSize,numFrames:this.softwareBufferSize*PERIODS$$module$src$workers$old_spn_worker}),
this.pendingFrames+=this.softwareBufferSize*PERIODS$$module$src$workers$old_spn_worker);return!0}}
const initAudioInputPort$$module$src$workers$old_spn_worker=({audioInputPort:a})=>b=>a.postMessage(b),initMessagePort$$module$src$workers$old_spn_worker=({port:a})=>{const b=new $jscompDefaultExport$$module$src$utils$message_port_state;b.post=c=>a.postMessage({log:c});b.broadcastPlayState=c=>{"realtimePerformanceStarted"===b.vanillaWorkerState&&"realtimePerformanceStarted"===c||a.postMessage({playStateChange:c})};b.ready=!0;return b},initRequestPort$$module$src$workers$old_spn_worker=({requestPort:a,
spnClassInstance:b})=>{a.addEventListener("message",c=>{const {audioPacket:d,readIndex:e,numFrames:f}=c.data;b.updateVanillaFrames({audioPacket:d,numFrames:f,readIndex:e})});a.start();return a},setPlayState$$module$src$workers$old_spn_worker=async({contextUid:a,newPlayState:b})=>{const c=spnInstances$$module$src$workers$old_spn_worker.get(a);c&&("resume"===b?("suspended"===c.audioContext.state&&c.audioContext.resume(),"running"===c.audioContext.state&&c.workerMessagePort.broadcastPlayState("realtimePerformanceResumed")):
c.workerMessagePort&&("realtimePerformanceEnded"===b&&"realtimePerformanceEnded"!==c.workerMessagePort.vanillaWorkerState?(c.workerMessagePort.broadcastPlayState("realtimePerformanceEnded"),c.autoConnect&&disconnectAudioNode$$module$src$workers$old_spn_worker(a),deleteAudioNode$$module$src$workers$old_spn_worker(a),spnInstances$$module$src$workers$old_spn_worker.delete(a),c.autoConnect&&!c.audioContextIsProvided&&closeAndDeleteContext$$module$src$workers$old_spn_worker(a)):"realtimePerformanceResumed"===
b&&"suspended"===c.audioContext.state&&c.audioContext.resume(),c.workerMessagePort.vanillaWorkerState=b))},initialize$$module$src$workers$old_spn_worker=async({contextUid:a,hardwareBufferSize:b,softwareBufferSize:c,inputsCount:d,outputsCount:e,sampleRate:f,audioInputPort:g,messagePort:h,requestPort:k,audioContextIsProvided:l,autoConnect:m,initialPlayState:n})=>{logOldSpnWorker$$module$src$logger("initializing old-spn worker in iframe")();startPromize$$module$src$workers$old_spn_worker=void 0;const p=
getAudioContext$$module$src$workers$old_spn_worker(a);b=new CsoundScriptNodeProcessor$$module$src$workers$old_spn_worker({audioContext:p,contextUid:a,hardwareBufferSize:b,softwareBufferSize:c,inputsCount:d,outputsCount:e,sampleRate:f,audioContextIsProvided:l,autoConnect:m});h=initMessagePort$$module$src$workers$old_spn_worker({port:h});g=initAudioInputPort$$module$src$workers$old_spn_worker({audioInputPort:g,spnClassInstance:b});initRequestPort$$module$src$workers$old_spn_worker({requestPort:k,spnClassInstance:b});
b.initCallbacks({workerMessagePort:h,transferInputFrames:g,requestPort:k});spnInstances$$module$src$workers$old_spn_worker.set(a,b);if("realtimePerformanceStarted"===n)return await new Promise((q,r)=>{startPromize$$module$src$workers$old_spn_worker=q;setTimeout(()=>{if("function"===typeof startPromize$$module$src$workers$old_spn_worker)return r(Error("a call to start() timed out")),startPromize$$module$src$workers$old_spn_worker=void 0,-1},6E5)})};
expose$$module$node_modules$comlink$dist$esm$comlink_mjs({initialize:initialize$$module$src$workers$old_spn_worker,setPlayState:setPlayState$$module$src$workers$old_spn_worker},windowEndpoint$$module$node_modules$comlink$dist$esm$comlink_mjs(window.parent));var module$src$workers$old_spn_worker={};}).call(this);
//# sourceMappingURL=__compiled.old-spn.worker.js.map
`]));let spnWorker$$module$src$mains$old_spn_main,proxyPort$$module$src$mains$old_spn_main,UID$$module$src$mains$old_spn_main=0;class ScriptProcessorNodeMainThread$$module$src$mains$old_spn_main{constructor({audioContext:o,audioContextIsProvided:s,autoConnect:c}){this.autoConnect=c,this.audioContextIsProvided=s,this.audioContext=o,this.softwareBufferSize=this.hardwareBufferSize=this.outputsCount=this.inputsCount=this.sampleRate=this.csoundWorkerMain=this.currentPlayState=void 0,this.scriptProcessorNode=!0,logOldSpnMain$$module$src$logger("ScriptProcessorNodeMainThread was constructed")()}async terminateInstance(){if(window[`__csound_wasm_iframe_parent_${this.contextUid}Node`]&&(window[`__csound_wasm_iframe_parent_${this.contextUid}Node`].disconnect(),delete window[`__csound_wasm_iframe_parent_${this.contextUid}Node`]),this.audioContext){if(this.audioContext.state!=="closed")try{await this.audioContext.close()}catch{}delete this.audioContext}proxyPort$$module$src$mains$old_spn_main&&(proxyPort$$module$src$mains$old_spn_main[releaseProxy$$module$node_modules$comlink$dist$esm$comlink_mjs](),proxyPort$$module$src$mains$old_spn_main=void 0),this.iFrameElement&&this.iFrameElement.remove(),spnWorker$$module$src$mains$old_spn_main=void 0,UID$$module$src$mains$old_spn_main=0}async onPlayStateChange(o){if(this.currentPlayState!==o){switch(o){case"realtimePerformanceStarted":logOldSpnMain$$module$src$logger("event received: realtimePerformanceStarted")(),this.currentPlayState=o,await this.initialize(),await this.csoundWorkerMain.eventPromises.releaseStartPromise(),this.publicEvents.triggerRealtimePerformanceStarted(this.csoundWorkerMain);break;case"realtimePerformanceEnded":logOldSpnMain$$module$src$logger("event received: realtimePerformanceEnded")(),window[`__csound_wasm_iframe_parent_${this.contextUid}Node`]&&(window[`__csound_wasm_iframe_parent_${this.contextUid}Node`].disconnect(),delete window[`__csound_wasm_iframe_parent_${this.contextUid}Node`]);break;case"realtimePerformancePaused":this.csoundWorkerMain&&this.csoundWorkerMain.eventPromises&&(this.csoundWorkerMain.publicEvents&&this.csoundWorkerMain.publicEvents.triggerRealtimePerformancePaused(this),await this.csoundWorkerMain.eventPromises.releasePausePromise());break;case"realtimePerformanceResumed":this.csoundWorkerMain&&this.csoundWorkerMain.eventPromises&&(this.csoundWorkerMain.publicEvents&&this.csoundWorkerMain.publicEvents.triggerRealtimePerformanceResumed(this),await this.csoundWorkerMain.eventPromises.releaseResumePromise())}this.currentPlayState=o,!proxyPort$$module$src$mains$old_spn_main||o==="realtimePerformanceStarted"&&o==="renderStarted"||await proxyPort$$module$src$mains$old_spn_main.setPlayState({contextUid:this.contextUid,newPlayState:o})}}async initIframe(){if(window===void 0||window.document===void 0)throw new TypeError("Can only run SPN in Browser scope");const o=window.document;var s=[`<!doctype html>
<html lang="en">
<head>
<meta charset="UTF-8">
</head>
<body>`,`<script type="text/javascript" src="${$jscompDefaultExport$$module$dist$__compiled_old_spn_worker_inline()}"><\/script>`,"</body>"].join(`
`);s=new Blob([s],{type:"text/html"}),this.iFrameElement=document.createElement("iframe"),this.iFrameElement.src=URL.createObjectURL(s),this.iFrameElement.sandbox.add("allow-scripts","allow-same-origin"),this.iFrameElement.style.cssText="position:absolute;left:0;top:-999px;width:1px;height:1px;",s=new Promise(c=>{this.iFrameElement.onload=()=>{c()}}),o.body.append(this.iFrameElement);try{await s}catch(c){console.error(c)}spnWorker$$module$src$mains$old_spn_main=this.iFrameElement.contentWindow}async initialize(){if(!spnWorker$$module$src$mains$old_spn_main&&(await this.initIframe(),!spnWorker$$module$src$mains$old_spn_main)){console.error("SPN FATAL: Couldn't create iFrame");return}var o=`audioWorklet${UID$$module$src$mains$old_spn_main}`;this.contextUid=o,UID$$module$src$mains$old_spn_main+=1,proxyPort$$module$src$mains$old_spn_main||(proxyPort$$module$src$mains$old_spn_main=wrap$$module$node_modules$comlink$dist$esm$comlink_mjs(windowEndpoint$$module$node_modules$comlink$dist$esm$comlink_mjs(spnWorker$$module$src$mains$old_spn_main))),this.audioContext||(this.audioContextIsProvided&&console.error("fatal: the provided AudioContext was undefined"),this.audioContext=new(WebkitAudioContext$$module$src$utils())({sampleRate:this.sampleRate})),this.audioContext.state==="closed"&&(this.audioContextIsProvided&&console.error("fatal: the provided AudioContext was closed, falling back new AudioContext"),this.audioContext=new(WebkitAudioContext$$module$src$utils())({sampleRate:this.sampleRate})),this.audioContextIsProvided||this.sampleRate===this.audioContext.sampleRate||(this.audioContext=new(WebkitAudioContext$$module$src$utils())({sampleRate:this.sampleRate})),spnWorker$$module$src$mains$old_spn_main[o]=this.audioContext,window[`__csound_wasm_iframe_parent_${o}`]=this.audioContext;let s;this.isRequestingInput&&await new Promise(c=>{requestMicrophoneNode$$module$src$mains$io_utils(i=>{i&&(s=this.audioContext.createMediaStreamSource(i)),c()})}),logOldSpnMain$$module$src$logger("initializing proxyPort")(),await proxyPort$$module$src$mains$old_spn_main.initialize(transfer$$module$node_modules$comlink$dist$esm$comlink_mjs({contextUid:o,hardwareBufferSize:32768,softwareBufferSize:2048,inputsCount:this.inputsCount,outputsCount:this.outputsCount,sampleRate:this.sampleRate,audioInputPort:this.ipcMessagePorts.audioWorkerAudioInputPort,messagePort:this.ipcMessagePorts.workerMessagePort2,requestPort:this.ipcMessagePorts.audioWorkerFrameRequestPort,audioContextIsProvided:this.audioContextIsProvided,autoConnect:this.autoConnect,initialPlayState:this.currentPlayState},[this.ipcMessagePorts.audioWorkerAudioInputPort,this.ipcMessagePorts.workerMessagePort2,this.ipcMessagePorts.audioWorkerFrameRequestPort])),logOldSpnMain$$module$src$logger("done initializing proxyPort")(),(o=spnWorker$$module$src$mains$old_spn_main[`${o}Node`]||window[`__csound_wasm_iframe_parent_${o}Node`])&&s&&s.connect(o),this.publicEvents.triggerOnAudioNodeCreated(o),this.isRequestingMidi&&this.csoundWorkerMain&&this.csoundWorkerMain.handleMidiInput&&(logOldSpnMain$$module$src$logger("requesting for web-midi connection")(),requestMidi$$module$src$utils$request_midi({onMidiMessage:this.csoundWorkerMain.handleMidiInput.bind(this.csoundWorkerMain)}))}}var $jscompDefaultExport$$module$src$mains$old_spn_main=ScriptProcessorNodeMainThread$$module$src$mains$old_spn_main;const dlinit$$module$src$dlinit=(e,o,s,c)=>{if(o.exports.csoundModuleInit){var i=new WebAssembly.Global({value:"i32",mutable:!0},0),g=new WebAssembly.Global({value:"i32",mutable:!0},0),h=new WebAssembly.Global({value:"i32",mutable:!0},0);const $=new WebAssembly.Global({value:"i32",mutable:!0},0);let j=s.length;typeof o.exports.csoundModuleCreate=="function"&&(s.grow(1),i.value=j,s.set(j,o.exports.csoundModuleCreate),j+=1),typeof o.exports.csoundModuleInit=="function"&&(s.grow(1),g.value=j,s.set(j,o.exports.csoundModuleInit),j+=1),typeof o.exports.csoundModuleDestroy=="function"&&(s.grow(1),h.value=j,s.set(j,o.exports.csoundModuleDestroy),j+=1),typeof o.exports.csoundModuleErrorCodeToString=="function"&&(s.grow(1),$.value=j,s.set(j,o.exports.csoundModuleErrorCodeToString)),e.exports.csoundWasiLoadPlugin(c,i,g,h,$)}else o.exports.csound_opcode_init||o.exports.csound_fgen_init?(i=new WebAssembly.Global({value:"i32",mutable:!0},0),g=new WebAssembly.Global({value:"i32",mutable:!0},0),h=s.length,typeof o.exports.csound_opcode_init=="function"&&(i.value=h,s.grow(1),s.set(h,o.exports.csound_opcode_init),h+=1),typeof o.exports.csound_fgen_init=="function"&&(g.value=h,s.grow(1),s.set(h,o.exports.csound_fgen_init)),e.exports.csoundWasiLoadOpcodeLibrary(c,g,i)):console.error("Plugin doesn't export nececcary functions to quality as csound plugin.")};goog.global!==void 0&&(goog.global={});goog.global.BigInt||(goog.global.BigInt=BigInt===void 0?Number:BigInt);const WASI_ESUCCESS$$module$src$filesystem$constants=0,WASI_EBADF$$module$src$filesystem$constants=8,WASI_ENOSYS$$module$src$filesystem$constants=52,WASI_FILETYPE_REGULAR_FILE$$module$src$filesystem$constants=4,WASI_RIGHT_FD_DATASYNC$$module$src$filesystem$constants=goog.global.BigInt(1),WASI_RIGHT_FD_READ$$module$src$filesystem$constants=goog.global.BigInt(2),WASI_RIGHT_FD_SEEK$$module$src$filesystem$constants=goog.global.BigInt(4),WASI_RIGHT_FD_FDSTAT_SET_FLAGS$$module$src$filesystem$constants=goog.global.BigInt(8),WASI_RIGHT_FD_SYNC$$module$src$filesystem$constants=goog.global.BigInt(16),WASI_RIGHT_FD_TELL$$module$src$filesystem$constants=goog.global.BigInt(32),WASI_RIGHT_FD_WRITE$$module$src$filesystem$constants=goog.global.BigInt(64),WASI_RIGHT_FD_ADVISE$$module$src$filesystem$constants=goog.global.BigInt(128),WASI_RIGHT_FD_ALLOCATE$$module$src$filesystem$constants=goog.global.BigInt(256);goog.global.BigInt(512);goog.global.BigInt(1024);goog.global.BigInt(2048);goog.global.BigInt(4096);goog.global.BigInt(8192);const WASI_RIGHT_FD_READDIR$$module$src$filesystem$constants=goog.global.BigInt(16384);goog.global.BigInt(32768);goog.global.BigInt(65536);goog.global.BigInt(131072);goog.global.BigInt(262144);goog.global.BigInt(524288);goog.global.BigInt(1048576);const WASI_RIGHT_FD_FILESTAT_GET$$module$src$filesystem$constants=goog.global.BigInt(2097152),WASI_RIGHT_FD_FILESTAT_SET_SIZE$$module$src$filesystem$constants=goog.global.BigInt(4194304),WASI_RIGHT_FD_FILESTAT_SET_TIMES$$module$src$filesystem$constants=goog.global.BigInt(8388608);goog.global.BigInt(16777216);goog.global.BigInt(33554432);goog.global.BigInt(67108864);const WASI_RIGHT_POLL_FD_READWRITE$$module$src$filesystem$constants=goog.global.BigInt(134217728);goog.global.BigInt(268435456);const RIGHTS_REGULAR_FILE_BASE$$module$src$filesystem$constants=WASI_RIGHT_FD_DATASYNC$$module$src$filesystem$constants|WASI_RIGHT_FD_READ$$module$src$filesystem$constants|WASI_RIGHT_FD_SEEK$$module$src$filesystem$constants|WASI_RIGHT_FD_FDSTAT_SET_FLAGS$$module$src$filesystem$constants|WASI_RIGHT_FD_SYNC$$module$src$filesystem$constants|WASI_RIGHT_FD_TELL$$module$src$filesystem$constants|WASI_RIGHT_FD_WRITE$$module$src$filesystem$constants|WASI_RIGHT_FD_ADVISE$$module$src$filesystem$constants|WASI_RIGHT_FD_ALLOCATE$$module$src$filesystem$constants|WASI_RIGHT_FD_FILESTAT_GET$$module$src$filesystem$constants|WASI_RIGHT_FD_FILESTAT_SET_SIZE$$module$src$filesystem$constants|WASI_RIGHT_FD_FILESTAT_SET_TIMES$$module$src$filesystem$constants|WASI_RIGHT_POLL_FD_READWRITE$$module$src$filesystem$constants,RIGHTS_REGULAR_FILE_INHERITING$$module$src$filesystem$constants=goog.global.BigInt(0);goog.global.BigInt(0);const WASI_CLOCK_REALTIME$$module$src$filesystem$constants=0,WASI_CLOCK_MONOTONIC$$module$src$filesystem$constants=1,WASI_CLOCK_PROCESS_CPUTIME_ID$$module$src$filesystem$constants=2,WASI_CLOCK_THREAD_CPUTIME_ID$$module$src$filesystem$constants=3,WASI_PREOPENTYPE_DIR$$module$src$filesystem$constants=0,WASI_WHENCE_SET$$module$src$filesystem$constants=0,WASI_WHENCE_CUR$$module$src$filesystem$constants=1,WASI_WHENCE_END$$module$src$filesystem$constants=2;goog.debug={};function module$contents$goog$debug$Error_DebugError(e,o){if(Error.captureStackTrace)Error.captureStackTrace(this,module$contents$goog$debug$Error_DebugError);else{const s=Error().stack;s&&(this.stack=s)}e&&(this.message=String(e)),o!==void 0&&(this.cause=o),this.reportErrorToServer=!0}goog.inherits(module$contents$goog$debug$Error_DebugError,Error);module$contents$goog$debug$Error_DebugError.prototype.name="CustomError";goog.debug.Error=module$contents$goog$debug$Error_DebugError;goog.dom={};goog.dom.NodeType={ELEMENT:1,ATTRIBUTE:2,TEXT:3,CDATA_SECTION:4,ENTITY_REFERENCE:5,ENTITY:6,PROCESSING_INSTRUCTION:7,COMMENT:8,DOCUMENT:9,DOCUMENT_TYPE:10,DOCUMENT_FRAGMENT:11,NOTATION:12};goog.asserts={};goog.asserts.ENABLE_ASSERTS=goog.DEBUG;function module$contents$goog$asserts_AssertionError(e,o){module$contents$goog$debug$Error_DebugError.call(this,module$contents$goog$asserts_subs(e,o)),this.messagePattern=e}goog.inherits(module$contents$goog$asserts_AssertionError,module$contents$goog$debug$Error_DebugError);goog.asserts.AssertionError=module$contents$goog$asserts_AssertionError;module$contents$goog$asserts_AssertionError.prototype.name="AssertionError";goog.asserts.DEFAULT_ERROR_HANDLER=function(e){throw e};let module$contents$goog$asserts_errorHandler_=goog.asserts.DEFAULT_ERROR_HANDLER;function module$contents$goog$asserts_subs(e,o){e=e.split("%s");let s="";const c=e.length-1;for(let i=0;i<c;i++)s+=e[i]+(i<o.length?o[i]:"%s");return s+e[c]}function module$contents$goog$asserts_doAssertFailure(e,o,s,c){let i="Assertion failed",g;s?(i+=": "+s,g=c):e&&(i+=": "+e,g=o),e=new module$contents$goog$asserts_AssertionError(""+i,g||[]),module$contents$goog$asserts_errorHandler_(e)}goog.asserts.setErrorHandler=function(e){goog.asserts.ENABLE_ASSERTS&&(module$contents$goog$asserts_errorHandler_=e)};goog.asserts.assert=function(e,o,s){return goog.asserts.ENABLE_ASSERTS&&!e&&module$contents$goog$asserts_doAssertFailure("",null,o,Array.prototype.slice.call(arguments,2)),e};goog.asserts.assertExists=function(e,o,s){return goog.asserts.ENABLE_ASSERTS&&e==null&&module$contents$goog$asserts_doAssertFailure("Expected to exist: %s.",[e],o,Array.prototype.slice.call(arguments,2)),e};goog.asserts.fail=function(e,o){goog.asserts.ENABLE_ASSERTS&&module$contents$goog$asserts_errorHandler_(new module$contents$goog$asserts_AssertionError("Failure"+(e?": "+e:""),Array.prototype.slice.call(arguments,1)))};goog.asserts.assertNumber=function(e,o,s){return goog.asserts.ENABLE_ASSERTS&&typeof e!="number"&&module$contents$goog$asserts_doAssertFailure("Expected number but got %s: %s.",[goog.typeOf(e),e],o,Array.prototype.slice.call(arguments,2)),e};goog.asserts.assertString=function(e,o,s){return goog.asserts.ENABLE_ASSERTS&&typeof e!="string"&&module$contents$goog$asserts_doAssertFailure("Expected string but got %s: %s.",[goog.typeOf(e),e],o,Array.prototype.slice.call(arguments,2)),e};goog.asserts.assertFunction=function(e,o,s){return goog.asserts.ENABLE_ASSERTS&&typeof e!="function"&&module$contents$goog$asserts_doAssertFailure("Expected function but got %s: %s.",[goog.typeOf(e),e],o,Array.prototype.slice.call(arguments,2)),e};goog.asserts.assertObject=function(e,o,s){return goog.asserts.ENABLE_ASSERTS&&!goog.isObject(e)&&module$contents$goog$asserts_doAssertFailure("Expected object but got %s: %s.",[goog.typeOf(e),e],o,Array.prototype.slice.call(arguments,2)),e};goog.asserts.assertArray=function(e,o,s){return goog.asserts.ENABLE_ASSERTS&&!Array.isArray(e)&&module$contents$goog$asserts_doAssertFailure("Expected array but got %s: %s.",[goog.typeOf(e),e],o,Array.prototype.slice.call(arguments,2)),e};goog.asserts.assertBoolean=function(e,o,s){return goog.asserts.ENABLE_ASSERTS&&typeof e!="boolean"&&module$contents$goog$asserts_doAssertFailure("Expected boolean but got %s: %s.",[goog.typeOf(e),e],o,Array.prototype.slice.call(arguments,2)),e};goog.asserts.assertElement=function(e,o,s){return!goog.asserts.ENABLE_ASSERTS||goog.isObject(e)&&e.nodeType==goog.dom.NodeType.ELEMENT||module$contents$goog$asserts_doAssertFailure("Expected Element but got %s: %s.",[goog.typeOf(e),e],o,Array.prototype.slice.call(arguments,2)),e};goog.asserts.assertInstanceof=function(e,o,s,c){return!goog.asserts.ENABLE_ASSERTS||e instanceof o||module$contents$goog$asserts_doAssertFailure("Expected instanceof %s but got %s.",[module$contents$goog$asserts_getType(o),module$contents$goog$asserts_getType(e)],s,Array.prototype.slice.call(arguments,3)),e};goog.asserts.assertFinite=function(e,o,s){return!goog.asserts.ENABLE_ASSERTS||typeof e=="number"&&isFinite(e)||module$contents$goog$asserts_doAssertFailure("Expected %s to be a finite number but it is not.",[e],o,Array.prototype.slice.call(arguments,2)),e};function module$contents$goog$asserts_getType(e){return e instanceof Function?e.displayName||e.name||"unknown type name":e instanceof Object?e.constructor.displayName||e.constructor.name||Object.prototype.toString.call(e):e===null?"null":typeof e}goog.array={};goog.NATIVE_ARRAY_PROTOTYPES=goog.TRUSTED_SITE;const module$contents$goog$array_ASSUME_NATIVE_FUNCTIONS=2012<goog.FEATURESET_YEAR;goog.array.ASSUME_NATIVE_FUNCTIONS=module$contents$goog$array_ASSUME_NATIVE_FUNCTIONS;function module$contents$goog$array_peek(e){return e[e.length-1]}goog.array.peek=module$contents$goog$array_peek;goog.array.last=module$contents$goog$array_peek;const module$contents$goog$array_indexOf=goog.NATIVE_ARRAY_PROTOTYPES&&(module$contents$goog$array_ASSUME_NATIVE_FUNCTIONS||Array.prototype.indexOf)?function(e,o,s){return goog.asserts.assert(e.length!=null),Array.prototype.indexOf.call(e,o,s)}:function(e,o,s){if(s=s==null?0:0>s?Math.max(0,e.length+s):s,typeof e=="string")return typeof o!="string"||o.length!=1?-1:e.indexOf(o,s);for(;s<e.length;s++)if(s in e&&e[s]===o)return s;return-1};goog.array.indexOf=module$contents$goog$array_indexOf;const module$contents$goog$array_lastIndexOf=goog.NATIVE_ARRAY_PROTOTYPES&&(module$contents$goog$array_ASSUME_NATIVE_FUNCTIONS||Array.prototype.lastIndexOf)?function(e,o,s){return goog.asserts.assert(e.length!=null),Array.prototype.lastIndexOf.call(e,o,s??e.length-1)}:function(e,o,s){if(s=s??e.length-1,0>s&&(s=Math.max(0,e.length+s)),typeof e=="string")return typeof o!="string"||o.length!=1?-1:e.lastIndexOf(o,s);for(;0<=s;s--)if(s in e&&e[s]===o)return s;return-1};goog.array.lastIndexOf=module$contents$goog$array_lastIndexOf;const module$contents$goog$array_forEach=goog.NATIVE_ARRAY_PROTOTYPES&&(module$contents$goog$array_ASSUME_NATIVE_FUNCTIONS||Array.prototype.forEach)?function(e,o,s){goog.asserts.assert(e.length!=null),Array.prototype.forEach.call(e,o,s)}:function(e,o,s){const c=e.length,i=typeof e=="string"?e.split(""):e;for(let g=0;g<c;g++)g in i&&o.call(s,i[g],g,e)};goog.array.forEach=module$contents$goog$array_forEach;function module$contents$goog$array_forEachRight(e,o,s){var c=e.length;const i=typeof e=="string"?e.split(""):e;for(--c;0<=c;--c)c in i&&o.call(s,i[c],c,e)}goog.array.forEachRight=module$contents$goog$array_forEachRight;const module$contents$goog$array_filter=goog.NATIVE_ARRAY_PROTOTYPES&&(module$contents$goog$array_ASSUME_NATIVE_FUNCTIONS||Array.prototype.filter)?function(e,o,s){return goog.asserts.assert(e.length!=null),Array.prototype.filter.call(e,o,s)}:function(e,o,s){const c=e.length,i=[];let g=0;const h=typeof e=="string"?e.split(""):e;for(let $=0;$<c;$++)if($ in h){const j=h[$];o.call(s,j,$,e)&&(i[g++]=j)}return i};goog.array.filter=module$contents$goog$array_filter;const module$contents$goog$array_map=goog.NATIVE_ARRAY_PROTOTYPES&&(module$contents$goog$array_ASSUME_NATIVE_FUNCTIONS||Array.prototype.map)?function(e,o,s){return goog.asserts.assert(e.length!=null),Array.prototype.map.call(e,o,s)}:function(e,o,s){const c=e.length,i=Array(c),g=typeof e=="string"?e.split(""):e;for(let h=0;h<c;h++)h in g&&(i[h]=o.call(s,g[h],h,e));return i};goog.array.map=module$contents$goog$array_map;const module$contents$goog$array_reduce=goog.NATIVE_ARRAY_PROTOTYPES&&(module$contents$goog$array_ASSUME_NATIVE_FUNCTIONS||Array.prototype.reduce)?function(e,o,s,c){return goog.asserts.assert(e.length!=null),c&&(o=goog.bind(o,c)),Array.prototype.reduce.call(e,o,s)}:function(e,o,s,c){let i=s;return module$contents$goog$array_forEach(e,function(g,h){i=o.call(c,i,g,h,e)}),i};goog.array.reduce=module$contents$goog$array_reduce;const module$contents$goog$array_reduceRight=goog.NATIVE_ARRAY_PROTOTYPES&&(module$contents$goog$array_ASSUME_NATIVE_FUNCTIONS||Array.prototype.reduceRight)?function(e,o,s,c){return goog.asserts.assert(e.length!=null),goog.asserts.assert(o!=null),c&&(o=goog.bind(o,c)),Array.prototype.reduceRight.call(e,o,s)}:function(e,o,s,c){let i=s;return module$contents$goog$array_forEachRight(e,function(g,h){i=o.call(c,i,g,h,e)}),i};goog.array.reduceRight=module$contents$goog$array_reduceRight;const module$contents$goog$array_some=goog.NATIVE_ARRAY_PROTOTYPES&&(module$contents$goog$array_ASSUME_NATIVE_FUNCTIONS||Array.prototype.some)?function(e,o,s){return goog.asserts.assert(e.length!=null),Array.prototype.some.call(e,o,s)}:function(e,o,s){const c=e.length,i=typeof e=="string"?e.split(""):e;for(let g=0;g<c;g++)if(g in i&&o.call(s,i[g],g,e))return!0;return!1};goog.array.some=module$contents$goog$array_some;const module$contents$goog$array_every=goog.NATIVE_ARRAY_PROTOTYPES&&(module$contents$goog$array_ASSUME_NATIVE_FUNCTIONS||Array.prototype.every)?function(e,o,s){return goog.asserts.assert(e.length!=null),Array.prototype.every.call(e,o,s)}:function(e,o,s){const c=e.length,i=typeof e=="string"?e.split(""):e;for(let g=0;g<c;g++)if(g in i&&!o.call(s,i[g],g,e))return!1;return!0};goog.array.every=module$contents$goog$array_every;function module$contents$goog$array_count(e,o,s){let c=0;return module$contents$goog$array_forEach(e,function(i,g,h){o.call(s,i,g,h)&&++c},s),c}goog.array.count=module$contents$goog$array_count;function module$contents$goog$array_find(e,o,s){return o=module$contents$goog$array_findIndex(e,o,s),0>o?null:typeof e=="string"?e.charAt(o):e[o]}goog.array.find=module$contents$goog$array_find;function module$contents$goog$array_findIndex(e,o,s){const c=e.length,i=typeof e=="string"?e.split(""):e;for(let g=0;g<c;g++)if(g in i&&o.call(s,i[g],g,e))return g;return-1}goog.array.findIndex=module$contents$goog$array_findIndex;function module$contents$goog$array_findRight(e,o,s){return o=module$contents$goog$array_findIndexRight(e,o,s),0>o?null:typeof e=="string"?e.charAt(o):e[o]}goog.array.findRight=module$contents$goog$array_findRight;function module$contents$goog$array_findIndexRight(e,o,s){var c=e.length;const i=typeof e=="string"?e.split(""):e;for(--c;0<=c;c--)if(c in i&&o.call(s,i[c],c,e))return c;return-1}goog.array.findIndexRight=module$contents$goog$array_findIndexRight;function module$contents$goog$array_contains(e,o){return 0<=module$contents$goog$array_indexOf(e,o)}goog.array.contains=module$contents$goog$array_contains;function module$contents$goog$array_isEmpty(e){return e.length==0}goog.array.isEmpty=module$contents$goog$array_isEmpty;function module$contents$goog$array_clear(e){if(!Array.isArray(e))for(let o=e.length-1;0<=o;o--)delete e[o];e.length=0}goog.array.clear=module$contents$goog$array_clear;function module$contents$goog$array_insert(e,o){module$contents$goog$array_contains(e,o)||e.push(o)}goog.array.insert=module$contents$goog$array_insert;function module$contents$goog$array_insertAt(e,o,s){module$contents$goog$array_splice(e,s,0,o)}goog.array.insertAt=module$contents$goog$array_insertAt;function module$contents$goog$array_insertArrayAt(e,o,s){goog.partial(module$contents$goog$array_splice,e,s,0).apply(null,o)}goog.array.insertArrayAt=module$contents$goog$array_insertArrayAt;function module$contents$goog$array_insertBefore(e,o,s){let c;arguments.length==2||0>(c=module$contents$goog$array_indexOf(e,s))?e.push(o):module$contents$goog$array_insertAt(e,o,c)}goog.array.insertBefore=module$contents$goog$array_insertBefore;function module$contents$goog$array_remove(e,o){o=module$contents$goog$array_indexOf(e,o);let s;return(s=0<=o)&&module$contents$goog$array_removeAt(e,o),s}goog.array.remove=module$contents$goog$array_remove;function module$contents$goog$array_removeLast(e,o){return o=module$contents$goog$array_lastIndexOf(e,o),0<=o?(module$contents$goog$array_removeAt(e,o),!0):!1}goog.array.removeLast=module$contents$goog$array_removeLast;function module$contents$goog$array_removeAt(e,o){return goog.asserts.assert(e.length!=null),Array.prototype.splice.call(e,o,1).length==1}goog.array.removeAt=module$contents$goog$array_removeAt;function module$contents$goog$array_removeIf(e,o,s){return o=module$contents$goog$array_findIndex(e,o,s),0<=o?(module$contents$goog$array_removeAt(e,o),!0):!1}goog.array.removeIf=module$contents$goog$array_removeIf;function module$contents$goog$array_removeAllIf(e,o,s){let c=0;return module$contents$goog$array_forEachRight(e,function(i,g){o.call(s,i,g,e)&&module$contents$goog$array_removeAt(e,g)&&c++}),c}goog.array.removeAllIf=module$contents$goog$array_removeAllIf;function module$contents$goog$array_concat(e){return Array.prototype.concat.apply([],arguments)}goog.array.concat=module$contents$goog$array_concat;function module$contents$goog$array_join(e){return Array.prototype.concat.apply([],arguments)}goog.array.join=module$contents$goog$array_join;function module$contents$goog$array_toArray(e){const o=e.length;if(0<o){const s=Array(o);for(let c=0;c<o;c++)s[c]=e[c];return s}return[]}goog.array.toArray=module$contents$goog$array_toArray;goog.array.clone=module$contents$goog$array_toArray;function module$contents$goog$array_extend(e,o){for(let s=1;s<arguments.length;s++){const c=arguments[s];if(goog.isArrayLike(c)){const i=e.length||0,g=c.length||0;e.length=i+g;for(let h=0;h<g;h++)e[i+h]=c[h]}else e.push(c)}}goog.array.extend=module$contents$goog$array_extend;function module$contents$goog$array_splice(e,o,s,c){return goog.asserts.assert(e.length!=null),Array.prototype.splice.apply(e,module$contents$goog$array_slice(arguments,1))}goog.array.splice=module$contents$goog$array_splice;function module$contents$goog$array_slice(e,o,s){return goog.asserts.assert(e.length!=null),2>=arguments.length?Array.prototype.slice.call(e,o):Array.prototype.slice.call(e,o,s)}goog.array.slice=module$contents$goog$array_slice;function module$contents$goog$array_removeDuplicates(e,o,s){o=o||e;var c=function(h){return goog.isObject(h)?"o"+goog.getUid(h):(typeof h).charAt(0)+h};s=s||c;let i=c=0;const g={};for(;i<e.length;){const h=e[i++],$=s(h);Object.prototype.hasOwnProperty.call(g,$)||(g[$]=!0,o[c++]=h)}o.length=c}goog.array.removeDuplicates=module$contents$goog$array_removeDuplicates;function module$contents$goog$array_binarySearch(e,o,s){return module$contents$goog$array_binarySearch_(e,s||module$contents$goog$array_defaultCompare,!1,o)}goog.array.binarySearch=module$contents$goog$array_binarySearch;function module$contents$goog$array_binarySelect(e,o,s){return module$contents$goog$array_binarySearch_(e,o,!0,void 0,s)}goog.array.binarySelect=module$contents$goog$array_binarySelect;function module$contents$goog$array_binarySearch_(e,o,s,c,i){let g=0,h=e.length,$;for(;g<h;){const j=g+(h-g>>>1);let _;_=s?o.call(i,e[j],j,e):o(c,e[j]),0<_?g=j+1:(h=j,$=!_)}return $?g:-g-1}function module$contents$goog$array_sort(e,o){e.sort(o||module$contents$goog$array_defaultCompare)}goog.array.sort=module$contents$goog$array_sort;function module$contents$goog$array_stableSort(e,o){const s=Array(e.length);for(let i=0;i<e.length;i++)s[i]={index:i,value:e[i]};const c=o||module$contents$goog$array_defaultCompare;for(module$contents$goog$array_sort(s,function(i,g){return c(i.value,g.value)||i.index-g.index}),o=0;o<e.length;o++)e[o]=s[o].value}goog.array.stableSort=module$contents$goog$array_stableSort;function module$contents$goog$array_sortByKey(e,o,s){const c=s||module$contents$goog$array_defaultCompare;module$contents$goog$array_sort(e,function(i,g){return c(o(i),o(g))})}goog.array.sortByKey=module$contents$goog$array_sortByKey;function module$contents$goog$array_sortObjectsByKey(e,o,s){module$contents$goog$array_sortByKey(e,function(c){return c[o]},s)}goog.array.sortObjectsByKey=module$contents$goog$array_sortObjectsByKey;function module$contents$goog$array_isSorted(e,o,s){o=o||module$contents$goog$array_defaultCompare;for(let c=1;c<e.length;c++){const i=o(e[c-1],e[c]);if(0<i||i==0&&s)return!1}return!0}goog.array.isSorted=module$contents$goog$array_isSorted;function module$contents$goog$array_equals(e,o,s){if(!goog.isArrayLike(e)||!goog.isArrayLike(o)||e.length!=o.length)return!1;const c=e.length;s=s||module$contents$goog$array_defaultCompareEquality;for(let i=0;i<c;i++)if(!s(e[i],o[i]))return!1;return!0}goog.array.equals=module$contents$goog$array_equals;function module$contents$goog$array_compare3(e,o,s){s=s||module$contents$goog$array_defaultCompare;const c=Math.min(e.length,o.length);for(let i=0;i<c;i++){const g=s(e[i],o[i]);if(g!=0)return g}return module$contents$goog$array_defaultCompare(e.length,o.length)}goog.array.compare3=module$contents$goog$array_compare3;function module$contents$goog$array_defaultCompare(e,o){return e>o?1:e<o?-1:0}goog.array.defaultCompare=module$contents$goog$array_defaultCompare;function module$contents$goog$array_inverseDefaultCompare(e,o){return-module$contents$goog$array_defaultCompare(e,o)}goog.array.inverseDefaultCompare=module$contents$goog$array_inverseDefaultCompare;function module$contents$goog$array_defaultCompareEquality(e,o){return e===o}goog.array.defaultCompareEquality=module$contents$goog$array_defaultCompareEquality;function module$contents$goog$array_binaryInsert(e,o,s){return s=module$contents$goog$array_binarySearch(e,o,s),0>s?(module$contents$goog$array_insertAt(e,o,-(s+1)),!0):!1}goog.array.binaryInsert=module$contents$goog$array_binaryInsert;function module$contents$goog$array_binaryRemove(e,o,s){return o=module$contents$goog$array_binarySearch(e,o,s),0<=o?module$contents$goog$array_removeAt(e,o):!1}goog.array.binaryRemove=module$contents$goog$array_binaryRemove;function module$contents$goog$array_bucket(e,o,s){const c={};for(let i=0;i<e.length;i++){const g=e[i],h=o.call(s,g,i,e);h!==void 0&&(c[h]||(c[h]=[])).push(g)}return c}goog.array.bucket=module$contents$goog$array_bucket;function module$contents$goog$array_bucketToMap(e,o){const s=new Map;for(let c=0;c<e.length;c++){const i=e[c],g=o(i,c,e);if(g!==void 0){let h=s.get(g);h||(h=[],s.set(g,h)),h.push(i)}}return s}goog.array.bucketToMap=module$contents$goog$array_bucketToMap;function module$contents$goog$array_toObject(e,o,s){const c={};return module$contents$goog$array_forEach(e,function(i,g){c[o.call(s,i,g,e)]=i}),c}goog.array.toObject=module$contents$goog$array_toObject;function module$contents$goog$array_toMap(e,o){const s=new Map;for(let c=0;c<e.length;c++){const i=e[c];s.set(o(i,c,e),i)}return s}goog.array.toMap=module$contents$goog$array_toMap;function module$contents$goog$array_range(e,o,s){const c=[];let i=0,g=e;if(s=s||1,o!==void 0&&(i=e,g=o),0>s*(g-i))return[];if(0<s)for(e=i;e<g;e+=s)c.push(e);else for(e=i;e>g;e+=s)c.push(e);return c}goog.array.range=module$contents$goog$array_range;function module$contents$goog$array_repeat(e,o){const s=[];for(let c=0;c<o;c++)s[c]=e;return s}goog.array.repeat=module$contents$goog$array_repeat;function module$contents$goog$array_flatten(e){const o=[];for(let c=0;c<arguments.length;c++){const i=arguments[c];if(Array.isArray(i))for(let g=0;g<i.length;g+=8192){var s=module$contents$goog$array_slice(i,g,g+8192);s=module$contents$goog$array_flatten.apply(null,s);for(let h=0;h<s.length;h++)o.push(s[h])}else o.push(i)}return o}goog.array.flatten=module$contents$goog$array_flatten;function module$contents$goog$array_rotate(e,o){return goog.asserts.assert(e.length!=null),e.length&&(o%=e.length,0<o?Array.prototype.unshift.apply(e,e.splice(-o,o)):0>o&&Array.prototype.push.apply(e,e.splice(0,-o))),e}goog.array.rotate=module$contents$goog$array_rotate;function module$contents$goog$array_moveItem(e,o,s){goog.asserts.assert(0<=o&&o<e.length),goog.asserts.assert(0<=s&&s<e.length),o=Array.prototype.splice.call(e,o,1),Array.prototype.splice.call(e,s,0,o[0])}goog.array.moveItem=module$contents$goog$array_moveItem;function module$contents$goog$array_zip(e){if(!arguments.length)return[];const o=[];let s=arguments[0].length;for(var c=1;c<arguments.length;c++)arguments[c].length<s&&(s=arguments[c].length);for(c=0;c<s;c++){const i=[];for(let g=0;g<arguments.length;g++)i.push(arguments[g][c]);o.push(i)}return o}goog.array.zip=module$contents$goog$array_zip;function module$contents$goog$array_shuffle(e,o){o=o||Math.random;for(let s=e.length-1;0<s;s--){const c=Math.floor(o()*(s+1)),i=e[s];e[s]=e[c],e[c]=i}}goog.array.shuffle=module$contents$goog$array_shuffle;function module$contents$goog$array_copyByIndex(e,o){const s=[];return module$contents$goog$array_forEach(o,function(c){s.push(e[c])}),s}goog.array.copyByIndex=module$contents$goog$array_copyByIndex;function module$contents$goog$array_concatMap(e,o,s){return module$contents$goog$array_concat.apply([],module$contents$goog$array_map(e,o,s))}goog.array.concatMap=module$contents$goog$array_concatMap;goog.dom.asserts={};goog.dom.asserts.assertIsLocation=function(e){if(goog.asserts.ENABLE_ASSERTS){var o=goog.dom.asserts.getWindow_(e);o&&(!e||!(e instanceof o.Location)&&e instanceof o.Element)&&goog.asserts.fail("Argument is not a Location (or a non-Element mock); got: %s",goog.dom.asserts.debugStringForType_(e))}return e};goog.dom.asserts.assertIsElementType_=function(e,o){if(goog.asserts.ENABLE_ASSERTS){var s=goog.dom.asserts.getWindow_(e);s&&typeof s[o]<"u"&&(e&&(e instanceof s[o]||!(e instanceof s.Location||e instanceof s.Element))||goog.asserts.fail("Argument is not a %s (or a non-Element, non-Location mock); got: %s",o,goog.dom.asserts.debugStringForType_(e)))}return e};goog.dom.asserts.assertIsHTMLAnchorElement=function(e){return goog.dom.asserts.assertIsElementType_(e,"HTMLAnchorElement")};goog.dom.asserts.assertIsHTMLButtonElement=function(e){return goog.dom.asserts.assertIsElementType_(e,"HTMLButtonElement")};goog.dom.asserts.assertIsHTMLLinkElement=function(e){return goog.dom.asserts.assertIsElementType_(e,"HTMLLinkElement")};goog.dom.asserts.assertIsHTMLImageElement=function(e){return goog.dom.asserts.assertIsElementType_(e,"HTMLImageElement")};goog.dom.asserts.assertIsHTMLAudioElement=function(e){return goog.dom.asserts.assertIsElementType_(e,"HTMLAudioElement")};goog.dom.asserts.assertIsHTMLVideoElement=function(e){return goog.dom.asserts.assertIsElementType_(e,"HTMLVideoElement")};goog.dom.asserts.assertIsHTMLInputElement=function(e){return goog.dom.asserts.assertIsElementType_(e,"HTMLInputElement")};goog.dom.asserts.assertIsHTMLTextAreaElement=function(e){return goog.dom.asserts.assertIsElementType_(e,"HTMLTextAreaElement")};goog.dom.asserts.assertIsHTMLCanvasElement=function(e){return goog.dom.asserts.assertIsElementType_(e,"HTMLCanvasElement")};goog.dom.asserts.assertIsHTMLEmbedElement=function(e){return goog.dom.asserts.assertIsElementType_(e,"HTMLEmbedElement")};goog.dom.asserts.assertIsHTMLFormElement=function(e){return goog.dom.asserts.assertIsElementType_(e,"HTMLFormElement")};goog.dom.asserts.assertIsHTMLFrameElement=function(e){return goog.dom.asserts.assertIsElementType_(e,"HTMLFrameElement")};goog.dom.asserts.assertIsHTMLIFrameElement=function(e){return goog.dom.asserts.assertIsElementType_(e,"HTMLIFrameElement")};goog.dom.asserts.assertIsHTMLObjectElement=function(e){return goog.dom.asserts.assertIsElementType_(e,"HTMLObjectElement")};goog.dom.asserts.assertIsHTMLScriptElement=function(e){return goog.dom.asserts.assertIsElementType_(e,"HTMLScriptElement")};goog.dom.asserts.debugStringForType_=function(e){if(goog.isObject(e))try{return e.constructor.displayName||e.constructor.name||Object.prototype.toString.call(e)}catch{return"<object could not be stringified>"}else return e===void 0?"undefined":e===null?"null":typeof e};goog.dom.asserts.getWindow_=function(e){try{var o=e&&e.ownerDocument,s=o&&(o.defaultView||o.parentWindow);if(s=s||goog.global,s.Element&&s.Location)return s}catch{}return null};goog.functions={};goog.functions.constant=function(e){return function(){return e}};goog.functions.FALSE=function(){return!1};goog.functions.TRUE=function(){return!0};goog.functions.NULL=function(){return null};goog.functions.UNDEFINED=function(){};goog.functions.EMPTY=goog.functions.UNDEFINED;goog.functions.identity=function(e,o){return e};goog.functions.error=function(e){return function(){throw Error(e)}};goog.functions.fail=function(e){return function(){throw e}};goog.functions.lock=function(e,o){return o=o||0,function(){return e.apply(this,Array.prototype.slice.call(arguments,0,o))}};goog.functions.nth=function(e){return function(){return arguments[e]}};goog.functions.partialRight=function(e,o){const s=Array.prototype.slice.call(arguments,1);return function(){let c=this;c===goog.global&&(c=void 0);const i=Array.prototype.slice.call(arguments);return i.push.apply(i,s),e.apply(c,i)}};goog.functions.withReturnValue=function(e,o){return goog.functions.sequence(e,goog.functions.constant(o))};goog.functions.equalTo=function(e,o){return function(s){return o?e==s:e===s}};goog.functions.compose=function(e,o){const s=arguments,c=s.length;return function(){let i;c&&(i=s[c-1].apply(this,arguments));for(let g=c-2;0<=g;g--)i=s[g].call(this,i);return i}};goog.functions.sequence=function(e){const o=arguments,s=o.length;return function(){let c;for(let i=0;i<s;i++)c=o[i].apply(this,arguments);return c}};goog.functions.and=function(e){const o=arguments,s=o.length;return function(){for(let c=0;c<s;c++)if(!o[c].apply(this,arguments))return!1;return!0}};goog.functions.or=function(e){const o=arguments,s=o.length;return function(){for(let c=0;c<s;c++)if(o[c].apply(this,arguments))return!0;return!1}};goog.functions.not=function(e){return function(){return!e.apply(this,arguments)}};goog.functions.create=function(e,o){var s=function(){};return s.prototype=e.prototype,s=new s,e.apply(s,Array.prototype.slice.call(arguments,1)),s};goog.functions.CACHE_RETURN_VALUE=!0;goog.functions.cacheReturnValue=function(e){let o=!1,s;return function(){return goog.functions.CACHE_RETURN_VALUE?(o||(s=e(),o=!0),s):e()}};goog.functions.once=function(e){let o=e;return function(){if(o){const s=o;o=null,s()}}};goog.functions.debounce=function(e,o,s){let c=0;return function(i){goog.global.clearTimeout(c);const g=arguments;c=goog.global.setTimeout(function(){e.apply(s,g)},o)}};goog.functions.throttle=function(e,o,s){let c=0,i=!1,g=[];const h=function(){c=0,i&&(i=!1,$())},$=function(){c=goog.global.setTimeout(h,o);let j=g;g=[],e.apply(s,j)};return function(j){g=arguments,c?i=!0:$()}};goog.functions.rateLimit=function(e,o,s){let c=0;const i=function(){c=0};return function(g){c||(c=goog.global.setTimeout(i,o),e.apply(s,arguments))}};goog.functions.isFunction=e=>typeof e=="function";goog.string={};goog.string.TypedString=function(){};goog.string.Const=function(e,o){this.stringConstValueWithSecurityContract__googStringSecurityPrivate_=e===goog.string.Const.GOOG_STRING_CONSTRUCTOR_TOKEN_PRIVATE_&&o||"",this.STRING_CONST_TYPE_MARKER__GOOG_STRING_SECURITY_PRIVATE_=goog.string.Const.TYPE_MARKER_};goog.string.Const.prototype.implementsGoogStringTypedString=!0;goog.string.Const.prototype.getTypedStringValue=function(){return this.stringConstValueWithSecurityContract__googStringSecurityPrivate_};goog.DEBUG&&(goog.string.Const.prototype.toString=function(){return"Const{"+this.stringConstValueWithSecurityContract__googStringSecurityPrivate_+"}"});goog.string.Const.unwrap=function(e){return e instanceof goog.string.Const&&e.constructor===goog.string.Const&&e.STRING_CONST_TYPE_MARKER__GOOG_STRING_SECURITY_PRIVATE_===goog.string.Const.TYPE_MARKER_?e.stringConstValueWithSecurityContract__googStringSecurityPrivate_:(goog.asserts.fail("expected object of type Const, got '"+e+"'"),"type_error:Const")};goog.string.Const.from=function(e){return new goog.string.Const(goog.string.Const.GOOG_STRING_CONSTRUCTOR_TOKEN_PRIVATE_,e)};goog.string.Const.TYPE_MARKER_={};goog.string.Const.GOOG_STRING_CONSTRUCTOR_TOKEN_PRIVATE_={};goog.string.Const.EMPTY=goog.string.Const.from("");goog.html={};goog.html.trustedtypes={};goog.html.trustedtypes.POLICY_NAME=goog.TRUSTED_TYPES_POLICY_NAME?goog.TRUSTED_TYPES_POLICY_NAME+"#html":"";goog.html.trustedtypes.getPolicyPrivateDoNotAccessOrElse=function(){return goog.html.trustedtypes.POLICY_NAME?(goog.html.trustedtypes.cachedPolicy_===void 0&&(goog.html.trustedtypes.cachedPolicy_=goog.createTrustedTypesPolicy(goog.html.trustedtypes.POLICY_NAME)),goog.html.trustedtypes.cachedPolicy_):null};const module$contents$goog$html$SafeScript_CONSTRUCTOR_TOKEN_PRIVATE={};class module$contents$goog$html$SafeScript_SafeScript{constructor(o,s){this.privateDoNotAccessOrElseSafeScriptWrappedValue_=s===module$contents$goog$html$SafeScript_CONSTRUCTOR_TOKEN_PRIVATE?o:"",this.implementsGoogStringTypedString=!0}toString(){return this.privateDoNotAccessOrElseSafeScriptWrappedValue_.toString()}static fromConstant(o){return o=goog.string.Const.unwrap(o),o.length===0?module$contents$goog$html$SafeScript_SafeScript.EMPTY:module$contents$goog$html$SafeScript_SafeScript.createSafeScriptSecurityPrivateDoNotAccessOrElse(o)}static fromJson(o){return module$contents$goog$html$SafeScript_SafeScript.createSafeScriptSecurityPrivateDoNotAccessOrElse(module$contents$goog$html$SafeScript_SafeScript.stringify_(o))}getTypedStringValue(){return this.privateDoNotAccessOrElseSafeScriptWrappedValue_.toString()}static unwrap(o){return module$contents$goog$html$SafeScript_SafeScript.unwrapTrustedScript(o).toString()}static unwrapTrustedScript(o){return o instanceof module$contents$goog$html$SafeScript_SafeScript&&o.constructor===module$contents$goog$html$SafeScript_SafeScript?o.privateDoNotAccessOrElseSafeScriptWrappedValue_:((0,goog.asserts.fail)("expected object of type SafeScript, got '"+o+"' of type "+goog.typeOf(o)),"type_error:SafeScript")}static stringify_(o){return JSON.stringify(o).replace(/</g,"\\x3c")}static createSafeScriptSecurityPrivateDoNotAccessOrElse(o){const s=goog.html.trustedtypes.getPolicyPrivateDoNotAccessOrElse();return o=s?s.createScript(o):o,new module$contents$goog$html$SafeScript_SafeScript(o,module$contents$goog$html$SafeScript_CONSTRUCTOR_TOKEN_PRIVATE)}}module$contents$goog$html$SafeScript_SafeScript.EMPTY=function(){return module$contents$goog$html$SafeScript_SafeScript.createSafeScriptSecurityPrivateDoNotAccessOrElse("")}();goog.html.SafeScript=module$contents$goog$html$SafeScript_SafeScript;goog.fs={};goog.fs.url={};goog.fs.url.createObjectUrl=function(e){return goog.fs.url.getUrlObject_().createObjectURL(e)};goog.fs.url.revokeObjectUrl=function(e){goog.fs.url.getUrlObject_().revokeObjectURL(e)};goog.fs.url.UrlObject_=function(){};goog.fs.url.UrlObject_.prototype.createObjectURL=function(e){};goog.fs.url.UrlObject_.prototype.revokeObjectURL=function(e){};goog.fs.url.getUrlObject_=function(){const e=goog.fs.url.findUrlObject_();if(e!=null)return e;throw Error("This browser doesn't seem to support blob URLs")};goog.fs.url.findUrlObject_=function(){return goog.global.URL!==void 0&&goog.global.URL.createObjectURL!==void 0?goog.global.URL:goog.global.createObjectURL!==void 0?goog.global:null};goog.fs.url.browserSupportsObjectUrls=function(){return goog.fs.url.findUrlObject_()!=null};goog.fs.blob={};goog.fs.blob.getBlob=function(e){var o=goog.global.BlobBuilder||goog.global.WebKitBlobBuilder;if(o!==void 0){o=new o;for(let s=0;s<arguments.length;s++)o.append(arguments[s]);return o.getBlob()}return goog.fs.blob.getBlobWithProperties(Array.prototype.slice.call(arguments))};goog.fs.blob.getBlobWithProperties=function(e,o,s){var c=goog.global.BlobBuilder||goog.global.WebKitBlobBuilder;if(c!==void 0){c=new c;for(let i=0;i<e.length;i++)c.append(e[i],s);return c.getBlob(o)}if(goog.global.Blob!==void 0)return c={},o&&(c.type=o),s&&(c.endings=s),new Blob(e,c);throw Error("This browser doesn't seem to support creating Blobs")};goog.html.TrustedResourceUrl=class{constructor(e,o){this.privateDoNotAccessOrElseTrustedResourceUrlWrappedValue_=o===goog.html.TrustedResourceUrl.CONSTRUCTOR_TOKEN_PRIVATE_?e:""}toString(){return this.privateDoNotAccessOrElseTrustedResourceUrlWrappedValue_+""}};goog.html.TrustedResourceUrl.prototype.implementsGoogStringTypedString=!0;goog.html.TrustedResourceUrl.prototype.getTypedStringValue=function(){return this.privateDoNotAccessOrElseTrustedResourceUrlWrappedValue_.toString()};goog.html.TrustedResourceUrl.prototype.cloneWithParams=function(e,o){var s=goog.html.TrustedResourceUrl.unwrap(this);s=goog.html.TrustedResourceUrl.URL_PARAM_PARSER_.exec(s);var c=s[3]||"";return goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(s[1]+goog.html.TrustedResourceUrl.stringifyParams_("?",s[2]||"",e)+goog.html.TrustedResourceUrl.stringifyParams_("#",c,o))};goog.html.TrustedResourceUrl.unwrap=function(e){return goog.html.TrustedResourceUrl.unwrapTrustedScriptURL(e).toString()};goog.html.TrustedResourceUrl.unwrapTrustedScriptURL=function(e){return e instanceof goog.html.TrustedResourceUrl&&e.constructor===goog.html.TrustedResourceUrl?e.privateDoNotAccessOrElseTrustedResourceUrlWrappedValue_:(goog.asserts.fail("expected object of type TrustedResourceUrl, got '"+e+"' of type "+goog.typeOf(e)),"type_error:TrustedResourceUrl")};goog.html.TrustedResourceUrl.format=function(e,o){var s=goog.string.Const.unwrap(e);if(!goog.html.TrustedResourceUrl.BASE_URL_.test(s))throw Error("Invalid TrustedResourceUrl format: "+s);return e=s.replace(goog.html.TrustedResourceUrl.FORMAT_MARKER_,function(c,i){if(!Object.prototype.hasOwnProperty.call(o,i))throw Error('Found marker, "'+i+'", in format string, "'+s+'", but no valid label mapping found in args: '+JSON.stringify(o));return c=o[i],c instanceof goog.string.Const?goog.string.Const.unwrap(c):encodeURIComponent(String(c))}),goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(e)};goog.html.TrustedResourceUrl.FORMAT_MARKER_=/%{(\w+)}/g;goog.html.TrustedResourceUrl.BASE_URL_=RegExp("^((https:)?//[0-9a-z.:[\\]-]+/|/[^/\\\\]|[^:/\\\\%]+/|[^:/\\\\%]*[?#]|about:blank#)","i");goog.html.TrustedResourceUrl.URL_PARAM_PARSER_=/^([^?#]*)(\?[^#]*)?(#[\s\S]*)?/;goog.html.TrustedResourceUrl.formatWithParams=function(e,o,s,c){return goog.html.TrustedResourceUrl.format(e,o).cloneWithParams(s,c)};goog.html.TrustedResourceUrl.fromConstant=function(e){return goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(goog.string.Const.unwrap(e))};goog.html.TrustedResourceUrl.fromConstants=function(e){for(var o="",s=0;s<e.length;s++)o+=goog.string.Const.unwrap(e[s]);return goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(o)};goog.html.TrustedResourceUrl.fromSafeScript=function(e){return e=goog.fs.blob.getBlobWithProperties([module$contents$goog$html$SafeScript_SafeScript.unwrap(e)],"text/javascript"),e=goog.fs.url.createObjectUrl(e),goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(e)};goog.html.TrustedResourceUrl.CONSTRUCTOR_TOKEN_PRIVATE_={};goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse=function(e){const o=goog.html.trustedtypes.getPolicyPrivateDoNotAccessOrElse();return e=o?o.createScriptURL(e):e,new goog.html.TrustedResourceUrl(e,goog.html.TrustedResourceUrl.CONSTRUCTOR_TOKEN_PRIVATE_)};goog.html.TrustedResourceUrl.stringifyParams_=function(e,o,s){if(s==null)return o;if(typeof s=="string")return s?e+encodeURIComponent(s):"";for(var c in s)if(Object.prototype.hasOwnProperty.call(s,c)){var i=s[c];i=Array.isArray(i)?i:[i];for(var g=0;g<i.length;g++){var h=i[g];h!=null&&(o||(o=e),o+=(o.length>e.length?"&":"")+encodeURIComponent(c)+"="+encodeURIComponent(String(h)))}}return o};goog.string.internal={};goog.string.internal.startsWith=function(e,o){return e.lastIndexOf(o,0)==0};goog.string.internal.endsWith=function(e,o){const s=e.length-o.length;return 0<=s&&e.indexOf(o,s)==s};goog.string.internal.caseInsensitiveStartsWith=function(e,o){return goog.string.internal.caseInsensitiveCompare(o,e.slice(0,o.length))==0};goog.string.internal.caseInsensitiveEndsWith=function(e,o){return goog.string.internal.caseInsensitiveCompare(o,e.slice(e.length-o.length))==0};goog.string.internal.caseInsensitiveEquals=function(e,o){return e.toLowerCase()==o.toLowerCase()};goog.string.internal.isEmptyOrWhitespace=function(e){return/^[\s\xa0]*$/.test(e)};goog.string.internal.trim=goog.TRUSTED_SITE&&String.prototype.trim?function(e){return e.trim()}:function(e){return/^[\s\xa0]*([\s\S]*?)[\s\xa0]*$/.exec(e)[1]};goog.string.internal.caseInsensitiveCompare=function(e,o){return e=String(e).toLowerCase(),o=String(o).toLowerCase(),e<o?-1:e==o?0:1};goog.string.internal.newLineToBr=function(e,o){return e.replace(/(\r\n|\r|\n)/g,o?"<br />":"<br>")};goog.string.internal.htmlEscape=function(e,o){if(o)e=e.replace(goog.string.internal.AMP_RE_,"&amp;").replace(goog.string.internal.LT_RE_,"&lt;").replace(goog.string.internal.GT_RE_,"&gt;").replace(goog.string.internal.QUOT_RE_,"&quot;").replace(goog.string.internal.SINGLE_QUOTE_RE_,"&#39;").replace(goog.string.internal.NULL_RE_,"&#0;");else{if(!goog.string.internal.ALL_RE_.test(e))return e;e.indexOf("&")!=-1&&(e=e.replace(goog.string.internal.AMP_RE_,"&amp;")),e.indexOf("<")!=-1&&(e=e.replace(goog.string.internal.LT_RE_,"&lt;")),e.indexOf(">")!=-1&&(e=e.replace(goog.string.internal.GT_RE_,"&gt;")),e.indexOf('"')!=-1&&(e=e.replace(goog.string.internal.QUOT_RE_,"&quot;")),e.indexOf("'")!=-1&&(e=e.replace(goog.string.internal.SINGLE_QUOTE_RE_,"&#39;")),e.indexOf("\0")!=-1&&(e=e.replace(goog.string.internal.NULL_RE_,"&#0;"))}return e};goog.string.internal.AMP_RE_=/&/g;goog.string.internal.LT_RE_=/</g;goog.string.internal.GT_RE_=/>/g;goog.string.internal.QUOT_RE_=/"/g;goog.string.internal.SINGLE_QUOTE_RE_=/'/g;goog.string.internal.NULL_RE_=/\x00/g;goog.string.internal.ALL_RE_=/[\x00&<>"']/;goog.string.internal.whitespaceEscape=function(e,o){return goog.string.internal.newLineToBr(e.replace(/  /g," &#160;"),o)};goog.string.internal.contains=function(e,o){return e.indexOf(o)!=-1};goog.string.internal.caseInsensitiveContains=function(e,o){return goog.string.internal.contains(e.toLowerCase(),o.toLowerCase())};goog.string.internal.compareVersions=function(e,o){var s=0;e=goog.string.internal.trim(String(e)).split("."),o=goog.string.internal.trim(String(o)).split(".");const c=Math.max(e.length,o.length);for(let h=0;s==0&&h<c;h++){var i=e[h]||"",g=o[h]||"";do{if(i=/(\d*)(\D*)(.*)/.exec(i)||["","","",""],g=/(\d*)(\D*)(.*)/.exec(g)||["","","",""],i[0].length==0&&g[0].length==0)break;s=i[1].length==0?0:parseInt(i[1],10);const $=g[1].length==0?0:parseInt(g[1],10);s=goog.string.internal.compareElements_(s,$)||goog.string.internal.compareElements_(i[2].length==0,g[2].length==0)||goog.string.internal.compareElements_(i[2],g[2]),i=i[3],g=g[3]}while(s==0)}return s};goog.string.internal.compareElements_=function(e,o){return e<o?-1:e>o?1:0};goog.html.SafeUrl=class{constructor(e,o){this.privateDoNotAccessOrElseSafeUrlWrappedValue_=o===goog.html.SafeUrl.CONSTRUCTOR_TOKEN_PRIVATE_?e:""}toString(){return this.privateDoNotAccessOrElseSafeUrlWrappedValue_.toString()}};goog.html.SafeUrl.INNOCUOUS_STRING="about:invalid#zClosurez";goog.html.SafeUrl.prototype.implementsGoogStringTypedString=!0;goog.html.SafeUrl.prototype.getTypedStringValue=function(){return this.privateDoNotAccessOrElseSafeUrlWrappedValue_.toString()};goog.html.SafeUrl.unwrap=function(e){return e instanceof goog.html.SafeUrl&&e.constructor===goog.html.SafeUrl?e.privateDoNotAccessOrElseSafeUrlWrappedValue_:(goog.asserts.fail("expected object of type SafeUrl, got '"+e+"' of type "+goog.typeOf(e)),"type_error:SafeUrl")};goog.html.SafeUrl.fromConstant=function(e){return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(goog.string.Const.unwrap(e))};goog.html.SAFE_MIME_TYPE_PATTERN_=RegExp('^(?:audio/(?:3gpp2|3gpp|aac|L16|midi|mp3|mp4|mpeg|oga|ogg|opus|x-m4a|x-matroska|x-wav|wav|webm)|font/\\w+|image/(?:bmp|gif|jpeg|jpg|png|tiff|webp|x-icon|heic|heif)|video/(?:mpeg|mp4|ogg|webm|quicktime|x-matroska))(?:;\\w+=(?:\\w+|"[\\w;,= ]+"))*$',"i");goog.html.SafeUrl.isSafeMimeType=function(e){return goog.html.SAFE_MIME_TYPE_PATTERN_.test(e)};goog.html.SafeUrl.fromBlob=function(e){return e=goog.html.SafeUrl.isSafeMimeType(e.type)?goog.fs.url.createObjectUrl(e):goog.html.SafeUrl.INNOCUOUS_STRING,goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(e)};goog.html.SafeUrl.revokeObjectUrl=function(e){e=e.getTypedStringValue(),e!==goog.html.SafeUrl.INNOCUOUS_STRING&&goog.fs.url.revokeObjectUrl(e)};goog.html.SafeUrl.fromMediaSource=function(e){return goog.asserts.assert("MediaSource"in goog.global,"No support for MediaSource"),e=e instanceof MediaSource?goog.fs.url.createObjectUrl(e):goog.html.SafeUrl.INNOCUOUS_STRING,goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(e)};goog.html.DATA_URL_PATTERN_=/^data:(.*);base64,[a-z0-9+\/]+=*$/i;goog.html.SafeUrl.tryFromDataUrl=function(e){return e=String(e),e=e.replace(/(%0A|%0D)/g,""),e.match(goog.html.DATA_URL_PATTERN_)?goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(e):null};goog.html.SafeUrl.fromDataUrl=function(e){return goog.html.SafeUrl.tryFromDataUrl(e)||goog.html.SafeUrl.INNOCUOUS_URL};goog.html.SafeUrl.fromTelUrl=function(e){return goog.string.internal.caseInsensitiveStartsWith(e,"tel:")||(e=goog.html.SafeUrl.INNOCUOUS_STRING),goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(e)};goog.html.SIP_URL_PATTERN_=RegExp("^sip[s]?:[+a-z0-9_.!$%&'*\\/=^`{|}~-]+@([a-z0-9-]+\\.)+[a-z0-9]{2,63}$","i");goog.html.SafeUrl.fromSipUrl=function(e){return goog.html.SIP_URL_PATTERN_.test(decodeURIComponent(e))||(e=goog.html.SafeUrl.INNOCUOUS_STRING),goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(e)};goog.html.SafeUrl.fromFacebookMessengerUrl=function(e){return goog.string.internal.caseInsensitiveStartsWith(e,"fb-messenger://share")||(e=goog.html.SafeUrl.INNOCUOUS_STRING),goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(e)};goog.html.SafeUrl.fromWhatsAppUrl=function(e){return goog.string.internal.caseInsensitiveStartsWith(e,"whatsapp://send")||(e=goog.html.SafeUrl.INNOCUOUS_STRING),goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(e)};goog.html.SafeUrl.fromSmsUrl=function(e){return goog.string.internal.caseInsensitiveStartsWith(e,"sms:")&&goog.html.SafeUrl.isSmsUrlBodyValid_(e)||(e=goog.html.SafeUrl.INNOCUOUS_STRING),goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(e)};goog.html.SafeUrl.isSmsUrlBodyValid_=function(e){var o=e.indexOf("#");if(0<o&&(e=e.substring(0,o)),o=e.match(/[?&]body=/gi),!o)return!0;if(1<o.length)return!1;if(e=e.match(/[?&]body=([^&]*)/)[1],!e)return!0;try{decodeURIComponent(e)}catch{return!1}return/^(?:[a-z0-9\-_.~]|%[0-9a-f]{2})+$/i.test(e)};goog.html.SafeUrl.fromSshUrl=function(e){return goog.string.internal.caseInsensitiveStartsWith(e,"ssh://")||(e=goog.html.SafeUrl.INNOCUOUS_STRING),goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(e)};goog.html.SafeUrl.sanitizeChromeExtensionUrl=function(e,o){return goog.html.SafeUrl.sanitizeExtensionUrl_(/^chrome-extension:\/\/([^\/]+)\//,e,o)};goog.html.SafeUrl.sanitizeFirefoxExtensionUrl=function(e,o){return goog.html.SafeUrl.sanitizeExtensionUrl_(/^moz-extension:\/\/([^\/]+)\//,e,o)};goog.html.SafeUrl.sanitizeEdgeExtensionUrl=function(e,o){return goog.html.SafeUrl.sanitizeExtensionUrl_(/^ms-browser-extension:\/\/([^\/]+)\//,e,o)};goog.html.SafeUrl.sanitizeExtensionUrl_=function(e,o,s){return(e=e.exec(o))?(e=e[1],(s instanceof goog.string.Const?[goog.string.Const.unwrap(s)]:s.map(function(c){return goog.string.Const.unwrap(c)})).indexOf(e)==-1&&(o=goog.html.SafeUrl.INNOCUOUS_STRING)):o=goog.html.SafeUrl.INNOCUOUS_STRING,goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(o)};goog.html.SafeUrl.fromTrustedResourceUrl=function(e){return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(goog.html.TrustedResourceUrl.unwrap(e))};goog.html.SAFE_URL_PATTERN_=/^(?:(?:https?|mailto|ftp):|[^:/?#]*(?:[/?#]|$))/i;goog.html.SafeUrl.SAFE_URL_PATTERN=goog.html.SAFE_URL_PATTERN_;goog.html.SafeUrl.trySanitize=function(e){return e instanceof goog.html.SafeUrl?e:(e=typeof e=="object"&&e.implementsGoogStringTypedString?e.getTypedStringValue():String(e),goog.html.SAFE_URL_PATTERN_.test(e)?goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(e):goog.html.SafeUrl.tryFromDataUrl(e))};goog.html.SafeUrl.sanitize=function(e){return goog.html.SafeUrl.trySanitize(e)||goog.html.SafeUrl.INNOCUOUS_URL};goog.html.SafeUrl.sanitizeAssertUnchanged=function(e,o){return e instanceof goog.html.SafeUrl?e:(e=typeof e=="object"&&e.implementsGoogStringTypedString?e.getTypedStringValue():String(e),o&&/^data:/i.test(e)&&(o=goog.html.SafeUrl.fromDataUrl(e),o.getTypedStringValue()==e)?o:(goog.asserts.assert(goog.html.SAFE_URL_PATTERN_.test(e),"%s does not match the safe URL pattern",e)||(e=goog.html.SafeUrl.INNOCUOUS_STRING),goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(e)))};goog.html.SafeUrl.CONSTRUCTOR_TOKEN_PRIVATE_={};goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse=function(e){return new goog.html.SafeUrl(e,goog.html.SafeUrl.CONSTRUCTOR_TOKEN_PRIVATE_)};goog.html.SafeUrl.INNOCUOUS_URL=goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(goog.html.SafeUrl.INNOCUOUS_STRING);goog.html.SafeUrl.ABOUT_BLANK=goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse("about:blank");const module$contents$goog$html$SafeStyle_CONSTRUCTOR_TOKEN_PRIVATE={};class module$contents$goog$html$SafeStyle_SafeStyle{constructor(o,s){this.privateDoNotAccessOrElseSafeStyleWrappedValue_=s===module$contents$goog$html$SafeStyle_CONSTRUCTOR_TOKEN_PRIVATE?o:"",this.implementsGoogStringTypedString=!0}static fromConstant(o){return o=goog.string.Const.unwrap(o),o.length===0?module$contents$goog$html$SafeStyle_SafeStyle.EMPTY:((0,goog.asserts.assert)((0,goog.string.internal.endsWith)(o,";"),`Last character of style string is not ';': ${o}`),(0,goog.asserts.assert)((0,goog.string.internal.contains)(o,":"),`Style string must contain at least one ':', to specify a "name: value" pair: `+o),module$contents$goog$html$SafeStyle_SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse(o))}getTypedStringValue(){return this.privateDoNotAccessOrElseSafeStyleWrappedValue_}toString(){return this.privateDoNotAccessOrElseSafeStyleWrappedValue_.toString()}static unwrap(o){return o instanceof module$contents$goog$html$SafeStyle_SafeStyle&&o.constructor===module$contents$goog$html$SafeStyle_SafeStyle?o.privateDoNotAccessOrElseSafeStyleWrappedValue_:((0,goog.asserts.fail)(`expected object of type SafeStyle, got '${o}' of type `+goog.typeOf(o)),"type_error:SafeStyle")}static createSafeStyleSecurityPrivateDoNotAccessOrElse(o){return new module$contents$goog$html$SafeStyle_SafeStyle(o,module$contents$goog$html$SafeStyle_CONSTRUCTOR_TOKEN_PRIVATE)}static create(o){let s="";for(let c in o)if(Object.prototype.hasOwnProperty.call(o,c)){if(!/^[-_a-zA-Z0-9]+$/.test(c))throw Error(`Name allows only [-_a-zA-Z0-9], got: ${c}`);let i=o[c];i!=null&&(i=Array.isArray(i)?i.map(module$contents$goog$html$SafeStyle_sanitizePropertyValue).join(" "):module$contents$goog$html$SafeStyle_sanitizePropertyValue(i),s+=`${c}:${i};`)}return s?module$contents$goog$html$SafeStyle_SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse(s):module$contents$goog$html$SafeStyle_SafeStyle.EMPTY}static concat(o){let s="";const c=i=>{Array.isArray(i)?i.forEach(c):s+=module$contents$goog$html$SafeStyle_SafeStyle.unwrap(i)};return Array.prototype.forEach.call(arguments,c),s?module$contents$goog$html$SafeStyle_SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse(s):module$contents$goog$html$SafeStyle_SafeStyle.EMPTY}}module$contents$goog$html$SafeStyle_SafeStyle.EMPTY=module$contents$goog$html$SafeStyle_SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse("");module$contents$goog$html$SafeStyle_SafeStyle.INNOCUOUS_STRING="zClosurez";function module$contents$goog$html$SafeStyle_sanitizePropertyValue(e){if(e instanceof goog.html.SafeUrl)return'url("'+goog.html.SafeUrl.unwrap(e).replace(/</g,"%3c").replace(/[\\"]/g,"\\$&")+'")';if(e=e instanceof goog.string.Const?goog.string.Const.unwrap(e):module$contents$goog$html$SafeStyle_sanitizePropertyValueString(String(e)),/[{;}]/.test(e))throw new module$contents$goog$asserts_AssertionError("Value does not allow [{;}], got: %s.",[e]);return e}function module$contents$goog$html$SafeStyle_sanitizePropertyValueString(e){const o=e.replace(module$contents$goog$html$SafeStyle_FUNCTIONS_RE,"$1").replace(module$contents$goog$html$SafeStyle_FUNCTIONS_RE,"$1").replace(module$contents$goog$html$SafeStyle_URL_RE,"url");if(module$contents$goog$html$SafeStyle_VALUE_RE.test(o)){if(module$contents$goog$html$SafeStyle_COMMENT_RE.test(e))return(0,goog.asserts.fail)(`String value disallows comments, got: ${e}`),module$contents$goog$html$SafeStyle_SafeStyle.INNOCUOUS_STRING;if(!module$contents$goog$html$SafeStyle_hasBalancedQuotes(e))return(0,goog.asserts.fail)(`String value requires balanced quotes, got: ${e}`),module$contents$goog$html$SafeStyle_SafeStyle.INNOCUOUS_STRING;if(!module$contents$goog$html$SafeStyle_hasBalancedSquareBrackets(e))return(0,goog.asserts.fail)("String value requires balanced square brackets and one identifier per pair of brackets, got: "+e),module$contents$goog$html$SafeStyle_SafeStyle.INNOCUOUS_STRING}else return(0,goog.asserts.fail)(`String value allows only ${module$contents$goog$html$SafeStyle_VALUE_ALLOWED_CHARS} and simple functions, got: `+e),module$contents$goog$html$SafeStyle_SafeStyle.INNOCUOUS_STRING;return module$contents$goog$html$SafeStyle_sanitizeUrl(e)}function module$contents$goog$html$SafeStyle_hasBalancedQuotes(e){let o=!0,s=!0;for(let c=0;c<e.length;c++){const i=e.charAt(c);i=="'"&&s?o=!o:i=='"'&&o&&(s=!s)}return o&&s}function module$contents$goog$html$SafeStyle_hasBalancedSquareBrackets(e){let o=!0;const s=/^[-_a-zA-Z0-9]$/;for(let c=0;c<e.length;c++){const i=e.charAt(c);if(i=="]"){if(o)return!1;o=!0}else if(i=="["){if(!o)return!1;o=!1}else if(!o&&!s.test(i))return!1}return o}const module$contents$goog$html$SafeStyle_VALUE_ALLOWED_CHARS=`[-,."'%_!#/ a-zA-Z0-9\\[\\]]`,module$contents$goog$html$SafeStyle_VALUE_RE=new RegExp(`^${module$contents$goog$html$SafeStyle_VALUE_ALLOWED_CHARS}+$`),module$contents$goog$html$SafeStyle_URL_RE=RegExp(`\\b(url\\([ 	
]*)('[ -&(-\\[\\]-~]*'|"[ !#-\\[\\]-~]*"|[!#-&*-\\[\\]-~]*)([ 	
]*\\))`,"g"),module$contents$goog$html$SafeStyle_ALLOWED_FUNCTIONS="calc cubic-bezier fit-content hsl hsla linear-gradient matrix minmax radial-gradient repeat rgb rgba (rotate|scale|translate)(X|Y|Z|3d)? steps var".split(" "),module$contents$goog$html$SafeStyle_FUNCTIONS_RE=new RegExp("\\b("+module$contents$goog$html$SafeStyle_ALLOWED_FUNCTIONS.join("|")+")\\([-+*/0-9a-zA-Z.%#\\[\\], ]+\\)","g"),module$contents$goog$html$SafeStyle_COMMENT_RE=/\/\*/;function module$contents$goog$html$SafeStyle_sanitizeUrl(e){return e.replace(module$contents$goog$html$SafeStyle_URL_RE,(o,s,c,i)=>{let g="";return c=c.replace(/^(['"])(.*)\1$/,(h,$,j)=>(g=$,j)),o=goog.html.SafeUrl.sanitize(c).getTypedStringValue(),s+g+o+g+i})}goog.html.SafeStyle=module$contents$goog$html$SafeStyle_SafeStyle;goog.object={};function module$contents$goog$object_forEach(e,o,s){for(const c in e)o.call(s,e[c],c,e)}function module$contents$goog$object_filter(e,o,s){const c={};for(const i in e)o.call(s,e[i],i,e)&&(c[i]=e[i]);return c}function module$contents$goog$object_map(e,o,s){const c={};for(const i in e)c[i]=o.call(s,e[i],i,e);return c}function module$contents$goog$object_some(e,o,s){for(const c in e)if(o.call(s,e[c],c,e))return!0;return!1}function module$contents$goog$object_every(e,o,s){for(const c in e)if(!o.call(s,e[c],c,e))return!1;return!0}function module$contents$goog$object_getCount(e){let o=0;for(const s in e)o++;return o}function module$contents$goog$object_getAnyKey(e){for(const o in e)return o}function module$contents$goog$object_getAnyValue(e){for(const o in e)return e[o]}function module$contents$goog$object_contains(e,o){return module$contents$goog$object_containsValue(e,o)}function module$contents$goog$object_getValues(e){const o=[];let s=0;for(const c in e)o[s++]=e[c];return o}function module$contents$goog$object_getKeys(e){const o=[];let s=0;for(const c in e)o[s++]=c;return o}function module$contents$goog$object_getValueByKeys(e,o){var s=goog.isArrayLike(o);const c=s?o:arguments;for(s=s?0:1;s<c.length;s++){if(e==null)return;e=e[c[s]]}return e}function module$contents$goog$object_containsKey(e,o){return e!==null&&o in e}function module$contents$goog$object_containsValue(e,o){for(const s in e)if(e[s]==o)return!0;return!1}function module$contents$goog$object_findKey(e,o,s){for(const c in e)if(o.call(s,e[c],c,e))return c}function module$contents$goog$object_findValue(e,o,s){return(o=module$contents$goog$object_findKey(e,o,s))&&e[o]}function module$contents$goog$object_isEmpty(e){for(const o in e)return!1;return!0}function module$contents$goog$object_clear(e){for(const o in e)delete e[o]}function module$contents$goog$object_remove(e,o){let s;return(s=o in e)&&delete e[o],s}function module$contents$goog$object_add(e,o,s){if(e!==null&&o in e)throw Error(`The object already contains the key "${o}"`);module$contents$goog$object_set(e,o,s)}function module$contents$goog$object_get(e,o,s){return e!==null&&o in e?e[o]:s}function module$contents$goog$object_set(e,o,s){e[o]=s}function module$contents$goog$object_setIfUndefined(e,o,s){return o in e?e[o]:e[o]=s}function module$contents$goog$object_setWithReturnValueIfNotSet(e,o,s){return o in e?e[o]:(s=s(),e[o]=s)}function module$contents$goog$object_equals(e,o){for(const s in e)if(!(s in o)||e[s]!==o[s])return!1;for(const s in o)if(!(s in e))return!1;return!0}function module$contents$goog$object_clone(e){const o={};for(const s in e)o[s]=e[s];return o}function module$contents$goog$object_unsafeClone(e){if(!e||typeof e!="object")return e;if(typeof e.clone=="function")return e.clone();if(typeof Map<"u"&&e instanceof Map)return new Map(e);if(typeof Set<"u"&&e instanceof Set)return new Set(e);if(e instanceof Date)return new Date(e.getTime());const o=Array.isArray(e)?[]:typeof ArrayBuffer!="function"||typeof ArrayBuffer.isView!="function"||!ArrayBuffer.isView(e)||e instanceof DataView?{}:new e.constructor(e.length);for(const s in e)o[s]=module$contents$goog$object_unsafeClone(e[s]);return o}function module$contents$goog$object_transpose(e){const o={};for(const s in e)o[e[s]]=s;return o}const module$contents$goog$object_PROTOTYPE_FIELDS="constructor hasOwnProperty isPrototypeOf propertyIsEnumerable toLocaleString toString valueOf".split(" ");function module$contents$goog$object_extend(e,o){let s,c;for(let i=1;i<arguments.length;i++){c=arguments[i];for(s in c)e[s]=c[s];for(let g=0;g<module$contents$goog$object_PROTOTYPE_FIELDS.length;g++)s=module$contents$goog$object_PROTOTYPE_FIELDS[g],Object.prototype.hasOwnProperty.call(c,s)&&(e[s]=c[s])}}function module$contents$goog$object_create(e){const o=arguments.length;if(o==1&&Array.isArray(arguments[0]))return module$contents$goog$object_create.apply(null,arguments[0]);if(o%2)throw Error("Uneven number of arguments");const s={};for(let c=0;c<o;c+=2)s[arguments[c]]=arguments[c+1];return s}function module$contents$goog$object_createSet(e){const o=arguments.length;if(o==1&&Array.isArray(arguments[0]))return module$contents$goog$object_createSet.apply(null,arguments[0]);const s={};for(let c=0;c<o;c++)s[arguments[c]]=!0;return s}function module$contents$goog$object_createImmutableView(e){let o=e;return Object.isFrozen&&!Object.isFrozen(e)&&(o=Object.create(e),Object.freeze(o)),o}function module$contents$goog$object_isImmutableView(e){return!!Object.isFrozen&&Object.isFrozen(e)}function module$contents$goog$object_getAllPropertyNames(e,o,s){if(!e)return[];if(!Object.getOwnPropertyNames||!Object.getPrototypeOf)return module$contents$goog$object_getKeys(e);const c={};for(;e&&(e!==Object.prototype||o)&&(e!==Function.prototype||s);){const i=Object.getOwnPropertyNames(e);for(let g=0;g<i.length;g++)c[i[g]]=!0;e=Object.getPrototypeOf(e)}return module$contents$goog$object_getKeys(c)}function module$contents$goog$object_getSuperClass(e){return(e=Object.getPrototypeOf(e.prototype))&&e.constructor}goog.object.add=module$contents$goog$object_add;goog.object.clear=module$contents$goog$object_clear;goog.object.clone=module$contents$goog$object_clone;goog.object.contains=module$contents$goog$object_contains;goog.object.containsKey=module$contents$goog$object_containsKey;goog.object.containsValue=module$contents$goog$object_containsValue;goog.object.create=module$contents$goog$object_create;goog.object.createImmutableView=module$contents$goog$object_createImmutableView;goog.object.createSet=module$contents$goog$object_createSet;goog.object.equals=module$contents$goog$object_equals;goog.object.every=module$contents$goog$object_every;goog.object.extend=module$contents$goog$object_extend;goog.object.filter=module$contents$goog$object_filter;goog.object.findKey=module$contents$goog$object_findKey;goog.object.findValue=module$contents$goog$object_findValue;goog.object.forEach=module$contents$goog$object_forEach;goog.object.get=module$contents$goog$object_get;goog.object.getAllPropertyNames=module$contents$goog$object_getAllPropertyNames;goog.object.getAnyKey=module$contents$goog$object_getAnyKey;goog.object.getAnyValue=module$contents$goog$object_getAnyValue;goog.object.getCount=module$contents$goog$object_getCount;goog.object.getKeys=module$contents$goog$object_getKeys;goog.object.getSuperClass=module$contents$goog$object_getSuperClass;goog.object.getValueByKeys=module$contents$goog$object_getValueByKeys;goog.object.getValues=module$contents$goog$object_getValues;goog.object.isEmpty=module$contents$goog$object_isEmpty;goog.object.isImmutableView=module$contents$goog$object_isImmutableView;goog.object.map=module$contents$goog$object_map;goog.object.remove=module$contents$goog$object_remove;goog.object.set=module$contents$goog$object_set;goog.object.setIfUndefined=module$contents$goog$object_setIfUndefined;goog.object.setWithReturnValueIfNotSet=module$contents$goog$object_setWithReturnValueIfNotSet;goog.object.some=module$contents$goog$object_some;goog.object.transpose=module$contents$goog$object_transpose;goog.object.unsafeClone=module$contents$goog$object_unsafeClone;const module$contents$goog$html$SafeStyleSheet_CONSTRUCTOR_TOKEN_PRIVATE={};class module$contents$goog$html$SafeStyleSheet_SafeStyleSheet{constructor(o,s){this.privateDoNotAccessOrElseSafeStyleSheetWrappedValue_=s===module$contents$goog$html$SafeStyleSheet_CONSTRUCTOR_TOKEN_PRIVATE?o:"",this.implementsGoogStringTypedString=!0}toString(){return this.privateDoNotAccessOrElseSafeStyleSheetWrappedValue_.toString()}static createRule(o,s){if((0,goog.string.internal.contains)(o,"<"))throw Error(`Selector does not allow '<', got: ${o}`);const c=o.replace(/('|")((?!\1)[^\r\n\f\\]|\\[\s\S])*\1/g,"");if(!/^[-_a-zA-Z0-9#.:* ,>+~[\]()=^$|]+$/.test(c))throw Error("Selector allows only [-_a-zA-Z0-9#.:* ,>+~[\\]()=^$|] and strings, got: "+o);if(!module$contents$goog$html$SafeStyleSheet_SafeStyleSheet.hasBalancedBrackets_(c))throw Error("() and [] in selector must be balanced, got: "+o);return s instanceof module$contents$goog$html$SafeStyle_SafeStyle||(s=module$contents$goog$html$SafeStyle_SafeStyle.create(s)),o=`${o}{`+module$contents$goog$html$SafeStyle_SafeStyle.unwrap(s).replace(/</g,"\\3C ")+"}",module$contents$goog$html$SafeStyleSheet_SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse(o)}static hasBalancedBrackets_(o){const s={"(":")","[":"]"},c=[];for(let i=0;i<o.length;i++){const g=o[i];if(s[g])c.push(s[g]);else if(module$contents$goog$object_contains(s,g)&&c.pop()!=g)return!1}return c.length==0}static concat(o){let s="";const c=i=>{Array.isArray(i)?i.forEach(c):s+=module$contents$goog$html$SafeStyleSheet_SafeStyleSheet.unwrap(i)};return Array.prototype.forEach.call(arguments,c),module$contents$goog$html$SafeStyleSheet_SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse(s)}static fromConstant(o){return o=goog.string.Const.unwrap(o),o.length===0?module$contents$goog$html$SafeStyleSheet_SafeStyleSheet.EMPTY:((0,goog.asserts.assert)(!(0,goog.string.internal.contains)(o,"<"),`Forbidden '<' character in style sheet string: ${o}`),module$contents$goog$html$SafeStyleSheet_SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse(o))}getTypedStringValue(){return this.privateDoNotAccessOrElseSafeStyleSheetWrappedValue_}static unwrap(o){return o instanceof module$contents$goog$html$SafeStyleSheet_SafeStyleSheet&&o.constructor===module$contents$goog$html$SafeStyleSheet_SafeStyleSheet?o.privateDoNotAccessOrElseSafeStyleSheetWrappedValue_:((0,goog.asserts.fail)("expected object of type SafeStyleSheet, got '"+o+"' of type "+goog.typeOf(o)),"type_error:SafeStyleSheet")}static createSafeStyleSheetSecurityPrivateDoNotAccessOrElse(o){return new module$contents$goog$html$SafeStyleSheet_SafeStyleSheet(o,module$contents$goog$html$SafeStyleSheet_CONSTRUCTOR_TOKEN_PRIVATE)}}module$contents$goog$html$SafeStyleSheet_SafeStyleSheet.EMPTY=module$contents$goog$html$SafeStyleSheet_SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse("");goog.html.SafeStyleSheet=module$contents$goog$html$SafeStyleSheet_SafeStyleSheet;goog.dom.HtmlElement=function(){};goog.dom.TagName=class{static cast(e,o){return e}constructor(){}toString(){}};goog.dom.TagName.A="A";goog.dom.TagName.ABBR="ABBR";goog.dom.TagName.ACRONYM="ACRONYM";goog.dom.TagName.ADDRESS="ADDRESS";goog.dom.TagName.APPLET="APPLET";goog.dom.TagName.AREA="AREA";goog.dom.TagName.ARTICLE="ARTICLE";goog.dom.TagName.ASIDE="ASIDE";goog.dom.TagName.AUDIO="AUDIO";goog.dom.TagName.B="B";goog.dom.TagName.BASE="BASE";goog.dom.TagName.BASEFONT="BASEFONT";goog.dom.TagName.BDI="BDI";goog.dom.TagName.BDO="BDO";goog.dom.TagName.BIG="BIG";goog.dom.TagName.BLOCKQUOTE="BLOCKQUOTE";goog.dom.TagName.BODY="BODY";goog.dom.TagName.BR="BR";goog.dom.TagName.BUTTON="BUTTON";goog.dom.TagName.CANVAS="CANVAS";goog.dom.TagName.CAPTION="CAPTION";goog.dom.TagName.CENTER="CENTER";goog.dom.TagName.CITE="CITE";goog.dom.TagName.CODE="CODE";goog.dom.TagName.COL="COL";goog.dom.TagName.COLGROUP="COLGROUP";goog.dom.TagName.COMMAND="COMMAND";goog.dom.TagName.DATA="DATA";goog.dom.TagName.DATALIST="DATALIST";goog.dom.TagName.DD="DD";goog.dom.TagName.DEL="DEL";goog.dom.TagName.DETAILS="DETAILS";goog.dom.TagName.DFN="DFN";goog.dom.TagName.DIALOG="DIALOG";goog.dom.TagName.DIR="DIR";goog.dom.TagName.DIV="DIV";goog.dom.TagName.DL="DL";goog.dom.TagName.DT="DT";goog.dom.TagName.EM="EM";goog.dom.TagName.EMBED="EMBED";goog.dom.TagName.FIELDSET="FIELDSET";goog.dom.TagName.FIGCAPTION="FIGCAPTION";goog.dom.TagName.FIGURE="FIGURE";goog.dom.TagName.FONT="FONT";goog.dom.TagName.FOOTER="FOOTER";goog.dom.TagName.FORM="FORM";goog.dom.TagName.FRAME="FRAME";goog.dom.TagName.FRAMESET="FRAMESET";goog.dom.TagName.H1="H1";goog.dom.TagName.H2="H2";goog.dom.TagName.H3="H3";goog.dom.TagName.H4="H4";goog.dom.TagName.H5="H5";goog.dom.TagName.H6="H6";goog.dom.TagName.HEAD="HEAD";goog.dom.TagName.HEADER="HEADER";goog.dom.TagName.HGROUP="HGROUP";goog.dom.TagName.HR="HR";goog.dom.TagName.HTML="HTML";goog.dom.TagName.I="I";goog.dom.TagName.IFRAME="IFRAME";goog.dom.TagName.IMG="IMG";goog.dom.TagName.INPUT="INPUT";goog.dom.TagName.INS="INS";goog.dom.TagName.ISINDEX="ISINDEX";goog.dom.TagName.KBD="KBD";goog.dom.TagName.KEYGEN="KEYGEN";goog.dom.TagName.LABEL="LABEL";goog.dom.TagName.LEGEND="LEGEND";goog.dom.TagName.LI="LI";goog.dom.TagName.LINK="LINK";goog.dom.TagName.MAIN="MAIN";goog.dom.TagName.MAP="MAP";goog.dom.TagName.MARK="MARK";goog.dom.TagName.MATH="MATH";goog.dom.TagName.MENU="MENU";goog.dom.TagName.MENUITEM="MENUITEM";goog.dom.TagName.META="META";goog.dom.TagName.METER="METER";goog.dom.TagName.NAV="NAV";goog.dom.TagName.NOFRAMES="NOFRAMES";goog.dom.TagName.NOSCRIPT="NOSCRIPT";goog.dom.TagName.OBJECT="OBJECT";goog.dom.TagName.OL="OL";goog.dom.TagName.OPTGROUP="OPTGROUP";goog.dom.TagName.OPTION="OPTION";goog.dom.TagName.OUTPUT="OUTPUT";goog.dom.TagName.P="P";goog.dom.TagName.PARAM="PARAM";goog.dom.TagName.PICTURE="PICTURE";goog.dom.TagName.PRE="PRE";goog.dom.TagName.PROGRESS="PROGRESS";goog.dom.TagName.Q="Q";goog.dom.TagName.RP="RP";goog.dom.TagName.RT="RT";goog.dom.TagName.RTC="RTC";goog.dom.TagName.RUBY="RUBY";goog.dom.TagName.S="S";goog.dom.TagName.SAMP="SAMP";goog.dom.TagName.SCRIPT="SCRIPT";goog.dom.TagName.SECTION="SECTION";goog.dom.TagName.SELECT="SELECT";goog.dom.TagName.SMALL="SMALL";goog.dom.TagName.SOURCE="SOURCE";goog.dom.TagName.SPAN="SPAN";goog.dom.TagName.STRIKE="STRIKE";goog.dom.TagName.STRONG="STRONG";goog.dom.TagName.STYLE="STYLE";goog.dom.TagName.SUB="SUB";goog.dom.TagName.SUMMARY="SUMMARY";goog.dom.TagName.SUP="SUP";goog.dom.TagName.SVG="SVG";goog.dom.TagName.TABLE="TABLE";goog.dom.TagName.TBODY="TBODY";goog.dom.TagName.TD="TD";goog.dom.TagName.TEMPLATE="TEMPLATE";goog.dom.TagName.TEXTAREA="TEXTAREA";goog.dom.TagName.TFOOT="TFOOT";goog.dom.TagName.TH="TH";goog.dom.TagName.THEAD="THEAD";goog.dom.TagName.TIME="TIME";goog.dom.TagName.TITLE="TITLE";goog.dom.TagName.TR="TR";goog.dom.TagName.TRACK="TRACK";goog.dom.TagName.TT="TT";goog.dom.TagName.U="U";goog.dom.TagName.UL="UL";goog.dom.TagName.VAR="VAR";goog.dom.TagName.VIDEO="VIDEO";goog.dom.TagName.WBR="WBR";goog.labs={};goog.labs.userAgent={};let module$contents$goog$labs$userAgent_forceClientHintsInTests=!1;goog.labs.userAgent.setUseClientHintsForTesting=e=>{module$contents$goog$labs$userAgent_forceClientHintsInTests=e};goog.labs.userAgent.useClientHints=()=>module$contents$goog$labs$userAgent_forceClientHintsInTests;goog.labs.userAgent.util={};const module$contents$goog$labs$userAgent$util_ASSUME_CLIENT_HINTS_SUPPORT=!1;function module$contents$goog$labs$userAgent$util_getNativeUserAgentString(){var e=module$contents$goog$labs$userAgent$util_getNavigator();return e&&(e=e.userAgent)?e:""}function module$contents$goog$labs$userAgent$util_getNativeUserAgentData(){const e=module$contents$goog$labs$userAgent$util_getNavigator();return e&&e.userAgentData||null}function module$contents$goog$labs$userAgent$util_getNavigator(){return goog.global.navigator}let module$contents$goog$labs$userAgent$util_userAgentInternal=null,module$contents$goog$labs$userAgent$util_userAgentDataInternal=module$contents$goog$labs$userAgent$util_getNativeUserAgentData();function module$contents$goog$labs$userAgent$util_setUserAgent(e){module$contents$goog$labs$userAgent$util_userAgentInternal=typeof e=="string"?e:module$contents$goog$labs$userAgent$util_getNativeUserAgentString()}function module$contents$goog$labs$userAgent$util_getUserAgent(){return module$contents$goog$labs$userAgent$util_userAgentInternal??module$contents$goog$labs$userAgent$util_getNativeUserAgentString()}function module$contents$goog$labs$userAgent$util_setUserAgentData(e){module$contents$goog$labs$userAgent$util_userAgentDataInternal=e}function module$contents$goog$labs$userAgent$util_resetUserAgentData(){module$contents$goog$labs$userAgent$util_userAgentDataInternal=module$contents$goog$labs$userAgent$util_getNativeUserAgentData()}function module$contents$goog$labs$userAgent$util_getUserAgentData(){return module$contents$goog$labs$userAgent$util_userAgentDataInternal}function module$contents$goog$labs$userAgent$util_matchUserAgentDataBrand(e){if(!(0,goog.labs.userAgent.useClientHints)())return!1;const o=module$contents$goog$labs$userAgent$util_getUserAgentData();return o?o.brands.some(({brand:s})=>s&&(0,goog.string.internal.contains)(s,e)):!1}function module$contents$goog$labs$userAgent$util_matchUserAgent(e){const o=module$contents$goog$labs$userAgent$util_getUserAgent();return(0,goog.string.internal.contains)(o,e)}function module$contents$goog$labs$userAgent$util_matchUserAgentIgnoreCase(e){const o=module$contents$goog$labs$userAgent$util_getUserAgent();return(0,goog.string.internal.caseInsensitiveContains)(o,e)}function module$contents$goog$labs$userAgent$util_extractVersionTuples(e){const o=RegExp("([A-Z][\\w ]+)/([^\\s]+)\\s*(?:\\((.*?)\\))?","g"),s=[];let c;for(;c=o.exec(e);)s.push([c[1],c[2],c[3]||void 0]);return s}goog.labs.userAgent.util.ASSUME_CLIENT_HINTS_SUPPORT=module$contents$goog$labs$userAgent$util_ASSUME_CLIENT_HINTS_SUPPORT;goog.labs.userAgent.util.extractVersionTuples=module$contents$goog$labs$userAgent$util_extractVersionTuples;goog.labs.userAgent.util.getNativeUserAgentString=module$contents$goog$labs$userAgent$util_getNativeUserAgentString;goog.labs.userAgent.util.getUserAgent=module$contents$goog$labs$userAgent$util_getUserAgent;goog.labs.userAgent.util.getUserAgentData=module$contents$goog$labs$userAgent$util_getUserAgentData;goog.labs.userAgent.util.matchUserAgent=module$contents$goog$labs$userAgent$util_matchUserAgent;goog.labs.userAgent.util.matchUserAgentDataBrand=module$contents$goog$labs$userAgent$util_matchUserAgentDataBrand;goog.labs.userAgent.util.matchUserAgentIgnoreCase=module$contents$goog$labs$userAgent$util_matchUserAgentIgnoreCase;goog.labs.userAgent.util.resetUserAgentData=module$contents$goog$labs$userAgent$util_resetUserAgentData;goog.labs.userAgent.util.setUserAgent=module$contents$goog$labs$userAgent$util_setUserAgent;goog.labs.userAgent.util.setUserAgentData=module$contents$goog$labs$userAgent$util_setUserAgentData;var module$exports$goog$labs$userAgent$highEntropy$highEntropyValue={AsyncValue:class{getIfLoaded(){}load(){}},HighEntropyValue:class{constructor(e){this.key_=e,this.promise_=this.value_=void 0,this.pending_=!1}getIfLoaded(){if(module$contents$goog$labs$userAgent$util_getUserAgentData())return this.value_}async load(){const e=module$contents$goog$labs$userAgent$util_getUserAgentData();if(e)return this.promise_||(this.pending_=!0,this.promise_=(async()=>{try{return this.value_=(await e.getHighEntropyValues([this.key_]))[this.key_]}finally{this.pending_=!1}})()),await this.promise_}resetForTesting(){if(this.pending_)throw Error("Unsafe call to resetForTesting");this.value_=this.promise_=void 0,this.pending_=!1}},Version:class{constructor(e){this.versionString_=e}toVersionStringForLogging(){return this.versionString_}isAtLeast(e){return 0<=(0,goog.string.internal.compareVersions)(this.versionString_,e)}}},module$exports$goog$labs$userAgent$highEntropy$highEntropyData={};module$exports$goog$labs$userAgent$highEntropy$highEntropyData.fullVersionList=new module$exports$goog$labs$userAgent$highEntropy$highEntropyValue.HighEntropyValue("fullVersionList");module$exports$goog$labs$userAgent$highEntropy$highEntropyData.platformVersion=new module$exports$goog$labs$userAgent$highEntropy$highEntropyValue.HighEntropyValue("platformVersion");goog.labs.userAgent.browser={};const module$contents$goog$labs$userAgent$browser_Brand={ANDROID_BROWSER:"Android Browser",CHROMIUM:"Chromium",EDGE:"Microsoft Edge",FIREFOX:"Firefox",IE:"Internet Explorer",OPERA:"Opera",SAFARI:"Safari",SILK:"Silk"};goog.labs.userAgent.browser.Brand=module$contents$goog$labs$userAgent$browser_Brand;function module$contents$goog$labs$userAgent$browser_useUserAgentDataBrand(e=!1){return!e&&!(0,goog.labs.userAgent.useClientHints)()?!1:(e=module$contents$goog$labs$userAgent$util_getUserAgentData(),!!e&&0<e.brands.length)}function module$contents$goog$labs$userAgent$browser_hasFullVersionList(){return module$contents$goog$labs$userAgent$browser_isAtLeast(module$contents$goog$labs$userAgent$browser_Brand.CHROMIUM,98)}function module$contents$goog$labs$userAgent$browser_matchOpera(){return module$contents$goog$labs$userAgent$browser_useUserAgentDataBrand()?!1:module$contents$goog$labs$userAgent$util_matchUserAgent("Opera")}function module$contents$goog$labs$userAgent$browser_matchIE(){return module$contents$goog$labs$userAgent$browser_useUserAgentDataBrand()?!1:module$contents$goog$labs$userAgent$util_matchUserAgent("Trident")||module$contents$goog$labs$userAgent$util_matchUserAgent("MSIE")}function module$contents$goog$labs$userAgent$browser_matchEdgeHtml(){return module$contents$goog$labs$userAgent$browser_useUserAgentDataBrand()?!1:module$contents$goog$labs$userAgent$util_matchUserAgent("Edge")}function module$contents$goog$labs$userAgent$browser_matchEdgeChromium(){return module$contents$goog$labs$userAgent$browser_useUserAgentDataBrand()?module$contents$goog$labs$userAgent$util_matchUserAgentDataBrand(module$contents$goog$labs$userAgent$browser_Brand.EDGE):module$contents$goog$labs$userAgent$util_matchUserAgent("Edg/")}function module$contents$goog$labs$userAgent$browser_matchOperaChromium(){return module$contents$goog$labs$userAgent$browser_useUserAgentDataBrand()?module$contents$goog$labs$userAgent$util_matchUserAgentDataBrand(module$contents$goog$labs$userAgent$browser_Brand.OPERA):module$contents$goog$labs$userAgent$util_matchUserAgent("OPR")}function module$contents$goog$labs$userAgent$browser_matchFirefox(){return module$contents$goog$labs$userAgent$util_matchUserAgent("Firefox")||module$contents$goog$labs$userAgent$util_matchUserAgent("FxiOS")}function module$contents$goog$labs$userAgent$browser_matchSafari(){return module$contents$goog$labs$userAgent$util_matchUserAgent("Safari")&&!(module$contents$goog$labs$userAgent$browser_matchChrome()||module$contents$goog$labs$userAgent$browser_matchCoast()||module$contents$goog$labs$userAgent$browser_matchOpera()||module$contents$goog$labs$userAgent$browser_matchEdgeHtml()||module$contents$goog$labs$userAgent$browser_matchEdgeChromium()||module$contents$goog$labs$userAgent$browser_matchOperaChromium()||module$contents$goog$labs$userAgent$browser_matchFirefox()||module$contents$goog$labs$userAgent$browser_isSilk()||module$contents$goog$labs$userAgent$util_matchUserAgent("Android"))}function module$contents$goog$labs$userAgent$browser_matchCoast(){return module$contents$goog$labs$userAgent$browser_useUserAgentDataBrand()?!1:module$contents$goog$labs$userAgent$util_matchUserAgent("Coast")}function module$contents$goog$labs$userAgent$browser_matchIosWebview(){return(module$contents$goog$labs$userAgent$util_matchUserAgent("iPad")||module$contents$goog$labs$userAgent$util_matchUserAgent("iPhone"))&&!module$contents$goog$labs$userAgent$browser_matchSafari()&&!module$contents$goog$labs$userAgent$browser_matchChrome()&&!module$contents$goog$labs$userAgent$browser_matchCoast()&&!module$contents$goog$labs$userAgent$browser_matchFirefox()&&module$contents$goog$labs$userAgent$util_matchUserAgent("AppleWebKit")}function module$contents$goog$labs$userAgent$browser_matchChrome(){return module$contents$goog$labs$userAgent$browser_useUserAgentDataBrand()?module$contents$goog$labs$userAgent$util_matchUserAgentDataBrand(module$contents$goog$labs$userAgent$browser_Brand.CHROMIUM):(module$contents$goog$labs$userAgent$util_matchUserAgent("Chrome")||module$contents$goog$labs$userAgent$util_matchUserAgent("CriOS"))&&!module$contents$goog$labs$userAgent$browser_matchEdgeHtml()||module$contents$goog$labs$userAgent$browser_isSilk()}function module$contents$goog$labs$userAgent$browser_matchAndroidBrowser(){return module$contents$goog$labs$userAgent$util_matchUserAgent("Android")&&!(module$contents$goog$labs$userAgent$browser_matchChrome()||module$contents$goog$labs$userAgent$browser_matchFirefox()||module$contents$goog$labs$userAgent$browser_matchOpera()||module$contents$goog$labs$userAgent$browser_isSilk())}goog.labs.userAgent.browser.isOpera=module$contents$goog$labs$userAgent$browser_matchOpera;goog.labs.userAgent.browser.isIE=module$contents$goog$labs$userAgent$browser_matchIE;goog.labs.userAgent.browser.isEdge=module$contents$goog$labs$userAgent$browser_matchEdgeHtml;goog.labs.userAgent.browser.isEdgeChromium=module$contents$goog$labs$userAgent$browser_matchEdgeChromium;goog.labs.userAgent.browser.isOperaChromium=module$contents$goog$labs$userAgent$browser_matchOperaChromium;goog.labs.userAgent.browser.isFirefox=module$contents$goog$labs$userAgent$browser_matchFirefox;goog.labs.userAgent.browser.isSafari=module$contents$goog$labs$userAgent$browser_matchSafari;goog.labs.userAgent.browser.isCoast=module$contents$goog$labs$userAgent$browser_matchCoast;goog.labs.userAgent.browser.isIosWebview=module$contents$goog$labs$userAgent$browser_matchIosWebview;goog.labs.userAgent.browser.isChrome=module$contents$goog$labs$userAgent$browser_matchChrome;goog.labs.userAgent.browser.isAndroidBrowser=module$contents$goog$labs$userAgent$browser_matchAndroidBrowser;function module$contents$goog$labs$userAgent$browser_isSilk(){return module$contents$goog$labs$userAgent$util_matchUserAgent("Silk")}goog.labs.userAgent.browser.isSilk=module$contents$goog$labs$userAgent$browser_isSilk;function module$contents$goog$labs$userAgent$browser_createVersionMap(e){const o={};return e.forEach(s=>{o[s[0]]=s[1]}),s=>o[s.find(c=>c in o)]||""}function module$contents$goog$labs$userAgent$browser_getVersion(){var e=module$contents$goog$labs$userAgent$util_getUserAgent();if(module$contents$goog$labs$userAgent$browser_matchIE())return module$contents$goog$labs$userAgent$browser_getIEVersion(e);e=module$contents$goog$labs$userAgent$util_extractVersionTuples(e);const o=module$contents$goog$labs$userAgent$browser_createVersionMap(e);return module$contents$goog$labs$userAgent$browser_matchOpera()?o(["Version","Opera"]):module$contents$goog$labs$userAgent$browser_matchEdgeHtml()?o(["Edge"]):module$contents$goog$labs$userAgent$browser_matchEdgeChromium()?o(["Edg"]):module$contents$goog$labs$userAgent$browser_isSilk()?o(["Silk"]):module$contents$goog$labs$userAgent$browser_matchChrome()?o(["Chrome","CriOS","HeadlessChrome"]):(e=e[2])&&e[1]||""}goog.labs.userAgent.browser.getVersion=module$contents$goog$labs$userAgent$browser_getVersion;function module$contents$goog$labs$userAgent$browser_isVersionOrHigher(e){return 0<=(0,goog.string.internal.compareVersions)(module$contents$goog$labs$userAgent$browser_getVersion(),e)}goog.labs.userAgent.browser.isVersionOrHigher=module$contents$goog$labs$userAgent$browser_isVersionOrHigher;function module$contents$goog$labs$userAgent$browser_getIEVersion(e){var o=/rv: *([\d\.]*)/.exec(e);if(o&&o[1])return o[1];o="";const s=/MSIE +([\d\.]+)/.exec(e);if(s&&s[1])if(e=/Trident\/(\d.\d)/.exec(e),s[1]=="7.0")if(e&&e[1])switch(e[1]){case"4.0":o="8.0";break;case"5.0":o="9.0";break;case"6.0":o="10.0";break;case"7.0":o="11.0"}else o="7.0";else o=s[1];return o}function module$contents$goog$labs$userAgent$browser_getFullVersionFromUserAgentString(e){var o=module$contents$goog$labs$userAgent$util_getUserAgent();if(e===module$contents$goog$labs$userAgent$browser_Brand.IE)return module$contents$goog$labs$userAgent$browser_matchIE()?module$contents$goog$labs$userAgent$browser_getIEVersion(o):"";o=module$contents$goog$labs$userAgent$util_extractVersionTuples(o);const s=module$contents$goog$labs$userAgent$browser_createVersionMap(o);switch(e){case module$contents$goog$labs$userAgent$browser_Brand.OPERA:if(module$contents$goog$labs$userAgent$browser_matchOpera())return s(["Version","Opera"]);if(module$contents$goog$labs$userAgent$browser_matchOperaChromium())return s(["OPR"]);break;case module$contents$goog$labs$userAgent$browser_Brand.EDGE:if(module$contents$goog$labs$userAgent$browser_matchEdgeHtml())return s(["Edge"]);if(module$contents$goog$labs$userAgent$browser_matchEdgeChromium())return s(["Edg"]);break;case module$contents$goog$labs$userAgent$browser_Brand.CHROMIUM:if(module$contents$goog$labs$userAgent$browser_matchChrome())return s(["Chrome","CriOS","HeadlessChrome"])}return(e===module$contents$goog$labs$userAgent$browser_Brand.FIREFOX&&module$contents$goog$labs$userAgent$browser_matchFirefox()||e===module$contents$goog$labs$userAgent$browser_Brand.SAFARI&&module$contents$goog$labs$userAgent$browser_matchSafari()||e===module$contents$goog$labs$userAgent$browser_Brand.ANDROID_BROWSER&&module$contents$goog$labs$userAgent$browser_matchAndroidBrowser()||e===module$contents$goog$labs$userAgent$browser_Brand.SILK&&module$contents$goog$labs$userAgent$browser_isSilk())&&(e=o[2])&&e[1]||""}function module$contents$goog$labs$userAgent$browser_versionOf_(e){if(module$contents$goog$labs$userAgent$browser_useUserAgentDataBrand()&&e!==module$contents$goog$labs$userAgent$browser_Brand.SILK){var o=module$contents$goog$labs$userAgent$util_getUserAgentData().brands.find(({brand:s})=>s===e);if(!o||!o.version)return NaN;o=o.version.split(".")}else{if(o=module$contents$goog$labs$userAgent$browser_getFullVersionFromUserAgentString(e),o==="")return NaN;o=o.split(".")}return o.length===0?NaN:Number(o[0])}function module$contents$goog$labs$userAgent$browser_isAtLeast(e,o){return(0,goog.asserts.assert)(Math.floor(o)===o,"Major version must be an integer"),module$contents$goog$labs$userAgent$browser_versionOf_(e)>=o}goog.labs.userAgent.browser.isAtLeast=module$contents$goog$labs$userAgent$browser_isAtLeast;function module$contents$goog$labs$userAgent$browser_isAtMost(e,o){return(0,goog.asserts.assert)(Math.floor(o)===o,"Major version must be an integer"),module$contents$goog$labs$userAgent$browser_versionOf_(e)<=o}goog.labs.userAgent.browser.isAtMost=module$contents$goog$labs$userAgent$browser_isAtMost;class module$contents$goog$labs$userAgent$browser_HighEntropyBrandVersion{constructor(o,s,c){this.brand_=o,this.version_=new module$exports$goog$labs$userAgent$highEntropy$highEntropyValue.Version(c),this.useUach_=s}getIfLoaded(){if(this.useUach_){var o=module$exports$goog$labs$userAgent$highEntropy$highEntropyData.fullVersionList.getIfLoaded();if(o!==void 0)return o=o.find(({brand:s})=>this.brand_===s),(0,goog.asserts.assertExists)(o),new module$exports$goog$labs$userAgent$highEntropy$highEntropyValue.Version(o.version)}if(module$contents$goog$labs$userAgent$browser_preUachHasLoaded)return this.version_}async load(){if(this.useUach_){var o=await module$exports$goog$labs$userAgent$highEntropy$highEntropyData.fullVersionList.load();if(o!==void 0)return o=o.find(({brand:s})=>this.brand_===s),(0,goog.asserts.assertExists)(o),new module$exports$goog$labs$userAgent$highEntropy$highEntropyValue.Version(o.version)}else await 0;return module$contents$goog$labs$userAgent$browser_preUachHasLoaded=!0,this.version_}}let module$contents$goog$labs$userAgent$browser_preUachHasLoaded=!1;async function module$contents$goog$labs$userAgent$browser_loadFullVersions(){module$contents$goog$labs$userAgent$browser_useUserAgentDataBrand(!0)&&await module$exports$goog$labs$userAgent$highEntropy$highEntropyData.fullVersionList.load(),module$contents$goog$labs$userAgent$browser_preUachHasLoaded=!0}goog.labs.userAgent.browser.loadFullVersions=module$contents$goog$labs$userAgent$browser_loadFullVersions;goog.labs.userAgent.browser.resetForTesting=()=>{module$contents$goog$labs$userAgent$browser_preUachHasLoaded=!1,module$exports$goog$labs$userAgent$highEntropy$highEntropyData.fullVersionList.resetForTesting()};function module$contents$goog$labs$userAgent$browser_fullVersionOf(e){let o="";module$contents$goog$labs$userAgent$browser_hasFullVersionList()||(o=module$contents$goog$labs$userAgent$browser_getFullVersionFromUserAgentString(e));const s=e!==module$contents$goog$labs$userAgent$browser_Brand.SILK&&module$contents$goog$labs$userAgent$browser_useUserAgentDataBrand(!0);if(s){if(!module$contents$goog$labs$userAgent$util_getUserAgentData().brands.find(({brand:c})=>c===e))return}else if(o==="")return;return new module$contents$goog$labs$userAgent$browser_HighEntropyBrandVersion(e,s,o)}goog.labs.userAgent.browser.fullVersionOf=module$contents$goog$labs$userAgent$browser_fullVersionOf;function module$contents$goog$labs$userAgent$browser_getVersionStringForLogging(e){if(module$contents$goog$labs$userAgent$browser_useUserAgentDataBrand(!0)){var o=module$contents$goog$labs$userAgent$browser_fullVersionOf(e);return o?(o=o.getIfLoaded())?o.toVersionStringForLogging():(o=module$contents$goog$labs$userAgent$util_getUserAgentData().brands.find(({brand:s})=>s===e),(0,goog.asserts.assertExists)(o),o.version):""}return module$contents$goog$labs$userAgent$browser_getFullVersionFromUserAgentString(e)}goog.labs.userAgent.browser.getVersionStringForLogging=module$contents$goog$labs$userAgent$browser_getVersionStringForLogging;goog.dom.tags={};goog.dom.tags.VOID_TAGS_={area:!0,base:!0,br:!0,col:!0,command:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0};goog.dom.tags.isVoidTag=function(e){return goog.dom.tags.VOID_TAGS_[e]===!0};const module$contents$goog$html$SafeHtml_CONSTRUCTOR_TOKEN_PRIVATE={};class module$contents$goog$html$SafeHtml_SafeHtml{constructor(o,s){this.privateDoNotAccessOrElseSafeHtmlWrappedValue_=s===module$contents$goog$html$SafeHtml_CONSTRUCTOR_TOKEN_PRIVATE?o:"",this.implementsGoogStringTypedString=!0}getTypedStringValue(){return this.privateDoNotAccessOrElseSafeHtmlWrappedValue_.toString()}toString(){return this.privateDoNotAccessOrElseSafeHtmlWrappedValue_.toString()}static unwrap(o){return module$contents$goog$html$SafeHtml_SafeHtml.unwrapTrustedHTML(o).toString()}static unwrapTrustedHTML(o){return o instanceof module$contents$goog$html$SafeHtml_SafeHtml&&o.constructor===module$contents$goog$html$SafeHtml_SafeHtml?o.privateDoNotAccessOrElseSafeHtmlWrappedValue_:(goog.asserts.fail(`expected object of type SafeHtml, got '${o}' of type `+goog.typeOf(o)),"type_error:SafeHtml")}static htmlEscape(o){return o instanceof module$contents$goog$html$SafeHtml_SafeHtml?o:(o=typeof o=="object"&&o.implementsGoogStringTypedString?o.getTypedStringValue():String(o),module$contents$goog$html$SafeHtml_SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(goog.string.internal.htmlEscape(o)))}static htmlEscapePreservingNewlines(o){return o instanceof module$contents$goog$html$SafeHtml_SafeHtml?o:(o=module$contents$goog$html$SafeHtml_SafeHtml.htmlEscape(o),module$contents$goog$html$SafeHtml_SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(goog.string.internal.newLineToBr(module$contents$goog$html$SafeHtml_SafeHtml.unwrap(o))))}static htmlEscapePreservingNewlinesAndSpaces(o){return o instanceof module$contents$goog$html$SafeHtml_SafeHtml?o:(o=module$contents$goog$html$SafeHtml_SafeHtml.htmlEscape(o),module$contents$goog$html$SafeHtml_SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(goog.string.internal.whitespaceEscape(module$contents$goog$html$SafeHtml_SafeHtml.unwrap(o))))}static comment(o){return module$contents$goog$html$SafeHtml_SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse("<!--"+goog.string.internal.htmlEscape(o)+"-->")}static create(o,s,c){return module$contents$goog$html$SafeHtml_SafeHtml.verifyTagName(String(o)),module$contents$goog$html$SafeHtml_SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse(String(o),s,c)}static verifyTagName(o){if(!module$contents$goog$html$SafeHtml_VALID_NAMES_IN_TAG.test(o))throw Error(module$contents$goog$html$SafeHtml_SafeHtml.ENABLE_ERROR_MESSAGES?`Invalid tag name <${o}>.`:"");if(o.toUpperCase()in module$contents$goog$html$SafeHtml_NOT_ALLOWED_TAG_NAMES)throw Error(module$contents$goog$html$SafeHtml_SafeHtml.ENABLE_ERROR_MESSAGES?`Tag name <${o}> is not allowed for SafeHtml.`:"")}static createIframe(o,s,c,i){o&&goog.html.TrustedResourceUrl.unwrap(o);const g={};return g.src=o||null,g.srcdoc=s&&module$contents$goog$html$SafeHtml_SafeHtml.unwrap(s),o=module$contents$goog$html$SafeHtml_SafeHtml.combineAttributes(g,{sandbox:""},c),module$contents$goog$html$SafeHtml_SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse("iframe",o,i)}static createSandboxIframe(o,s,c,i){if(!module$contents$goog$html$SafeHtml_SafeHtml.canUseSandboxIframe())throw Error(module$contents$goog$html$SafeHtml_SafeHtml.ENABLE_ERROR_MESSAGES?"The browser does not support sandboxed iframes.":"");const g={};return g.src=o?goog.html.SafeUrl.unwrap(goog.html.SafeUrl.sanitize(o)):null,g.srcdoc=s||null,g.sandbox="",o=module$contents$goog$html$SafeHtml_SafeHtml.combineAttributes(g,{},c),module$contents$goog$html$SafeHtml_SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse("iframe",o,i)}static canUseSandboxIframe(){return goog.global.HTMLIFrameElement&&"sandbox"in goog.global.HTMLIFrameElement.prototype}static createScriptSrc(o,s){return goog.html.TrustedResourceUrl.unwrap(o),o=module$contents$goog$html$SafeHtml_SafeHtml.combineAttributes({src:o},{},s),module$contents$goog$html$SafeHtml_SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse("script",o)}static createScript(o,s){for(var c in s)if(Object.prototype.hasOwnProperty.call(s,c)){var i=c.toLowerCase();if(i=="language"||i=="src"||i=="text")throw Error(module$contents$goog$html$SafeHtml_SafeHtml.ENABLE_ERROR_MESSAGES?`Cannot set "${i}" attribute`:"")}for(c="",o=module$contents$goog$array_concat(o),i=0;i<o.length;i++)c+=module$contents$goog$html$SafeScript_SafeScript.unwrap(o[i]);return o=module$contents$goog$html$SafeHtml_SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(c),module$contents$goog$html$SafeHtml_SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse("script",s,o)}static createStyle(o,s){s=module$contents$goog$html$SafeHtml_SafeHtml.combineAttributes({type:"text/css"},{},s);let c="";o=module$contents$goog$array_concat(o);for(let i=0;i<o.length;i++)c+=module$contents$goog$html$SafeStyleSheet_SafeStyleSheet.unwrap(o[i]);return o=module$contents$goog$html$SafeHtml_SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(c),module$contents$goog$html$SafeHtml_SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse("style",s,o)}static createMetaRefresh(o,s){return o=goog.html.SafeUrl.unwrap(goog.html.SafeUrl.sanitize(o)),(module$contents$goog$labs$userAgent$browser_matchIE()||module$contents$goog$labs$userAgent$browser_matchEdgeHtml())&&goog.string.internal.contains(o,";")&&(o="'"+o.replace(/'/g,"%27")+"'"),module$contents$goog$html$SafeHtml_SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse("meta",{"http-equiv":"refresh",content:(s||0)+"; url="+o})}static join(o,s){o=module$contents$goog$html$SafeHtml_SafeHtml.htmlEscape(o);const c=[],i=g=>{Array.isArray(g)?g.forEach(i):(g=module$contents$goog$html$SafeHtml_SafeHtml.htmlEscape(g),c.push(module$contents$goog$html$SafeHtml_SafeHtml.unwrap(g)))};return s.forEach(i),module$contents$goog$html$SafeHtml_SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(c.join(module$contents$goog$html$SafeHtml_SafeHtml.unwrap(o)))}static concat(o){return module$contents$goog$html$SafeHtml_SafeHtml.join(module$contents$goog$html$SafeHtml_SafeHtml.EMPTY,Array.prototype.slice.call(arguments))}static createSafeHtmlSecurityPrivateDoNotAccessOrElse(o){const s=goog.html.trustedtypes.getPolicyPrivateDoNotAccessOrElse();return o=s?s.createHTML(o):o,new module$contents$goog$html$SafeHtml_SafeHtml(o,module$contents$goog$html$SafeHtml_CONSTRUCTOR_TOKEN_PRIVATE)}static createSafeHtmlTagSecurityPrivateDoNotAccessOrElse(o,s,c){return s=`<${o}`+module$contents$goog$html$SafeHtml_SafeHtml.stringifyAttributes(o,s),c==null?c=[]:Array.isArray(c)||(c=[c]),goog.dom.tags.isVoidTag(o.toLowerCase())?(goog.asserts.assert(!c.length,`Void tag <${o}> does not allow content.`),s+=">"):(c=module$contents$goog$html$SafeHtml_SafeHtml.concat(c),s+=">"+module$contents$goog$html$SafeHtml_SafeHtml.unwrap(c)+"</"+o+">"),module$contents$goog$html$SafeHtml_SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(s)}static stringifyAttributes(o,s){let c="";if(s){for(let i in s)if(Object.prototype.hasOwnProperty.call(s,i)){if(!module$contents$goog$html$SafeHtml_VALID_NAMES_IN_TAG.test(i))throw Error(module$contents$goog$html$SafeHtml_SafeHtml.ENABLE_ERROR_MESSAGES?`Invalid attribute name "${i}".`:"");const g=s[i];g!=null&&(c+=" "+module$contents$goog$html$SafeHtml_getAttrNameAndValue(o,i,g))}}return c}static combineAttributes(o,s,c){const i={};for(var g in o)Object.prototype.hasOwnProperty.call(o,g)&&(goog.asserts.assert(g.toLowerCase()==g,"Must be lower case"),i[g]=o[g]);for(const h in s)Object.prototype.hasOwnProperty.call(s,h)&&(goog.asserts.assert(h.toLowerCase()==h,"Must be lower case"),i[h]=s[h]);if(c){for(const h in c)if(Object.prototype.hasOwnProperty.call(c,h)){if(g=h.toLowerCase(),g in o)throw Error(module$contents$goog$html$SafeHtml_SafeHtml.ENABLE_ERROR_MESSAGES?`Cannot override "${g}" attribute, got "`+h+'" with value "'+c[h]+'"':"");g in s&&delete i[g],i[h]=c[h]}}return i}}module$contents$goog$html$SafeHtml_SafeHtml.ENABLE_ERROR_MESSAGES=goog.DEBUG;module$contents$goog$html$SafeHtml_SafeHtml.SUPPORT_STYLE_ATTRIBUTE=!0;module$contents$goog$html$SafeHtml_SafeHtml.from=module$contents$goog$html$SafeHtml_SafeHtml.htmlEscape;const module$contents$goog$html$SafeHtml_VALID_NAMES_IN_TAG=/^[a-zA-Z0-9-]+$/,module$contents$goog$html$SafeHtml_URL_ATTRIBUTES={action:!0,cite:!0,data:!0,formaction:!0,href:!0,manifest:!0,poster:!0,src:!0},module$contents$goog$html$SafeHtml_NOT_ALLOWED_TAG_NAMES={[goog.dom.TagName.APPLET]:!0,[goog.dom.TagName.BASE]:!0,[goog.dom.TagName.EMBED]:!0,[goog.dom.TagName.IFRAME]:!0,[goog.dom.TagName.LINK]:!0,[goog.dom.TagName.MATH]:!0,[goog.dom.TagName.META]:!0,[goog.dom.TagName.OBJECT]:!0,[goog.dom.TagName.SCRIPT]:!0,[goog.dom.TagName.STYLE]:!0,[goog.dom.TagName.SVG]:!0,[goog.dom.TagName.TEMPLATE]:!0};function module$contents$goog$html$SafeHtml_getAttrNameAndValue(e,o,s){if(s instanceof goog.string.Const)s=goog.string.Const.unwrap(s);else if(o.toLowerCase()=="style")if(module$contents$goog$html$SafeHtml_SafeHtml.SUPPORT_STYLE_ATTRIBUTE)s=module$contents$goog$html$SafeHtml_getStyleValue(s);else throw Error(module$contents$goog$html$SafeHtml_SafeHtml.ENABLE_ERROR_MESSAGES?'Attribute "style" not supported.':"");else{if(/^on/i.test(o))throw Error(module$contents$goog$html$SafeHtml_SafeHtml.ENABLE_ERROR_MESSAGES?`Attribute "${o}" requires goog.string.Const value, "`+s+'" given.':"");if(o.toLowerCase()in module$contents$goog$html$SafeHtml_URL_ATTRIBUTES)if(s instanceof goog.html.TrustedResourceUrl)s=goog.html.TrustedResourceUrl.unwrap(s);else if(s instanceof goog.html.SafeUrl)s=goog.html.SafeUrl.unwrap(s);else if(typeof s=="string")s=goog.html.SafeUrl.sanitize(s).getTypedStringValue();else throw Error(module$contents$goog$html$SafeHtml_SafeHtml.ENABLE_ERROR_MESSAGES?`Attribute "${o}" on tag "${e}" requires goog.html.SafeUrl, goog.string.Const, or string, value "`+s+'" given.':"")}return s.implementsGoogStringTypedString&&(s=s.getTypedStringValue()),goog.asserts.assert(typeof s=="string"||typeof s=="number","String or number value expected, got "+typeof s+" with value: "+s),`${o}="`+goog.string.internal.htmlEscape(String(s))+'"'}function module$contents$goog$html$SafeHtml_getStyleValue(e){if(!goog.isObject(e))throw Error(module$contents$goog$html$SafeHtml_SafeHtml.ENABLE_ERROR_MESSAGES?'The "style" attribute requires goog.html.SafeStyle or map of style properties, '+typeof e+" given: "+e:"");return e instanceof module$contents$goog$html$SafeStyle_SafeStyle||(e=module$contents$goog$html$SafeStyle_SafeStyle.create(e)),module$contents$goog$html$SafeStyle_SafeStyle.unwrap(e)}module$contents$goog$html$SafeHtml_SafeHtml.DOCTYPE_HTML=function(){return module$contents$goog$html$SafeHtml_SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse("<!DOCTYPE html>")}();module$contents$goog$html$SafeHtml_SafeHtml.EMPTY=new module$contents$goog$html$SafeHtml_SafeHtml(goog.global.trustedTypes&&goog.global.trustedTypes.emptyHTML||"",module$contents$goog$html$SafeHtml_CONSTRUCTOR_TOKEN_PRIVATE);module$contents$goog$html$SafeHtml_SafeHtml.BR=function(){return module$contents$goog$html$SafeHtml_SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse("<br>")}();goog.html.SafeHtml=module$contents$goog$html$SafeHtml_SafeHtml;goog.html.uncheckedconversions={};goog.html.uncheckedconversions.safeHtmlFromStringKnownToSatisfyTypeContract=function(e,o){return goog.asserts.assertString(goog.string.Const.unwrap(e),"must provide justification"),goog.asserts.assert(!goog.string.internal.isEmptyOrWhitespace(goog.string.Const.unwrap(e)),"must provide non-empty justification"),module$contents$goog$html$SafeHtml_SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(o)};goog.html.uncheckedconversions.safeScriptFromStringKnownToSatisfyTypeContract=function(e,o){return goog.asserts.assertString(goog.string.Const.unwrap(e),"must provide justification"),goog.asserts.assert(!goog.string.internal.isEmptyOrWhitespace(goog.string.Const.unwrap(e)),"must provide non-empty justification"),module$contents$goog$html$SafeScript_SafeScript.createSafeScriptSecurityPrivateDoNotAccessOrElse(o)};goog.html.uncheckedconversions.safeStyleFromStringKnownToSatisfyTypeContract=function(e,o){return goog.asserts.assertString(goog.string.Const.unwrap(e),"must provide justification"),goog.asserts.assert(!goog.string.internal.isEmptyOrWhitespace(goog.string.Const.unwrap(e)),"must provide non-empty justification"),module$contents$goog$html$SafeStyle_SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse(o)};goog.html.uncheckedconversions.safeStyleSheetFromStringKnownToSatisfyTypeContract=function(e,o){return goog.asserts.assertString(goog.string.Const.unwrap(e),"must provide justification"),goog.asserts.assert(!goog.string.internal.isEmptyOrWhitespace(goog.string.Const.unwrap(e)),"must provide non-empty justification"),module$contents$goog$html$SafeStyleSheet_SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse(o)};goog.html.uncheckedconversions.safeUrlFromStringKnownToSatisfyTypeContract=function(e,o){return goog.asserts.assertString(goog.string.Const.unwrap(e),"must provide justification"),goog.asserts.assert(!goog.string.internal.isEmptyOrWhitespace(goog.string.Const.unwrap(e)),"must provide non-empty justification"),goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(o)};goog.html.uncheckedconversions.trustedResourceUrlFromStringKnownToSatisfyTypeContract=function(e,o){return goog.asserts.assertString(goog.string.Const.unwrap(e),"must provide justification"),goog.asserts.assert(!goog.string.internal.isEmptyOrWhitespace(goog.string.Const.unwrap(e)),"must provide non-empty justification"),goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(o)};goog.dom.safe={};goog.dom.safe.InsertAdjacentHtmlPosition={AFTERBEGIN:"afterbegin",AFTEREND:"afterend",BEFOREBEGIN:"beforebegin",BEFOREEND:"beforeend"};goog.dom.safe.insertAdjacentHtml=function(e,o,s){e.insertAdjacentHTML(o,module$contents$goog$html$SafeHtml_SafeHtml.unwrapTrustedHTML(s))};goog.dom.safe.SET_INNER_HTML_DISALLOWED_TAGS_={MATH:!0,SCRIPT:!0,STYLE:!0,SVG:!0,TEMPLATE:!0};goog.dom.safe.isInnerHtmlCleanupRecursive_=goog.functions.cacheReturnValue(function(){if(goog.DEBUG&&typeof document>"u")return!1;var e=document.createElement("div"),o=document.createElement("div");return o.appendChild(document.createElement("div")),e.appendChild(o),goog.DEBUG&&!e.firstChild?!1:(o=e.firstChild.firstChild,e.innerHTML=module$contents$goog$html$SafeHtml_SafeHtml.unwrapTrustedHTML(module$contents$goog$html$SafeHtml_SafeHtml.EMPTY),!o.parentElement)});goog.dom.safe.unsafeSetInnerHtmlDoNotUseOrElse=function(e,o){if(goog.dom.safe.isInnerHtmlCleanupRecursive_())for(;e.lastChild;)e.removeChild(e.lastChild);e.innerHTML=module$contents$goog$html$SafeHtml_SafeHtml.unwrapTrustedHTML(o)};goog.dom.safe.setInnerHtml=function(e,o){if(goog.asserts.ENABLE_ASSERTS&&e.tagName){var s=e.tagName.toUpperCase();if(goog.dom.safe.SET_INNER_HTML_DISALLOWED_TAGS_[s])throw Error("goog.dom.safe.setInnerHtml cannot be used to set content of "+e.tagName+".")}goog.dom.safe.unsafeSetInnerHtmlDoNotUseOrElse(e,o)};goog.dom.safe.setInnerHtmlFromConstant=function(e,o){goog.dom.safe.setInnerHtml(e,goog.html.uncheckedconversions.safeHtmlFromStringKnownToSatisfyTypeContract(goog.string.Const.from("Constant HTML to be immediatelly used."),goog.string.Const.unwrap(o)))};goog.dom.safe.setOuterHtml=function(e,o){e.outerHTML=module$contents$goog$html$SafeHtml_SafeHtml.unwrapTrustedHTML(o)};goog.dom.safe.setFormElementAction=function(e,o){o=o instanceof goog.html.SafeUrl?o:goog.html.SafeUrl.sanitizeAssertUnchanged(o),goog.dom.asserts.assertIsHTMLFormElement(e).action=goog.html.SafeUrl.unwrap(o)};goog.dom.safe.setButtonFormAction=function(e,o){o=o instanceof goog.html.SafeUrl?o:goog.html.SafeUrl.sanitizeAssertUnchanged(o),goog.dom.asserts.assertIsHTMLButtonElement(e).formAction=goog.html.SafeUrl.unwrap(o)};goog.dom.safe.setInputFormAction=function(e,o){o=o instanceof goog.html.SafeUrl?o:goog.html.SafeUrl.sanitizeAssertUnchanged(o),goog.dom.asserts.assertIsHTMLInputElement(e).formAction=goog.html.SafeUrl.unwrap(o)};goog.dom.safe.setStyle=function(e,o){e.style.cssText=module$contents$goog$html$SafeStyle_SafeStyle.unwrap(o)};goog.dom.safe.documentWrite=function(e,o){e.write(module$contents$goog$html$SafeHtml_SafeHtml.unwrapTrustedHTML(o))};goog.dom.safe.setAnchorHref=function(e,o){goog.dom.asserts.assertIsHTMLAnchorElement(e),o=o instanceof goog.html.SafeUrl?o:goog.html.SafeUrl.sanitizeAssertUnchanged(o),e.href=goog.html.SafeUrl.unwrap(o)};goog.dom.safe.setAudioSrc=function(e,o){if(goog.dom.asserts.assertIsHTMLAudioElement(e),!(o instanceof goog.html.SafeUrl)){var s=/^data:audio\//i.test(o);o=goog.html.SafeUrl.sanitizeAssertUnchanged(o,s)}e.src=goog.html.SafeUrl.unwrap(o)};goog.dom.safe.setVideoSrc=function(e,o){if(goog.dom.asserts.assertIsHTMLVideoElement(e),!(o instanceof goog.html.SafeUrl)){var s=/^data:video\//i.test(o);o=goog.html.SafeUrl.sanitizeAssertUnchanged(o,s)}e.src=goog.html.SafeUrl.unwrap(o)};goog.dom.safe.setEmbedSrc=function(e,o){goog.dom.asserts.assertIsHTMLEmbedElement(e),e.src=goog.html.TrustedResourceUrl.unwrapTrustedScriptURL(o)};goog.dom.safe.setFrameSrc=function(e,o){goog.dom.asserts.assertIsHTMLFrameElement(e),e.src=goog.html.TrustedResourceUrl.unwrap(o)};goog.dom.safe.setIframeSrc=function(e,o){goog.dom.asserts.assertIsHTMLIFrameElement(e),e.src=goog.html.TrustedResourceUrl.unwrap(o)};goog.dom.safe.setIframeSrcdoc=function(e,o){goog.dom.asserts.assertIsHTMLIFrameElement(e),e.srcdoc=module$contents$goog$html$SafeHtml_SafeHtml.unwrapTrustedHTML(o)};goog.dom.safe.setLinkHrefAndRel=function(e,o,s){goog.dom.asserts.assertIsHTMLLinkElement(e),e.rel=s,goog.string.internal.caseInsensitiveContains(s,"stylesheet")?(goog.asserts.assert(o instanceof goog.html.TrustedResourceUrl,'URL must be TrustedResourceUrl because "rel" contains "stylesheet"'),e.href=goog.html.TrustedResourceUrl.unwrap(o),(o=goog.dom.safe.getStyleNonce(e.ownerDocument&&e.ownerDocument.defaultView))&&e.setAttribute("nonce",o)):e.href=o instanceof goog.html.TrustedResourceUrl?goog.html.TrustedResourceUrl.unwrap(o):o instanceof goog.html.SafeUrl?goog.html.SafeUrl.unwrap(o):goog.html.SafeUrl.unwrap(goog.html.SafeUrl.sanitizeAssertUnchanged(o))};goog.dom.safe.setObjectData=function(e,o){goog.dom.asserts.assertIsHTMLObjectElement(e),e.data=goog.html.TrustedResourceUrl.unwrapTrustedScriptURL(o)};goog.dom.safe.setScriptSrc=function(e,o){goog.dom.asserts.assertIsHTMLScriptElement(e),goog.dom.safe.setNonceForScriptElement_(e),e.src=goog.html.TrustedResourceUrl.unwrapTrustedScriptURL(o)};goog.dom.safe.setScriptContent=function(e,o){goog.dom.asserts.assertIsHTMLScriptElement(e),goog.dom.safe.setNonceForScriptElement_(e),e.textContent=module$contents$goog$html$SafeScript_SafeScript.unwrapTrustedScript(o)};goog.dom.safe.setNonceForScriptElement_=function(e){const o=goog.dom.safe.getScriptNonce(e.ownerDocument&&e.ownerDocument.defaultView);o&&e.setAttribute("nonce",o)};goog.dom.safe.setLocationHref=function(e,o){goog.dom.asserts.assertIsLocation(e),o=o instanceof goog.html.SafeUrl?o:goog.html.SafeUrl.sanitizeAssertUnchanged(o),e.href=goog.html.SafeUrl.unwrap(o)};goog.dom.safe.assignLocation=function(e,o){goog.dom.asserts.assertIsLocation(e),o=o instanceof goog.html.SafeUrl?o:goog.html.SafeUrl.sanitizeAssertUnchanged(o),e.assign(goog.html.SafeUrl.unwrap(o))};goog.dom.safe.replaceLocation=function(e,o){o=o instanceof goog.html.SafeUrl?o:goog.html.SafeUrl.sanitizeAssertUnchanged(o),e.replace(goog.html.SafeUrl.unwrap(o))};goog.dom.safe.openInWindow=function(e,o,s,c){return e=e instanceof goog.html.SafeUrl?e:goog.html.SafeUrl.sanitizeAssertUnchanged(e),o=o||goog.global,s=s instanceof goog.string.Const?goog.string.Const.unwrap(s):s||"",c!==void 0?o.open(goog.html.SafeUrl.unwrap(e),s,c):o.open(goog.html.SafeUrl.unwrap(e),s)};goog.dom.safe.parseFromStringHtml=function(e,o){return goog.dom.safe.parseFromString(e,o,"text/html")};goog.dom.safe.parseFromString=function(e,o,s){return e.parseFromString(module$contents$goog$html$SafeHtml_SafeHtml.unwrapTrustedHTML(o),s)};goog.dom.safe.createImageFromBlob=function(e){if(!/^image\/.*/g.test(e.type))throw Error("goog.dom.safe.createImageFromBlob only accepts MIME type image/.*.");var o=goog.global.URL.createObjectURL(e);return e=new goog.global.Image,e.onload=function(){goog.global.URL.revokeObjectURL(o)},e.src=o,e};goog.dom.safe.createContextualFragment=function(e,o){return e.createContextualFragment(module$contents$goog$html$SafeHtml_SafeHtml.unwrapTrustedHTML(o))};goog.dom.safe.getScriptNonce=function(e){return goog.dom.safe.getNonce_("script[nonce]",e)};goog.dom.safe.getStyleNonce=function(e){return goog.dom.safe.getNonce_('style[nonce],link[rel="stylesheet"][nonce]',e)};goog.dom.safe.NONCE_PATTERN_=/^[\w+/_-]+[=]{0,2}$/;goog.dom.safe.getNonce_=function(e,o){return o=(o||goog.global).document,o.querySelector&&(e=o.querySelector(e))&&(e=e.nonce||e.getAttribute("nonce"))&&goog.dom.safe.NONCE_PATTERN_.test(e)?e:""};goog.string.DETECT_DOUBLE_ESCAPING=!1;goog.string.FORCE_NON_DOM_HTML_UNESCAPING=!1;goog.string.Unicode={NBSP:" ",ZERO_WIDTH_SPACE:"​"};goog.string.startsWith=goog.string.internal.startsWith;goog.string.endsWith=goog.string.internal.endsWith;goog.string.caseInsensitiveStartsWith=goog.string.internal.caseInsensitiveStartsWith;goog.string.caseInsensitiveEndsWith=goog.string.internal.caseInsensitiveEndsWith;goog.string.caseInsensitiveEquals=goog.string.internal.caseInsensitiveEquals;goog.string.subs=function(e,o){const s=e.split("%s");let c="";const i=Array.prototype.slice.call(arguments,1);for(;i.length&&1<s.length;)c+=s.shift()+i.shift();return c+s.join("%s")};goog.string.collapseWhitespace=function(e){return e.replace(/[\s\xa0]+/g," ").replace(/^\s+|\s+$/g,"")};goog.string.isEmptyOrWhitespace=goog.string.internal.isEmptyOrWhitespace;goog.string.isEmptyString=function(e){return e.length==0};goog.string.isEmpty=goog.string.isEmptyOrWhitespace;goog.string.isEmptyOrWhitespaceSafe=function(e){return goog.string.isEmptyOrWhitespace(goog.string.makeSafe(e))};goog.string.isEmptySafe=goog.string.isEmptyOrWhitespaceSafe;goog.string.isBreakingWhitespace=function(e){return!/[^\t\n\r ]/.test(e)};goog.string.isAlpha=function(e){return!/[^a-zA-Z]/.test(e)};goog.string.isNumeric=function(e){return!/[^0-9]/.test(e)};goog.string.isAlphaNumeric=function(e){return!/[^a-zA-Z0-9]/.test(e)};goog.string.isSpace=function(e){return e==" "};goog.string.isUnicodeChar=function(e){return e.length==1&&" "<=e&&"~">=e||""<=e&&"�">=e};goog.string.stripNewlines=function(e){return e.replace(/(\r\n|\r|\n)+/g," ")};goog.string.canonicalizeNewlines=function(e){return e.replace(/(\r\n|\r|\n)/g,`
`)};goog.string.normalizeWhitespace=function(e){return e.replace(/\xa0|\s/g," ")};goog.string.normalizeSpaces=function(e){return e.replace(/\xa0|[ \t]+/g," ")};goog.string.collapseBreakingSpaces=function(e){return e.replace(/[\t\r\n ]+/g," ").replace(/^[\t\r\n ]+|[\t\r\n ]+$/g,"")};goog.string.trim=goog.string.internal.trim;goog.string.trimLeft=function(e){return e.replace(/^[\s\xa0]+/,"")};goog.string.trimRight=function(e){return e.replace(/[\s\xa0]+$/,"")};goog.string.caseInsensitiveCompare=goog.string.internal.caseInsensitiveCompare;goog.string.numberAwareCompare_=function(e,o,s){if(e==o)return 0;if(!e)return-1;if(!o)return 1;const c=e.toLowerCase().match(s),i=o.toLowerCase().match(s),g=Math.min(c.length,i.length);for(let h=0;h<g;h++){s=c[h];const $=i[h];if(s!=$)return e=parseInt(s,10),!isNaN(e)&&(o=parseInt($,10),!isNaN(o)&&e-o)?e-o:s<$?-1:1}return c.length!=i.length?c.length-i.length:e<o?-1:1};goog.string.intAwareCompare=function(e,o){return goog.string.numberAwareCompare_(e,o,/\d+|\D+/g)};goog.string.floatAwareCompare=function(e,o){return goog.string.numberAwareCompare_(e,o,/\d+|\.\d+|\D+/g)};goog.string.numerateCompare=goog.string.floatAwareCompare;goog.string.urlEncode=function(e){return encodeURIComponent(String(e))};goog.string.urlDecode=function(e){return decodeURIComponent(e.replace(/\+/g," "))};goog.string.newLineToBr=goog.string.internal.newLineToBr;goog.string.htmlEscape=function(e,o){return e=goog.string.internal.htmlEscape(e,o),goog.string.DETECT_DOUBLE_ESCAPING&&(e=e.replace(goog.string.E_RE_,"&#101;")),e};goog.string.E_RE_=/e/g;goog.string.unescapeEntities=function(e){return goog.string.contains(e,"&")?!goog.string.FORCE_NON_DOM_HTML_UNESCAPING&&"document"in goog.global?goog.string.unescapeEntitiesUsingDom_(e):goog.string.unescapePureXmlEntities_(e):e};goog.string.unescapeEntitiesWithDocument=function(e,o){return goog.string.contains(e,"&")?goog.string.unescapeEntitiesUsingDom_(e,o):e};goog.string.unescapeEntitiesUsingDom_=function(e,o){const s={"&amp;":"&","&lt;":"<","&gt;":">","&quot;":'"'};let c;return c=o?o.createElement("div"):goog.global.document.createElement("div"),e.replace(goog.string.HTML_ENTITY_PATTERN_,function(i,g){let h=s[i];return h||(g.charAt(0)=="#"&&(g=+("0"+g.slice(1)),isNaN(g)||(h=String.fromCharCode(g))),h||(goog.dom.safe.setInnerHtml(c,goog.html.uncheckedconversions.safeHtmlFromStringKnownToSatisfyTypeContract(goog.string.Const.from("Single HTML entity."),i+" ")),h=c.firstChild.nodeValue.slice(0,-1)),s[i]=h)})};goog.string.unescapePureXmlEntities_=function(e){return e.replace(/&([^;]+);/g,function(o,s){switch(s){case"amp":return"&";case"lt":return"<";case"gt":return">";case"quot":return'"';default:return s.charAt(0)!="#"||(s=+("0"+s.slice(1)),isNaN(s))?o:String.fromCharCode(s)}})};goog.string.HTML_ENTITY_PATTERN_=/&([^;\s<&]+);?/g;goog.string.whitespaceEscape=function(e,o){return goog.string.newLineToBr(e.replace(/  /g," &#160;"),o)};goog.string.preserveSpaces=function(e){return e.replace(/(^|[\n ]) /g,"$1"+goog.string.Unicode.NBSP)};goog.string.stripQuotes=function(e,o){const s=o.length;for(let c=0;c<s;c++){const i=s==1?o:o.charAt(c);if(e.charAt(0)==i&&e.charAt(e.length-1)==i)return e.substring(1,e.length-1)}return e};goog.string.truncate=function(e,o,s){return s&&(e=goog.string.unescapeEntities(e)),e.length>o&&(e=e.substring(0,o-3)+"..."),s&&(e=goog.string.htmlEscape(e)),e};goog.string.truncateMiddle=function(e,o,s,c){if(s&&(e=goog.string.unescapeEntities(e)),c&&e.length>o){c>o&&(c=o);var i=e.length-c;e=e.substring(0,o-c)+"..."+e.substring(i)}else e.length>o&&(c=Math.floor(o/2),i=e.length-c,e=e.substring(0,c+o%2)+"..."+e.substring(i));return s&&(e=goog.string.htmlEscape(e)),e};goog.string.specialEscapeChars_={"\0":"\\0","\b":"\\b","\f":"\\f","\n":"\\n","\r":"\\r","	":"\\t","\v":"\\x0B",'"':'\\"',"\\":"\\\\","<":"\\u003C"};goog.string.jsEscapeCache_={"'":"\\'"};goog.string.quote=function(e){e=String(e);const o=['"'];for(let s=0;s<e.length;s++){const c=e.charAt(s),i=c.charCodeAt(0);o[s+1]=goog.string.specialEscapeChars_[c]||(31<i&&127>i?c:goog.string.escapeChar(c))}return o.push('"'),o.join("")};goog.string.escapeString=function(e){const o=[];for(let s=0;s<e.length;s++)o[s]=goog.string.escapeChar(e.charAt(s));return o.join("")};goog.string.escapeChar=function(e){if(e in goog.string.jsEscapeCache_)return goog.string.jsEscapeCache_[e];if(e in goog.string.specialEscapeChars_)return goog.string.jsEscapeCache_[e]=goog.string.specialEscapeChars_[e];let o;const s=e.charCodeAt(0);return 31<s&&127>s?o=e:(256>s?(o="\\x",(16>s||256<s)&&(o+="0")):(o="\\u",4096>s&&(o+="0")),o+=s.toString(16).toUpperCase()),goog.string.jsEscapeCache_[e]=o};goog.string.contains=goog.string.internal.contains;goog.string.caseInsensitiveContains=goog.string.internal.caseInsensitiveContains;goog.string.countOf=function(e,o){return e&&o?e.split(o).length-1:0};goog.string.removeAt=function(e,o,s){let c=e;return 0<=o&&o<e.length&&0<s&&(c=e.slice(0,o)+e.slice(o+s)),c};goog.string.remove=function(e,o){return e.replace(o,"")};goog.string.removeAll=function(e,o){return o=new RegExp(goog.string.regExpEscape(o),"g"),e.replace(o,"")};goog.string.replaceAll=function(e,o,s){return o=new RegExp(goog.string.regExpEscape(o),"g"),e.replace(o,s.replace(/\$/g,"$$$$"))};goog.string.regExpEscape=function(e){return String(e).replace(/([-()\[\]{}+?*.$\^|,:#<!\\])/g,"\\$1").replace(/\x08/g,"\\x08")};goog.string.repeat=String.prototype.repeat?function(e,o){return e.repeat(o)}:function(e,o){return Array(o+1).join(e)};goog.string.padNumber=function(e,o,s){if(!Number.isFinite(e))return String(e);e=s!==void 0?e.toFixed(s):String(e),s=e.indexOf("."),s===-1&&(s=e.length);const c=e[0]==="-"?"-":"";return c&&(e=e.substring(1)),c+goog.string.repeat("0",Math.max(0,o-s))+e};goog.string.makeSafe=function(e){return e==null?"":String(e)};goog.string.getRandomString=function(){return Math.floor(2147483648*Math.random()).toString(36)+Math.abs(Math.floor(2147483648*Math.random())^goog.now()).toString(36)};goog.string.compareVersions=goog.string.internal.compareVersions;goog.string.hashCode=function(e){let o=0;for(let s=0;s<e.length;++s)o=31*o+e.charCodeAt(s)>>>0;return o};goog.string.uniqueStringCounter_=2147483648*Math.random()|0;goog.string.createUniqueString=function(){return"goog_"+goog.string.uniqueStringCounter_++};goog.string.toNumber=function(e){const o=Number(e);return o==0&&goog.string.isEmptyOrWhitespace(e)?NaN:o};goog.string.isLowerCamelCase=function(e){return/^[a-z]+([A-Z][a-z]*)*$/.test(e)};goog.string.isUpperCamelCase=function(e){return/^([A-Z][a-z]*)+$/.test(e)};goog.string.toCamelCase=function(e){return String(e).replace(/\-([a-z])/g,function(o,s){return s.toUpperCase()})};goog.string.toSelectorCase=function(e){return String(e).replace(/([A-Z])/g,"-$1").toLowerCase()};goog.string.toTitleCase=function(e,o){return o=typeof o=="string"?goog.string.regExpEscape(o):"\\s",e.replace(new RegExp("(^"+(o?"|["+o+"]+":"")+")([a-z])","g"),function(s,c,i){return c+i.toUpperCase()})};goog.string.capitalize=function(e){return String(e.charAt(0)).toUpperCase()+String(e.slice(1)).toLowerCase()};goog.string.parseInt=function(e){return isFinite(e)&&(e=String(e)),typeof e=="string"?/^\s*-?0x/i.test(e)?parseInt(e,16):parseInt(e,10):NaN};goog.string.splitLimit=function(e,o,s){e=e.split(o);const c=[];for(;0<s&&e.length;)c.push(e.shift()),s--;return e.length&&c.push(e.join(o)),c};goog.string.lastComponent=function(e,o){if(o)typeof o=="string"&&(o=[o]);else return e;let s=-1;for(let c=0;c<o.length;c++){if(o[c]=="")continue;const i=e.lastIndexOf(o[c]);i>s&&(s=i)}return s==-1?e:e.slice(s+1)};goog.string.editDistance=function(e,o){const s=[],c=[];if(e==o)return 0;if(!e.length||!o.length)return Math.max(e.length,o.length);for(var i=0;i<o.length+1;i++)s[i]=i;for(i=0;i<e.length;i++){c[0]=i+1;for(var g=0;g<o.length;g++)c[g+1]=Math.min(c[g]+1,s[g+1]+1,s[g]+ +(e[i]!=o[g]));for(g=0;g<s.length;g++)s[g]=c[g]}return c[o.length]};goog.string.path={};goog.string.path.baseName=function(e){const o=e.lastIndexOf("/")+1;return e.slice(o)};goog.string.path.basename=goog.string.path.baseName;goog.string.path.dirname=function(e){const o=e.lastIndexOf("/")+1;return e=e.slice(0,o),/^\/+$/.test(e)||(e=e.replace(/\/+$/,"")),e};goog.string.path.extension=function(e){e=goog.string.path.baseName(e).replace(/\.+/g,".");const o=e.lastIndexOf(".");return 0>=o?"":e.slice(o+1)};goog.string.path.join=function(e){let o=arguments[0];for(let s=1;s<arguments.length;s++){const c=arguments[s];o=goog.string.startsWith(c,"/")?c:o==""||goog.string.endsWith(o,"/")?o+c:o+("/"+c)}return o};goog.string.path.normalizePath=function(e){if(e=="")return".";let o="";goog.string.startsWith(e,"/")&&(o="/",goog.string.startsWith(e,"//")&&!goog.string.startsWith(e,"///")&&(o="//")),e=e.split("/");const s=[];for(let c=0;c<e.length;c++){const i=e[c];i!=""&&i!="."&&(i!=".."||!o&&!s.length||module$contents$goog$array_peek(s)==".."?s.push(i):s.pop())}return o+s.join("/")||"."};goog.string.path.split=function(e){const o=goog.string.path.dirname(e);return e=goog.string.path.baseName(e),[o,e]};const DEBUG_WASI$$module$src$filesystem$wasi=!1;function assertLeadingSlash$$module$src$filesystem$wasi(e){return/^\//g.test(e)?e:`/${e}`}function removeLeadingSlash$$module$src$filesystem$wasi(e){return e.replace(/^\//g,"")}function shouldOpenReader$$module$src$filesystem$wasi(e){return(e&(WASI_RIGHT_FD_READ$$module$src$filesystem$constants|WASI_RIGHT_FD_READDIR$$module$src$filesystem$constants))!==goog.global.BigInt(0)}function performanceNowPoly$$module$src$filesystem$wasi(){if(typeof performance>"u"||typeof performance.now>"u"){const e=Date.now();return Date.now()-e}return performance.now()}function concatUint8Arrays$$module$src$filesystem$wasi(e){var o=e.reduce((c,i)=>c+i.length,0);if(e.length!==0){o=new Uint8Array(o);var s=0;for(const c of e)o.set(c,s),s+=c.length;return o}}const WASI$$module$src$filesystem$wasi=function({}){this.fd=Array.from({length:4}),this.fd[0]={fd:0,path:"/dev/stdin",seekPos:goog.global.BigInt(0),buffers:[],open:!1},this.fd[1]={fd:1,path:"/dev/stdout",seekPos:goog.global.BigInt(0),buffers:[],open:!1},this.fd[2]={fd:2,path:"/dev/stderr",seekPos:goog.global.BigInt(0),buffers:[],open:!1},this.fd[3]={fd:3,path:"/",seekPos:goog.global.BigInt(0),buffers:[],open:!1},this.getMemory=this.getMemory.bind(this),this.CPUTIME_START=0};WASI$$module$src$filesystem$wasi.prototype.start=function(e){this.CPUTIME_START=performanceNowPoly$$module$src$filesystem$wasi(),e.exports._start()};WASI$$module$src$filesystem$wasi.prototype.getImports=function(e){const o={};e=WebAssembly.Module.imports(e);for(const s of e)s.kind==="function"&&s.module.startsWith("wasi_")&&(typeof o[s.module]!="object"&&(o[s.module]={}),o[s.module][s.name]=this[s.name].bind(this));return o};WASI$$module$src$filesystem$wasi.prototype.setMemory=function(e){this.memory=e};WASI$$module$src$filesystem$wasi.prototype.getMemory=function(){return this.view&&this.view.buffer&&this.view.buffer.byteLength||(this.view=new DataView(this.memory.buffer)),this.view};WASI$$module$src$filesystem$wasi.prototype.msToNs=function(e){const o=Math.trunc(e);return e=goog.global.BigInt(Math.round(1e6*(e-o))),goog.global.BigInt(o)*goog.global.BigInt(1e6)+e};WASI$$module$src$filesystem$wasi.prototype.now=function(e){switch(e){case WASI_CLOCK_MONOTONIC$$module$src$filesystem$constants:return Math.floor(performanceNowPoly$$module$src$filesystem$wasi());case WASI_CLOCK_REALTIME$$module$src$filesystem$constants:return this.msToNs(Date.now());case WASI_CLOCK_PROCESS_CPUTIME_ID$$module$src$filesystem$constants:case WASI_CLOCK_THREAD_CPUTIME_ID$$module$src$filesystem$constants:return Math.floor(performanceNowPoly$$module$src$filesystem$wasi()-this.CPUTIME_START);default:return 0}};WASI$$module$src$filesystem$wasi.prototype.args_get=function(e,o){return WASI_ESUCCESS$$module$src$filesystem$constants};WASI$$module$src$filesystem$wasi.prototype.args_sizes_get=function(e,o){return WASI_ESUCCESS$$module$src$filesystem$constants};WASI$$module$src$filesystem$wasi.prototype.clock_res_get=function(e,o){return WASI_ESUCCESS$$module$src$filesystem$constants};WASI$$module$src$filesystem$wasi.prototype.clock_time_get=function(e,o,s){const c=this.getMemory(),i=this.now(e);return c.setBigUint64(s,goog.global.BigInt(i),!0),WASI_ESUCCESS$$module$src$filesystem$constants};WASI$$module$src$filesystem$wasi.prototype.environ_get=function(e,o){return WASI_ESUCCESS$$module$src$filesystem$constants};WASI$$module$src$filesystem$wasi.prototype.environ_sizes_get=function(e,o){return WASI_ESUCCESS$$module$src$filesystem$constants};WASI$$module$src$filesystem$wasi.prototype.fd_advise=function(e,o,s,c){return WASI_ENOSYS$$module$src$filesystem$constants};WASI$$module$src$filesystem$wasi.prototype.fd_allocate=function(e,o,s){return WASI_ENOSYS$$module$src$filesystem$constants};WASI$$module$src$filesystem$wasi.prototype.fd_close=function(e){return this.fd[e]&&(this.fd[e].open=!1),WASI_ESUCCESS$$module$src$filesystem$constants};WASI$$module$src$filesystem$wasi.prototype.fd_datasync=function(e){return WASI_ESUCCESS$$module$src$filesystem$constants};WASI$$module$src$filesystem$wasi.prototype.fd_fdstat_get=function(e,o){const s=this.getMemory();return s.setUint8(o+4,WASI_FILETYPE_REGULAR_FILE$$module$src$filesystem$constants),s.setUint16(o+2,0,!0),s.setUint16(o+4,0,!0),s.setBigUint64(o+8,goog.global.BigInt(RIGHTS_REGULAR_FILE_BASE$$module$src$filesystem$constants),!0),s.setBigUint64(o+8+8,goog.global.BigInt(RIGHTS_REGULAR_FILE_INHERITING$$module$src$filesystem$constants),!0),WASI_ESUCCESS$$module$src$filesystem$constants};WASI$$module$src$filesystem$wasi.prototype.fd_fdstat_set_flags=function(e,o){return WASI_ENOSYS$$module$src$filesystem$constants};WASI$$module$src$filesystem$wasi.prototype.fd_fdstat_set_rights=function(e,o,s){return WASI_ESUCCESS$$module$src$filesystem$constants};WASI$$module$src$filesystem$wasi.prototype.fd_filestat_get=function(e,o){let s=0;this.fd[e]&&(s=this.fd[e].buffers.reduce(function(i,g){return i+(g==null?void 0:g.byteLength)?g==null?void 0:g.byteLength:0},0));const c=this.getMemory();return c.setBigUint64(o,goog.global.BigInt(e),!0),o+=8,c.setBigUint64(o,goog.global.BigInt(e),!0),o+=8,c.setUint8(o,WASI_FILETYPE_REGULAR_FILE$$module$src$filesystem$constants),o+=8,c.setBigUint64(o,goog.global.BigInt(1),!0),o+=8,c.setBigUint64(o,goog.global.BigInt(s),!0),o+=8,c.setBigUint64(o,this.msToNs(this.CPUTIME_START),!0),o+=8,c.setBigUint64(o,this.msToNs(this.CPUTIME_START),!0),c.setBigUint64(o+8,this.msToNs(this.CPUTIME_START),!0),WASI_ESUCCESS$$module$src$filesystem$constants};WASI$$module$src$filesystem$wasi.prototype.fd_filestat_set_size=function(e,o){return WASI_ESUCCESS$$module$src$filesystem$constants};WASI$$module$src$filesystem$wasi.prototype.fd_filestat_set_times=function(e,o,s,c){return WASI_ESUCCESS$$module$src$filesystem$constants};WASI$$module$src$filesystem$wasi.prototype.fd_pread=function(e,o,s,c,i){return WASI_ESUCCESS$$module$src$filesystem$constants};WASI$$module$src$filesystem$wasi.prototype.fd_prestat_dir_name=function(e,o,s){return!this.fd[e]&&!this.fd[e-1]?WASI_EBADF$$module$src$filesystem$constants:({path:s}=this.fd[e],e=this.getMemory(),s=encoder$$module$src$utils$text_encoders.encode(s),new Uint8Array(e.buffer).set(s,o),WASI_ESUCCESS$$module$src$filesystem$constants)};WASI$$module$src$filesystem$wasi.prototype.fd_prestat_get=function(e,o){if(!this.fd[e])return WASI_EBADF$$module$src$filesystem$constants;var{path:s}=this.fd[e];return e=this.getMemory(),s=encoder$$module$src$utils$text_encoders.encode(s),e.setUint8(o,WASI_PREOPENTYPE_DIR$$module$src$filesystem$constants),e.setUint32(o+4,s.byteLength,!0),WASI_ESUCCESS$$module$src$filesystem$constants};WASI$$module$src$filesystem$wasi.prototype.fd_pwrite=function(e,o,s,c,i){return console.log("fd_pwrite",e,o,s,c,i,arguments),WASI_ESUCCESS$$module$src$filesystem$constants};WASI$$module$src$filesystem$wasi.prototype.fd_read=function(e,o,s,c){const i=this.fd[e]&&this.fd[e].buffers;var g=i.reduce((et,tt)=>et+tt.length,0);const h=this.getMemory();if(i&&i.length!==0){var $=Number(this.fd[e].seekPos),j=0,_=!1;if($>=g)return j=h.getUint32(o,!0),h.setUint8(j,"\0"),h.setUint32(c,0,!0),WASI_ESUCCESS$$module$src$filesystem$constants;for(g=0;g<s;g++){var _e=o+8*g;const et=h.getUint32(_e,!0);_e=h.getUint32(_e+4,!0),_||(j+=_e,Array.from({length:_e},(tt,at)=>at).reduce((tt,at)=>{if(_)return tt;const[rt,dt]=tt;let mt=tt=0,st=!1,ot=0,nt;if(at===0)for(;!st;)nt=i[tt]?i[tt].byteLength:0,ot<=$&&nt+ot>$?(st=!0,mt=$-ot):(ot+=nt,tt+=1);else tt=rt,mt=dt;return i[tt]?(h.setUint8(et+at,i[tt][mt]),mt+1>=i[tt].byteLength?(tt=rt+1,mt=0):mt+=1):(h.setUint8(et+at,"\0"),$+=at,_=!0),[tt,mt]},[0,0]),_||($+=_e))}return this.fd[e].seekPos=goog.global.BigInt($),h.setUint32(c,j,!0),WASI_ESUCCESS$$module$src$filesystem$constants}console.error("Reading non existent file",e,this.fd[e])};WASI$$module$src$filesystem$wasi.prototype.fd_readdir=function(e,o,s,c,i){return WASI_ESUCCESS$$module$src$filesystem$constants};WASI$$module$src$filesystem$wasi.prototype.fd_renumber=function(e,o){return WASI_ESUCCESS$$module$src$filesystem$constants};WASI$$module$src$filesystem$wasi.prototype.fd_seek=function(e,o,s,c){const i=this.getMemory();switch(s){case WASI_WHENCE_CUR$$module$src$filesystem$constants:var g;this.fd[e].seekPos=((g=this.fd[e].seekPos)!=null?g:goog.global.BigInt(0))+goog.global.BigInt(o);break;case WASI_WHENCE_END$$module$src$filesystem$constants:g=(this.fd[e].buffers||[]).reduce((h,$)=>h+$.length,0),this.fd[e].seekPos=BigInt(g)+BigInt(o);break;case WASI_WHENCE_SET$$module$src$filesystem$constants:this.fd[e].seekPos=BigInt(o)}return i.setBigUint64(c,this.fd[e].seekPos,!0),WASI_ESUCCESS$$module$src$filesystem$constants};WASI$$module$src$filesystem$wasi.prototype.fd_sync=function(e){return WASI_ESUCCESS$$module$src$filesystem$constants};WASI$$module$src$filesystem$wasi.prototype.fd_tell=function(e,o){const s=this.getMemory();return this.fd[e].seekPos||(this.fd[e].seekPos=goog.global.BigInt(0)),s.setBigUint64(o,this.fd[e].seekPos,!0),WASI_ESUCCESS$$module$src$filesystem$constants};WASI$$module$src$filesystem$wasi.prototype.fd_write=function(e,o,s,c){const i=this.getMemory();this.fd[e].buffers=this.fd[e].buffers||[],this.fd[e].buffers=0<this.fd[e].buffers.length?[concatUint8Arrays$$module$src$filesystem$wasi(this.fd[e].buffers)]:this.fd[e].buffers;let g=0;for(let j=0;j<s;j++){var h=o+8*j,$=i.getUint32(h,!0);if(h=i.getUint32(h+4,!0),g+=h,$=new Uint8Array(i.buffer,$,h),this.fd[e].buffers[0]&&this.fd[e].seekPos<this.fd[e].buffers[0].length){const _=Number(this.fd[e].seekPos);$.slice(0,h).forEach((_e,et)=>{this.fd[e].buffers[0][_+et]=_e})}else this.fd[e].buffers.push($.slice(0,h))}return this.fd[e].seekPos+=goog.global.BigInt(g),i.setUint32(c,g,!0),[1,2].includes(e)&&console.log(decoder$$module$src$utils$text_encoders.decode(concatUint8Arrays$$module$src$filesystem$wasi(this.fd[e].buffers))),WASI_ESUCCESS$$module$src$filesystem$constants};WASI$$module$src$filesystem$wasi.prototype.path_create_directory=function(e,o,s){return WASI_ESUCCESS$$module$src$filesystem$constants};WASI$$module$src$filesystem$wasi.prototype.path_filestat_get=function(e,o,s,c,i){return WASI_ESUCCESS$$module$src$filesystem$constants};WASI$$module$src$filesystem$wasi.prototype.path_filestat_set_times=function(e,o,s,c,i,g,h){return WASI_ESUCCESS$$module$src$filesystem$constants};WASI$$module$src$filesystem$wasi.prototype.path_link=function(e,o,s,c,i,g,h){return WASI_ESUCCESS$$module$src$filesystem$constants};WASI$$module$src$filesystem$wasi.prototype.path_open=function(e,o,s,c,i,g,h,$,j){const _=this.getMemory();var _e=(this.fd[e]||{path:"/"}).path,et=new Uint8Array(_.buffer,s,c);et=decoder$$module$src$utils$text_encoders.decode(et);const tt=assertLeadingSlash$$module$src$filesystem$wasi((0,goog.string.path.normalizePath)(goog.string.path.join(e===3?"":_e,et)));return tt.startsWith("/..")||tt==="/._"||tt==="/.AppleDouble"?WASI_EBADF$$module$src$filesystem$constants:((_e=Object.values(this.fd).find(at=>at.path===tt&&Array.isArray(at.buffers)))?et=_e.fd:(et=this.fd.length,this.fd[et]={fd:et}),this.fd[et]={...this.fd[et],path:tt,type:"file",seekPos:goog.global.BigInt(0),buffers:_e?this.fd[et].buffers:[],open:!0},shouldOpenReader$$module$src$filesystem$wasi(g)&&DEBUG_WASI$$module$src$filesystem$wasi&&console.log("should open a read handle for",tt),_.setUint32(j,et,!0),WASI_ESUCCESS$$module$src$filesystem$constants)};WASI$$module$src$filesystem$wasi.prototype.path_readlink=function(e,o,s,c,i,g){return WASI_ESUCCESS$$module$src$filesystem$constants};WASI$$module$src$filesystem$wasi.prototype.path_remove_directory=function(e,o,s){return WASI_ESUCCESS$$module$src$filesystem$constants};WASI$$module$src$filesystem$wasi.prototype.path_rename=function(e,o,s,c,i,g){return WASI_ESUCCESS$$module$src$filesystem$constants};WASI$$module$src$filesystem$wasi.prototype.path_symlink=function(e,o,s,c,i){return WASI_ESUCCESS$$module$src$filesystem$constants};WASI$$module$src$filesystem$wasi.prototype.path_unlink_file=function(e,o,s){return 3<e&&DEBUG_WASI$$module$src$filesystem$wasi&&console.log("path_unlink_file",e,o,s,arguments),WASI_ESUCCESS$$module$src$filesystem$constants};WASI$$module$src$filesystem$wasi.prototype.poll_oneoff=function(e,o,s,c){return WASI_ESUCCESS$$module$src$filesystem$constants};WASI$$module$src$filesystem$wasi.prototype.proc_exit=function(e){return WASI_ESUCCESS$$module$src$filesystem$constants};WASI$$module$src$filesystem$wasi.prototype.proc_raise=function(e){return WASI_ESUCCESS$$module$src$filesystem$constants};WASI$$module$src$filesystem$wasi.prototype.random_get=function(e,o){return WASI_ESUCCESS$$module$src$filesystem$constants};WASI$$module$src$filesystem$wasi.prototype.sched_yield=function(){return WASI_ESUCCESS$$module$src$filesystem$constants};WASI$$module$src$filesystem$wasi.prototype.sock_recv=function(){return WASI_ENOSYS$$module$src$filesystem$constants};WASI$$module$src$filesystem$wasi.prototype.sock_send=function(){return WASI_ENOSYS$$module$src$filesystem$constants};WASI$$module$src$filesystem$wasi.prototype.sock_shutdown=function(){return WASI_ENOSYS$$module$src$filesystem$constants};WASI$$module$src$filesystem$wasi.prototype.findBuffers=function(e){const o=Object.values(this.fd).find(({path:s})=>s===e);return[o&&o.buffers,o.fd]};WASI$$module$src$filesystem$wasi.prototype.readdir=function(e){const o=(assertLeadingSlash$$module$src$filesystem$wasi((0,goog.string.path.normalizePath)(e))+"/").replace("//","/"),s=[];return Object.values(this.fd).forEach(({path:c})=>!/\//g.test(c.replace(o,""))&&s.push(c)),s.map(c=>removeLeadingSlash$$module$src$filesystem$wasi(c.replace(o,""))).filter(c=>!!c)};WASI$$module$src$filesystem$wasi.prototype.writeFile=function(e,o){const s=assertLeadingSlash$$module$src$filesystem$wasi((0,goog.string.path.normalizePath)(e));e=Object.keys(this.fd).length;const c=Object.values(this.fd).find(({path:i})=>i===s);this.fd[e]={fd:e,path:s,seekPos:goog.global.BigInt(0),buffers:[o]},c&&delete this.fd[c]};WASI$$module$src$filesystem$wasi.prototype.appendFile=function(e,o){var s=assertLeadingSlash$$module$src$filesystem$wasi((0,goog.string.path.normalizePath)(e));[s]=this.findBuffers(s),s?s.push(o):console.error(`Can't append to non-existing file ${e}`)};WASI$$module$src$filesystem$wasi.prototype.readFile=function(e){const o=assertLeadingSlash$$module$src$filesystem$wasi((0,goog.string.path.normalizePath)(e)),[s,c]=this.findBuffers(o);if(this.fd[c]&&this.fd[c].open&&console.warn(`readFile: file ${e} hasn't been closed yet!`),s)return concatUint8Arrays$$module$src$filesystem$wasi(s)};WASI$$module$src$filesystem$wasi.prototype.readStdOut=function(){const e=Object.values(this.fd[0]);return concatUint8Arrays$$module$src$filesystem$wasi(e&&e.buffers||[])};WASI$$module$src$filesystem$wasi.prototype.unlink=function(e){const o=assertLeadingSlash$$module$src$filesystem$wasi((0,goog.string.path.normalizePath)(e));(e=Object.values(this.fd).find(({path:s})=>s===o))?delete this.fd[e]:console.error(`While trying to unlink ${o}, path not found`)};WASI$$module$src$filesystem$wasi.prototype.mkdir=function(e){const o=assertLeadingSlash$$module$src$filesystem$wasi((0,goog.string.path.normalizePath)(e)),s=[];Object.values(this.fd).forEach(({path:c})=>c.startsWith(o)&&s.push(c)),0<s.length?console.warn(`mkdir: path ${e} already exists`):(e=Object.keys(this.fd).length,this.fd[e]={fd:e,path:o})};const CompressionMethod$$module$src$zlib$zlib={DEFLATE:8,RESERVED:15};function Huffman$$module$src$zlib$huffman(e){const o=e.length;let s=0,c=Number.POSITIVE_INFINITY,i,g,h,$,j,_;for(j=0;j<o;++j)e[j]>s&&(s=e[j]),e[j]<c&&(c=e[j]);const _e=1<<s,et=new Uint32Array(_e);for(i=1,g=0,h=2;i<=s;){for(j=0;j<o;++j)if(e[j]===i){$=0;var tt=g;for(_=0;_<i;++_)$=$<<1|tt&1,tt>>=1;for(tt=i<<16|j,_=$;_<_e;_+=h)et[_]=tt;++g}++i,g<<=1,h<<=1}return[et,s,c]}const ZLIB_RAW_INFLATE_BUFFER_SIZE$$module$src$zlib$rawinflate=32768;function RawInflate$$module$src$zlib$rawinflate(e,o){switch(this.blocks=[],this.bufferSize=ZLIB_RAW_INFLATE_BUFFER_SIZE$$module$src$zlib$rawinflate,this.bitsbuflen=this.bitsbuf=this.ip=this.totalpos=0,this.input=new Uint8Array(e),this.bfinal=!1,this.bufferType=RawInflate$$module$src$zlib$rawinflate.BufferType.ADAPTIVE,this.resize=!1,(o||!(o={}))&&(o.index&&(this.ip=o.index),o.bufferSize&&(this.bufferSize=o.bufferSize),o.bufferType&&(this.bufferType=o.bufferType),o.resize&&(this.resize=o.resize)),this.bufferType){case RawInflate$$module$src$zlib$rawinflate.BufferType.BLOCK:this.op=RawInflate$$module$src$zlib$rawinflate.MaxBackwardLength,this.output=new Uint8Array(RawInflate$$module$src$zlib$rawinflate.MaxBackwardLength+this.bufferSize+RawInflate$$module$src$zlib$rawinflate.MaxCopyLength);break;case RawInflate$$module$src$zlib$rawinflate.BufferType.ADAPTIVE:this.op=0,this.output=new Uint8Array(this.bufferSize);break;default:throw Error("invalid inflate mode")}}RawInflate$$module$src$zlib$rawinflate.BufferType={BLOCK:0,ADAPTIVE:1};RawInflate$$module$src$zlib$rawinflate.prototype.decompress=function(){for(;!this.bfinal;)this.parseBlock();switch(this.bufferType){case RawInflate$$module$src$zlib$rawinflate.BufferType.BLOCK:return this.concatBufferBlock();case RawInflate$$module$src$zlib$rawinflate.BufferType.ADAPTIVE:return this.concatBufferDynamic();default:throw Error("invalid inflate mode")}};RawInflate$$module$src$zlib$rawinflate.MaxBackwardLength=32768;RawInflate$$module$src$zlib$rawinflate.MaxCopyLength=258;RawInflate$$module$src$zlib$rawinflate.Order=function(e){return new Uint16Array(e)}([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]);RawInflate$$module$src$zlib$rawinflate.LengthCodeTable=function(e){return new Uint16Array(e)}([3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258,258,258]);RawInflate$$module$src$zlib$rawinflate.LengthExtraTable=function(e){return new Uint8Array(e)}([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,0,0]);RawInflate$$module$src$zlib$rawinflate.DistCodeTable=function(e){return new Uint16Array(e)}([1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577]);RawInflate$$module$src$zlib$rawinflate.DistExtraTable=function(e){return new Uint8Array(e)}([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13]);RawInflate$$module$src$zlib$rawinflate.FixedLiteralLengthTable=function(e){return e}(function(){const e=new Uint8Array(288);let o,s;for(o=0,s=e.length;o<s;++o)e[o]=143>=o?8:255>=o?9:279>=o?7:8;return Huffman$$module$src$zlib$huffman(e)}());RawInflate$$module$src$zlib$rawinflate.FixedDistanceTable=function(e){return e}(function(){const e=new Uint8Array(30);let o,s;for(o=0,s=e.length;o<s;++o)e[o]=5;return Huffman$$module$src$zlib$huffman(e)}());RawInflate$$module$src$zlib$rawinflate.prototype.parseBlock=function(){let e=this.readBits(3);switch(e&1&&(this.bfinal=!0),e>>>=1,e){case 0:this.parseUncompressedBlock();break;case 1:this.parseFixedHuffmanBlock();break;case 2:this.parseDynamicHuffmanBlock();break;default:throw Error("unknown BTYPE: "+e)}};RawInflate$$module$src$zlib$rawinflate.prototype.readBits=function(e){let o=this.bitsbuf,s=this.bitsbuflen;const c=this.input;let i=this.ip;if(i+(e-s+7>>3)>=c.length)throw Error("input buffer is broken");for(;s<e;)o|=c[i++]<<s,s+=8;return this.bitsbuf=o>>>e,this.bitsbuflen=s-e,this.ip=i,o&(1<<e)-1};RawInflate$$module$src$zlib$rawinflate.prototype.readCodeByTable=function(e){let o=this.bitsbuf,s=this.bitsbuflen;var c=this.input;let i=this.ip;var g=c.length;const h=e[0];for(e=e[1];s<e&&!(i>=g);)o|=c[i++]<<s,s+=8;if(c=h[o&(1<<e)-1],g=c>>>16,g>s)throw Error("invalid code length: "+g);return this.bitsbuf=o>>g,this.bitsbuflen=s-g,this.ip=i,c&65535};RawInflate$$module$src$zlib$rawinflate.prototype.parseUncompressedBlock=function(){const e=this.input;let o=this.ip,s=this.output,c=this.op;var i=e.length;let g;const h=s.length;if(this.bitsbuflen=this.bitsbuf=0,o+1>=i)throw Error("invalid uncompressed block header: LEN");if(g=e[o++]|e[o++]<<8,o+1>=i)throw Error("invalid uncompressed block header: NLEN");if(i=e[o++]|e[o++]<<8,g===~i)throw Error("invalid uncompressed block header: length verify");if(o+g>e.length)throw Error("input buffer is broken");switch(this.bufferType){case RawInflate$$module$src$zlib$rawinflate.BufferType.BLOCK:for(;c+g>s.length;)i=h-c,g-=i,s.set(e.subarray(o,o+i),c),c+=i,o+=i,this.op=c,s=this.expandBufferBlock(),c=this.op;break;case RawInflate$$module$src$zlib$rawinflate.BufferType.ADAPTIVE:for(;c+g>s.length;)s=this.expandBufferAdaptive({fixRatio:2});break;default:throw Error("invalid inflate mode")}s.set(e.subarray(o,o+g),c),this.ip=o+g,this.op=c+g,this.output=s};RawInflate$$module$src$zlib$rawinflate.prototype.parseFixedHuffmanBlock=function(){switch(this.bufferType){case RawInflate$$module$src$zlib$rawinflate.BufferType.ADAPTIVE:this.decodeHuffmanAdaptive(RawInflate$$module$src$zlib$rawinflate.FixedLiteralLengthTable,RawInflate$$module$src$zlib$rawinflate.FixedDistanceTable);break;case RawInflate$$module$src$zlib$rawinflate.BufferType.BLOCK:this.decodeHuffmanBlock(RawInflate$$module$src$zlib$rawinflate.FixedLiteralLengthTable,RawInflate$$module$src$zlib$rawinflate.FixedDistanceTable);break;default:throw Error("invalid inflate mode")}};RawInflate$$module$src$zlib$rawinflate.prototype.parseDynamicHuffmanBlock=function(){var e=this.readBits(5)+257,o=this.readBits(5)+1,s=this.readBits(4)+4,c=new Uint8Array(RawInflate$$module$src$zlib$rawinflate.Order.length);let i;for(i=0;i<s;++i)c[RawInflate$$module$src$zlib$rawinflate.Order[i]]=this.readBits(3);for(c=Huffman$$module$src$zlib$huffman(c),s=new Uint8Array(e+o),i=0,o=e+o;i<o;){var g=this.readCodeByTable(c);switch(g){case 16:for(g=3+this.readBits(2);g--;)s[i++]=h;break;case 17:for(g=3+this.readBits(3);g--;)s[i++]=0;var h=0;break;case 18:for(g=11+this.readBits(7);g--;)s[i++]=0;h=0;break;default:h=s[i++]=g}}switch(h=Huffman$$module$src$zlib$huffman(s.subarray(0,e)),e=Huffman$$module$src$zlib$huffman(s.subarray(e)),this.bufferType){case RawInflate$$module$src$zlib$rawinflate.BufferType.ADAPTIVE:this.decodeHuffmanAdaptive(h,e);break;case RawInflate$$module$src$zlib$rawinflate.BufferType.BLOCK:this.decodeHuffmanBlock(h,e);break;default:throw Error("invalid inflate mode")}};RawInflate$$module$src$zlib$rawinflate.prototype.decodeHuffmanBlock=function(e,o){let s=this.output,c=this.op;this.currentLitlenTable=e;const i=s.length-RawInflate$$module$src$zlib$rawinflate.MaxCopyLength;var g;let h,$;const j=RawInflate$$module$src$zlib$rawinflate.LengthCodeTable,_=RawInflate$$module$src$zlib$rawinflate.LengthExtraTable,_e=RawInflate$$module$src$zlib$rawinflate.DistCodeTable,et=RawInflate$$module$src$zlib$rawinflate.DistExtraTable;for(;(g=this.readCodeByTable(e))!==256;)if(256>g)c>=i&&(this.op=c,s=this.expandBufferBlock(),c=this.op),s[c++]=g;else for(g-=257,$=j[g],0<_[g]&&($+=this.readBits(_[g])),g=this.readCodeByTable(o),h=_e[g],0<et[g]&&(h+=this.readBits(et[g])),c>=i&&(this.op=c,s=this.expandBufferBlock(),c=this.op);$--;)s[c]=s[c++-h];for(;8<=this.bitsbuflen;)this.bitsbuflen-=8,this.ip--;this.op=c};RawInflate$$module$src$zlib$rawinflate.prototype.decodeHuffmanAdaptive=function(e,o){let s=this.output,c=this.op;this.currentLitlenTable=e;let i=s.length;var g;let h,$;const j=RawInflate$$module$src$zlib$rawinflate.LengthCodeTable,_=RawInflate$$module$src$zlib$rawinflate.LengthExtraTable,_e=RawInflate$$module$src$zlib$rawinflate.DistCodeTable,et=RawInflate$$module$src$zlib$rawinflate.DistExtraTable;for(;(g=this.readCodeByTable(e))!==256;)if(256>g)c>=i&&(s=this.expandBufferAdaptive(),i=s.length),s[c++]=g;else for(g-=257,$=j[g],0<_[g]&&($+=this.readBits(_[g])),g=this.readCodeByTable(o),h=_e[g],0<et[g]&&(h+=this.readBits(et[g])),c+$>i&&(s=this.expandBufferAdaptive(),i=s.length);$--;)s[c]=s[c++-h];for(;8<=this.bitsbuflen;)this.bitsbuflen-=8,this.ip--;this.op=c};RawInflate$$module$src$zlib$rawinflate.prototype.expandBufferBlock=function(e){e=new Uint8Array(this.op-RawInflate$$module$src$zlib$rawinflate.MaxBackwardLength);const o=this.op-RawInflate$$module$src$zlib$rawinflate.MaxBackwardLength,s=this.output;return e.set(s.subarray(RawInflate$$module$src$zlib$rawinflate.MaxBackwardLength,e.length)),this.blocks.push(e),this.totalpos+=e.length,s.set(s.subarray(o,o+RawInflate$$module$src$zlib$rawinflate.MaxBackwardLength)),this.op=RawInflate$$module$src$zlib$rawinflate.MaxBackwardLength,s};RawInflate$$module$src$zlib$rawinflate.prototype.expandBufferAdaptive=function(e){let o=Math.trunc(this.input.length/this.ip+1);const s=this.input,c=this.output;return e&&(typeof e.fixRatio=="number"&&(o=e.fixRatio),typeof e.addRatio=="number"&&(o+=e.addRatio)),2>o?(e=(s.length-this.ip)/this.currentLitlenTable[2],e=Math.trunc(e/2*258),e=e<c.length?c.length+e:c.length<<1):e=c.length*o,e=new Uint8Array(e),e.set(c),this.output=e};RawInflate$$module$src$zlib$rawinflate.prototype.concatBufferBlock=function(){let e=0;const o=this.output,s=this.blocks;let c;const i=new Uint8Array(this.totalpos+(this.op-RawInflate$$module$src$zlib$rawinflate.MaxBackwardLength));let g,h,$,j;if(s.length===0)return this.output.subarray(RawInflate$$module$src$zlib$rawinflate.MaxBackwardLength,this.op);for(g=0,h=s.length;g<h;++g)for(c=s[g],$=0,j=c.length;$<j;++$)i[e++]=c[$];for(g=RawInflate$$module$src$zlib$rawinflate.MaxBackwardLength,h=this.op;g<h;++g)i[e++]=o[g];return this.blocks=[],this.buffer=i};RawInflate$$module$src$zlib$rawinflate.prototype.concatBufferDynamic=function(){let e;const o=this.op;return this.resize?(e=new Uint8Array(o),e.set(this.output.subarray(0,o))):e=this.output.subarray(0,o),this.buffer=e};function Util$$module$src$zlib$util(){}Util$$module$src$zlib$util.stringToByteArray=function(e){e=[...e];let o,s;for(o=0,s=e.length;o<s;o++)e[o]=(e[o].charPointAt(0)&255)>>>0;return new Uint8Array([e])};function Adler32$$module$src$zlib$adler32(e){return typeof e=="string"&&(e=Util$$module$src$zlib$util.stringToByteArray(e)),Adler32$$module$src$zlib$adler32.update(1,e)}Adler32$$module$src$zlib$adler32.update=function(e,o){let s=e&65535;e=e>>>16&65535;let c=o.length,i,g=0;for(;0<c;){i=c>Adler32$$module$src$zlib$adler32.OptimizationParameter?Adler32$$module$src$zlib$adler32.OptimizationParameter:c,c-=i;do s+=o[g++],e+=s;while(--i);s%=65521,e%=65521}return(e<<16|s)>>>0};Adler32$$module$src$zlib$adler32.OptimizationParameter=1024;function Inflate$$module$src$zlib$inflate(e,o){this.input=e,this.ip=0,(o||!(o={}))&&(o.index&&(this.ip=o.index),o.verify&&(this.verify=o.verify));const s=e[this.ip++],c=e[this.ip++];switch(s&15){case CompressionMethod$$module$src$zlib$zlib.DEFLATE:this.method=CompressionMethod$$module$src$zlib$zlib.DEFLATE;break;default:throw Error("unsupported compression method")}if(((s<<8)+c)%31!==0)throw Error("invalid fcheck flag:"+((s<<8)+c)%31);if(c&32)throw Error("fdict flag is not supported");this.rawinflate=new RawInflate$$module$src$zlib$rawinflate(e,{index:this.ip,bufferSize:o.bufferSize,bufferType:o.bufferType,resize:o.resize})}Inflate$$module$src$zlib$inflate.BufferType=RawInflate$$module$src$zlib$rawinflate.BufferType;Inflate$$module$src$zlib$inflate.prototype.decompress=function(){var e=this.input;const o=this.rawinflate.decompress();if(this.ip=this.rawinflate.ip,this.verify&&(e=(e[this.ip++]<<24|e[this.ip++]<<16|e[this.ip++]<<8|e[this.ip++])>>>0,e!==Adler32$$module$src$zlib$adler32(o)))throw Error("invalid adler-32 checksum");return o};const PAGE_SIZE$$module$src$module=65536,PAGES_PER_MB$$module$src$module=16,csoundWasiJsMessageCallback$$module$src$module=({memory:e,messagePort:o,streamBuffer:s})=>function(c,i,g,h){if(e){c=new Uint8Array(e.buffer,h,g),c=uint2String$$module$src$utils$text_encoders(c);var $=/\n$/g.test(c);i=/^\n/g.test(c);var j=c.split(`
`).filter(_e=>0<_e.length),_=[];(j.length===0&&$||i)&&(_.push(s.join("")),clearArray$$module$src$utils$clear_array(s)),j.forEach((_e,et)=>{et+1===j.length?$?et===0?(_.push(s.join("")+_e),clearArray$$module$src$utils$clear_array(s)):_.push(_e):s.push(_e):et===0?(_.push(s.join("")+_e),clearArray$$module$src$utils$clear_array(s)):_.push(_e)}),_.forEach(_e=>{_e.replace(/(\r\n|\n|\r)/gm,"")&&o.post({log:_e})})}},assertPluginExports$$module$src$module=e=>e&&typeof e=="object"&&typeof e.exports=="object"?e.exports.__wasm_call_ctors?e.exports.csoundModuleCreate||e.exports.csound_opcode_init||e.exports.csound_fgen_init?!0:(console.error(e.exports,`A csound plugin turns out to be neither a plugin, opcode or module.
Perhaps csdl.h or module.h wasn't imported correctly?`),!1):(console.error(`A csound plugin didn't export __wasm_call_ctors.
Please re-run wasm-ld with either --export-all or include --export=__wasm_call_ctors`),!1):(console.error("Error instantiating a csound plugin, instance and/or export is missing!"),!1),getBinaryHeaderData$$module$src$module=e=>{function o(){let _=0,_e=1;for(;;){const et=e[s++];if(_+=(et&127)*_e,_e*=128,!(et&128))break}return _}if(new Uint32Array(new Uint8Array(e.subarray(0,24)).buffer)[0]!==1836278016&&console.error("Wasm magic number is missing!"),e[8]!==0)return logWasmModule$$module$src$logger("Dylink section wasn't found in wasm binary, assuming static wasm."),"static";let s=9;const c=o();s++,(0,goog.asserts.assert)(e[s]==="d".codePointAt(0)),s++,(0,goog.asserts.assert)(e[s]==="y".codePointAt(0)),s++,(0,goog.asserts.assert)(e[s]==="l".codePointAt(0)),s++,(0,goog.asserts.assert)(e[s]==="i".codePointAt(0)),s++,(0,goog.asserts.assert)(e[s]==="n".codePointAt(0)),s++,(0,goog.asserts.assert)(e[s]==="k".codePointAt(0)),s++,(0,goog.asserts.assert)(e[s]===".".codePointAt(0)),s++,(0,goog.asserts.assert)(e[s]==="0".codePointAt(0)),s+=3;const i=o(),g=o(),h=o(),$=o(),j=o();return{sectionSize:c,memorySize:i,memoryAlign:g,neededDynlibsCount:j,tableSize:h,tableAlign:$}},loadStaticWasm$$module$src$module=async({wasmBytes:e,wasi:o,messagePort:s})=>{const c=await WebAssembly.compile(e);e=new WebAssembly.Memory({initial:16384});const i=o.getImports(c);return i.env=i.env||{},i.env.csoundLoadModules=()=>0,i.env.memory=e,i.env.csoundWasiJsMessageCallback=csoundWasiJsMessageCallback$$module$src$module({memory:i.env.memory,streamBuffer:[],messagePort:s}),s=await WebAssembly.instantiate(c,i),o.setMemory(e),o.start(s),s.exports.__wasi_js_csoundSetMessageStringCallback(),[s,o]};var $jscompDefaultExport$$module$src$module=async function({wasmDataURI:e,withPlugins:o=[],messagePort:s}){var c={};const i=new WASI$$module$src$filesystem$wasi({preopens:{"/":"/"}});e=new Uint8Array(e),e=new Inflate$$module$src$zlib$inflate(e).decompress();var g=getBinaryHeaderData$$module$src$module(e);if(g==="static")return await loadStaticWasm$$module$src$module({messagePort:s,wasmBytes:e,wasmFs:c,wasi:i});const{memorySize:h,memoryAlign:$,tableSize:j}=g;o=await o.reduce(async(nt,lt)=>{nt=await nt;let ct,it;try{ct=new Uint8Array(lt),it=getBinaryHeaderData$$module$src$module(ct)}catch(ut){console.error("Error in plugin",ut)}return it&&nt.push({headerData:it,wasmPluginBytes:ct}),nt},[]);var _=128*PAGES_PER_MB$$module$src$module;c=Math.ceil((h+$)/PAGE_SIZE$$module$src$module),g=Math.ceil(o.reduce((nt,{headerData:lt})=>lt==="static"?0:nt+(lt.memorySize+$),0)/PAGE_SIZE$$module$src$module),g=c+g+_;const _e=new WebAssembly.Memory({initial:g,maximum:1024*PAGES_PER_MB$$module$src$module}),et=new WebAssembly.Table({initial:j+1,element:"anyfunc"});i.setMemory(_e);const tt=new WebAssembly.Global({value:"i32",mutable:!0},g*PAGE_SIZE$$module$src$module);g=new WebAssembly.Global({value:"i32",mutable:!0},g*PAGE_SIZE$$module$src$module),_=new WebAssembly.Global({value:"i32",mutable:!1},_);const at=new WebAssembly.Global({value:"i32",mutable:!1},1),rt=new WebAssembly.Global({value:"i32",mutable:!0},0);e=await WebAssembly.compile(e);const dt=i.getImports(e);let mt=[],st=c;dt.env=dt.env||{},dt.env.memory=_e,dt.env.__indirect_function_table=et,dt.env.__stack_pointer=tt,dt.env.__memory_base=_,dt.env.__table_base=at,dt.env.csoundLoadModules=nt=>(mt.forEach(lt=>{ot===void 0?console.error("csound-wasm internal: timing problem detected!"):dlinit$$module$src$dlinit(ot,lt,et,nt)}),0),dt.env._ZTH5errno=function(){},dt.env.csoundWasiJsMessageCallback=csoundWasiJsMessageCallback$$module$src$module({memory:_e,messagePort:s,streamBuffer:[]}),dt.env.printDebugCallback=(nt,lt)=>{nt=new Uint8Array(_e.buffer,nt,lt),nt=uint2String$$module$src$utils$text_encoders(nt),console.log(nt)},dt["GOT.mem"]=dt["GOT.mem"]||{},dt["GOT.mem"].__heap_base=g,dt["GOT.func"]=dt["GOT.func"]||{};const ot=await WebAssembly.instantiate(e,dt);return s=Object.assign({},ot.exports),e={},e.exports=Object.assign(s,{memory:_e}),mt=await o.reduce(async(nt,{headerData:lt,wasmPluginBytes:ct})=>{nt=await nt;try{const{memorySize:it,memoryAlign:ut,tableSize:gt}=lt,pt=await WebAssembly.compile(ct),ft=i.getImports(pt),Wt=new WebAssembly.Global({value:"i32",mutable:!1},st*PAGE_SIZE$$module$src$module);et.grow(gt),ft.env=Object.assign({},ft.env),ft.env.memory=_e,ft.env.__indirect_function_table=et,ft.env.__memory_base=Wt,ft.env.__stack_pointer=tt,ft.env.__table_base=at,ft.env.csoundLoadModules=rt,delete ft.env.csoundWasiJsMessageCallback,st+=Math.ceil((it+ut)/PAGE_SIZE$$module$src$module);const Vt=await WebAssembly.instantiate(pt,ft);assertPluginExports$$module$src$module(Vt)&&(Vt.exports.__wasm_call_ctors(),nt.push(Vt))}catch(it){console.error("Error while compiling csound-plugin",it)}return nt},[]),i.start(e),e.exports.__wasi_js_csoundSetMessageStringCallback(),[e,i]};function MessagePortState$$module$src$utils$message_port_state(){}MessagePortState$$module$src$utils$message_port_state.prototype.ready=!1;MessagePortState$$module$src$utils$message_port_state.prototype.port=void 0;MessagePortState$$module$src$utils$message_port_state.prototype.post=()=>{};MessagePortState$$module$src$utils$message_port_state.prototype.broadcastPlayState=()=>{};MessagePortState$$module$src$utils$message_port_state.prototype.workerState=void 0;MessagePortState$$module$src$utils$message_port_state.prototype.vanillaWorkerState=void 0;var $jscompDefaultExport$$module$src$utils$message_port_state=MessagePortState$$module$src$utils$message_port_state;class ScriptProcessorNodeSingleThread$$module$src$mains$spn_main{constructor({audioContext:o,inputChannelCount:s=1,outputChannelCount:c=2}){this.publicEvents=new PublicEventAPI$$module$src$events(this),this.eventPromises=new EventPromises$$module$src$utils$event_promises,this.audioContext=o,this.onaudioprocess=this.onaudioprocess.bind(this),this.currentPlayState=void 0,this.onPlayStateChange=this.onPlayStateChange.bind(this),this.start=this.start.bind(this),this.stop=this.stop.bind(this),this.pause=this.pause.bind(this),this.resume=this.resume.bind(this),this.csoundApi=this.csoundInstance=this.wasm=void 0,this.exportApi={},this.spn=o.createScriptProcessor(0,s,c),this.spn.audioContext=o,this.spn.inputChannelCount=s,this.spn.outputChannelCount=c,this.spn.onaudioprocess=this.onaudioprocess,this.node=this.spn,this.exportApi.getNode=async()=>this.spn,this.sampleRate=o.sampleRate,this.messagePort=new $jscompDefaultExport$$module$src$utils$message_port_state,this.messagePort.post=i=>messageEventHandler$$module$src$mains$messages_main(this)({data:{log:i}}),this.messagePort.ready=!0,this.started=this.running=!1}async terminateInstance(){this.spn&&(this.spn.disconnect(),delete this.spn),this.audioContext&&(this.audioContext.state!=="closed"&&await this.audioContext.close(),delete this.audioContext),this.publicEvents&&(this.publicEvents.terminateInstance(),delete this.publicEvents),Object.keys(this.exportApi).forEach(o=>delete this.exportApi[o]),Object.keys(this).forEach(o=>delete this[o])}async onPlayStateChange(o){if(this.publicEvents&&this.currentPlayState!==o)switch(this.currentPlayState=o,o){case"realtimePerformanceStarted":this.publicEvents.triggerRealtimePerformanceStarted(this);break;case"realtimePerformanceEnded":this.publicEvents.triggerRealtimePerformanceEnded(this);break;case"realtimePerformancePaused":this.publicEvents.triggerRealtimePerformancePaused(this);break;case"realtimePerformanceResumed":this.publicEvents.triggerRealtimePerformanceResumed(this);break;case"renderStarted":this.publicEvents.triggerRenderStarted(this);break;case"renderEnded":this.publicEvents.triggerRenderEnded(this)}}async pause(){this.started&&this.running&&(this.running=!1,this.onPlayStateChange("realtimePerformancePaused"))}async resume(){this.started&&!this.running&&(this.running=!0,this.onPlayStateChange("realtimePerformanceResumed"))}async stop(){if(this.started){this.eventPromises.createStopPromise();const o=this.csoundApi.csoundStop(this.csoundInstance);return await this.eventPromises.waitForStop(),this.watcherStdOut&&(this.watcherStdOut.close(),delete this.watcherStdOut),this.watcherStdErr&&(this.watcherStdErr.close(),delete this.watcherStdErr),delete this.csoundInputBuffer,delete this.csoundOutputBuffer,delete this.currentPlayState,o}}async start(){if(this.csoundApi){var o=(this.csoundApi.csoundGetOutputName(this.csoundInstance)||"test.wav").includes("dac");if(o&&this.currentPlayState!=="realtimePerformanceStarted"){this.result=0,this.csoundApi.csoundSetOption(this.csoundInstance,"--sample-rate="+this.sampleRate),this.nchnls_i=this.nchnls=-1,this.cnt=this.ksmps=o=this.csoundApi.csoundGetKsmps(this.csoundInstance),this.nchnls=this.csoundApi.csoundGetNchnls(this.csoundInstance),this.nchnls_i=this.csoundApi.csoundGetNchnlsInput(this.csoundInstance);var s=this.csoundApi.csoundGetSpout(this.csoundInstance);return this.csoundOutputBuffer=new Float64Array(this.wasm.wasi.memory.buffer,s,o*this.nchnls),s=this.csoundApi.csoundGetSpin(this.csoundInstance),this.csoundInputBuffer=new Float64Array(this.wasm.wasi.memory.buffer,s,o*this.nchnls_i),this.zerodBFS=this.csoundApi.csoundGet0dBFS(this.csoundInstance),this.publicEvents.triggerOnAudioNodeCreated(this.spn),this.eventPromises.createStartPromise(),o=this.csoundApi.csoundStart(this.csoundInstance),this.csoundApi._isRequestingRtMidiInput(this.csoundInstance)&&requestMidi$$module$src$utils$request_midi({onMidiMessage:({data:c})=>this.csoundApi.csoundPushMidiMessage(this.csoundInstance,c[0],c[1],c[2])}),this.running=!0,await this.eventPromises.waitForStart(),o}if(!o&&this.currentPlayState!=="renderStarted")return o=this.csoundApi.csoundStart(this.csoundInstance),this.onPlayStateChange("renderStarted"),setTimeout(()=>{let c=0;for(;c===0&&this.csoundApi&&this.csoundInstance;)c=this.csoundApi.csoundPerformKsmps(this.csoundInstance);this.onPlayStateChange&&this.onPlayStateChange("renderEnded")},0),o}else console.error("starting csound failed because csound instance wasn't created")}async initialize({wasmDataURI:o,withPlugins:s,autoConnect:c}){if(this.plugins||!s||isEmpty$$module$node_modules$rambda$dist$rambda_mjs(s)||(s=await fetchPlugins$$module$src$utils(s)),!this.wasm){const[h,$]=await $jscompDefaultExport$$module$src$module({wasmDataURI:o(),withPlugins:s,messagePort:this.messagePort});this.wasm=h,this.wasi=$,h.wasi=$}const i=$jscompDefaultExport$$module$src$libcsound(this.wasm);this.csoundApi=i;const g=await i.csoundCreate(0);return this.csoundInstance=g,c&&this.spn.connect(this.audioContext.destination),this.resetCsound(!1),Object.keys(i).reduce((h,$)=>{if(["mkdir","readdir","writeFile"].includes($)){h.fs=h.fs||{};var j=async(..._)=>makeSingleThreadCallback$$module$src$utils(this.wasm,i[$]).apply({},_);j.toString=i[$].toString,h.fs[$]=j}else j=csoundApiRename$$module$src$utils($),h[j]=(..._)=>makeSingleThreadCallback$$module$src$utils(g,i[$]).apply({},_),h[j].toString=i[$].toString;return h},this.exportApi),this.exportApi.pause=this.pause.bind(this),this.exportApi.resume=this.resume.bind(this),this.exportApi.start=this.start.bind(this),this.exportApi.stop=this.stop.bind(this),this.exportApi.terminateInstance=this.terminateInstance.bind(this),this.exportApi.getAudioContext=async()=>this.audioContext,this.exportApi.name="Csound: ScriptProcessor Node, Single-threaded",this.exportApi=this.publicEvents.decorateAPI(this.exportApi),this.exportApi.reset=()=>this.resetCsound(!0),this.exportApi.addListener("message",console.log),this.exportApi}async resetCsound(o){if(o&&this.currentPlayState!=="realtimePerformanceEnded"&&this.currentPlayState!=="realtimePerformanceStarted")return-1;this.currentPlayState==="realtimePerformanceStarted"&&this.onPlayStateChange("realtimePerformanceEnded"),this.started=this.running=!1,this.result=0;const s=this.csoundInstance,c=this.csoundApi;o&&c.csoundReset(s),c.csoundSetOption(s,"--sample-rate="+this.sampleRate),this.nchnls_i=this.nchnls=-1,delete this.csoundOutputBuffer,delete this.csoundInputBuffer}onaudioprocess(o){if(this.csoundApi&&!["renderStarted","renderEnded"].includes(this.currentPlayState)){if(this.csoundOutputBuffer===null||this.running===!1){var s=o.outputBuffer,c=s.getChannelData(0);if(c){c=c.length;for(var i=0;i<c;i++)for(var g=0;g<s.numberOfChannels;g++)s.getChannelData(g)[i]=0}}this.running&&!this.started&&(this.started=!0,this.onPlayStateChange("realtimePerformanceStarted"),this.eventPromises&&this.eventPromises.releaseStartPromise()),s=o.inputBuffer,o=o.outputBuffer,c=o.getChannelData(0).length,i=this.csoundOutputBuffer,g=this.csoundInputBuffer;var h=this.ksmps,$=this.zerodBFS,j=this.nchnls,_=this.nchnls_i,_e=this.cnt||0,et=this.result||0;for(let dt=0;dt<c;dt++,_e++){_e===h&&et===0&&(et=this.csoundApi.csoundPerformKsmps(this.csoundInstance),_e=0,et!==0&&(this.started=this.running=!1,this.onPlayStateChange("realtimePerformanceEnded"),this.eventPromises&&this.eventPromises.releaseStopPromise())),i&&i.length!==0||(i=this.csoundOutputBuffer=new Float64Array(this.wasm.wasi.memory.buffer,this.csoundApi.csoundGetSpout(this.csoundInstance),h*j)),g&&g.length!==0||(g=this.csoundInputBuffer=new Float64Array(this.wasm.wasi.memory.buffer,this.csoundApi.csoundGetSpin(this.csoundInstance),h*_));for(var tt=Math.min(this.nchnls_i,s.numberOfChannels),at=0;at<tt;at++){var rt=s.getChannelData(at);g[_e*_+at]=rt[dt]*$}if(this.nchnls===o.numberOfChannels)for(tt=0;tt<o.numberOfChannels;tt++)o.getChannelData(tt)[dt]=et===0?i[_e*j+tt]/$:0;else this.nchnls===2&&o.numberOfChannels===1?o.getChannelData(0)[dt]=et===0?.5*(i[_e*j]/$+i[_e*j+1]/$):0:this.nchnls===1&&o.numberOfChannels===2&&(tt=o.getChannelData(0),at=o.getChannelData(1),et===0?(rt=i[_e*j]/$,tt[dt]=rt,at[dt]=rt):(tt[dt]=0,at[dt]=0))}this.cnt=_e,this.result=et}}}var $jscompDefaultExport$$module$src$mains$spn_main=ScriptProcessorNodeSingleThread$$module$src$mains$spn_main,$jscompDefaultExport$$module$dist$__compiled_worklet_singlethread_worker_inline=()=>"data:application/javascript;base64,";const initializeModule$$module$src$mains$worklet_singlethread_main=async e=>{logSinglethreadWorkletMain$$module$src$logger("Initialize Module")();try{await e.audioWorklet.addModule($jscompDefaultExport$$module$dist$__compiled_worklet_singlethread_worker_inline())}catch(o){return console.error("Error calling audioWorklet.addModule",o),!1}return!0};class SingleThreadAudioWorkletMainThread$$module$src$mains$worklet_singlethread_main{constructor({audioContext:o,inputChannelCount:s=1,outputChannelCount:c=2}){this.exportApi={},this.ipcMessagePorts=new IPCMessagePorts$$module$src$mains$messages_main,this.publicEvents=new PublicEventAPI$$module$src$events(this),this.eventPromises=new EventPromises$$module$src$utils$event_promises,this.audioContext=o,this.inputChannelCount=s,this.outputChannelCount=c,this.messageCallbacks=[],this.onPlayStateChange=this.onPlayStateChange.bind(this),this.currentPlayState=void 0}async terminateInstance(){this.node&&(this.node.disconnect(),delete this.node),this.audioContext&&(this.audioContext.state!=="closed"&&await this.audioContext.close(),delete this.audioContext),this.workletProxy&&(this.workletProxy[releaseProxy$$module$node_modules$comlink$dist$esm$comlink_mjs](),delete this.workletProxy),this.publicEvents&&(this.publicEvents.terminateInstance(),delete this.publicEvents),Object.keys(this.exportApi).forEach(o=>delete this.exportApi[o]),Object.keys(this).forEach(o=>delete this[o])}async onPlayStateChange(o){if(this.currentPlayState!==o&&this.publicEvents)switch(this.currentPlayState=o,o){case"realtimePerformanceStarted":this.eventPromises.isWaitingToStart()&&(logSinglethreadWorkletMain$$module$src$logger("Start promise resolved")(),this.eventPromises.releaseStartPromise()),this.publicEvents.triggerRealtimePerformanceStarted(this);break;case"realtimePerformanceEnded":this.midiPortStarted=!1,this.currentPlayState=void 0,this.publicEvents&&this.publicEvents.triggerRealtimePerformanceEnded(this),this.eventPromises&&this.eventPromises.isWaitingToStop()&&this.eventPromises.releaseStopPromise(),this.eventPromises&&this.eventPromises.releaseStartPromise();break;case"realtimePerformancePaused":this.publicEvents.triggerRealtimePerformancePaused(this);break;case"realtimePerformanceResumed":this.publicEvents.triggerRealtimePerformanceResumed(this);break;case"renderStarted":this.eventPromises.isWaitingToStart()&&(logSinglethreadWorkletMain$$module$src$logger("Start promise resolved")(),this.publicEvents.triggerRenderStarted(this),this.eventPromises.releaseStartPromise());break;case"renderEnded":this.publicEvents.triggerRenderEnded(this),this.eventPromises&&this.eventPromises.isWaitingToStop()&&this.eventPromises.releaseStopPromise(),this.eventPromises&&this.eventPromises.releaseStartPromise()}}async csoundPause(){this.workletProxy!==void 0&&await this.workletProxy.pause()}async csoundResume(){this.workletProxy!==void 0&&await this.workletProxy.resume()}handleMidiInput({data:o}){this.ipcMessagePorts.csoundMainRtMidiPort.postMessage&&this.ipcMessagePorts.csoundMainRtMidiPort.postMessage(o)}async initialize({wasmDataURI:o,withPlugins:s,autoConnect:c}){s&&0<s.length&&(s=await fetchPlugins$$module$src$utils(s)),await initializeModule$$module$src$mains$worklet_singlethread_main(this.audioContext),this.node=new AudioWorkletNode(this.audioContext,"csound-singlethread-worklet-processor",{inputChannelCount:this.inputChannelCount?[this.inputChannelCount]:0,outputChannelCount:[this.outputChannelCount||2]}),c&&this.node.connect(this.audioContext.destination);try{logSinglethreadWorkletMain$$module$src$logger("wrapping Comlink proxy endpoint on the audioWorkletNode.port")(),this.workletProxy=wrap$$module$node_modules$comlink$dist$esm$comlink_mjs(this.node.port)}catch(g){console.error("COMLINK ERROR",g)}await this.workletProxy.initializeMessagePort(transfer$$module$node_modules$comlink$dist$esm$comlink_mjs({messagePort:this.ipcMessagePorts.workerMessagePort,rtmidiPort:this.ipcMessagePorts.csoundWorkerRtMidiPort},[this.ipcMessagePorts.workerMessagePort,this.ipcMessagePorts.csoundWorkerRtMidiPort])),this.ipcMessagePorts.mainMessagePort.addEventListener("message",messageEventHandler$$module$src$mains$messages_main(this)),this.ipcMessagePorts.mainMessagePort.start(),await this.workletProxy.initialize(o(),s);const i=await makeProxyCallback$$module$src$utils(this.workletProxy,void 0,"csoundCreate",this.currentPlayState)();this.csoundInstance=i,await makeProxyCallback$$module$src$utils(this.workletProxy,i,"csoundInitialize",this.currentPlayState)(0),this.exportApi.pause=this.csoundPause.bind(this),this.exportApi.resume=this.csoundResume.bind(this),this.exportApi.terminateInstance=this.terminateInstance.bind(this),this.exportApi.getAudioContext=async()=>this.audioContext,this.exportApi.getNode=async()=>this.node,this.exportApi.enableAudioInput=enableAudioInput$$module$src$mains$io_utils.bind(this.exportApi),this.exportApi.name="Csound: Audio Worklet, Single-threaded",this.exportApi=this.publicEvents.decorateAPI(this.exportApi),this.exportApi.addListener("message",console.log);for(const g of Object.keys(api$$module$src$libcsound)){const h=api$$module$src$libcsound[g],$=makeProxyCallback$$module$src$utils(this.workletProxy,i,g,this.currentPlayState);switch(g){case"csoundCreate":break;case"csoundStart":o=async function(){this.eventPromises.createStartPromise();var j=await this.workletProxy.isRequestingInput();return await this.workletProxy.isRequestingRealtimeOutput()?(j&&this.exportApi.enableAudioInput(),await this.exportApi._isRequestingRtMidiInput(i)&&requestMidi$$module$src$utils$request_midi({onMidiMessage:this.handleMidiInput.bind(this)}),j=await $({csound:i}),this.publicEvents.triggerOnAudioNodeCreated(this.node),await this.eventPromises.waitForStart(),j):($({csound:i}),this.publicEvents.triggerOnAudioNodeCreated(this.node),await this.eventPromises.waitForStart(),0)},o.toString=()=>h.toString(),this.exportApi.start=o.bind(this);break;case"csoundStop":o=async()=>{if(this.eventPromises.isWaitingToStop())return logSinglethreadWorkletMain$$module$src$logger("already waiting to stop, doing nothing")(),-1;this.eventPromises.createStopPromise();const j=await $();return await this.eventPromises.waitForStop(),j},o.toString=()=>h.toString(),this.exportApi.stop=o.bind(this);break;case"fs":this.exportApi.fs={},Object.keys(h).forEach(j=>{const _=makeProxyCallback$$module$src$utils(this.workletProxy,i,j,this.currentPlayState);_.toString=()=>h[j].toString(),this.exportApi.fs[j]=_});break;default:$.toString=()=>h.toString(),this.exportApi[csoundApiRename$$module$src$utils(g)]=$}}return this.exportApi}}var $jscompDefaultExport$$module$src$mains$worklet_singlethread_main=SingleThreadAudioWorkletMainThread$$module$src$mains$worklet_singlethread_main;(0,module$node_modules$unmute_ios_audio$index.default)();const Csound$$module$src$index=async function({audioContext:e,inputChannelCount:o,outputChannelCount:s,autoConnect:c=!0,withPlugins:i=[],useWorker:g=!1,useSAB:h=!0,useSPN:$=!1}={}){const j=e&&WebkitAudioContext$$module$src$utils()&&e instanceof WebkitAudioContext$$module$src$utils();j||(e=e||new(WebkitAudioContext$$module$src$utils())({latencyHint:"interactive"})),isSafari$$module$src$utils()&&e.resume();const _=areWorkletsSupported$$module$src$utils(),_e=isScriptProcessorNodeSupported$$module$src$utils();if(g){_?logIndex$$module$src$logger("worklet support detected")():_e?logIndex$$module$src$logger("scriptProcessorNode support detected")():console.error("No WebAudio Support detected");var et;if(!$&&_?et=new $jscompDefaultExport$$module$src$mains$worklet_main({audioContext:e,audioContextIsProvided:j,autoConnect:c}):_e&&(et=new $jscompDefaultExport$$module$src$mains$old_spn_main({audioContext:e,audioContextIsProvided:j,autoConnect:c})),et)return(c=isSabSupported$$module$src$utils())?h&&logIndex$$module$src$logger("using SharedArrayBuffers")():logIndex$$module$src$logger("SharedArrayBuffers not found, falling back to Vanilla concurrency")(),e=c&&_&&h?new $jscompDefaultExport$$module$src$mains$sab_main({audioWorker:et,audioContext:e,audioContextIsProvided:j,inputChannelCount:o,outputChannelCount:s}):new $jscompDefaultExport$$module$src$mains$vanilla_main({audioWorker:et,audioContextIsProvided:j}),logIndex$$module$src$logger("starting Csound thread initialization via WebWorker")(),await e.initialize({wasmDataURI:$jscompDefaultExport$$module$dist$__csound_wasm_inline,withPlugins:i}),i=e.api}else{if(_&&!$)return logIndex$$module$src$logger("Single Thread AudioWorklet")(),new $jscompDefaultExport$$module$src$mains$worklet_singlethread_main({audioContext:e,inputChannelCount:o||2,outputChannelCount:s||2}).initialize({wasmDataURI:$jscompDefaultExport$$module$dist$__csound_wasm_inline,withPlugins:i,autoConnect:c});if(_e)return logIndex$$module$src$logger("Single Thread ScriptProcessorNode")(),await new $jscompDefaultExport$$module$src$mains$spn_main({audioContext:e,inputChannelCount:o||2,outputChannelCount:s||2}).initialize({wasmDataURI:$jscompDefaultExport$$module$dist$__csound_wasm_inline,withPlugins:i,autoConnect:c})}console.error("No detectable WebAudioAPI in current environment")};goog.exportSymbol("Csound$$module$src$index",Csound$$module$src$index);const Csound=Csound$$module$src$index;Csound.toString=()=>"async (options) => CsoundObj;";const utilsOrc=`/*
  utils.orc (based on Live Coding Functions from csound-live-code)
  Author: Steven Yi
*/ 

ga1 init 0
ga2 init 0
ga3 init 0
ga4 init 0

;; MIXER
instr ReverbMixer
  ;; dry and reverb send signals
  a1 = ga1
  a2 = ga2
  a3 = ga3
  a4 = ga4 
  
  al, ar reverbsc a3, a4, .75, 12000
  
  /*a1 = tanh(a1 + al)*/
  /*a2 = tanh(a2 + ar) */

  a1 = a1 + al
  a2 = a2 + ar 
  
  out(a1, a2)

  clear ga1, ga2, ga3, ga4  
endin

/** Utility opcode to pan signal, send dry to mixer, and send amount 
    of signal to reverb. */
opcode pan_verb_mix, 0,akk
  asig, ipan, irvb xin
   ;; Panning and send to mixer
  al, ar pan2 asig, ipan
 
  ga1 += al
  ga2 += ar
  ga3 += al * irvb
  ga4 += al * irvb
endop
`,soundBathOrc=`;; Author: Steven Yi 
;; Date: 2024-05-02
;; Description: Sound Bath using Solfeggio Frequencies

schedule("ReverbMixer", 0, -1)

// Root Chakra: 396 Hz
// Sacral Chakra: 417 Hz
// Solar Plexus Chakra: 528 Hz
// Heart Chakra: 639 Hz
// Throat Chakra: 741 Hz
// Third Eye Chakra: 852 Hz
// Crown Chakra: 963 Hz

gifreqs[] = fillarray(396, 417, 528, 639, 741, 852, 963)
gilen = lenarray(gifreqs)

seed(0)

instr S1
  asig = oscili(1, p4)
  asig += oscili(.25, p4 * .5)
  asig *= ampdbfs(-12)

  asig *= transeg:a(0, .01, 0, 1, p3 - .01, -4.2, 0)

  pan_verb_mix(asig, 0.5, 0.25)
endin

instr Main
  indx = int(random:i(0, gilen))
  ifreq = gifreqs[indx]
  schedule("S1", 0, 100, ifreq)

  if(random:i(0, 1) < 0.25) then
    indx2 = int(random:i(0, gilen))
    while (indx2 == indx) do
      indx2 = int(random:i(0, gilen))
    od
    
    ifreq = gifreqs[indx2]
    schedule("S1", .5 + random:i(0, 2), 100, ifreq)
  endif
  
  schedule(p1, 5 + random:i(0, 30), 0)
endin

schedule("Main", 0, 0)
`;function ownKeys$1(e,o){var s=Object.keys(e);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);o&&(c=c.filter(function(i){return Object.getOwnPropertyDescriptor(e,i).enumerable})),s.push.apply(s,c)}return s}function _objectSpread2$1(e){for(var o=1;o<arguments.length;o++){var s=arguments[o]!=null?arguments[o]:{};o%2?ownKeys$1(Object(s),!0).forEach(function(c){_defineProperty$1(e,c,s[c])}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(s)):ownKeys$1(Object(s)).forEach(function(c){Object.defineProperty(e,c,Object.getOwnPropertyDescriptor(s,c))})}return e}function _typeof$1(e){"@babel/helpers - typeof";return _typeof$1=typeof Symbol=="function"&&typeof Symbol.iterator=="symbol"?function(o){return typeof o}:function(o){return o&&typeof Symbol=="function"&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof$1(e)}function _classCallCheck(e,o){if(!(e instanceof o))throw new TypeError("Cannot call a class as a function")}function _defineProperties(e,o){for(var s=0;s<o.length;s++){var c=o[s];c.enumerable=c.enumerable||!1,c.configurable=!0,"value"in c&&(c.writable=!0),Object.defineProperty(e,c.key,c)}}function _createClass(e,o,s){return o&&_defineProperties(e.prototype,o),Object.defineProperty(e,"prototype",{writable:!1}),e}function _defineProperty$1(e,o,s){return o in e?Object.defineProperty(e,o,{value:s,enumerable:!0,configurable:!0,writable:!0}):e[o]=s,e}function _slicedToArray(e,o){return _arrayWithHoles(e)||_iterableToArrayLimit(e,o)||_unsupportedIterableToArray$1(e,o)||_nonIterableRest()}function _toConsumableArray$1(e){return _arrayWithoutHoles$1(e)||_iterableToArray$1(e)||_unsupportedIterableToArray$1(e)||_nonIterableSpread$1()}function _arrayWithoutHoles$1(e){if(Array.isArray(e))return _arrayLikeToArray$1(e)}function _arrayWithHoles(e){if(Array.isArray(e))return e}function _iterableToArray$1(e){if(typeof Symbol<"u"&&e[Symbol.iterator]!=null||e["@@iterator"]!=null)return Array.from(e)}function _iterableToArrayLimit(e,o){var s=e==null?null:typeof Symbol<"u"&&e[Symbol.iterator]||e["@@iterator"];if(s!=null){var c=[],i=!0,g=!1,h,$;try{for(s=s.call(e);!(i=(h=s.next()).done)&&(c.push(h.value),!(o&&c.length===o));i=!0);}catch(j){g=!0,$=j}finally{try{!i&&s.return!=null&&s.return()}finally{if(g)throw $}}return c}}function _unsupportedIterableToArray$1(e,o){if(e){if(typeof e=="string")return _arrayLikeToArray$1(e,o);var s=Object.prototype.toString.call(e).slice(8,-1);if(s==="Object"&&e.constructor&&(s=e.constructor.name),s==="Map"||s==="Set")return Array.from(e);if(s==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(s))return _arrayLikeToArray$1(e,o)}}function _arrayLikeToArray$1(e,o){(o==null||o>e.length)&&(o=e.length);for(var s=0,c=new Array(o);s<o;s++)c[s]=e[s];return c}function _nonIterableSpread$1(){throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}function _nonIterableRest(){throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}var noop=function e(){},_WINDOW={},_DOCUMENT={},_MUTATION_OBSERVER=null,_PERFORMANCE={mark:noop,measure:noop};try{typeof window<"u"&&(_WINDOW=window),typeof document<"u"&&(_DOCUMENT=document),typeof MutationObserver<"u"&&(_MUTATION_OBSERVER=MutationObserver),typeof performance<"u"&&(_PERFORMANCE=performance)}catch(e){}var _ref=_WINDOW.navigator||{},_ref$userAgent=_ref.userAgent,userAgent=_ref$userAgent===void 0?"":_ref$userAgent,WINDOW=_WINDOW,DOCUMENT=_DOCUMENT,MUTATION_OBSERVER=_MUTATION_OBSERVER,PERFORMANCE=_PERFORMANCE;WINDOW.document;var IS_DOM=!!DOCUMENT.documentElement&&!!DOCUMENT.head&&typeof DOCUMENT.addEventListener=="function"&&typeof DOCUMENT.createElement=="function",IS_IE=~userAgent.indexOf("MSIE")||~userAgent.indexOf("Trident/"),_familyProxy,_familyProxy2,_familyProxy3,_familyProxy4,_familyProxy5,NAMESPACE_IDENTIFIER="___FONT_AWESOME___",UNITS_IN_GRID=16,DEFAULT_CSS_PREFIX="fa",DEFAULT_REPLACEMENT_CLASS="svg-inline--fa",DATA_FA_I2SVG="data-fa-i2svg",DATA_FA_PSEUDO_ELEMENT="data-fa-pseudo-element",DATA_FA_PSEUDO_ELEMENT_PENDING="data-fa-pseudo-element-pending",DATA_PREFIX="data-prefix",DATA_ICON="data-icon",HTML_CLASS_I2SVG_BASE_CLASS="fontawesome-i2svg",MUTATION_APPROACH_ASYNC="async",TAGNAMES_TO_SKIP_FOR_PSEUDOELEMENTS=["HTML","HEAD","STYLE","SCRIPT"],PRODUCTION$1=function(){try{return!0}catch{return!1}}(),FAMILY_CLASSIC="classic",FAMILY_SHARP="sharp",FAMILIES=[FAMILY_CLASSIC,FAMILY_SHARP];function familyProxy(e){return new Proxy(e,{get:function(s,c){return c in s?s[c]:s[FAMILY_CLASSIC]}})}var PREFIX_TO_STYLE=familyProxy((_familyProxy={},_defineProperty$1(_familyProxy,FAMILY_CLASSIC,{fa:"solid",fas:"solid","fa-solid":"solid",far:"regular","fa-regular":"regular",fal:"light","fa-light":"light",fat:"thin","fa-thin":"thin",fad:"duotone","fa-duotone":"duotone",fab:"brands","fa-brands":"brands",fak:"kit",fakd:"kit","fa-kit":"kit","fa-kit-duotone":"kit"}),_defineProperty$1(_familyProxy,FAMILY_SHARP,{fa:"solid",fass:"solid","fa-solid":"solid",fasr:"regular","fa-regular":"regular",fasl:"light","fa-light":"light",fast:"thin","fa-thin":"thin"}),_familyProxy)),STYLE_TO_PREFIX=familyProxy((_familyProxy2={},_defineProperty$1(_familyProxy2,FAMILY_CLASSIC,{solid:"fas",regular:"far",light:"fal",thin:"fat",duotone:"fad",brands:"fab",kit:"fak"}),_defineProperty$1(_familyProxy2,FAMILY_SHARP,{solid:"fass",regular:"fasr",light:"fasl",thin:"fast"}),_familyProxy2)),PREFIX_TO_LONG_STYLE=familyProxy((_familyProxy3={},_defineProperty$1(_familyProxy3,FAMILY_CLASSIC,{fab:"fa-brands",fad:"fa-duotone",fak:"fa-kit",fal:"fa-light",far:"fa-regular",fas:"fa-solid",fat:"fa-thin"}),_defineProperty$1(_familyProxy3,FAMILY_SHARP,{fass:"fa-solid",fasr:"fa-regular",fasl:"fa-light",fast:"fa-thin"}),_familyProxy3)),LONG_STYLE_TO_PREFIX=familyProxy((_familyProxy4={},_defineProperty$1(_familyProxy4,FAMILY_CLASSIC,{"fa-brands":"fab","fa-duotone":"fad","fa-kit":"fak","fa-light":"fal","fa-regular":"far","fa-solid":"fas","fa-thin":"fat"}),_defineProperty$1(_familyProxy4,FAMILY_SHARP,{"fa-solid":"fass","fa-regular":"fasr","fa-light":"fasl","fa-thin":"fast"}),_familyProxy4)),ICON_SELECTION_SYNTAX_PATTERN=/fa(s|r|l|t|d|b|k|ss|sr|sl|st)?[\-\ ]/,LAYERS_TEXT_CLASSNAME="fa-layers-text",FONT_FAMILY_PATTERN=/Font ?Awesome ?([56 ]*)(Solid|Regular|Light|Thin|Duotone|Brands|Free|Pro|Sharp|Kit)?.*/i,FONT_WEIGHT_TO_PREFIX=familyProxy((_familyProxy5={},_defineProperty$1(_familyProxy5,FAMILY_CLASSIC,{900:"fas",400:"far",normal:"far",300:"fal",100:"fat"}),_defineProperty$1(_familyProxy5,FAMILY_SHARP,{900:"fass",400:"fasr",300:"fasl",100:"fast"}),_familyProxy5)),oneToTen=[1,2,3,4,5,6,7,8,9,10],oneToTwenty=oneToTen.concat([11,12,13,14,15,16,17,18,19,20]),ATTRIBUTES_WATCHED_FOR_MUTATION=["class","data-prefix","data-icon","data-fa-transform","data-fa-mask"],DUOTONE_CLASSES={GROUP:"duotone-group",SWAP_OPACITY:"swap-opacity",PRIMARY:"primary",SECONDARY:"secondary"},prefixes=new Set;Object.keys(STYLE_TO_PREFIX[FAMILY_CLASSIC]).map(prefixes.add.bind(prefixes));Object.keys(STYLE_TO_PREFIX[FAMILY_SHARP]).map(prefixes.add.bind(prefixes));var RESERVED_CLASSES=[].concat(FAMILIES,_toConsumableArray$1(prefixes),["2xs","xs","sm","lg","xl","2xl","beat","border","fade","beat-fade","bounce","flip-both","flip-horizontal","flip-vertical","flip","fw","inverse","layers-counter","layers-text","layers","li","pull-left","pull-right","pulse","rotate-180","rotate-270","rotate-90","rotate-by","shake","spin-pulse","spin-reverse","spin","stack-1x","stack-2x","stack","ul",DUOTONE_CLASSES.GROUP,DUOTONE_CLASSES.SWAP_OPACITY,DUOTONE_CLASSES.PRIMARY,DUOTONE_CLASSES.SECONDARY]).concat(oneToTen.map(function(e){return"".concat(e,"x")})).concat(oneToTwenty.map(function(e){return"w-".concat(e)})),initial=WINDOW.FontAwesomeConfig||{};function getAttrConfig(e){var o=DOCUMENT.querySelector("script["+e+"]");if(o)return o.getAttribute(e)}function coerce(e){return e===""?!0:e==="false"?!1:e==="true"?!0:e}if(DOCUMENT&&typeof DOCUMENT.querySelector=="function"){var attrs=[["data-family-prefix","familyPrefix"],["data-css-prefix","cssPrefix"],["data-family-default","familyDefault"],["data-style-default","styleDefault"],["data-replacement-class","replacementClass"],["data-auto-replace-svg","autoReplaceSvg"],["data-auto-add-css","autoAddCss"],["data-auto-a11y","autoA11y"],["data-search-pseudo-elements","searchPseudoElements"],["data-observe-mutations","observeMutations"],["data-mutate-approach","mutateApproach"],["data-keep-original-source","keepOriginalSource"],["data-measure-performance","measurePerformance"],["data-show-missing-icons","showMissingIcons"]];attrs.forEach(function(e){var o=_slicedToArray(e,2),s=o[0],c=o[1],i=coerce(getAttrConfig(s));i!=null&&(initial[c]=i)})}var _default={styleDefault:"solid",familyDefault:"classic",cssPrefix:DEFAULT_CSS_PREFIX,replacementClass:DEFAULT_REPLACEMENT_CLASS,autoReplaceSvg:!0,autoAddCss:!0,autoA11y:!0,searchPseudoElements:!1,observeMutations:!0,mutateApproach:"async",keepOriginalSource:!0,measurePerformance:!1,showMissingIcons:!0};initial.familyPrefix&&(initial.cssPrefix=initial.familyPrefix);var _config=_objectSpread2$1(_objectSpread2$1({},_default),initial);_config.autoReplaceSvg||(_config.observeMutations=!1);var config={};Object.keys(_default).forEach(function(e){Object.defineProperty(config,e,{enumerable:!0,set:function(s){_config[e]=s,_onChangeCb.forEach(function(c){return c(config)})},get:function(){return _config[e]}})});Object.defineProperty(config,"familyPrefix",{enumerable:!0,set:function e(o){_config.cssPrefix=o,_onChangeCb.forEach(function(s){return s(config)})},get:function e(){return _config.cssPrefix}});WINDOW.FontAwesomeConfig=config;var _onChangeCb=[];function onChange(e){return _onChangeCb.push(e),function(){_onChangeCb.splice(_onChangeCb.indexOf(e),1)}}var d=UNITS_IN_GRID,meaninglessTransform={size:16,x:0,y:0,rotate:0,flipX:!1,flipY:!1};function insertCss(e){if(!(!e||!IS_DOM)){var o=DOCUMENT.createElement("style");o.setAttribute("type","text/css"),o.innerHTML=e;for(var s=DOCUMENT.head.childNodes,c=null,i=s.length-1;i>-1;i--){var g=s[i],h=(g.tagName||"").toUpperCase();["STYLE","LINK"].indexOf(h)>-1&&(c=g)}return DOCUMENT.head.insertBefore(o,c),e}}var idPool="0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ";function nextUniqueId(){for(var e=12,o="";e-- >0;)o+=idPool[Math.random()*62|0];return o}function toArray(e){for(var o=[],s=(e||[]).length>>>0;s--;)o[s]=e[s];return o}function classArray(e){return e.classList?toArray(e.classList):(e.getAttribute("class")||"").split(" ").filter(function(o){return o})}function htmlEscape(e){return"".concat(e).replace(/&/g,"&amp;").replace(/"/g,"&quot;").replace(/'/g,"&#39;").replace(/</g,"&lt;").replace(/>/g,"&gt;")}function joinAttributes(e){return Object.keys(e||{}).reduce(function(o,s){return o+"".concat(s,'="').concat(htmlEscape(e[s]),'" ')},"").trim()}function joinStyles(e){return Object.keys(e||{}).reduce(function(o,s){return o+"".concat(s,": ").concat(e[s].trim(),";")},"")}function transformIsMeaningful(e){return e.size!==meaninglessTransform.size||e.x!==meaninglessTransform.x||e.y!==meaninglessTransform.y||e.rotate!==meaninglessTransform.rotate||e.flipX||e.flipY}function transformForSvg(e){var o=e.transform,s=e.containerWidth,c=e.iconWidth,i={transform:"translate(".concat(s/2," 256)")},g="translate(".concat(o.x*32,", ").concat(o.y*32,") "),h="scale(".concat(o.size/16*(o.flipX?-1:1),", ").concat(o.size/16*(o.flipY?-1:1),") "),$="rotate(".concat(o.rotate," 0 0)"),j={transform:"".concat(g," ").concat(h," ").concat($)},_={transform:"translate(".concat(c/2*-1," -256)")};return{outer:i,inner:j,path:_}}function transformForCss(e){var o=e.transform,s=e.width,c=s===void 0?UNITS_IN_GRID:s,i=e.height,g=i===void 0?UNITS_IN_GRID:i,h=e.startCentered,$=h===void 0?!1:h,j="";return $&&IS_IE?j+="translate(".concat(o.x/d-c/2,"em, ").concat(o.y/d-g/2,"em) "):$?j+="translate(calc(-50% + ".concat(o.x/d,"em), calc(-50% + ").concat(o.y/d,"em)) "):j+="translate(".concat(o.x/d,"em, ").concat(o.y/d,"em) "),j+="scale(".concat(o.size/d*(o.flipX?-1:1),", ").concat(o.size/d*(o.flipY?-1:1),") "),j+="rotate(".concat(o.rotate,"deg) "),j}var baseStyles=`:root, :host {
  --fa-font-solid: normal 900 1em/1 "Font Awesome 6 Solid";
  --fa-font-regular: normal 400 1em/1 "Font Awesome 6 Regular";
  --fa-font-light: normal 300 1em/1 "Font Awesome 6 Light";
  --fa-font-thin: normal 100 1em/1 "Font Awesome 6 Thin";
  --fa-font-duotone: normal 900 1em/1 "Font Awesome 6 Duotone";
  --fa-font-sharp-solid: normal 900 1em/1 "Font Awesome 6 Sharp";
  --fa-font-sharp-regular: normal 400 1em/1 "Font Awesome 6 Sharp";
  --fa-font-sharp-light: normal 300 1em/1 "Font Awesome 6 Sharp";
  --fa-font-sharp-thin: normal 100 1em/1 "Font Awesome 6 Sharp";
  --fa-font-brands: normal 400 1em/1 "Font Awesome 6 Brands";
}

svg:not(:root).svg-inline--fa, svg:not(:host).svg-inline--fa {
  overflow: visible;
  box-sizing: content-box;
}

.svg-inline--fa {
  display: var(--fa-display, inline-block);
  height: 1em;
  overflow: visible;
  vertical-align: -0.125em;
}
.svg-inline--fa.fa-2xs {
  vertical-align: 0.1em;
}
.svg-inline--fa.fa-xs {
  vertical-align: 0em;
}
.svg-inline--fa.fa-sm {
  vertical-align: -0.0714285705em;
}
.svg-inline--fa.fa-lg {
  vertical-align: -0.2em;
}
.svg-inline--fa.fa-xl {
  vertical-align: -0.25em;
}
.svg-inline--fa.fa-2xl {
  vertical-align: -0.3125em;
}
.svg-inline--fa.fa-pull-left {
  margin-right: var(--fa-pull-margin, 0.3em);
  width: auto;
}
.svg-inline--fa.fa-pull-right {
  margin-left: var(--fa-pull-margin, 0.3em);
  width: auto;
}
.svg-inline--fa.fa-li {
  width: var(--fa-li-width, 2em);
  top: 0.25em;
}
.svg-inline--fa.fa-fw {
  width: var(--fa-fw-width, 1.25em);
}

.fa-layers svg.svg-inline--fa {
  bottom: 0;
  left: 0;
  margin: auto;
  position: absolute;
  right: 0;
  top: 0;
}

.fa-layers-counter, .fa-layers-text {
  display: inline-block;
  position: absolute;
  text-align: center;
}

.fa-layers {
  display: inline-block;
  height: 1em;
  position: relative;
  text-align: center;
  vertical-align: -0.125em;
  width: 1em;
}
.fa-layers svg.svg-inline--fa {
  -webkit-transform-origin: center center;
          transform-origin: center center;
}

.fa-layers-text {
  left: 50%;
  top: 50%;
  -webkit-transform: translate(-50%, -50%);
          transform: translate(-50%, -50%);
  -webkit-transform-origin: center center;
          transform-origin: center center;
}

.fa-layers-counter {
  background-color: var(--fa-counter-background-color, #ff253a);
  border-radius: var(--fa-counter-border-radius, 1em);
  box-sizing: border-box;
  color: var(--fa-inverse, #fff);
  line-height: var(--fa-counter-line-height, 1);
  max-width: var(--fa-counter-max-width, 5em);
  min-width: var(--fa-counter-min-width, 1.5em);
  overflow: hidden;
  padding: var(--fa-counter-padding, 0.25em 0.5em);
  right: var(--fa-right, 0);
  text-overflow: ellipsis;
  top: var(--fa-top, 0);
  -webkit-transform: scale(var(--fa-counter-scale, 0.25));
          transform: scale(var(--fa-counter-scale, 0.25));
  -webkit-transform-origin: top right;
          transform-origin: top right;
}

.fa-layers-bottom-right {
  bottom: var(--fa-bottom, 0);
  right: var(--fa-right, 0);
  top: auto;
  -webkit-transform: scale(var(--fa-layers-scale, 0.25));
          transform: scale(var(--fa-layers-scale, 0.25));
  -webkit-transform-origin: bottom right;
          transform-origin: bottom right;
}

.fa-layers-bottom-left {
  bottom: var(--fa-bottom, 0);
  left: var(--fa-left, 0);
  right: auto;
  top: auto;
  -webkit-transform: scale(var(--fa-layers-scale, 0.25));
          transform: scale(var(--fa-layers-scale, 0.25));
  -webkit-transform-origin: bottom left;
          transform-origin: bottom left;
}

.fa-layers-top-right {
  top: var(--fa-top, 0);
  right: var(--fa-right, 0);
  -webkit-transform: scale(var(--fa-layers-scale, 0.25));
          transform: scale(var(--fa-layers-scale, 0.25));
  -webkit-transform-origin: top right;
          transform-origin: top right;
}

.fa-layers-top-left {
  left: var(--fa-left, 0);
  right: auto;
  top: var(--fa-top, 0);
  -webkit-transform: scale(var(--fa-layers-scale, 0.25));
          transform: scale(var(--fa-layers-scale, 0.25));
  -webkit-transform-origin: top left;
          transform-origin: top left;
}

.fa-1x {
  font-size: 1em;
}

.fa-2x {
  font-size: 2em;
}

.fa-3x {
  font-size: 3em;
}

.fa-4x {
  font-size: 4em;
}

.fa-5x {
  font-size: 5em;
}

.fa-6x {
  font-size: 6em;
}

.fa-7x {
  font-size: 7em;
}

.fa-8x {
  font-size: 8em;
}

.fa-9x {
  font-size: 9em;
}

.fa-10x {
  font-size: 10em;
}

.fa-2xs {
  font-size: 0.625em;
  line-height: 0.1em;
  vertical-align: 0.225em;
}

.fa-xs {
  font-size: 0.75em;
  line-height: 0.0833333337em;
  vertical-align: 0.125em;
}

.fa-sm {
  font-size: 0.875em;
  line-height: 0.0714285718em;
  vertical-align: 0.0535714295em;
}

.fa-lg {
  font-size: 1.25em;
  line-height: 0.05em;
  vertical-align: -0.075em;
}

.fa-xl {
  font-size: 1.5em;
  line-height: 0.0416666682em;
  vertical-align: -0.125em;
}

.fa-2xl {
  font-size: 2em;
  line-height: 0.03125em;
  vertical-align: -0.1875em;
}

.fa-fw {
  text-align: center;
  width: 1.25em;
}

.fa-ul {
  list-style-type: none;
  margin-left: var(--fa-li-margin, 2.5em);
  padding-left: 0;
}
.fa-ul > li {
  position: relative;
}

.fa-li {
  left: calc(var(--fa-li-width, 2em) * -1);
  position: absolute;
  text-align: center;
  width: var(--fa-li-width, 2em);
  line-height: inherit;
}

.fa-border {
  border-color: var(--fa-border-color, #eee);
  border-radius: var(--fa-border-radius, 0.1em);
  border-style: var(--fa-border-style, solid);
  border-width: var(--fa-border-width, 0.08em);
  padding: var(--fa-border-padding, 0.2em 0.25em 0.15em);
}

.fa-pull-left {
  float: left;
  margin-right: var(--fa-pull-margin, 0.3em);
}

.fa-pull-right {
  float: right;
  margin-left: var(--fa-pull-margin, 0.3em);
}

.fa-beat {
  -webkit-animation-name: fa-beat;
          animation-name: fa-beat;
  -webkit-animation-delay: var(--fa-animation-delay, 0s);
          animation-delay: var(--fa-animation-delay, 0s);
  -webkit-animation-direction: var(--fa-animation-direction, normal);
          animation-direction: var(--fa-animation-direction, normal);
  -webkit-animation-duration: var(--fa-animation-duration, 1s);
          animation-duration: var(--fa-animation-duration, 1s);
  -webkit-animation-iteration-count: var(--fa-animation-iteration-count, infinite);
          animation-iteration-count: var(--fa-animation-iteration-count, infinite);
  -webkit-animation-timing-function: var(--fa-animation-timing, ease-in-out);
          animation-timing-function: var(--fa-animation-timing, ease-in-out);
}

.fa-bounce {
  -webkit-animation-name: fa-bounce;
          animation-name: fa-bounce;
  -webkit-animation-delay: var(--fa-animation-delay, 0s);
          animation-delay: var(--fa-animation-delay, 0s);
  -webkit-animation-direction: var(--fa-animation-direction, normal);
          animation-direction: var(--fa-animation-direction, normal);
  -webkit-animation-duration: var(--fa-animation-duration, 1s);
          animation-duration: var(--fa-animation-duration, 1s);
  -webkit-animation-iteration-count: var(--fa-animation-iteration-count, infinite);
          animation-iteration-count: var(--fa-animation-iteration-count, infinite);
  -webkit-animation-timing-function: var(--fa-animation-timing, cubic-bezier(0.28, 0.84, 0.42, 1));
          animation-timing-function: var(--fa-animation-timing, cubic-bezier(0.28, 0.84, 0.42, 1));
}

.fa-fade {
  -webkit-animation-name: fa-fade;
          animation-name: fa-fade;
  -webkit-animation-delay: var(--fa-animation-delay, 0s);
          animation-delay: var(--fa-animation-delay, 0s);
  -webkit-animation-direction: var(--fa-animation-direction, normal);
          animation-direction: var(--fa-animation-direction, normal);
  -webkit-animation-duration: var(--fa-animation-duration, 1s);
          animation-duration: var(--fa-animation-duration, 1s);
  -webkit-animation-iteration-count: var(--fa-animation-iteration-count, infinite);
          animation-iteration-count: var(--fa-animation-iteration-count, infinite);
  -webkit-animation-timing-function: var(--fa-animation-timing, cubic-bezier(0.4, 0, 0.6, 1));
          animation-timing-function: var(--fa-animation-timing, cubic-bezier(0.4, 0, 0.6, 1));
}

.fa-beat-fade {
  -webkit-animation-name: fa-beat-fade;
          animation-name: fa-beat-fade;
  -webkit-animation-delay: var(--fa-animation-delay, 0s);
          animation-delay: var(--fa-animation-delay, 0s);
  -webkit-animation-direction: var(--fa-animation-direction, normal);
          animation-direction: var(--fa-animation-direction, normal);
  -webkit-animation-duration: var(--fa-animation-duration, 1s);
          animation-duration: var(--fa-animation-duration, 1s);
  -webkit-animation-iteration-count: var(--fa-animation-iteration-count, infinite);
          animation-iteration-count: var(--fa-animation-iteration-count, infinite);
  -webkit-animation-timing-function: var(--fa-animation-timing, cubic-bezier(0.4, 0, 0.6, 1));
          animation-timing-function: var(--fa-animation-timing, cubic-bezier(0.4, 0, 0.6, 1));
}

.fa-flip {
  -webkit-animation-name: fa-flip;
          animation-name: fa-flip;
  -webkit-animation-delay: var(--fa-animation-delay, 0s);
          animation-delay: var(--fa-animation-delay, 0s);
  -webkit-animation-direction: var(--fa-animation-direction, normal);
          animation-direction: var(--fa-animation-direction, normal);
  -webkit-animation-duration: var(--fa-animation-duration, 1s);
          animation-duration: var(--fa-animation-duration, 1s);
  -webkit-animation-iteration-count: var(--fa-animation-iteration-count, infinite);
          animation-iteration-count: var(--fa-animation-iteration-count, infinite);
  -webkit-animation-timing-function: var(--fa-animation-timing, ease-in-out);
          animation-timing-function: var(--fa-animation-timing, ease-in-out);
}

.fa-shake {
  -webkit-animation-name: fa-shake;
          animation-name: fa-shake;
  -webkit-animation-delay: var(--fa-animation-delay, 0s);
          animation-delay: var(--fa-animation-delay, 0s);
  -webkit-animation-direction: var(--fa-animation-direction, normal);
          animation-direction: var(--fa-animation-direction, normal);
  -webkit-animation-duration: var(--fa-animation-duration, 1s);
          animation-duration: var(--fa-animation-duration, 1s);
  -webkit-animation-iteration-count: var(--fa-animation-iteration-count, infinite);
          animation-iteration-count: var(--fa-animation-iteration-count, infinite);
  -webkit-animation-timing-function: var(--fa-animation-timing, linear);
          animation-timing-function: var(--fa-animation-timing, linear);
}

.fa-spin {
  -webkit-animation-name: fa-spin;
          animation-name: fa-spin;
  -webkit-animation-delay: var(--fa-animation-delay, 0s);
          animation-delay: var(--fa-animation-delay, 0s);
  -webkit-animation-direction: var(--fa-animation-direction, normal);
          animation-direction: var(--fa-animation-direction, normal);
  -webkit-animation-duration: var(--fa-animation-duration, 2s);
          animation-duration: var(--fa-animation-duration, 2s);
  -webkit-animation-iteration-count: var(--fa-animation-iteration-count, infinite);
          animation-iteration-count: var(--fa-animation-iteration-count, infinite);
  -webkit-animation-timing-function: var(--fa-animation-timing, linear);
          animation-timing-function: var(--fa-animation-timing, linear);
}

.fa-spin-reverse {
  --fa-animation-direction: reverse;
}

.fa-pulse,
.fa-spin-pulse {
  -webkit-animation-name: fa-spin;
          animation-name: fa-spin;
  -webkit-animation-direction: var(--fa-animation-direction, normal);
          animation-direction: var(--fa-animation-direction, normal);
  -webkit-animation-duration: var(--fa-animation-duration, 1s);
          animation-duration: var(--fa-animation-duration, 1s);
  -webkit-animation-iteration-count: var(--fa-animation-iteration-count, infinite);
          animation-iteration-count: var(--fa-animation-iteration-count, infinite);
  -webkit-animation-timing-function: var(--fa-animation-timing, steps(8));
          animation-timing-function: var(--fa-animation-timing, steps(8));
}

@media (prefers-reduced-motion: reduce) {
  .fa-beat,
.fa-bounce,
.fa-fade,
.fa-beat-fade,
.fa-flip,
.fa-pulse,
.fa-shake,
.fa-spin,
.fa-spin-pulse {
    -webkit-animation-delay: -1ms;
            animation-delay: -1ms;
    -webkit-animation-duration: 1ms;
            animation-duration: 1ms;
    -webkit-animation-iteration-count: 1;
            animation-iteration-count: 1;
    -webkit-transition-delay: 0s;
            transition-delay: 0s;
    -webkit-transition-duration: 0s;
            transition-duration: 0s;
  }
}
@-webkit-keyframes fa-beat {
  0%, 90% {
    -webkit-transform: scale(1);
            transform: scale(1);
  }
  45% {
    -webkit-transform: scale(var(--fa-beat-scale, 1.25));
            transform: scale(var(--fa-beat-scale, 1.25));
  }
}
@keyframes fa-beat {
  0%, 90% {
    -webkit-transform: scale(1);
            transform: scale(1);
  }
  45% {
    -webkit-transform: scale(var(--fa-beat-scale, 1.25));
            transform: scale(var(--fa-beat-scale, 1.25));
  }
}
@-webkit-keyframes fa-bounce {
  0% {
    -webkit-transform: scale(1, 1) translateY(0);
            transform: scale(1, 1) translateY(0);
  }
  10% {
    -webkit-transform: scale(var(--fa-bounce-start-scale-x, 1.1), var(--fa-bounce-start-scale-y, 0.9)) translateY(0);
            transform: scale(var(--fa-bounce-start-scale-x, 1.1), var(--fa-bounce-start-scale-y, 0.9)) translateY(0);
  }
  30% {
    -webkit-transform: scale(var(--fa-bounce-jump-scale-x, 0.9), var(--fa-bounce-jump-scale-y, 1.1)) translateY(var(--fa-bounce-height, -0.5em));
            transform: scale(var(--fa-bounce-jump-scale-x, 0.9), var(--fa-bounce-jump-scale-y, 1.1)) translateY(var(--fa-bounce-height, -0.5em));
  }
  50% {
    -webkit-transform: scale(var(--fa-bounce-land-scale-x, 1.05), var(--fa-bounce-land-scale-y, 0.95)) translateY(0);
            transform: scale(var(--fa-bounce-land-scale-x, 1.05), var(--fa-bounce-land-scale-y, 0.95)) translateY(0);
  }
  57% {
    -webkit-transform: scale(1, 1) translateY(var(--fa-bounce-rebound, -0.125em));
            transform: scale(1, 1) translateY(var(--fa-bounce-rebound, -0.125em));
  }
  64% {
    -webkit-transform: scale(1, 1) translateY(0);
            transform: scale(1, 1) translateY(0);
  }
  100% {
    -webkit-transform: scale(1, 1) translateY(0);
            transform: scale(1, 1) translateY(0);
  }
}
@keyframes fa-bounce {
  0% {
    -webkit-transform: scale(1, 1) translateY(0);
            transform: scale(1, 1) translateY(0);
  }
  10% {
    -webkit-transform: scale(var(--fa-bounce-start-scale-x, 1.1), var(--fa-bounce-start-scale-y, 0.9)) translateY(0);
            transform: scale(var(--fa-bounce-start-scale-x, 1.1), var(--fa-bounce-start-scale-y, 0.9)) translateY(0);
  }
  30% {
    -webkit-transform: scale(var(--fa-bounce-jump-scale-x, 0.9), var(--fa-bounce-jump-scale-y, 1.1)) translateY(var(--fa-bounce-height, -0.5em));
            transform: scale(var(--fa-bounce-jump-scale-x, 0.9), var(--fa-bounce-jump-scale-y, 1.1)) translateY(var(--fa-bounce-height, -0.5em));
  }
  50% {
    -webkit-transform: scale(var(--fa-bounce-land-scale-x, 1.05), var(--fa-bounce-land-scale-y, 0.95)) translateY(0);
            transform: scale(var(--fa-bounce-land-scale-x, 1.05), var(--fa-bounce-land-scale-y, 0.95)) translateY(0);
  }
  57% {
    -webkit-transform: scale(1, 1) translateY(var(--fa-bounce-rebound, -0.125em));
            transform: scale(1, 1) translateY(var(--fa-bounce-rebound, -0.125em));
  }
  64% {
    -webkit-transform: scale(1, 1) translateY(0);
            transform: scale(1, 1) translateY(0);
  }
  100% {
    -webkit-transform: scale(1, 1) translateY(0);
            transform: scale(1, 1) translateY(0);
  }
}
@-webkit-keyframes fa-fade {
  50% {
    opacity: var(--fa-fade-opacity, 0.4);
  }
}
@keyframes fa-fade {
  50% {
    opacity: var(--fa-fade-opacity, 0.4);
  }
}
@-webkit-keyframes fa-beat-fade {
  0%, 100% {
    opacity: var(--fa-beat-fade-opacity, 0.4);
    -webkit-transform: scale(1);
            transform: scale(1);
  }
  50% {
    opacity: 1;
    -webkit-transform: scale(var(--fa-beat-fade-scale, 1.125));
            transform: scale(var(--fa-beat-fade-scale, 1.125));
  }
}
@keyframes fa-beat-fade {
  0%, 100% {
    opacity: var(--fa-beat-fade-opacity, 0.4);
    -webkit-transform: scale(1);
            transform: scale(1);
  }
  50% {
    opacity: 1;
    -webkit-transform: scale(var(--fa-beat-fade-scale, 1.125));
            transform: scale(var(--fa-beat-fade-scale, 1.125));
  }
}
@-webkit-keyframes fa-flip {
  50% {
    -webkit-transform: rotate3d(var(--fa-flip-x, 0), var(--fa-flip-y, 1), var(--fa-flip-z, 0), var(--fa-flip-angle, -180deg));
            transform: rotate3d(var(--fa-flip-x, 0), var(--fa-flip-y, 1), var(--fa-flip-z, 0), var(--fa-flip-angle, -180deg));
  }
}
@keyframes fa-flip {
  50% {
    -webkit-transform: rotate3d(var(--fa-flip-x, 0), var(--fa-flip-y, 1), var(--fa-flip-z, 0), var(--fa-flip-angle, -180deg));
            transform: rotate3d(var(--fa-flip-x, 0), var(--fa-flip-y, 1), var(--fa-flip-z, 0), var(--fa-flip-angle, -180deg));
  }
}
@-webkit-keyframes fa-shake {
  0% {
    -webkit-transform: rotate(-15deg);
            transform: rotate(-15deg);
  }
  4% {
    -webkit-transform: rotate(15deg);
            transform: rotate(15deg);
  }
  8%, 24% {
    -webkit-transform: rotate(-18deg);
            transform: rotate(-18deg);
  }
  12%, 28% {
    -webkit-transform: rotate(18deg);
            transform: rotate(18deg);
  }
  16% {
    -webkit-transform: rotate(-22deg);
            transform: rotate(-22deg);
  }
  20% {
    -webkit-transform: rotate(22deg);
            transform: rotate(22deg);
  }
  32% {
    -webkit-transform: rotate(-12deg);
            transform: rotate(-12deg);
  }
  36% {
    -webkit-transform: rotate(12deg);
            transform: rotate(12deg);
  }
  40%, 100% {
    -webkit-transform: rotate(0deg);
            transform: rotate(0deg);
  }
}
@keyframes fa-shake {
  0% {
    -webkit-transform: rotate(-15deg);
            transform: rotate(-15deg);
  }
  4% {
    -webkit-transform: rotate(15deg);
            transform: rotate(15deg);
  }
  8%, 24% {
    -webkit-transform: rotate(-18deg);
            transform: rotate(-18deg);
  }
  12%, 28% {
    -webkit-transform: rotate(18deg);
            transform: rotate(18deg);
  }
  16% {
    -webkit-transform: rotate(-22deg);
            transform: rotate(-22deg);
  }
  20% {
    -webkit-transform: rotate(22deg);
            transform: rotate(22deg);
  }
  32% {
    -webkit-transform: rotate(-12deg);
            transform: rotate(-12deg);
  }
  36% {
    -webkit-transform: rotate(12deg);
            transform: rotate(12deg);
  }
  40%, 100% {
    -webkit-transform: rotate(0deg);
            transform: rotate(0deg);
  }
}
@-webkit-keyframes fa-spin {
  0% {
    -webkit-transform: rotate(0deg);
            transform: rotate(0deg);
  }
  100% {
    -webkit-transform: rotate(360deg);
            transform: rotate(360deg);
  }
}
@keyframes fa-spin {
  0% {
    -webkit-transform: rotate(0deg);
            transform: rotate(0deg);
  }
  100% {
    -webkit-transform: rotate(360deg);
            transform: rotate(360deg);
  }
}
.fa-rotate-90 {
  -webkit-transform: rotate(90deg);
          transform: rotate(90deg);
}

.fa-rotate-180 {
  -webkit-transform: rotate(180deg);
          transform: rotate(180deg);
}

.fa-rotate-270 {
  -webkit-transform: rotate(270deg);
          transform: rotate(270deg);
}

.fa-flip-horizontal {
  -webkit-transform: scale(-1, 1);
          transform: scale(-1, 1);
}

.fa-flip-vertical {
  -webkit-transform: scale(1, -1);
          transform: scale(1, -1);
}

.fa-flip-both,
.fa-flip-horizontal.fa-flip-vertical {
  -webkit-transform: scale(-1, -1);
          transform: scale(-1, -1);
}

.fa-rotate-by {
  -webkit-transform: rotate(var(--fa-rotate-angle, 0));
          transform: rotate(var(--fa-rotate-angle, 0));
}

.fa-stack {
  display: inline-block;
  vertical-align: middle;
  height: 2em;
  position: relative;
  width: 2.5em;
}

.fa-stack-1x,
.fa-stack-2x {
  bottom: 0;
  left: 0;
  margin: auto;
  position: absolute;
  right: 0;
  top: 0;
  z-index: var(--fa-stack-z-index, auto);
}

.svg-inline--fa.fa-stack-1x {
  height: 1em;
  width: 1.25em;
}
.svg-inline--fa.fa-stack-2x {
  height: 2em;
  width: 2.5em;
}

.fa-inverse {
  color: var(--fa-inverse, #fff);
}

.sr-only,
.fa-sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border-width: 0;
}

.sr-only-focusable:not(:focus),
.fa-sr-only-focusable:not(:focus) {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border-width: 0;
}

.svg-inline--fa .fa-primary {
  fill: var(--fa-primary-color, currentColor);
  opacity: var(--fa-primary-opacity, 1);
}

.svg-inline--fa .fa-secondary {
  fill: var(--fa-secondary-color, currentColor);
  opacity: var(--fa-secondary-opacity, 0.4);
}

.svg-inline--fa.fa-swap-opacity .fa-primary {
  opacity: var(--fa-secondary-opacity, 0.4);
}

.svg-inline--fa.fa-swap-opacity .fa-secondary {
  opacity: var(--fa-primary-opacity, 1);
}

.svg-inline--fa mask .fa-primary,
.svg-inline--fa mask .fa-secondary {
  fill: black;
}

.fad.fa-inverse,
.fa-duotone.fa-inverse {
  color: var(--fa-inverse, #fff);
}`;function css(){var e=DEFAULT_CSS_PREFIX,o=DEFAULT_REPLACEMENT_CLASS,s=config.cssPrefix,c=config.replacementClass,i=baseStyles;if(s!==e||c!==o){var g=new RegExp("\\.".concat(e,"\\-"),"g"),h=new RegExp("\\--".concat(e,"\\-"),"g"),$=new RegExp("\\.".concat(o),"g");i=i.replace(g,".".concat(s,"-")).replace(h,"--".concat(s,"-")).replace($,".".concat(c))}return i}var _cssInserted=!1;function ensureCss(){config.autoAddCss&&!_cssInserted&&(insertCss(css()),_cssInserted=!0)}var InjectCSS={mixout:function e(){return{dom:{css,insertCss:ensureCss}}},hooks:function e(){return{beforeDOMElementCreation:function(){ensureCss()},beforeI2svg:function(){ensureCss()}}}},w=WINDOW||{};w[NAMESPACE_IDENTIFIER]||(w[NAMESPACE_IDENTIFIER]={});w[NAMESPACE_IDENTIFIER].styles||(w[NAMESPACE_IDENTIFIER].styles={});w[NAMESPACE_IDENTIFIER].hooks||(w[NAMESPACE_IDENTIFIER].hooks={});w[NAMESPACE_IDENTIFIER].shims||(w[NAMESPACE_IDENTIFIER].shims=[]);var namespace=w[NAMESPACE_IDENTIFIER],functions=[],listener=function e(){DOCUMENT.removeEventListener("DOMContentLoaded",e),loaded=1,functions.map(function(o){return o()})},loaded=!1;IS_DOM&&(loaded=(DOCUMENT.documentElement.doScroll?/^loaded|^c/:/^loaded|^i|^c/).test(DOCUMENT.readyState),loaded||DOCUMENT.addEventListener("DOMContentLoaded",listener));function domready(e){IS_DOM&&(loaded?setTimeout(e,0):functions.push(e))}function toHtml(e){var o=e.tag,s=e.attributes,c=s===void 0?{}:s,i=e.children,g=i===void 0?[]:i;return typeof e=="string"?htmlEscape(e):"<".concat(o," ").concat(joinAttributes(c),">").concat(g.map(toHtml).join(""),"</").concat(o,">")}function iconFromMapping(e,o,s){if(e&&e[o]&&e[o][s])return{prefix:o,iconName:s,icon:e[o][s]}}var reduce=function e(o,s,c,i){var g=Object.keys(o),h=g.length,$=s,j,_,_e;for(c===void 0?(j=1,_e=o[g[0]]):(j=0,_e=c);j<h;j++)_=g[j],_e=$(_e,o[_],_,o);return _e};function ucs2decode(e){for(var o=[],s=0,c=e.length;s<c;){var i=e.charCodeAt(s++);if(i>=55296&&i<=56319&&s<c){var g=e.charCodeAt(s++);(g&64512)==56320?o.push(((i&1023)<<10)+(g&1023)+65536):(o.push(i),s--)}else o.push(i)}return o}function toHex(e){var o=ucs2decode(e);return o.length===1?o[0].toString(16):null}function codePointAt(e,o){var s=e.length,c=e.charCodeAt(o),i;return c>=55296&&c<=56319&&s>o+1&&(i=e.charCodeAt(o+1),i>=56320&&i<=57343)?(c-55296)*1024+i-56320+65536:c}function normalizeIcons(e){return Object.keys(e).reduce(function(o,s){var c=e[s],i=!!c.icon;return i?o[c.iconName]=c.icon:o[s]=c,o},{})}function defineIcons(e,o){var s=arguments.length>2&&arguments[2]!==void 0?arguments[2]:{},c=s.skipHooks,i=c===void 0?!1:c,g=normalizeIcons(o);typeof namespace.hooks.addPack=="function"&&!i?namespace.hooks.addPack(e,normalizeIcons(o)):namespace.styles[e]=_objectSpread2$1(_objectSpread2$1({},namespace.styles[e]||{}),g),e==="fas"&&defineIcons("fa",o)}var _LONG_STYLE,_PREFIXES,_PREFIXES_FOR_FAMILY,styles=namespace.styles,shims=namespace.shims,LONG_STYLE=(_LONG_STYLE={},_defineProperty$1(_LONG_STYLE,FAMILY_CLASSIC,Object.values(PREFIX_TO_LONG_STYLE[FAMILY_CLASSIC])),_defineProperty$1(_LONG_STYLE,FAMILY_SHARP,Object.values(PREFIX_TO_LONG_STYLE[FAMILY_SHARP])),_LONG_STYLE),_defaultUsablePrefix=null,_byUnicode={},_byLigature={},_byOldName={},_byOldUnicode={},_byAlias={},PREFIXES=(_PREFIXES={},_defineProperty$1(_PREFIXES,FAMILY_CLASSIC,Object.keys(PREFIX_TO_STYLE[FAMILY_CLASSIC])),_defineProperty$1(_PREFIXES,FAMILY_SHARP,Object.keys(PREFIX_TO_STYLE[FAMILY_SHARP])),_PREFIXES);function isReserved(e){return~RESERVED_CLASSES.indexOf(e)}function getIconName(e,o){var s=o.split("-"),c=s[0],i=s.slice(1).join("-");return c===e&&i!==""&&!isReserved(i)?i:null}var build=function e(){var o=function(g){return reduce(styles,function(h,$,j){return h[j]=reduce($,g,{}),h},{})};_byUnicode=o(function(i,g,h){if(g[3]&&(i[g[3]]=h),g[2]){var $=g[2].filter(function(j){return typeof j=="number"});$.forEach(function(j){i[j.toString(16)]=h})}return i}),_byLigature=o(function(i,g,h){if(i[h]=h,g[2]){var $=g[2].filter(function(j){return typeof j=="string"});$.forEach(function(j){i[j]=h})}return i}),_byAlias=o(function(i,g,h){var $=g[2];return i[h]=h,$.forEach(function(j){i[j]=h}),i});var s="far"in styles||config.autoFetchSvg,c=reduce(shims,function(i,g){var h=g[0],$=g[1],j=g[2];return $==="far"&&!s&&($="fas"),typeof h=="string"&&(i.names[h]={prefix:$,iconName:j}),typeof h=="number"&&(i.unicodes[h.toString(16)]={prefix:$,iconName:j}),i},{names:{},unicodes:{}});_byOldName=c.names,_byOldUnicode=c.unicodes,_defaultUsablePrefix=getCanonicalPrefix(config.styleDefault,{family:config.familyDefault})};onChange(function(e){_defaultUsablePrefix=getCanonicalPrefix(e.styleDefault,{family:config.familyDefault})});build();function byUnicode(e,o){return(_byUnicode[e]||{})[o]}function byLigature(e,o){return(_byLigature[e]||{})[o]}function byAlias(e,o){return(_byAlias[e]||{})[o]}function byOldName(e){return _byOldName[e]||{prefix:null,iconName:null}}function byOldUnicode(e){var o=_byOldUnicode[e],s=byUnicode("fas",e);return o||(s?{prefix:"fas",iconName:s}:null)||{prefix:null,iconName:null}}function getDefaultUsablePrefix(){return _defaultUsablePrefix}var emptyCanonicalIcon=function e(){return{prefix:null,iconName:null,rest:[]}};function getCanonicalPrefix(e){var o=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{},s=o.family,c=s===void 0?FAMILY_CLASSIC:s,i=PREFIX_TO_STYLE[c][e],g=STYLE_TO_PREFIX[c][e]||STYLE_TO_PREFIX[c][i],h=e in namespace.styles?e:null;return g||h||null}var PREFIXES_FOR_FAMILY=(_PREFIXES_FOR_FAMILY={},_defineProperty$1(_PREFIXES_FOR_FAMILY,FAMILY_CLASSIC,Object.keys(PREFIX_TO_LONG_STYLE[FAMILY_CLASSIC])),_defineProperty$1(_PREFIXES_FOR_FAMILY,FAMILY_SHARP,Object.keys(PREFIX_TO_LONG_STYLE[FAMILY_SHARP])),_PREFIXES_FOR_FAMILY);function getCanonicalIcon(e){var o,s=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{},c=s.skipLookups,i=c===void 0?!1:c,g=(o={},_defineProperty$1(o,FAMILY_CLASSIC,"".concat(config.cssPrefix,"-").concat(FAMILY_CLASSIC)),_defineProperty$1(o,FAMILY_SHARP,"".concat(config.cssPrefix,"-").concat(FAMILY_SHARP)),o),h=null,$=FAMILY_CLASSIC;(e.includes(g[FAMILY_CLASSIC])||e.some(function(_){return PREFIXES_FOR_FAMILY[FAMILY_CLASSIC].includes(_)}))&&($=FAMILY_CLASSIC),(e.includes(g[FAMILY_SHARP])||e.some(function(_){return PREFIXES_FOR_FAMILY[FAMILY_SHARP].includes(_)}))&&($=FAMILY_SHARP);var j=e.reduce(function(_,_e){var et=getIconName(config.cssPrefix,_e);if(styles[_e]?(_e=LONG_STYLE[$].includes(_e)?LONG_STYLE_TO_PREFIX[$][_e]:_e,h=_e,_.prefix=_e):PREFIXES[$].indexOf(_e)>-1?(h=_e,_.prefix=getCanonicalPrefix(_e,{family:$})):et?_.iconName=et:_e!==config.replacementClass&&_e!==g[FAMILY_CLASSIC]&&_e!==g[FAMILY_SHARP]&&_.rest.push(_e),!i&&_.prefix&&_.iconName){var tt=h==="fa"?byOldName(_.iconName):{},at=byAlias(_.prefix,_.iconName);tt.prefix&&(h=null),_.iconName=tt.iconName||at||_.iconName,_.prefix=tt.prefix||_.prefix,_.prefix==="far"&&!styles.far&&styles.fas&&!config.autoFetchSvg&&(_.prefix="fas")}return _},emptyCanonicalIcon());return(e.includes("fa-brands")||e.includes("fab"))&&(j.prefix="fab"),(e.includes("fa-duotone")||e.includes("fad"))&&(j.prefix="fad"),!j.prefix&&$===FAMILY_SHARP&&(styles.fass||config.autoFetchSvg)&&(j.prefix="fass",j.iconName=byAlias(j.prefix,j.iconName)||j.iconName),(j.prefix==="fa"||h==="fa")&&(j.prefix=getDefaultUsablePrefix()||"fas"),j}var Library=function(){function e(){_classCallCheck(this,e),this.definitions={}}return _createClass(e,[{key:"add",value:function(){for(var s=this,c=arguments.length,i=new Array(c),g=0;g<c;g++)i[g]=arguments[g];var h=i.reduce(this._pullDefinitions,{});Object.keys(h).forEach(function($){s.definitions[$]=_objectSpread2$1(_objectSpread2$1({},s.definitions[$]||{}),h[$]),defineIcons($,h[$]);var j=PREFIX_TO_LONG_STYLE[FAMILY_CLASSIC][$];j&&defineIcons(j,h[$]),build()})}},{key:"reset",value:function(){this.definitions={}}},{key:"_pullDefinitions",value:function(s,c){var i=c.prefix&&c.iconName&&c.icon?{0:c}:c;return Object.keys(i).map(function(g){var h=i[g],$=h.prefix,j=h.iconName,_=h.icon,_e=_[2];s[$]||(s[$]={}),_e.length>0&&_e.forEach(function(et){typeof et=="string"&&(s[$][et]=_)}),s[$][j]=_}),s}}]),e}(),_plugins=[],_hooks={},providers={},defaultProviderKeys=Object.keys(providers);function registerPlugins(e,o){var s=o.mixoutsTo;return _plugins=e,_hooks={},Object.keys(providers).forEach(function(c){defaultProviderKeys.indexOf(c)===-1&&delete providers[c]}),_plugins.forEach(function(c){var i=c.mixout?c.mixout():{};if(Object.keys(i).forEach(function(h){typeof i[h]=="function"&&(s[h]=i[h]),_typeof$1(i[h])==="object"&&Object.keys(i[h]).forEach(function($){s[h]||(s[h]={}),s[h][$]=i[h][$]})}),c.hooks){var g=c.hooks();Object.keys(g).forEach(function(h){_hooks[h]||(_hooks[h]=[]),_hooks[h].push(g[h])})}c.provides&&c.provides(providers)}),s}function chainHooks(e,o){for(var s=arguments.length,c=new Array(s>2?s-2:0),i=2;i<s;i++)c[i-2]=arguments[i];var g=_hooks[e]||[];return g.forEach(function(h){o=h.apply(null,[o].concat(c))}),o}function callHooks(e){for(var o=arguments.length,s=new Array(o>1?o-1:0),c=1;c<o;c++)s[c-1]=arguments[c];var i=_hooks[e]||[];i.forEach(function(g){g.apply(null,s)})}function callProvided(){var e=arguments[0],o=Array.prototype.slice.call(arguments,1);return providers[e]?providers[e].apply(null,o):void 0}function findIconDefinition(e){e.prefix==="fa"&&(e.prefix="fas");var o=e.iconName,s=e.prefix||getDefaultUsablePrefix();if(o)return o=byAlias(s,o)||o,iconFromMapping(library.definitions,s,o)||iconFromMapping(namespace.styles,s,o)}var library=new Library,noAuto=function e(){config.autoReplaceSvg=!1,config.observeMutations=!1,callHooks("noAuto")},dom={i2svg:function e(){var o=arguments.length>0&&arguments[0]!==void 0?arguments[0]:{};return IS_DOM?(callHooks("beforeI2svg",o),callProvided("pseudoElements2svg",o),callProvided("i2svg",o)):Promise.reject("Operation requires a DOM of some kind.")},watch:function e(){var o=arguments.length>0&&arguments[0]!==void 0?arguments[0]:{},s=o.autoReplaceSvgRoot;config.autoReplaceSvg===!1&&(config.autoReplaceSvg=!0),config.observeMutations=!0,domready(function(){autoReplace({autoReplaceSvgRoot:s}),callHooks("watch",o)})}},parse={icon:function e(o){if(o===null)return null;if(_typeof$1(o)==="object"&&o.prefix&&o.iconName)return{prefix:o.prefix,iconName:byAlias(o.prefix,o.iconName)||o.iconName};if(Array.isArray(o)&&o.length===2){var s=o[1].indexOf("fa-")===0?o[1].slice(3):o[1],c=getCanonicalPrefix(o[0]);return{prefix:c,iconName:byAlias(c,s)||s}}if(typeof o=="string"&&(o.indexOf("".concat(config.cssPrefix,"-"))>-1||o.match(ICON_SELECTION_SYNTAX_PATTERN))){var i=getCanonicalIcon(o.split(" "),{skipLookups:!0});return{prefix:i.prefix||getDefaultUsablePrefix(),iconName:byAlias(i.prefix,i.iconName)||i.iconName}}if(typeof o=="string"){var g=getDefaultUsablePrefix();return{prefix:g,iconName:byAlias(g,o)||o}}}},api={noAuto,config,dom,parse,library,findIconDefinition,toHtml},autoReplace=function e(){var o=arguments.length>0&&arguments[0]!==void 0?arguments[0]:{},s=o.autoReplaceSvgRoot,c=s===void 0?DOCUMENT:s;(Object.keys(namespace.styles).length>0||config.autoFetchSvg)&&IS_DOM&&config.autoReplaceSvg&&api.dom.i2svg({node:c})};function domVariants(e,o){return Object.defineProperty(e,"abstract",{get:o}),Object.defineProperty(e,"html",{get:function(){return e.abstract.map(function(c){return toHtml(c)})}}),Object.defineProperty(e,"node",{get:function(){if(IS_DOM){var c=DOCUMENT.createElement("div");return c.innerHTML=e.html,c.children}}}),e}function asIcon(e){var o=e.children,s=e.main,c=e.mask,i=e.attributes,g=e.styles,h=e.transform;if(transformIsMeaningful(h)&&s.found&&!c.found){var $=s.width,j=s.height,_={x:$/j/2,y:.5};i.style=joinStyles(_objectSpread2$1(_objectSpread2$1({},g),{},{"transform-origin":"".concat(_.x+h.x/16,"em ").concat(_.y+h.y/16,"em")}))}return[{tag:"svg",attributes:i,children:o}]}function asSymbol(e){var o=e.prefix,s=e.iconName,c=e.children,i=e.attributes,g=e.symbol,h=g===!0?"".concat(o,"-").concat(config.cssPrefix,"-").concat(s):g;return[{tag:"svg",attributes:{style:"display: none;"},children:[{tag:"symbol",attributes:_objectSpread2$1(_objectSpread2$1({},i),{},{id:h}),children:c}]}]}function makeInlineSvgAbstract(e){var o=e.icons,s=o.main,c=o.mask,i=e.prefix,g=e.iconName,h=e.transform,$=e.symbol,j=e.title,_=e.maskId,_e=e.titleId,et=e.extra,tt=e.watchable,at=tt===void 0?!1:tt,rt=c.found?c:s,dt=rt.width,mt=rt.height,st=i==="fak",ot=[config.replacementClass,g?"".concat(config.cssPrefix,"-").concat(g):""].filter(function(pt){return et.classes.indexOf(pt)===-1}).filter(function(pt){return pt!==""||!!pt}).concat(et.classes).join(" "),nt={children:[],attributes:_objectSpread2$1(_objectSpread2$1({},et.attributes),{},{"data-prefix":i,"data-icon":g,class:ot,role:et.attributes.role||"img",xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 ".concat(dt," ").concat(mt)})},lt=st&&!~et.classes.indexOf("fa-fw")?{width:"".concat(dt/mt*16*.0625,"em")}:{};at&&(nt.attributes[DATA_FA_I2SVG]=""),j&&(nt.children.push({tag:"title",attributes:{id:nt.attributes["aria-labelledby"]||"title-".concat(_e||nextUniqueId())},children:[j]}),delete nt.attributes.title);var ct=_objectSpread2$1(_objectSpread2$1({},nt),{},{prefix:i,iconName:g,main:s,mask:c,maskId:_,transform:h,symbol:$,styles:_objectSpread2$1(_objectSpread2$1({},lt),et.styles)}),it=c.found&&s.found?callProvided("generateAbstractMask",ct)||{children:[],attributes:{}}:callProvided("generateAbstractIcon",ct)||{children:[],attributes:{}},ut=it.children,gt=it.attributes;return ct.children=ut,ct.attributes=gt,$?asSymbol(ct):asIcon(ct)}function makeLayersTextAbstract(e){var o=e.content,s=e.width,c=e.height,i=e.transform,g=e.title,h=e.extra,$=e.watchable,j=$===void 0?!1:$,_=_objectSpread2$1(_objectSpread2$1(_objectSpread2$1({},h.attributes),g?{title:g}:{}),{},{class:h.classes.join(" ")});j&&(_[DATA_FA_I2SVG]="");var _e=_objectSpread2$1({},h.styles);transformIsMeaningful(i)&&(_e.transform=transformForCss({transform:i,startCentered:!0,width:s,height:c}),_e["-webkit-transform"]=_e.transform);var et=joinStyles(_e);et.length>0&&(_.style=et);var tt=[];return tt.push({tag:"span",attributes:_,children:[o]}),g&&tt.push({tag:"span",attributes:{class:"sr-only"},children:[g]}),tt}function makeLayersCounterAbstract(e){var o=e.content,s=e.title,c=e.extra,i=_objectSpread2$1(_objectSpread2$1(_objectSpread2$1({},c.attributes),s?{title:s}:{}),{},{class:c.classes.join(" ")}),g=joinStyles(c.styles);g.length>0&&(i.style=g);var h=[];return h.push({tag:"span",attributes:i,children:[o]}),s&&h.push({tag:"span",attributes:{class:"sr-only"},children:[s]}),h}var styles$1=namespace.styles;function asFoundIcon(e){var o=e[0],s=e[1],c=e.slice(4),i=_slicedToArray(c,1),g=i[0],h=null;return Array.isArray(g)?h={tag:"g",attributes:{class:"".concat(config.cssPrefix,"-").concat(DUOTONE_CLASSES.GROUP)},children:[{tag:"path",attributes:{class:"".concat(config.cssPrefix,"-").concat(DUOTONE_CLASSES.SECONDARY),fill:"currentColor",d:g[0]}},{tag:"path",attributes:{class:"".concat(config.cssPrefix,"-").concat(DUOTONE_CLASSES.PRIMARY),fill:"currentColor",d:g[1]}}]}:h={tag:"path",attributes:{fill:"currentColor",d:g}},{found:!0,width:o,height:s,icon:h}}var missingIconResolutionMixin={found:!1,width:512,height:512};function maybeNotifyMissing(e,o){!PRODUCTION$1&&!config.showMissingIcons&&e&&console.error('Icon with name "'.concat(e,'" and prefix "').concat(o,'" is missing.'))}function findIcon(e,o){var s=o;return o==="fa"&&config.styleDefault!==null&&(o=getDefaultUsablePrefix()),new Promise(function(c,i){if(callProvided("missingIconAbstract"),s==="fa"){var g=byOldName(e)||{};e=g.iconName||e,o=g.prefix||o}if(e&&o&&styles$1[o]&&styles$1[o][e]){var h=styles$1[o][e];return c(asFoundIcon(h))}maybeNotifyMissing(e,o),c(_objectSpread2$1(_objectSpread2$1({},missingIconResolutionMixin),{},{icon:config.showMissingIcons&&e?callProvided("missingIconAbstract")||{}:{}}))})}var noop$1=function e(){},p=config.measurePerformance&&PERFORMANCE&&PERFORMANCE.mark&&PERFORMANCE.measure?PERFORMANCE:{mark:noop$1,measure:noop$1},preamble='FA "6.5.2"',begin=function e(o){return p.mark("".concat(preamble," ").concat(o," begins")),function(){return end(o)}},end=function e(o){p.mark("".concat(preamble," ").concat(o," ends")),p.measure("".concat(preamble," ").concat(o),"".concat(preamble," ").concat(o," begins"),"".concat(preamble," ").concat(o," ends"))},perf={begin,end},noop$2=function e(){};function isWatched(e){var o=e.getAttribute?e.getAttribute(DATA_FA_I2SVG):null;return typeof o=="string"}function hasPrefixAndIcon(e){var o=e.getAttribute?e.getAttribute(DATA_PREFIX):null,s=e.getAttribute?e.getAttribute(DATA_ICON):null;return o&&s}function hasBeenReplaced(e){return e&&e.classList&&e.classList.contains&&e.classList.contains(config.replacementClass)}function getMutator(){if(config.autoReplaceSvg===!0)return mutators.replace;var e=mutators[config.autoReplaceSvg];return e||mutators.replace}function createElementNS(e){return DOCUMENT.createElementNS("http://www.w3.org/2000/svg",e)}function createElement(e){return DOCUMENT.createElement(e)}function convertSVG(e){var o=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{},s=o.ceFn,c=s===void 0?e.tag==="svg"?createElementNS:createElement:s;if(typeof e=="string")return DOCUMENT.createTextNode(e);var i=c(e.tag);Object.keys(e.attributes||[]).forEach(function(h){i.setAttribute(h,e.attributes[h])});var g=e.children||[];return g.forEach(function(h){i.appendChild(convertSVG(h,{ceFn:c}))}),i}function nodeAsComment(e){var o=" ".concat(e.outerHTML," ");return o="".concat(o,"Font Awesome fontawesome.com "),o}var mutators={replace:function e(o){var s=o[0];if(s.parentNode)if(o[1].forEach(function(i){s.parentNode.insertBefore(convertSVG(i),s)}),s.getAttribute(DATA_FA_I2SVG)===null&&config.keepOriginalSource){var c=DOCUMENT.createComment(nodeAsComment(s));s.parentNode.replaceChild(c,s)}else s.remove()},nest:function e(o){var s=o[0],c=o[1];if(~classArray(s).indexOf(config.replacementClass))return mutators.replace(o);var i=new RegExp("".concat(config.cssPrefix,"-.*"));if(delete c[0].attributes.id,c[0].attributes.class){var g=c[0].attributes.class.split(" ").reduce(function($,j){return j===config.replacementClass||j.match(i)?$.toSvg.push(j):$.toNode.push(j),$},{toNode:[],toSvg:[]});c[0].attributes.class=g.toSvg.join(" "),g.toNode.length===0?s.removeAttribute("class"):s.setAttribute("class",g.toNode.join(" "))}var h=c.map(function($){return toHtml($)}).join(`
`);s.setAttribute(DATA_FA_I2SVG,""),s.innerHTML=h}};function performOperationSync(e){e()}function perform(e,o){var s=typeof o=="function"?o:noop$2;if(e.length===0)s();else{var c=performOperationSync;config.mutateApproach===MUTATION_APPROACH_ASYNC&&(c=WINDOW.requestAnimationFrame||performOperationSync),c(function(){var i=getMutator(),g=perf.begin("mutate");e.map(i),g(),s()})}}var disabled=!1;function disableObservation(){disabled=!0}function enableObservation(){disabled=!1}var mo=null;function observe(e){if(MUTATION_OBSERVER&&config.observeMutations){var o=e.treeCallback,s=o===void 0?noop$2:o,c=e.nodeCallback,i=c===void 0?noop$2:c,g=e.pseudoElementsCallback,h=g===void 0?noop$2:g,$=e.observeMutationsRoot,j=$===void 0?DOCUMENT:$;mo=new MUTATION_OBSERVER(function(_){if(!disabled){var _e=getDefaultUsablePrefix();toArray(_).forEach(function(et){if(et.type==="childList"&&et.addedNodes.length>0&&!isWatched(et.addedNodes[0])&&(config.searchPseudoElements&&h(et.target),s(et.target)),et.type==="attributes"&&et.target.parentNode&&config.searchPseudoElements&&h(et.target.parentNode),et.type==="attributes"&&isWatched(et.target)&&~ATTRIBUTES_WATCHED_FOR_MUTATION.indexOf(et.attributeName))if(et.attributeName==="class"&&hasPrefixAndIcon(et.target)){var tt=getCanonicalIcon(classArray(et.target)),at=tt.prefix,rt=tt.iconName;et.target.setAttribute(DATA_PREFIX,at||_e),rt&&et.target.setAttribute(DATA_ICON,rt)}else hasBeenReplaced(et.target)&&i(et.target)})}}),IS_DOM&&mo.observe(j,{childList:!0,attributes:!0,characterData:!0,subtree:!0})}}function disconnect(){mo&&mo.disconnect()}function styleParser(e){var o=e.getAttribute("style"),s=[];return o&&(s=o.split(";").reduce(function(c,i){var g=i.split(":"),h=g[0],$=g.slice(1);return h&&$.length>0&&(c[h]=$.join(":").trim()),c},{})),s}function classParser(e){var o=e.getAttribute("data-prefix"),s=e.getAttribute("data-icon"),c=e.innerText!==void 0?e.innerText.trim():"",i=getCanonicalIcon(classArray(e));return i.prefix||(i.prefix=getDefaultUsablePrefix()),o&&s&&(i.prefix=o,i.iconName=s),i.iconName&&i.prefix||(i.prefix&&c.length>0&&(i.iconName=byLigature(i.prefix,e.innerText)||byUnicode(i.prefix,toHex(e.innerText))),!i.iconName&&config.autoFetchSvg&&e.firstChild&&e.firstChild.nodeType===Node.TEXT_NODE&&(i.iconName=e.firstChild.data)),i}function attributesParser(e){var o=toArray(e.attributes).reduce(function(i,g){return i.name!=="class"&&i.name!=="style"&&(i[g.name]=g.value),i},{}),s=e.getAttribute("title"),c=e.getAttribute("data-fa-title-id");return config.autoA11y&&(s?o["aria-labelledby"]="".concat(config.replacementClass,"-title-").concat(c||nextUniqueId()):(o["aria-hidden"]="true",o.focusable="false")),o}function blankMeta(){return{iconName:null,title:null,titleId:null,prefix:null,transform:meaninglessTransform,symbol:!1,mask:{iconName:null,prefix:null,rest:[]},maskId:null,extra:{classes:[],styles:{},attributes:{}}}}function parseMeta(e){var o=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{styleParser:!0},s=classParser(e),c=s.iconName,i=s.prefix,g=s.rest,h=attributesParser(e),$=chainHooks("parseNodeAttributes",{},e),j=o.styleParser?styleParser(e):[];return _objectSpread2$1({iconName:c,title:e.getAttribute("title"),titleId:e.getAttribute("data-fa-title-id"),prefix:i,transform:meaninglessTransform,mask:{iconName:null,prefix:null,rest:[]},maskId:null,symbol:!1,extra:{classes:g,styles:j,attributes:h}},$)}var styles$2=namespace.styles;function generateMutation(e){var o=config.autoReplaceSvg==="nest"?parseMeta(e,{styleParser:!1}):parseMeta(e);return~o.extra.classes.indexOf(LAYERS_TEXT_CLASSNAME)?callProvided("generateLayersText",e,o):callProvided("generateSvgReplacementMutation",e,o)}var knownPrefixes=new Set;FAMILIES.map(function(e){knownPrefixes.add("fa-".concat(e))});Object.keys(PREFIX_TO_STYLE[FAMILY_CLASSIC]).map(knownPrefixes.add.bind(knownPrefixes));Object.keys(PREFIX_TO_STYLE[FAMILY_SHARP]).map(knownPrefixes.add.bind(knownPrefixes));knownPrefixes=_toConsumableArray$1(knownPrefixes);function onTree(e){var o=arguments.length>1&&arguments[1]!==void 0?arguments[1]:null;if(!IS_DOM)return Promise.resolve();var s=DOCUMENT.documentElement.classList,c=function(et){return s.add("".concat(HTML_CLASS_I2SVG_BASE_CLASS,"-").concat(et))},i=function(et){return s.remove("".concat(HTML_CLASS_I2SVG_BASE_CLASS,"-").concat(et))},g=config.autoFetchSvg?knownPrefixes:FAMILIES.map(function(_e){return"fa-".concat(_e)}).concat(Object.keys(styles$2));g.includes("fa")||g.push("fa");var h=[".".concat(LAYERS_TEXT_CLASSNAME,":not([").concat(DATA_FA_I2SVG,"])")].concat(g.map(function(_e){return".".concat(_e,":not([").concat(DATA_FA_I2SVG,"])")})).join(", ");if(h.length===0)return Promise.resolve();var $=[];try{$=toArray(e.querySelectorAll(h))}catch{}if($.length>0)c("pending"),i("complete");else return Promise.resolve();var j=perf.begin("onTree"),_=$.reduce(function(_e,et){try{var tt=generateMutation(et);tt&&_e.push(tt)}catch(at){PRODUCTION$1||at.name==="MissingIcon"&&console.error(at)}return _e},[]);return new Promise(function(_e,et){Promise.all(_).then(function(tt){perform(tt,function(){c("active"),c("complete"),i("pending"),typeof o=="function"&&o(),j(),_e()})}).catch(function(tt){j(),et(tt)})})}function onNode(e){var o=arguments.length>1&&arguments[1]!==void 0?arguments[1]:null;generateMutation(e).then(function(s){s&&perform([s],o)})}function resolveIcons(e){return function(o){var s=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{},c=(o||{}).icon?o:findIconDefinition(o||{}),i=s.mask;return i&&(i=(i||{}).icon?i:findIconDefinition(i||{})),e(c,_objectSpread2$1(_objectSpread2$1({},s),{},{mask:i}))}}var render=function e(o){var s=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{},c=s.transform,i=c===void 0?meaninglessTransform:c,g=s.symbol,h=g===void 0?!1:g,$=s.mask,j=$===void 0?null:$,_=s.maskId,_e=_===void 0?null:_,et=s.title,tt=et===void 0?null:et,at=s.titleId,rt=at===void 0?null:at,dt=s.classes,mt=dt===void 0?[]:dt,st=s.attributes,ot=st===void 0?{}:st,nt=s.styles,lt=nt===void 0?{}:nt;if(o){var ct=o.prefix,it=o.iconName,ut=o.icon;return domVariants(_objectSpread2$1({type:"icon"},o),function(){return callHooks("beforeDOMElementCreation",{iconDefinition:o,params:s}),config.autoA11y&&(tt?ot["aria-labelledby"]="".concat(config.replacementClass,"-title-").concat(rt||nextUniqueId()):(ot["aria-hidden"]="true",ot.focusable="false")),makeInlineSvgAbstract({icons:{main:asFoundIcon(ut),mask:j?asFoundIcon(j.icon):{found:!1,width:null,height:null,icon:{}}},prefix:ct,iconName:it,transform:_objectSpread2$1(_objectSpread2$1({},meaninglessTransform),i),symbol:h,title:tt,maskId:_e,titleId:rt,extra:{attributes:ot,styles:lt,classes:mt}})})}},ReplaceElements={mixout:function e(){return{icon:resolveIcons(render)}},hooks:function e(){return{mutationObserverCallbacks:function(s){return s.treeCallback=onTree,s.nodeCallback=onNode,s}}},provides:function e(o){o.i2svg=function(s){var c=s.node,i=c===void 0?DOCUMENT:c,g=s.callback,h=g===void 0?function(){}:g;return onTree(i,h)},o.generateSvgReplacementMutation=function(s,c){var i=c.iconName,g=c.title,h=c.titleId,$=c.prefix,j=c.transform,_=c.symbol,_e=c.mask,et=c.maskId,tt=c.extra;return new Promise(function(at,rt){Promise.all([findIcon(i,$),_e.iconName?findIcon(_e.iconName,_e.prefix):Promise.resolve({found:!1,width:512,height:512,icon:{}})]).then(function(dt){var mt=_slicedToArray(dt,2),st=mt[0],ot=mt[1];at([s,makeInlineSvgAbstract({icons:{main:st,mask:ot},prefix:$,iconName:i,transform:j,symbol:_,maskId:et,title:g,titleId:h,extra:tt,watchable:!0})])}).catch(rt)})},o.generateAbstractIcon=function(s){var c=s.children,i=s.attributes,g=s.main,h=s.transform,$=s.styles,j=joinStyles($);j.length>0&&(i.style=j);var _;return transformIsMeaningful(h)&&(_=callProvided("generateAbstractTransformGrouping",{main:g,transform:h,containerWidth:g.width,iconWidth:g.width})),c.push(_||g.icon),{children:c,attributes:i}}}},Layers={mixout:function e(){return{layer:function(s){var c=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{},i=c.classes,g=i===void 0?[]:i;return domVariants({type:"layer"},function(){callHooks("beforeDOMElementCreation",{assembler:s,params:c});var h=[];return s(function($){Array.isArray($)?$.map(function(j){h=h.concat(j.abstract)}):h=h.concat($.abstract)}),[{tag:"span",attributes:{class:["".concat(config.cssPrefix,"-layers")].concat(_toConsumableArray$1(g)).join(" ")},children:h}]})}}}},LayersCounter={mixout:function e(){return{counter:function(s){var c=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{},i=c.title,g=i===void 0?null:i,h=c.classes,$=h===void 0?[]:h,j=c.attributes,_=j===void 0?{}:j,_e=c.styles,et=_e===void 0?{}:_e;return domVariants({type:"counter",content:s},function(){return callHooks("beforeDOMElementCreation",{content:s,params:c}),makeLayersCounterAbstract({content:s.toString(),title:g,extra:{attributes:_,styles:et,classes:["".concat(config.cssPrefix,"-layers-counter")].concat(_toConsumableArray$1($))}})})}}}},LayersText={mixout:function e(){return{text:function(s){var c=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{},i=c.transform,g=i===void 0?meaninglessTransform:i,h=c.title,$=h===void 0?null:h,j=c.classes,_=j===void 0?[]:j,_e=c.attributes,et=_e===void 0?{}:_e,tt=c.styles,at=tt===void 0?{}:tt;return domVariants({type:"text",content:s},function(){return callHooks("beforeDOMElementCreation",{content:s,params:c}),makeLayersTextAbstract({content:s,transform:_objectSpread2$1(_objectSpread2$1({},meaninglessTransform),g),title:$,extra:{attributes:et,styles:at,classes:["".concat(config.cssPrefix,"-layers-text")].concat(_toConsumableArray$1(_))}})})}}},provides:function e(o){o.generateLayersText=function(s,c){var i=c.title,g=c.transform,h=c.extra,$=null,j=null;if(IS_IE){var _=parseInt(getComputedStyle(s).fontSize,10),_e=s.getBoundingClientRect();$=_e.width/_,j=_e.height/_}return config.autoA11y&&!i&&(h.attributes["aria-hidden"]="true"),Promise.resolve([s,makeLayersTextAbstract({content:s.innerHTML,width:$,height:j,transform:g,title:i,extra:h,watchable:!0})])}}},CLEAN_CONTENT_PATTERN=new RegExp('"',"ug"),SECONDARY_UNICODE_RANGE=[1105920,1112319];function hexValueFromContent(e){var o=e.replace(CLEAN_CONTENT_PATTERN,""),s=codePointAt(o,0),c=s>=SECONDARY_UNICODE_RANGE[0]&&s<=SECONDARY_UNICODE_RANGE[1],i=o.length===2?o[0]===o[1]:!1;return{value:toHex(i?o[0]:o),isSecondary:c||i}}function replaceForPosition(e,o){var s="".concat(DATA_FA_PSEUDO_ELEMENT_PENDING).concat(o.replace(":","-"));return new Promise(function(c,i){if(e.getAttribute(s)!==null)return c();var g=toArray(e.children),h=g.filter(function(ut){return ut.getAttribute(DATA_FA_PSEUDO_ELEMENT)===o})[0],$=WINDOW.getComputedStyle(e,o),j=$.getPropertyValue("font-family").match(FONT_FAMILY_PATTERN),_=$.getPropertyValue("font-weight"),_e=$.getPropertyValue("content");if(h&&!j)return e.removeChild(h),c();if(j&&_e!=="none"&&_e!==""){var et=$.getPropertyValue("content"),tt=~["Sharp"].indexOf(j[2])?FAMILY_SHARP:FAMILY_CLASSIC,at=~["Solid","Regular","Light","Thin","Duotone","Brands","Kit"].indexOf(j[2])?STYLE_TO_PREFIX[tt][j[2].toLowerCase()]:FONT_WEIGHT_TO_PREFIX[tt][_],rt=hexValueFromContent(et),dt=rt.value,mt=rt.isSecondary,st=j[0].startsWith("FontAwesome"),ot=byUnicode(at,dt),nt=ot;if(st){var lt=byOldUnicode(dt);lt.iconName&&lt.prefix&&(ot=lt.iconName,at=lt.prefix)}if(ot&&!mt&&(!h||h.getAttribute(DATA_PREFIX)!==at||h.getAttribute(DATA_ICON)!==nt)){e.setAttribute(s,nt),h&&e.removeChild(h);var ct=blankMeta(),it=ct.extra;it.attributes[DATA_FA_PSEUDO_ELEMENT]=o,findIcon(ot,at).then(function(ut){var gt=makeInlineSvgAbstract(_objectSpread2$1(_objectSpread2$1({},ct),{},{icons:{main:ut,mask:emptyCanonicalIcon()},prefix:at,iconName:nt,extra:it,watchable:!0})),pt=DOCUMENT.createElementNS("http://www.w3.org/2000/svg","svg");o==="::before"?e.insertBefore(pt,e.firstChild):e.appendChild(pt),pt.outerHTML=gt.map(function(ft){return toHtml(ft)}).join(`
`),e.removeAttribute(s),c()}).catch(i)}else c()}else c()})}function replace2(e){return Promise.all([replaceForPosition(e,"::before"),replaceForPosition(e,"::after")])}function processable(e){return e.parentNode!==document.head&&!~TAGNAMES_TO_SKIP_FOR_PSEUDOELEMENTS.indexOf(e.tagName.toUpperCase())&&!e.getAttribute(DATA_FA_PSEUDO_ELEMENT)&&(!e.parentNode||e.parentNode.tagName!=="svg")}function searchPseudoElements(e){if(IS_DOM)return new Promise(function(o,s){var c=toArray(e.querySelectorAll("*")).filter(processable).map(replace2),i=perf.begin("searchPseudoElements");disableObservation(),Promise.all(c).then(function(){i(),enableObservation(),o()}).catch(function(){i(),enableObservation(),s()})})}var PseudoElements={hooks:function e(){return{mutationObserverCallbacks:function(s){return s.pseudoElementsCallback=searchPseudoElements,s}}},provides:function e(o){o.pseudoElements2svg=function(s){var c=s.node,i=c===void 0?DOCUMENT:c;config.searchPseudoElements&&searchPseudoElements(i)}}},_unwatched=!1,MutationObserver$1={mixout:function e(){return{dom:{unwatch:function(){disableObservation(),_unwatched=!0}}}},hooks:function e(){return{bootstrap:function(){observe(chainHooks("mutationObserverCallbacks",{}))},noAuto:function(){disconnect()},watch:function(s){var c=s.observeMutationsRoot;_unwatched?enableObservation():observe(chainHooks("mutationObserverCallbacks",{observeMutationsRoot:c}))}}}},parseTransformString=function e(o){var s={size:16,x:0,y:0,flipX:!1,flipY:!1,rotate:0};return o.toLowerCase().split(" ").reduce(function(c,i){var g=i.toLowerCase().split("-"),h=g[0],$=g.slice(1).join("-");if(h&&$==="h")return c.flipX=!0,c;if(h&&$==="v")return c.flipY=!0,c;if($=parseFloat($),isNaN($))return c;switch(h){case"grow":c.size=c.size+$;break;case"shrink":c.size=c.size-$;break;case"left":c.x=c.x-$;break;case"right":c.x=c.x+$;break;case"up":c.y=c.y-$;break;case"down":c.y=c.y+$;break;case"rotate":c.rotate=c.rotate+$;break}return c},s)},PowerTransforms={mixout:function e(){return{parse:{transform:function(s){return parseTransformString(s)}}}},hooks:function e(){return{parseNodeAttributes:function(s,c){var i=c.getAttribute("data-fa-transform");return i&&(s.transform=parseTransformString(i)),s}}},provides:function e(o){o.generateAbstractTransformGrouping=function(s){var c=s.main,i=s.transform,g=s.containerWidth,h=s.iconWidth,$={transform:"translate(".concat(g/2," 256)")},j="translate(".concat(i.x*32,", ").concat(i.y*32,") "),_="scale(".concat(i.size/16*(i.flipX?-1:1),", ").concat(i.size/16*(i.flipY?-1:1),") "),_e="rotate(".concat(i.rotate," 0 0)"),et={transform:"".concat(j," ").concat(_," ").concat(_e)},tt={transform:"translate(".concat(h/2*-1," -256)")},at={outer:$,inner:et,path:tt};return{tag:"g",attributes:_objectSpread2$1({},at.outer),children:[{tag:"g",attributes:_objectSpread2$1({},at.inner),children:[{tag:c.icon.tag,children:c.icon.children,attributes:_objectSpread2$1(_objectSpread2$1({},c.icon.attributes),at.path)}]}]}}}},ALL_SPACE={x:0,y:0,width:"100%",height:"100%"};function fillBlack(e){var o=arguments.length>1&&arguments[1]!==void 0?arguments[1]:!0;return e.attributes&&(e.attributes.fill||o)&&(e.attributes.fill="black"),e}function deGroup(e){return e.tag==="g"?e.children:[e]}var Masks={hooks:function e(){return{parseNodeAttributes:function(s,c){var i=c.getAttribute("data-fa-mask"),g=i?getCanonicalIcon(i.split(" ").map(function(h){return h.trim()})):emptyCanonicalIcon();return g.prefix||(g.prefix=getDefaultUsablePrefix()),s.mask=g,s.maskId=c.getAttribute("data-fa-mask-id"),s}}},provides:function e(o){o.generateAbstractMask=function(s){var c=s.children,i=s.attributes,g=s.main,h=s.mask,$=s.maskId,j=s.transform,_=g.width,_e=g.icon,et=h.width,tt=h.icon,at=transformForSvg({transform:j,containerWidth:et,iconWidth:_}),rt={tag:"rect",attributes:_objectSpread2$1(_objectSpread2$1({},ALL_SPACE),{},{fill:"white"})},dt=_e.children?{children:_e.children.map(fillBlack)}:{},mt={tag:"g",attributes:_objectSpread2$1({},at.inner),children:[fillBlack(_objectSpread2$1({tag:_e.tag,attributes:_objectSpread2$1(_objectSpread2$1({},_e.attributes),at.path)},dt))]},st={tag:"g",attributes:_objectSpread2$1({},at.outer),children:[mt]},ot="mask-".concat($||nextUniqueId()),nt="clip-".concat($||nextUniqueId()),lt={tag:"mask",attributes:_objectSpread2$1(_objectSpread2$1({},ALL_SPACE),{},{id:ot,maskUnits:"userSpaceOnUse",maskContentUnits:"userSpaceOnUse"}),children:[rt,st]},ct={tag:"defs",children:[{tag:"clipPath",attributes:{id:nt},children:deGroup(tt)},lt]};return c.push(ct,{tag:"rect",attributes:_objectSpread2$1({fill:"currentColor","clip-path":"url(#".concat(nt,")"),mask:"url(#".concat(ot,")")},ALL_SPACE)}),{children:c,attributes:i}}}},MissingIconIndicator={provides:function e(o){var s=!1;WINDOW.matchMedia&&(s=WINDOW.matchMedia("(prefers-reduced-motion: reduce)").matches),o.missingIconAbstract=function(){var c=[],i={fill:"currentColor"},g={attributeType:"XML",repeatCount:"indefinite",dur:"2s"};c.push({tag:"path",attributes:_objectSpread2$1(_objectSpread2$1({},i),{},{d:"M156.5,447.7l-12.6,29.5c-18.7-9.5-35.9-21.2-51.5-34.9l22.7-22.7C127.6,430.5,141.5,440,156.5,447.7z M40.6,272H8.5 c1.4,21.2,5.4,41.7,11.7,61.1L50,321.2C45.1,305.5,41.8,289,40.6,272z M40.6,240c1.4-18.8,5.2-37,11.1-54.1l-29.5-12.6 C14.7,194.3,10,216.7,8.5,240H40.6z M64.3,156.5c7.8-14.9,17.2-28.8,28.1-41.5L69.7,92.3c-13.7,15.6-25.5,32.8-34.9,51.5 L64.3,156.5z M397,419.6c-13.9,12-29.4,22.3-46.1,30.4l11.9,29.8c20.7-9.9,39.8-22.6,56.9-37.6L397,419.6z M115,92.4 c13.9-12,29.4-22.3,46.1-30.4l-11.9-29.8c-20.7,9.9-39.8,22.6-56.8,37.6L115,92.4z M447.7,355.5c-7.8,14.9-17.2,28.8-28.1,41.5 l22.7,22.7c13.7-15.6,25.5-32.9,34.9-51.5L447.7,355.5z M471.4,272c-1.4,18.8-5.2,37-11.1,54.1l29.5,12.6 c7.5-21.1,12.2-43.5,13.6-66.8H471.4z M321.2,462c-15.7,5-32.2,8.2-49.2,9.4v32.1c21.2-1.4,41.7-5.4,61.1-11.7L321.2,462z M240,471.4c-18.8-1.4-37-5.2-54.1-11.1l-12.6,29.5c21.1,7.5,43.5,12.2,66.8,13.6V471.4z M462,190.8c5,15.7,8.2,32.2,9.4,49.2h32.1 c-1.4-21.2-5.4-41.7-11.7-61.1L462,190.8z M92.4,397c-12-13.9-22.3-29.4-30.4-46.1l-29.8,11.9c9.9,20.7,22.6,39.8,37.6,56.9 L92.4,397z M272,40.6c18.8,1.4,36.9,5.2,54.1,11.1l12.6-29.5C317.7,14.7,295.3,10,272,8.5V40.6z M190.8,50 c15.7-5,32.2-8.2,49.2-9.4V8.5c-21.2,1.4-41.7,5.4-61.1,11.7L190.8,50z M442.3,92.3L419.6,115c12,13.9,22.3,29.4,30.5,46.1 l29.8-11.9C470,128.5,457.3,109.4,442.3,92.3z M397,92.4l22.7-22.7c-15.6-13.7-32.8-25.5-51.5-34.9l-12.6,29.5 C370.4,72.1,384.4,81.5,397,92.4z"})});var h=_objectSpread2$1(_objectSpread2$1({},g),{},{attributeName:"opacity"}),$={tag:"circle",attributes:_objectSpread2$1(_objectSpread2$1({},i),{},{cx:"256",cy:"364",r:"28"}),children:[]};return s||$.children.push({tag:"animate",attributes:_objectSpread2$1(_objectSpread2$1({},g),{},{attributeName:"r",values:"28;14;28;28;14;28;"})},{tag:"animate",attributes:_objectSpread2$1(_objectSpread2$1({},h),{},{values:"1;0;1;1;0;1;"})}),c.push($),c.push({tag:"path",attributes:_objectSpread2$1(_objectSpread2$1({},i),{},{opacity:"1",d:"M263.7,312h-16c-6.6,0-12-5.4-12-12c0-71,77.4-63.9,77.4-107.8c0-20-17.8-40.2-57.4-40.2c-29.1,0-44.3,9.6-59.2,28.7 c-3.9,5-11.1,6-16.2,2.4l-13.1-9.2c-5.6-3.9-6.9-11.8-2.6-17.2c21.2-27.2,46.4-44.7,91.2-44.7c52.3,0,97.4,29.8,97.4,80.2 c0,67.6-77.4,63.5-77.4,107.8C275.7,306.6,270.3,312,263.7,312z"}),children:s?[]:[{tag:"animate",attributes:_objectSpread2$1(_objectSpread2$1({},h),{},{values:"1;0;0;0;0;1;"})}]}),s||c.push({tag:"path",attributes:_objectSpread2$1(_objectSpread2$1({},i),{},{opacity:"0",d:"M232.5,134.5l7,168c0.3,6.4,5.6,11.5,12,11.5h9c6.4,0,11.7-5.1,12-11.5l7-168c0.3-6.8-5.2-12.5-12-12.5h-23 C237.7,122,232.2,127.7,232.5,134.5z"}),children:[{tag:"animate",attributes:_objectSpread2$1(_objectSpread2$1({},h),{},{values:"0;0;1;1;0;0;"})}]}),{tag:"g",attributes:{class:"missing"},children:c}}}},SvgSymbols={hooks:function e(){return{parseNodeAttributes:function(s,c){var i=c.getAttribute("data-fa-symbol"),g=i===null?!1:i===""?!0:i;return s.symbol=g,s}}}},plugins=[InjectCSS,ReplaceElements,Layers,LayersCounter,LayersText,PseudoElements,MutationObserver$1,PowerTransforms,Masks,MissingIconIndicator,SvgSymbols];registerPlugins(plugins,{mixoutsTo:api});api.noAuto;api.config;api.library;api.dom;var parse$1=api.parse;api.findIconDefinition;api.toHtml;var icon2=api.icon;api.layer;api.text;api.counter;var propTypes={exports:{}},ReactPropTypesSecret$1="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED",ReactPropTypesSecret_1=ReactPropTypesSecret$1,ReactPropTypesSecret=ReactPropTypesSecret_1;function emptyFunction(){}function emptyFunctionWithReset(){}emptyFunctionWithReset.resetWarningCache=emptyFunction;var factoryWithThrowingShims=function(){function e(c,i,g,h,$,j){if(j!==ReactPropTypesSecret){var _=new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");throw _.name="Invariant Violation",_}}e.isRequired=e;function o(){return e}var s={array:e,bigint:e,bool:e,func:e,number:e,object:e,string:e,symbol:e,any:e,arrayOf:o,element:e,elementType:e,instanceOf:o,node:e,objectOf:o,oneOf:o,oneOfType:o,shape:o,exact:o,checkPropTypes:emptyFunctionWithReset,resetWarningCache:emptyFunction};return s.PropTypes=s,s};propTypes.exports=factoryWithThrowingShims();var propTypesExports=propTypes.exports;const PropTypes=getDefaultExportFromCjs(propTypesExports);function ownKeys(e,o){var s=Object.keys(e);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);o&&(c=c.filter(function(i){return Object.getOwnPropertyDescriptor(e,i).enumerable})),s.push.apply(s,c)}return s}function _objectSpread2(e){for(var o=1;o<arguments.length;o++){var s=arguments[o]!=null?arguments[o]:{};o%2?ownKeys(Object(s),!0).forEach(function(c){_defineProperty(e,c,s[c])}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(s)):ownKeys(Object(s)).forEach(function(c){Object.defineProperty(e,c,Object.getOwnPropertyDescriptor(s,c))})}return e}function _typeof(e){"@babel/helpers - typeof";return _typeof=typeof Symbol=="function"&&typeof Symbol.iterator=="symbol"?function(o){return typeof o}:function(o){return o&&typeof Symbol=="function"&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(e)}function _defineProperty(e,o,s){return o in e?Object.defineProperty(e,o,{value:s,enumerable:!0,configurable:!0,writable:!0}):e[o]=s,e}function _objectWithoutPropertiesLoose(e,o){if(e==null)return{};var s={},c=Object.keys(e),i,g;for(g=0;g<c.length;g++)i=c[g],!(o.indexOf(i)>=0)&&(s[i]=e[i]);return s}function _objectWithoutProperties(e,o){if(e==null)return{};var s=_objectWithoutPropertiesLoose(e,o),c,i;if(Object.getOwnPropertySymbols){var g=Object.getOwnPropertySymbols(e);for(i=0;i<g.length;i++)c=g[i],!(o.indexOf(c)>=0)&&Object.prototype.propertyIsEnumerable.call(e,c)&&(s[c]=e[c])}return s}function _toConsumableArray(e){return _arrayWithoutHoles(e)||_iterableToArray(e)||_unsupportedIterableToArray(e)||_nonIterableSpread()}function _arrayWithoutHoles(e){if(Array.isArray(e))return _arrayLikeToArray(e)}function _iterableToArray(e){if(typeof Symbol<"u"&&e[Symbol.iterator]!=null||e["@@iterator"]!=null)return Array.from(e)}function _unsupportedIterableToArray(e,o){if(e){if(typeof e=="string")return _arrayLikeToArray(e,o);var s=Object.prototype.toString.call(e).slice(8,-1);if(s==="Object"&&e.constructor&&(s=e.constructor.name),s==="Map"||s==="Set")return Array.from(e);if(s==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(s))return _arrayLikeToArray(e,o)}}function _arrayLikeToArray(e,o){(o==null||o>e.length)&&(o=e.length);for(var s=0,c=new Array(o);s<o;s++)c[s]=e[s];return c}function _nonIterableSpread(){throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}function classList(e){var o,s=e.beat,c=e.fade,i=e.beatFade,g=e.bounce,h=e.shake,$=e.flash,j=e.spin,_=e.spinPulse,_e=e.spinReverse,et=e.pulse,tt=e.fixedWidth,at=e.inverse,rt=e.border,dt=e.listItem,mt=e.flip,st=e.size,ot=e.rotation,nt=e.pull,lt=(o={"fa-beat":s,"fa-fade":c,"fa-beat-fade":i,"fa-bounce":g,"fa-shake":h,"fa-flash":$,"fa-spin":j,"fa-spin-reverse":_e,"fa-spin-pulse":_,"fa-pulse":et,"fa-fw":tt,"fa-inverse":at,"fa-border":rt,"fa-li":dt,"fa-flip":mt===!0,"fa-flip-horizontal":mt==="horizontal"||mt==="both","fa-flip-vertical":mt==="vertical"||mt==="both"},_defineProperty(o,"fa-".concat(st),typeof st<"u"&&st!==null),_defineProperty(o,"fa-rotate-".concat(ot),typeof ot<"u"&&ot!==null&&ot!==0),_defineProperty(o,"fa-pull-".concat(nt),typeof nt<"u"&&nt!==null),_defineProperty(o,"fa-swap-opacity",e.swapOpacity),o);return Object.keys(lt).map(function(ct){return lt[ct]?ct:null}).filter(function(ct){return ct})}function _isNumerical(e){return e=e-0,e===e}function camelize(e){return _isNumerical(e)?e:(e=e.replace(/[\-_\s]+(.)?/g,function(o,s){return s?s.toUpperCase():""}),e.substr(0,1).toLowerCase()+e.substr(1))}var _excluded=["style"];function capitalize(e){return e.charAt(0).toUpperCase()+e.slice(1)}function styleToObject(e){return e.split(";").map(function(o){return o.trim()}).filter(function(o){return o}).reduce(function(o,s){var c=s.indexOf(":"),i=camelize(s.slice(0,c)),g=s.slice(c+1).trim();return i.startsWith("webkit")?o[capitalize(i)]=g:o[i]=g,o},{})}function convert(e,o){var s=arguments.length>2&&arguments[2]!==void 0?arguments[2]:{};if(typeof o=="string")return o;var c=(o.children||[]).map(function(j){return convert(e,j)}),i=Object.keys(o.attributes||{}).reduce(function(j,_){var _e=o.attributes[_];switch(_){case"class":j.attrs.className=_e,delete o.attributes.class;break;case"style":j.attrs.style=styleToObject(_e);break;default:_.indexOf("aria-")===0||_.indexOf("data-")===0?j.attrs[_.toLowerCase()]=_e:j.attrs[camelize(_)]=_e}return j},{attrs:{}}),g=s.style,h=g===void 0?{}:g,$=_objectWithoutProperties(s,_excluded);return i.attrs.style=_objectSpread2(_objectSpread2({},i.attrs.style),h),e.apply(void 0,[o.tag,_objectSpread2(_objectSpread2({},i.attrs),$)].concat(_toConsumableArray(c)))}var PRODUCTION=!1;try{PRODUCTION=!0}catch(e){}function log(){if(!PRODUCTION&&console&&typeof console.error=="function"){var e;(e=console).error.apply(e,arguments)}}function normalizeIconArgs(e){if(e&&_typeof(e)==="object"&&e.prefix&&e.iconName&&e.icon)return e;if(parse$1.icon)return parse$1.icon(e);if(e===null)return null;if(e&&_typeof(e)==="object"&&e.prefix&&e.iconName)return e;if(Array.isArray(e)&&e.length===2)return{prefix:e[0],iconName:e[1]};if(typeof e=="string")return{prefix:"fas",iconName:e}}function objectWithKey(e,o){return Array.isArray(o)&&o.length>0||!Array.isArray(o)&&o?_defineProperty({},e,o):{}}var FontAwesomeIcon=React.forwardRef(function(e,o){var s=e.icon,c=e.mask,i=e.symbol,g=e.className,h=e.title,$=e.titleId,j=e.maskId,_=normalizeIconArgs(s),_e=objectWithKey("classes",[].concat(_toConsumableArray(classList(e)),_toConsumableArray(g.split(" ")))),et=objectWithKey("transform",typeof e.transform=="string"?parse$1.transform(e.transform):e.transform),tt=objectWithKey("mask",normalizeIconArgs(c)),at=icon2(_,_objectSpread2(_objectSpread2(_objectSpread2(_objectSpread2({},_e),et),tt),{},{symbol:i,title:h,titleId:$,maskId:j}));if(!at)return log("Could not find icon",_),null;var rt=at.abstract,dt={ref:o};return Object.keys(e).forEach(function(mt){FontAwesomeIcon.defaultProps.hasOwnProperty(mt)||(dt[mt]=e[mt])}),convertCurry(rt[0],dt)});FontAwesomeIcon.displayName="FontAwesomeIcon";FontAwesomeIcon.propTypes={beat:PropTypes.bool,border:PropTypes.bool,beatFade:PropTypes.bool,bounce:PropTypes.bool,className:PropTypes.string,fade:PropTypes.bool,flash:PropTypes.bool,mask:PropTypes.oneOfType([PropTypes.object,PropTypes.array,PropTypes.string]),maskId:PropTypes.string,fixedWidth:PropTypes.bool,inverse:PropTypes.bool,flip:PropTypes.oneOf([!0,!1,"horizontal","vertical","both"]),icon:PropTypes.oneOfType([PropTypes.object,PropTypes.array,PropTypes.string]),listItem:PropTypes.bool,pull:PropTypes.oneOf(["right","left"]),pulse:PropTypes.bool,rotation:PropTypes.oneOf([0,90,180,270]),shake:PropTypes.bool,size:PropTypes.oneOf(["2xs","xs","sm","lg","xl","2xl","1x","2x","3x","4x","5x","6x","7x","8x","9x","10x"]),spin:PropTypes.bool,spinPulse:PropTypes.bool,spinReverse:PropTypes.bool,symbol:PropTypes.oneOfType([PropTypes.bool,PropTypes.string]),title:PropTypes.string,titleId:PropTypes.string,transform:PropTypes.oneOfType([PropTypes.string,PropTypes.object]),swapOpacity:PropTypes.bool};FontAwesomeIcon.defaultProps={border:!1,className:"",mask:null,maskId:null,fixedWidth:!1,inverse:!1,flip:!1,icon:null,listItem:!1,pull:null,pulse:!1,rotation:null,size:null,spin:!1,spinPulse:!1,spinReverse:!1,beat:!1,fade:!1,beatFade:!1,bounce:!1,shake:!1,symbol:!1,title:"",titleId:null,transform:null,swapOpacity:!1};var convertCurry=convert.bind(null,React.createElement),faVolumeLow={prefix:"fas",iconName:"volume-low",icon:[448,512,[128264,"volume-down"],"f027","M301.1 34.8C312.6 40 320 51.4 320 64V448c0 12.6-7.4 24-18.9 29.2s-25 3.1-34.4-5.3L131.8 352H64c-35.3 0-64-28.7-64-64V224c0-35.3 28.7-64 64-64h67.8L266.7 40.1c9.4-8.4 22.9-10.4 34.4-5.3zM412.6 181.5C434.1 199.1 448 225.9 448 256s-13.9 56.9-35.4 74.5c-10.3 8.4-25.4 6.8-33.8-3.5s-6.8-25.4 3.5-33.8C393.1 284.4 400 271 400 256s-6.9-28.4-17.7-37.3c-10.3-8.4-11.8-23.5-3.5-33.8s23.5-11.8 33.8-3.5z"]},faPause={prefix:"fas",iconName:"pause",icon:[320,512,[9208],"f04c","M48 64C21.5 64 0 85.5 0 112V400c0 26.5 21.5 48 48 48H80c26.5 0 48-21.5 48-48V112c0-26.5-21.5-48-48-48H48zm192 0c-26.5 0-48 21.5-48 48V400c0 26.5 21.5 48 48 48h32c26.5 0 48-21.5 48-48V112c0-26.5-21.5-48-48-48H240z"]},faVolumeHigh={prefix:"fas",iconName:"volume-high",icon:[640,512,[128266,"volume-up"],"f028","M533.6 32.5C598.5 85.2 640 165.8 640 256s-41.5 170.7-106.4 223.5c-10.3 8.4-25.4 6.8-33.8-3.5s-6.8-25.4 3.5-33.8C557.5 398.2 592 331.2 592 256s-34.5-142.2-88.7-186.3c-10.3-8.4-11.8-23.5-3.5-33.8s23.5-11.8 33.8-3.5zM473.1 107c43.2 35.2 70.9 88.9 70.9 149s-27.7 113.8-70.9 149c-10.3 8.4-25.4 6.8-33.8-3.5s-6.8-25.4 3.5-33.8C475.3 341.3 496 301.1 496 256s-20.7-85.3-53.2-111.8c-10.3-8.4-11.8-23.5-3.5-33.8s23.5-11.8 33.8-3.5zm-60.5 74.5C434.1 199.1 448 225.9 448 256s-13.9 56.9-35.4 74.5c-10.3 8.4-25.4 6.8-33.8-3.5s-6.8-25.4 3.5-33.8C393.1 284.4 400 271 400 256s-6.9-28.4-17.7-37.3c-10.3-8.4-11.8-23.5-3.5-33.8s23.5-11.8 33.8-3.5zM301.1 34.8C312.6 40 320 51.4 320 64V448c0 12.6-7.4 24-18.9 29.2s-25 3.1-34.4-5.3L131.8 352H64c-35.3 0-64-28.7-64-64V224c0-35.3 28.7-64 64-64h67.8L266.7 40.1c9.4-8.4 22.9-10.4 34.4-5.3z"]},faPlay={prefix:"fas",iconName:"play",icon:[384,512,[9654],"f04b","M73 39c-14.8-9.1-33.4-9.4-48.5-.9S0 62.6 0 80V432c0 17.4 9.4 33.4 24.5 41.9s33.7 8.1 48.5-.9L361 297c14.3-8.7 23-24.2 23-41s-8.7-32.2-23-41L73 39z"]},faVolumeXmark={prefix:"fas",iconName:"volume-xmark",icon:[576,512,["volume-mute","volume-times"],"f6a9","M301.1 34.8C312.6 40 320 51.4 320 64V448c0 12.6-7.4 24-18.9 29.2s-25 3.1-34.4-5.3L131.8 352H64c-35.3 0-64-28.7-64-64V224c0-35.3 28.7-64 64-64h67.8L266.7 40.1c9.4-8.4 22.9-10.4 34.4-5.3zM425 167l55 55 55-55c9.4-9.4 24.6-9.4 33.9 0s9.4 24.6 0 33.9l-55 55 55 55c9.4 9.4 9.4 24.6 0 33.9s-24.6 9.4-33.9 0l-55-55-55 55c-9.4 9.4-24.6 9.4-33.9 0s-9.4-24.6 0-33.9l55-55-55-55c-9.4-9.4-9.4-24.6 0-33.9s24.6-9.4 33.9 0z"]},faVolumeMute=faVolumeXmark;function _extends(){return _extends=Object.assign?Object.assign.bind():function(e){for(var o=1;o<arguments.length;o++){var s=arguments[o];for(var c in s)Object.prototype.hasOwnProperty.call(s,c)&&(e[c]=s[c])}return e},_extends.apply(this,arguments)}function $ae6933e535247d3d$export$7d15b64cf5a3a4c4(e,[o,s]){return Math.min(s,Math.max(o,e))}function $e42e1063c40fb3ef$export$b9ecd428b558ff10(e,o,{checkForDefaultPrevented:s=!0}={}){return function(i){if(e==null||e(i),s===!1||!i.defaultPrevented)return o==null?void 0:o(i)}}function $6ed0406888f73fc4$var$setRef(e,o){typeof e=="function"?e(o):e!=null&&(e.current=o)}function $6ed0406888f73fc4$export$43e446d32b3d21af(...e){return o=>e.forEach(s=>$6ed0406888f73fc4$var$setRef(s,o))}function $6ed0406888f73fc4$export$c7b2cbe3552a0d05(...e){return reactExports.useCallback($6ed0406888f73fc4$export$43e446d32b3d21af(...e),e)}function $c512c27ab02ef895$export$50c7b4e9d9f19c1(e,o=[]){let s=[];function c(g,h){const $=reactExports.createContext(h),j=s.length;s=[...s,h];function _(et){const{scope:tt,children:at,...rt}=et,dt=(tt==null?void 0:tt[e][j])||$,mt=reactExports.useMemo(()=>rt,Object.values(rt));return reactExports.createElement(dt.Provider,{value:mt},at)}function _e(et,tt){const at=(tt==null?void 0:tt[e][j])||$,rt=reactExports.useContext(at);if(rt)return rt;if(h!==void 0)return h;throw new Error(`\`${et}\` must be used within \`${g}\``)}return _.displayName=g+"Provider",[_,_e]}const i=()=>{const g=s.map(h=>reactExports.createContext(h));return function($){const j=($==null?void 0:$[e])||g;return reactExports.useMemo(()=>({[`__scope${e}`]:{...$,[e]:j}}),[$,j])}};return i.scopeName=e,[c,$c512c27ab02ef895$var$composeContextScopes(i,...o)]}function $c512c27ab02ef895$var$composeContextScopes(...e){const o=e[0];if(e.length===1)return o;const s=()=>{const c=e.map(i=>({useScope:i(),scopeName:i.scopeName}));return function(g){const h=c.reduce(($,{useScope:j,scopeName:_})=>{const et=j(g)[`__scope${_}`];return{...$,...et}},{});return reactExports.useMemo(()=>({[`__scope${o.scopeName}`]:h}),[h])}};return s.scopeName=o.scopeName,s}function $b1b2314f5f9a1d84$export$25bec8c6f54ee79a(e){const o=reactExports.useRef(e);return reactExports.useEffect(()=>{o.current=e}),reactExports.useMemo(()=>(...s)=>{var c;return(c=o.current)===null||c===void 0?void 0:c.call(o,...s)},[])}function $71cd76cc60e0454e$export$6f32135080cb4c3({prop:e,defaultProp:o,onChange:s=()=>{}}){const[c,i]=$71cd76cc60e0454e$var$useUncontrolledState({defaultProp:o,onChange:s}),g=e!==void 0,h=g?e:c,$=$b1b2314f5f9a1d84$export$25bec8c6f54ee79a(s),j=reactExports.useCallback(_=>{if(g){const et=typeof _=="function"?_(e):_;et!==e&&$(et)}else i(_)},[g,e,i,$]);return[h,j]}function $71cd76cc60e0454e$var$useUncontrolledState({defaultProp:e,onChange:o}){const s=reactExports.useState(e),[c]=s,i=reactExports.useRef(c),g=$b1b2314f5f9a1d84$export$25bec8c6f54ee79a(o);return reactExports.useEffect(()=>{i.current!==c&&(g(c),i.current=c)},[c,i,g]),s}const $f631663db3294ace$var$DirectionContext=reactExports.createContext(void 0);function $f631663db3294ace$export$b39126d51d94e6f3(e){const o=reactExports.useContext($f631663db3294ace$var$DirectionContext);return e||o||"ltr"}function $010c2913dbd2fe3d$export$5cae361ad82dce8b(e){const o=reactExports.useRef({value:e,previous:e});return reactExports.useMemo(()=>(o.current.value!==e&&(o.current.previous=o.current.value,o.current.value=e),o.current.previous),[e])}const $9f79659886946c16$export$e5c5a5f917a5871c=globalThis!=null&&globalThis.document?reactExports.useLayoutEffect:()=>{};function $db6c3485150b8e66$export$1ab7ae714698c4b8(e){const[o,s]=reactExports.useState(void 0);return $9f79659886946c16$export$e5c5a5f917a5871c(()=>{if(e){s({width:e.offsetWidth,height:e.offsetHeight});const c=new ResizeObserver(i=>{if(!Array.isArray(i)||!i.length)return;const g=i[0];let h,$;if("borderBoxSize"in g){const j=g.borderBoxSize,_=Array.isArray(j)?j[0]:j;h=_.inlineSize,$=_.blockSize}else h=e.offsetWidth,$=e.offsetHeight;s({width:h,height:$})});return c.observe(e,{box:"border-box"}),()=>c.unobserve(e)}else s(void 0)},[e]),o}const $5e63c961fc1ce211$export$8c6ed5c666ac1360=reactExports.forwardRef((e,o)=>{const{children:s,...c}=e,i=reactExports.Children.toArray(s),g=i.find($5e63c961fc1ce211$var$isSlottable);if(g){const h=g.props.children,$=i.map(j=>j===g?reactExports.Children.count(h)>1?reactExports.Children.only(null):reactExports.isValidElement(h)?h.props.children:null:j);return reactExports.createElement($5e63c961fc1ce211$var$SlotClone,_extends({},c,{ref:o}),reactExports.isValidElement(h)?reactExports.cloneElement(h,void 0,$):null)}return reactExports.createElement($5e63c961fc1ce211$var$SlotClone,_extends({},c,{ref:o}),s)});$5e63c961fc1ce211$export$8c6ed5c666ac1360.displayName="Slot";const $5e63c961fc1ce211$var$SlotClone=reactExports.forwardRef((e,o)=>{const{children:s,...c}=e;return reactExports.isValidElement(s)?reactExports.cloneElement(s,{...$5e63c961fc1ce211$var$mergeProps(c,s.props),ref:o?$6ed0406888f73fc4$export$43e446d32b3d21af(o,s.ref):s.ref}):reactExports.Children.count(s)>1?reactExports.Children.only(null):null});$5e63c961fc1ce211$var$SlotClone.displayName="SlotClone";const $5e63c961fc1ce211$export$d9f1ccf0bdb05d45=({children:e})=>reactExports.createElement(reactExports.Fragment,null,e);function $5e63c961fc1ce211$var$isSlottable(e){return reactExports.isValidElement(e)&&e.type===$5e63c961fc1ce211$export$d9f1ccf0bdb05d45}function $5e63c961fc1ce211$var$mergeProps(e,o){const s={...o};for(const c in o){const i=e[c],g=o[c];/^on[A-Z]/.test(c)?i&&g?s[c]=(...$)=>{g(...$),i(...$)}:i&&(s[c]=i):c==="style"?s[c]={...i,...g}:c==="className"&&(s[c]=[i,g].filter(Boolean).join(" "))}return{...e,...s}}const $8927f6f2acc4f386$var$NODES=["a","button","div","form","h2","h3","img","input","label","li","nav","ol","p","span","svg","ul"],$8927f6f2acc4f386$export$250ffa63cdc0d034=$8927f6f2acc4f386$var$NODES.reduce((e,o)=>{const s=reactExports.forwardRef((c,i)=>{const{asChild:g,...h}=c,$=g?$5e63c961fc1ce211$export$8c6ed5c666ac1360:o;return reactExports.useEffect(()=>{window[Symbol.for("radix-ui")]=!0},[]),reactExports.createElement($,_extends({},h,{ref:i}))});return s.displayName=`Primitive.${o}`,{...e,[o]:s}},{});function $e02a7d9cb1dc128c$export$c74125a8e3af6bb2(e){const o=e+"CollectionProvider",[s,c]=$c512c27ab02ef895$export$50c7b4e9d9f19c1(o),[i,g]=s(o,{collectionRef:{current:null},itemMap:new Map}),h=at=>{const{scope:rt,children:dt}=at,mt=React.useRef(null),st=React.useRef(new Map).current;return React.createElement(i,{scope:rt,itemMap:st,collectionRef:mt},dt)},$=e+"CollectionSlot",j=React.forwardRef((at,rt)=>{const{scope:dt,children:mt}=at,st=g($,dt),ot=$6ed0406888f73fc4$export$c7b2cbe3552a0d05(rt,st.collectionRef);return React.createElement($5e63c961fc1ce211$export$8c6ed5c666ac1360,{ref:ot},mt)}),_=e+"CollectionItemSlot",_e="data-radix-collection-item",et=React.forwardRef((at,rt)=>{const{scope:dt,children:mt,...st}=at,ot=React.useRef(null),nt=$6ed0406888f73fc4$export$c7b2cbe3552a0d05(rt,ot),lt=g(_,dt);return React.useEffect(()=>(lt.itemMap.set(ot,{ref:ot,...st}),()=>void lt.itemMap.delete(ot))),React.createElement($5e63c961fc1ce211$export$8c6ed5c666ac1360,{[_e]:"",ref:nt},mt)});function tt(at){const rt=g(e+"CollectionConsumer",at);return React.useCallback(()=>{const mt=rt.collectionRef.current;if(!mt)return[];const st=Array.from(mt.querySelectorAll(`[${_e}]`));return Array.from(rt.itemMap.values()).sort((lt,ct)=>st.indexOf(lt.ref.current)-st.indexOf(ct.ref.current))},[rt.collectionRef,rt.itemMap])}return[{Provider:h,Slot:j,ItemSlot:et},tt,c]}const $faa2e61a3361514f$var$PAGE_KEYS=["PageUp","PageDown"],$faa2e61a3361514f$var$ARROW_KEYS=["ArrowUp","ArrowDown","ArrowLeft","ArrowRight"],$faa2e61a3361514f$var$BACK_KEYS={"from-left":["Home","PageDown","ArrowDown","ArrowLeft"],"from-right":["Home","PageDown","ArrowDown","ArrowRight"],"from-bottom":["Home","PageDown","ArrowDown","ArrowLeft"],"from-top":["Home","PageDown","ArrowUp","ArrowLeft"]},$faa2e61a3361514f$var$SLIDER_NAME="Slider",[$faa2e61a3361514f$var$Collection,$faa2e61a3361514f$var$useCollection,$faa2e61a3361514f$var$createCollectionScope]=$e02a7d9cb1dc128c$export$c74125a8e3af6bb2($faa2e61a3361514f$var$SLIDER_NAME),[$faa2e61a3361514f$var$createSliderContext,$faa2e61a3361514f$export$ef72632d7b901f97]=$c512c27ab02ef895$export$50c7b4e9d9f19c1($faa2e61a3361514f$var$SLIDER_NAME,[$faa2e61a3361514f$var$createCollectionScope]),[$faa2e61a3361514f$var$SliderProvider,$faa2e61a3361514f$var$useSliderContext]=$faa2e61a3361514f$var$createSliderContext($faa2e61a3361514f$var$SLIDER_NAME),$faa2e61a3361514f$export$472062a354075cee=reactExports.forwardRef((e,o)=>{const{name:s,min:c=0,max:i=100,step:g=1,orientation:h="horizontal",disabled:$=!1,minStepsBetweenThumbs:j=0,defaultValue:_=[c],value:_e,onValueChange:et=()=>{},onValueCommit:tt=()=>{},inverted:at=!1,...rt}=e,[dt,mt]=reactExports.useState(null),st=$6ed0406888f73fc4$export$c7b2cbe3552a0d05(o,ht=>mt(ht)),ot=reactExports.useRef(new Set),nt=reactExports.useRef(0),lt=h==="horizontal",ct=dt?!!dt.closest("form"):!0,it=lt?$faa2e61a3361514f$var$SliderHorizontal:$faa2e61a3361514f$var$SliderVertical,[ut=[],gt]=$71cd76cc60e0454e$export$6f32135080cb4c3({prop:_e,defaultProp:_,onChange:ht=>{var $t;($t=[...ot.current][nt.current])===null||$t===void 0||$t.focus(),et(ht)}}),pt=reactExports.useRef(ut);function ft(ht){const $t=$faa2e61a3361514f$var$getClosestValueIndex(ut,ht);kt(ht,$t)}function Wt(ht){kt(ht,nt.current)}function Vt(){const ht=pt.current[nt.current];ut[nt.current]!==ht&&tt(ut)}function kt(ht,$t,{commit:St}={commit:!1}){const Xt=$faa2e61a3361514f$var$getDecimalCount(g),bt=$faa2e61a3361514f$var$roundValue(Math.round((ht-c)/g)*g+c,Xt),Rt=$ae6933e535247d3d$export$7d15b64cf5a3a4c4(bt,[c,i]);gt((Zt=[])=>{const yt=$faa2e61a3361514f$var$getNextSortedValues(Zt,Rt,$t);if($faa2e61a3361514f$var$hasMinStepsBetweenValues(yt,j*g)){nt.current=yt.indexOf(Rt);const Gt=String(yt)!==String(Zt);return Gt&&St&&tt(yt),Gt?yt:Zt}else return Zt})}return reactExports.createElement($faa2e61a3361514f$var$SliderProvider,{scope:e.__scopeSlider,disabled:$,min:c,max:i,valueIndexToChangeRef:nt,thumbs:ot.current,values:ut,orientation:h},reactExports.createElement($faa2e61a3361514f$var$Collection.Provider,{scope:e.__scopeSlider},reactExports.createElement($faa2e61a3361514f$var$Collection.Slot,{scope:e.__scopeSlider},reactExports.createElement(it,_extends({"aria-disabled":$,"data-disabled":$?"":void 0},rt,{ref:st,onPointerDown:$e42e1063c40fb3ef$export$b9ecd428b558ff10(rt.onPointerDown,()=>{$||(pt.current=ut)}),min:c,max:i,inverted:at,onSlideStart:$?void 0:ft,onSlideMove:$?void 0:Wt,onSlideEnd:$?void 0:Vt,onHomeKeyDown:()=>!$&&kt(c,0,{commit:!0}),onEndKeyDown:()=>!$&&kt(i,ut.length-1,{commit:!0}),onStepKeyDown:({event:ht,direction:$t})=>{if(!$){const bt=$faa2e61a3361514f$var$PAGE_KEYS.includes(ht.key)||ht.shiftKey&&$faa2e61a3361514f$var$ARROW_KEYS.includes(ht.key)?10:1,Rt=nt.current,Zt=ut[Rt],yt=g*bt*$t;kt(Zt+yt,Rt,{commit:!0})}}})))),ct&&ut.map((ht,$t)=>reactExports.createElement($faa2e61a3361514f$var$BubbleInput,{key:$t,name:s?s+(ut.length>1?"[]":""):void 0,value:ht})))}),[$faa2e61a3361514f$var$SliderOrientationProvider,$faa2e61a3361514f$var$useSliderOrientationContext]=$faa2e61a3361514f$var$createSliderContext($faa2e61a3361514f$var$SLIDER_NAME,{startEdge:"left",endEdge:"right",size:"width",direction:1}),$faa2e61a3361514f$var$SliderHorizontal=reactExports.forwardRef((e,o)=>{const{min:s,max:c,dir:i,inverted:g,onSlideStart:h,onSlideMove:$,onSlideEnd:j,onStepKeyDown:_,..._e}=e,[et,tt]=reactExports.useState(null),at=$6ed0406888f73fc4$export$c7b2cbe3552a0d05(o,nt=>tt(nt)),rt=reactExports.useRef(),dt=$f631663db3294ace$export$b39126d51d94e6f3(i),mt=dt==="ltr",st=mt&&!g||!mt&&g;function ot(nt){const lt=rt.current||et.getBoundingClientRect(),ct=[0,lt.width],ut=$faa2e61a3361514f$var$linearScale(ct,st?[s,c]:[c,s]);return rt.current=lt,ut(nt-lt.left)}return reactExports.createElement($faa2e61a3361514f$var$SliderOrientationProvider,{scope:e.__scopeSlider,startEdge:st?"left":"right",endEdge:st?"right":"left",direction:st?1:-1,size:"width"},reactExports.createElement($faa2e61a3361514f$var$SliderImpl,_extends({dir:dt,"data-orientation":"horizontal"},_e,{ref:at,style:{..._e.style,"--radix-slider-thumb-transform":"translateX(-50%)"},onSlideStart:nt=>{const lt=ot(nt.clientX);h==null||h(lt)},onSlideMove:nt=>{const lt=ot(nt.clientX);$==null||$(lt)},onSlideEnd:()=>{rt.current=void 0,j==null||j()},onStepKeyDown:nt=>{const ct=$faa2e61a3361514f$var$BACK_KEYS[st?"from-left":"from-right"].includes(nt.key);_==null||_({event:nt,direction:ct?-1:1})}})))}),$faa2e61a3361514f$var$SliderVertical=reactExports.forwardRef((e,o)=>{const{min:s,max:c,inverted:i,onSlideStart:g,onSlideMove:h,onSlideEnd:$,onStepKeyDown:j,..._}=e,_e=reactExports.useRef(null),et=$6ed0406888f73fc4$export$c7b2cbe3552a0d05(o,_e),tt=reactExports.useRef(),at=!i;function rt(dt){const mt=tt.current||_e.current.getBoundingClientRect(),st=[0,mt.height],nt=$faa2e61a3361514f$var$linearScale(st,at?[c,s]:[s,c]);return tt.current=mt,nt(dt-mt.top)}return reactExports.createElement($faa2e61a3361514f$var$SliderOrientationProvider,{scope:e.__scopeSlider,startEdge:at?"bottom":"top",endEdge:at?"top":"bottom",size:"height",direction:at?1:-1},reactExports.createElement($faa2e61a3361514f$var$SliderImpl,_extends({"data-orientation":"vertical"},_,{ref:et,style:{..._.style,"--radix-slider-thumb-transform":"translateY(50%)"},onSlideStart:dt=>{const mt=rt(dt.clientY);g==null||g(mt)},onSlideMove:dt=>{const mt=rt(dt.clientY);h==null||h(mt)},onSlideEnd:()=>{tt.current=void 0,$==null||$()},onStepKeyDown:dt=>{const st=$faa2e61a3361514f$var$BACK_KEYS[at?"from-bottom":"from-top"].includes(dt.key);j==null||j({event:dt,direction:st?-1:1})}})))}),$faa2e61a3361514f$var$SliderImpl=reactExports.forwardRef((e,o)=>{const{__scopeSlider:s,onSlideStart:c,onSlideMove:i,onSlideEnd:g,onHomeKeyDown:h,onEndKeyDown:$,onStepKeyDown:j,..._}=e,_e=$faa2e61a3361514f$var$useSliderContext($faa2e61a3361514f$var$SLIDER_NAME,s);return reactExports.createElement($8927f6f2acc4f386$export$250ffa63cdc0d034.span,_extends({},_,{ref:o,onKeyDown:$e42e1063c40fb3ef$export$b9ecd428b558ff10(e.onKeyDown,et=>{et.key==="Home"?(h(et),et.preventDefault()):et.key==="End"?($(et),et.preventDefault()):$faa2e61a3361514f$var$PAGE_KEYS.concat($faa2e61a3361514f$var$ARROW_KEYS).includes(et.key)&&(j(et),et.preventDefault())}),onPointerDown:$e42e1063c40fb3ef$export$b9ecd428b558ff10(e.onPointerDown,et=>{const tt=et.target;tt.setPointerCapture(et.pointerId),et.preventDefault(),_e.thumbs.has(tt)?tt.focus():c(et)}),onPointerMove:$e42e1063c40fb3ef$export$b9ecd428b558ff10(e.onPointerMove,et=>{et.target.hasPointerCapture(et.pointerId)&&i(et)}),onPointerUp:$e42e1063c40fb3ef$export$b9ecd428b558ff10(e.onPointerUp,et=>{const tt=et.target;tt.hasPointerCapture(et.pointerId)&&(tt.releasePointerCapture(et.pointerId),g(et))})}))}),$faa2e61a3361514f$var$TRACK_NAME="SliderTrack",$faa2e61a3361514f$export$105594979f116971=reactExports.forwardRef((e,o)=>{const{__scopeSlider:s,...c}=e,i=$faa2e61a3361514f$var$useSliderContext($faa2e61a3361514f$var$TRACK_NAME,s);return reactExports.createElement($8927f6f2acc4f386$export$250ffa63cdc0d034.span,_extends({"data-disabled":i.disabled?"":void 0,"data-orientation":i.orientation},c,{ref:o}))}),$faa2e61a3361514f$var$RANGE_NAME="SliderRange",$faa2e61a3361514f$export$a5cf38a7a000fe77=reactExports.forwardRef((e,o)=>{const{__scopeSlider:s,...c}=e,i=$faa2e61a3361514f$var$useSliderContext($faa2e61a3361514f$var$RANGE_NAME,s),g=$faa2e61a3361514f$var$useSliderOrientationContext($faa2e61a3361514f$var$RANGE_NAME,s),h=reactExports.useRef(null),$=$6ed0406888f73fc4$export$c7b2cbe3552a0d05(o,h),j=i.values.length,_=i.values.map(tt=>$faa2e61a3361514f$var$convertValueToPercentage(tt,i.min,i.max)),_e=j>1?Math.min(..._):0,et=100-Math.max(..._);return reactExports.createElement($8927f6f2acc4f386$export$250ffa63cdc0d034.span,_extends({"data-orientation":i.orientation,"data-disabled":i.disabled?"":void 0},c,{ref:$,style:{...e.style,[g.startEdge]:_e+"%",[g.endEdge]:et+"%"}}))}),$faa2e61a3361514f$var$THUMB_NAME="SliderThumb",$faa2e61a3361514f$export$2c1b491743890dec=reactExports.forwardRef((e,o)=>{const s=$faa2e61a3361514f$var$useCollection(e.__scopeSlider),[c,i]=reactExports.useState(null),g=$6ed0406888f73fc4$export$c7b2cbe3552a0d05(o,$=>i($)),h=reactExports.useMemo(()=>c?s().findIndex($=>$.ref.current===c):-1,[s,c]);return reactExports.createElement($faa2e61a3361514f$var$SliderThumbImpl,_extends({},e,{ref:g,index:h}))}),$faa2e61a3361514f$var$SliderThumbImpl=reactExports.forwardRef((e,o)=>{const{__scopeSlider:s,index:c,...i}=e,g=$faa2e61a3361514f$var$useSliderContext($faa2e61a3361514f$var$THUMB_NAME,s),h=$faa2e61a3361514f$var$useSliderOrientationContext($faa2e61a3361514f$var$THUMB_NAME,s),[$,j]=reactExports.useState(null),_=$6ed0406888f73fc4$export$c7b2cbe3552a0d05(o,mt=>j(mt)),_e=$db6c3485150b8e66$export$1ab7ae714698c4b8($),et=g.values[c],tt=et===void 0?0:$faa2e61a3361514f$var$convertValueToPercentage(et,g.min,g.max),at=$faa2e61a3361514f$var$getLabel(c,g.values.length),rt=_e==null?void 0:_e[h.size],dt=rt?$faa2e61a3361514f$var$getThumbInBoundsOffset(rt,tt,h.direction):0;return reactExports.useEffect(()=>{if($)return g.thumbs.add($),()=>{g.thumbs.delete($)}},[$,g.thumbs]),reactExports.createElement("span",{style:{transform:"var(--radix-slider-thumb-transform)",position:"absolute",[h.startEdge]:`calc(${tt}% + ${dt}px)`}},reactExports.createElement($faa2e61a3361514f$var$Collection.ItemSlot,{scope:e.__scopeSlider},reactExports.createElement($8927f6f2acc4f386$export$250ffa63cdc0d034.span,_extends({role:"slider","aria-label":e["aria-label"]||at,"aria-valuemin":g.min,"aria-valuenow":et,"aria-valuemax":g.max,"aria-orientation":g.orientation,"data-orientation":g.orientation,"data-disabled":g.disabled?"":void 0,tabIndex:g.disabled?void 0:0},i,{ref:_,style:et===void 0?{display:"none"}:e.style,onFocus:$e42e1063c40fb3ef$export$b9ecd428b558ff10(e.onFocus,()=>{g.valueIndexToChangeRef.current=c})}))))}),$faa2e61a3361514f$var$BubbleInput=e=>{const{value:o,...s}=e,c=reactExports.useRef(null),i=$010c2913dbd2fe3d$export$5cae361ad82dce8b(o);return reactExports.useEffect(()=>{const g=c.current,h=window.HTMLInputElement.prototype,j=Object.getOwnPropertyDescriptor(h,"value").set;if(i!==o&&j){const _=new Event("input",{bubbles:!0});j.call(g,o),g.dispatchEvent(_)}},[i,o]),reactExports.createElement("input",_extends({style:{display:"none"}},s,{ref:c,defaultValue:o}))};function $faa2e61a3361514f$var$getNextSortedValues(e=[],o,s){const c=[...e];return c[s]=o,c.sort((i,g)=>i-g)}function $faa2e61a3361514f$var$convertValueToPercentage(e,o,s){const g=100/(s-o)*(e-o);return $ae6933e535247d3d$export$7d15b64cf5a3a4c4(g,[0,100])}function $faa2e61a3361514f$var$getLabel(e,o){return o>2?`Value ${e+1} of ${o}`:o===2?["Minimum","Maximum"][e]:void 0}function $faa2e61a3361514f$var$getClosestValueIndex(e,o){if(e.length===1)return 0;const s=e.map(i=>Math.abs(i-o)),c=Math.min(...s);return s.indexOf(c)}function $faa2e61a3361514f$var$getThumbInBoundsOffset(e,o,s){const c=e/2,g=$faa2e61a3361514f$var$linearScale([0,50],[0,c]);return(c-g(o)*s)*s}function $faa2e61a3361514f$var$getStepsBetweenValues(e){return e.slice(0,-1).map((o,s)=>e[s+1]-o)}function $faa2e61a3361514f$var$hasMinStepsBetweenValues(e,o){if(o>0){const s=$faa2e61a3361514f$var$getStepsBetweenValues(e);return Math.min(...s)>=o}return!0}function $faa2e61a3361514f$var$linearScale(e,o){return s=>{if(e[0]===e[1]||o[0]===o[1])return o[0];const c=(o[1]-o[0])/(e[1]-e[0]);return o[0]+c*(s-e[0])}}function $faa2e61a3361514f$var$getDecimalCount(e){return(String(e).split(".")[1]||"").length}function $faa2e61a3361514f$var$roundValue(e,o){const s=Math.pow(10,o);return Math.round(e*s)/s}const $faa2e61a3361514f$export$be92b6f5f03c0fe9=$faa2e61a3361514f$export$472062a354075cee,$faa2e61a3361514f$export$13921ac0cc260818=$faa2e61a3361514f$export$105594979f116971,$faa2e61a3361514f$export$9a58ef0d7ad3278c=$faa2e61a3361514f$export$a5cf38a7a000fe77,$faa2e61a3361514f$export$6521433ed15a34db=$faa2e61a3361514f$export$2c1b491743890dec,startCsound=async e=>{console.log("Starting Csound..."),await e.setOption("-odac"),await e.setOption("--ksmps=64"),await e.setOption("--nchnls=2"),await e.setOption("--0dbfs=1"),await e.setOption("-m0"),await e.setOption("-b1024"),await e.setOption("-B1024"),await e.compileOrc([utilsOrc,soundBathOrc].join(`
`)),await e.start();const o=await e.getAudioContext();o&&o.resume()},App=()=>{const[e,o]=reactExports.useState(),[s,c]=reactExports.useState(!1),[i,g]=reactExports.useState(1),[h,$]=reactExports.useState(),j=async()=>{if(e){const _=await e.getAudioContext();(_==null?void 0:_.state)==="running"?(_.suspend(),c(!1)):(_==null||_.resume(),c(!0))}else{const _=new AudioContext({sampleRate:44100,latencyHint:"playback"}),_e=await Csound({inputChannelCount:0,outputChannelCount:2,audioContext:_});o(_e);const et=await(_e==null?void 0:_e.getAudioContext());if(_e&&et){const tt=et.createGain(),at=await _e.getNode();at&&(at.disconnect(),at.connect(tt),tt.connect(et.destination),$(tt))}_e?(await startCsound(_e),c(!0)):console.error("Could not create Csound object")}};return reactExports.useEffect(()=>{h&&h.gain.setTargetAtTime(i,0,.01)},[i,h]),jsxRuntimeExports.jsx("div",{className:"flex h-screen w-screen justify-center items-center bg-orange-200",children:jsxRuntimeExports.jsxs("div",{className:"justify-center text-center m-8",children:[jsxRuntimeExports.jsx("div",{className:"text-3xl",children:"Sound Bath (2024)"}),jsxRuntimeExports.jsx("div",{className:"text-md",children:"Steven Yi <stevenyi@gmail.com>"}),jsxRuntimeExports.jsx("p",{className:"mt-4",children:"A meditative sound bath using the Solfeggio Frequencies."}),jsxRuntimeExports.jsxs("div",{className:"flex mt-4",children:[jsxRuntimeExports.jsx("div",{className:"grow"}),jsxRuntimeExports.jsxs("ul",{className:"list-disc text-left w-fit",children:[jsxRuntimeExports.jsx("li",{children:"Root Chakra: 396 Hz"}),jsxRuntimeExports.jsx("li",{children:"Sacral Chakra: 417 Hz "}),jsxRuntimeExports.jsx("li",{children:"Solar Plexus Chakra: 528 Hz "}),jsxRuntimeExports.jsx("li",{children:"Heart Chakra: 639 Hz "}),jsxRuntimeExports.jsx("li",{children:"Throat Chakra: 741 Hz "}),jsxRuntimeExports.jsx("li",{children:"Third Eye Chakra: 852 Hz "}),jsxRuntimeExports.jsx("li",{children:"Crown Chakra: 963 Hz "})]}),jsxRuntimeExports.jsx("div",{className:"grow"})]}),jsxRuntimeExports.jsxs("div",{className:"my-8 flex gap-4 items-center",children:[jsxRuntimeExports.jsx("button",{className:"w-14 bg-orange-500 hover:bg-orange-600 text-white font-bold py-2 px-4 rounded",onClick:j,children:jsxRuntimeExports.jsx(FontAwesomeIcon,{icon:s?faPause:faPlay})}),jsxRuntimeExports.jsxs($faa2e61a3361514f$export$be92b6f5f03c0fe9,{className:"relative flex items-center select-none touch-none w-full h-5",min:0,value:[i],max:1,step:.01,onValueChange:_=>{g(_[0])},children:[jsxRuntimeExports.jsx($faa2e61a3361514f$export$13921ac0cc260818,{className:"bg-orange-500/70 relative grow rounded-full h-[3px]",children:jsxRuntimeExports.jsx($faa2e61a3361514f$export$9a58ef0d7ad3278c,{className:"absolute bg-orange-500/30 rounded-full h-full"})}),jsxRuntimeExports.jsx($faa2e61a3361514f$export$6521433ed15a34db,{className:"block w-5 h-5 bg-orange-400 rounded-[10px] hover:bg-violet3 focus:outline-none","aria-label":"Volume"})]}),jsxRuntimeExports.jsx("button",{className:"w-14 bg-orange-500 hover:bg-orange-600 text-white font-bold py-2 px-3 rounded",onClick:()=>{g(i>0?0:1)},children:jsxRuntimeExports.jsx(FontAwesomeIcon,{icon:i==0?faVolumeMute:i<.5?faVolumeLow:faVolumeHigh})})]})]})})};client.createRoot(document.getElementById("root")).render(jsxRuntimeExports.jsx(React.StrictMode,{children:jsxRuntimeExports.jsx(App,{})}));
